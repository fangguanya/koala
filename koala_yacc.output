Terminals unused in grammar

   ELLIPSIS
   NOT
   IF
   ELSE
   WHILE
   DO
   FOR
   IN
   SWITCH
   CASE
   BREAK
   CONTINUE
   DEFAULT
   VAR
   RETURN
   CONST
   HEX
   OCT
   IFX
   NO_CODE_BLOCK


Grammar

    0 $accept: program $end

    1 semicolons: ';'
    2           | semicolons ';'

    3 qualified_name: ID
    4               | qualified_name '.' ID

    5 type_name_list: type_name
    6               | type_name_list ',' type_name

    7 type_name: primitive_type
    8          | qualified_name
    9          | array_type

   10 primitive_type: UINT8
   11               | UINT16
   12               | UINT32
   13               | UINT64
   14               | INT8
   15               | INT16
   16               | INT32
   17               | INT64
   18               | FLOAT32
   19               | FLOAT64
   20               | BOOL
   21               | STRING
   22               | ANY_TYPE

   23 function_type: FUNC '(' ')'
   24              | FUNC '(' ')' return_type_list
   25              | FUNC '(' parameter_type_list ')'
   26              | FUNC '(' parameter_type_list ')' return_type_list

   27 array_type: '[' INTEGER ']' type_name

   28 field_name: ID

   29 program: package_statement import_statements declarations
   30        | package_statement import_statements
   31        | package_statement declarations
   32        | import_statements declarations
   33        | package_statement
   34        | import_statements
   35        | declarations

   36 package_statement: PACKAGE qualified_name semicolons

   37 import_statements: import_statement
   38                  | import_statements import_statement

   39 import_statement: IMPORT qualified_name semicolons
   40                 | IMPORT qualified_name '.' '*' semicolons

   41 declarations: type_declaration
   42             | declarations type_declaration
   43             | function_declaration
   44             | declarations function_declaration
   45             | expression_statement
   46             | declarations expression_statement

   47 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   48                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   49                 | TYPE ID type_name semicolons
   50                 | TYPE ID function_type semicolons

   51 field_declarations: field_declaration
   52                   | field_declarations field_declaration

   53 field_declaration: ID type_name semicolons

   54 interface_function_declarations: interface_function_declaration
   55                                | interface_function_declarations interface_function_declaration

   56 interface_function_declaration: FUNC ID '(' ')' semicolons
   57                               | FUNC ID '(' ')' return_type_list semicolons
   58                               | FUNC ID '(' parameter_type_list ')' semicolons
   59                               | FUNC ID '(' parameter_type_list ')' return_type_list semicolons
   60                               | FUNC ID '(' parameter_list ')' semicolons
   61                               | FUNC ID '(' parameter_list ')' return_type_list semicolons

   62 return_type_list: type_name
   63                 | '(' type_name_list ')'

   64 parameter_type_list: type_name
   65                    | parameter_type_list ',' type_name

   66 parameter_list: ID type_name
   67               | parameter_list ',' ID type_name

   68 function_declaration: FUNC ID '(' ')' code_block
   69                     | FUNC ID '(' ')' return_type_list code_block
   70                     | FUNC ID '(' parameter_list ')' code_block
   71                     | FUNC ID '(' parameter_list ')' return_type_list code_block

   72 anonymous_function_declaration: FUNC '(' ')' code_block
   73                               | FUNC '(' ')' return_type_list code_block
   74                               | FUNC '(' parameter_list ')' code_block
   75                               | FUNC '(' parameter_list ')' return_type_list code_block

   76 code_block: '{' '}'

   77 primary_expression: qualified_name
   78                   | just_not_name

   79 just_not_name: TOKEN_THIS
   80              | initializer_expression
   81              | complex_primary

   82 complex_primary: '(' expression ')'
   83                | complex_primary_no_parenthesis

   84 complex_primary_no_parenthesis: literal_name
   85                               | array_access
   86                               | field_access
   87                               | method_call

   88 literal_name: INTEGER
   89             | FLOAT
   90             | STRING_LITERAL
   91             | TOKEN_NULL
   92             | TOKEN_TRUE
   93             | TOKEN_FALSE

   94 array_complex_primary: '(' expression ')'
   95                      | array_access
   96                      | field_access
   97                      | method_call

   98 array_access: qualified_name '[' expression ']'
   99             | array_complex_primary '[' expression ']'

  100 field_access: just_not_name '.' ID

  101 method_call: method_access '(' argument_list ')'
  102            | method_access '(' ')'

  103 method_access: complex_primary_no_parenthesis
  104              | qualified_name

  105 initializer_expression: struct_initializer
  106                       | anonymous_function_declaration

  107 struct_initializer: '{' '}'
  108                   | '{' expression_list '}'
  109                   | '{' field_initializer_list '}'
  110                   | type_name '{' '}'
  111                   | type_name '{' expression_list '}'
  112                   | type_name '{' field_initializer_list '}'

  113 field_initializer_list: field_initializer
  114                       | field_initializer_list ',' field_initializer

  115 field_initializer: field_name ':' expression

  116 postfix_expression: primary_expression
  117                   | real_postfix_expression

  118 real_postfix_expression: postfix_expression INC
  119                        | postfix_expression DEC

  120 argument_list: expression_list

  121 unary_expression: postfix_expression
  122                 | INC unary_expression
  123                 | DEC unary_expression
  124                 | unary_operator unary_expression

  125 unary_operator: '+'
  126               | '-'
  127               | '~'
  128               | '!'

  129 multiplicative_expression: unary_expression
  130                          | multiplicative_expression '*' unary_expression
  131                          | multiplicative_expression '/' unary_expression
  132                          | multiplicative_expression '%' unary_expression

  133 additive_expression: multiplicative_expression
  134                    | additive_expression '+' multiplicative_expression
  135                    | additive_expression '-' multiplicative_expression

  136 shift_expression: additive_expression
  137                 | shift_expression SHIFT_LEFT additive_expression
  138                 | shift_expression SHIFT_RIGHT additive_expression

  139 relational_expression: shift_expression
  140                      | relational_expression '<' shift_expression
  141                      | relational_expression '>' shift_expression
  142                      | relational_expression LE shift_expression
  143                      | relational_expression GE shift_expression

  144 equality_expression: relational_expression
  145                    | equality_expression EQ relational_expression
  146                    | equality_expression NE relational_expression

  147 and_expression: equality_expression
  148               | and_expression '&' equality_expression

  149 exclusive_or_expression: and_expression
  150                        | exclusive_or_expression '^' and_expression

  151 inclusive_or_expression: exclusive_or_expression
  152                        | inclusive_or_expression '|' exclusive_or_expression

  153 logical_and_expression: inclusive_or_expression
  154                       | logical_and_expression AND inclusive_or_expression

  155 logical_or_expression: logical_and_expression
  156                      | logical_or_expression OR logical_and_expression

  157 expression: logical_or_expression

  158 expression_list: expression
  159                | expression_list ',' expression

  160 assignment_expression: assignment_variable_list '=' expression_list
  161                      | assignment_variable compound_assignment_operator expression

  162 assignment_variable_list: assignment_variable
  163                         | assignment_variable_list ',' assignment_variable

  164 assignment_variable: qualified_name
  165                    | array_access
  166                    | field_access

  167 compound_assignment_operator: ADD_ASSIGN
  168                             | SUB_ASSIGN
  169                             | MUL_ASSIGN
  170                             | DIV_ASSIGN
  171                             | MOD_ASSIGN
  172                             | AND_ASSIGN
  173                             | OR_ASSIGN
  174                             | XOR_ASSIGN
  175                             | RIGHT_ASSIGN
  176                             | LEFT_ASSIGN

  177 expression_statement: expression semicolons
  178                     | assignment_expression semicolons


Terminals, with rules where they appear

$end (0) 0
'!' (33) 128
'%' (37) 132
'&' (38) 148
'(' (40) 23 24 25 26 56 57 58 59 60 61 63 68 69 70 71 72 73 74 75 82
    94 101 102
')' (41) 23 24 25 26 56 57 58 59 60 61 63 68 69 70 71 72 73 74 75 82
    94 101 102
'*' (42) 40 130
'+' (43) 125 134
',' (44) 6 65 67 114 159 163
'-' (45) 126 135
'.' (46) 4 40 100
'/' (47) 131
':' (58) 115
';' (59) 1 2
'<' (60) 140
'=' (61) 160
'>' (62) 141
'[' (91) 27 98 99
']' (93) 27 98 99
'^' (94) 150
'{' (123) 47 48 76 107 108 109 110 111 112
'|' (124) 152
'}' (125) 47 48 76 107 108 109 110 111 112
'~' (126) 127
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 167
SUB_ASSIGN (260) 168
MUL_ASSIGN (261) 169
DIV_ASSIGN (262) 170
MOD_ASSIGN (263) 171
AND_ASSIGN (264) 172
OR_ASSIGN (265) 173
XOR_ASSIGN (266) 174
RIGHT_ASSIGN (267) 175
LEFT_ASSIGN (268) 176
EQ (269) 145
NE (270) 146
GE (271) 143
LE (272) 142
AND (273) 154
OR (274) 156
NOT (275)
SHIFT_LEFT (276) 137
SHIFT_RIGHT (277) 138
INC (278) 118 122
DEC (279) 119 123
TOKEN_THIS (280) 79
IF (281)
ELSE (282)
WHILE (283)
DO (284)
FOR (285)
IN (286)
SWITCH (287)
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292)
FUNC (293) 23 24 25 26 56 57 58 59 60 61 68 69 70 71 72 73 74 75
RETURN (294)
STRUCT (295) 47
INTERFACE (296) 48
TYPE (297) 47 48 49 50
CONST (298)
PACKAGE (299) 36
IMPORT (300) 39 40
INT8 (301) 14
INT16 (302) 15
INT32 (303) 16
INT64 (304) 17
UINT8 (305) 10
UINT16 (306) 11
UINT32 (307) 12
UINT64 (308) 13
FLOAT32 (309) 18
FLOAT64 (310) 19
BOOL (311) 20
STRING (312) 21
ANY_TYPE (313) 22
TOKEN_NULL (314) 91
TOKEN_TRUE (315) 92
TOKEN_FALSE (316) 93
INTEGER (317) 27 88
HEX (318)
OCT (319)
FLOAT (320) 89
STRING_LITERAL (321) 90
ID (322) 3 4 28 47 48 49 50 53 56 57 58 59 60 61 66 67 68 69 70 71
    100
IFX (323)
NO_CODE_BLOCK (324)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
semicolons (94)
    on left: 1 2, on right: 2 36 39 40 49 50 53 56 57 58 59 60 61 177
    178
qualified_name (95)
    on left: 3 4, on right: 4 8 36 39 40 77 98 104 164
type_name_list (96)
    on left: 5 6, on right: 6 63
type_name (97)
    on left: 7 8 9, on right: 5 6 27 49 53 62 64 65 66 67 110 111 112
primitive_type (98)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22, on right: 7
function_type (99)
    on left: 23 24 25 26, on right: 50
array_type (100)
    on left: 27, on right: 9
field_name (101)
    on left: 28, on right: 115
program (102)
    on left: 29 30 31 32 33 34 35, on right: 0
package_statement (103)
    on left: 36, on right: 29 30 31 33
import_statements (104)
    on left: 37 38, on right: 29 30 32 34 38
import_statement (105)
    on left: 39 40, on right: 37 38
declarations (106)
    on left: 41 42 43 44 45 46, on right: 29 31 32 35 42 44 46
type_declaration (107)
    on left: 47 48 49 50, on right: 41 42
field_declarations (108)
    on left: 51 52, on right: 47 52
field_declaration (109)
    on left: 53, on right: 51 52
interface_function_declarations (110)
    on left: 54 55, on right: 48 55
interface_function_declaration (111)
    on left: 56 57 58 59 60 61, on right: 54 55
return_type_list (112)
    on left: 62 63, on right: 24 26 57 59 61 69 71 73 75
parameter_type_list (113)
    on left: 64 65, on right: 25 26 58 59 65
parameter_list (114)
    on left: 66 67, on right: 60 61 67 70 71 74 75
function_declaration (115)
    on left: 68 69 70 71, on right: 43 44
anonymous_function_declaration (116)
    on left: 72 73 74 75, on right: 106
code_block (117)
    on left: 76, on right: 68 69 70 71 72 73 74 75
primary_expression (118)
    on left: 77 78, on right: 116
just_not_name (119)
    on left: 79 80 81, on right: 78 100
complex_primary (120)
    on left: 82 83, on right: 81
complex_primary_no_parenthesis (121)
    on left: 84 85 86 87, on right: 83 103
literal_name (122)
    on left: 88 89 90 91 92 93, on right: 84
array_complex_primary (123)
    on left: 94 95 96 97, on right: 99
array_access (124)
    on left: 98 99, on right: 85 95 165
field_access (125)
    on left: 100, on right: 86 96 166
method_call (126)
    on left: 101 102, on right: 87 97
method_access (127)
    on left: 103 104, on right: 101 102
initializer_expression (128)
    on left: 105 106, on right: 80
struct_initializer (129)
    on left: 107 108 109 110 111 112, on right: 105
field_initializer_list (130)
    on left: 113 114, on right: 109 112 114
field_initializer (131)
    on left: 115, on right: 113 114
postfix_expression (132)
    on left: 116 117, on right: 118 119 121
real_postfix_expression (133)
    on left: 118 119, on right: 117
argument_list (134)
    on left: 120, on right: 101
unary_expression (135)
    on left: 121 122 123 124, on right: 122 123 124 129 130 131 132
unary_operator (136)
    on left: 125 126 127 128, on right: 124
multiplicative_expression (137)
    on left: 129 130 131 132, on right: 130 131 132 133 134 135
additive_expression (138)
    on left: 133 134 135, on right: 134 135 136 137 138
shift_expression (139)
    on left: 136 137 138, on right: 137 138 139 140 141 142 143
relational_expression (140)
    on left: 139 140 141 142 143, on right: 140 141 142 143 144 145
    146
equality_expression (141)
    on left: 144 145 146, on right: 145 146 147 148
and_expression (142)
    on left: 147 148, on right: 148 149 150
exclusive_or_expression (143)
    on left: 149 150, on right: 150 151 152
inclusive_or_expression (144)
    on left: 151 152, on right: 152 153 154
logical_and_expression (145)
    on left: 153 154, on right: 154 155 156
logical_or_expression (146)
    on left: 155 156, on right: 156 157
expression (147)
    on left: 157, on right: 82 94 98 99 115 158 159 161 177
expression_list (148)
    on left: 158 159, on right: 108 111 120 159 160
assignment_expression (149)
    on left: 160 161, on right: 178
assignment_variable_list (150)
    on left: 162 163, on right: 160 163
assignment_variable (151)
    on left: 164 165 166, on right: 161 162 163
compound_assignment_operator (152)
    on left: 167 168 169 170 171 172 173 174 175 176, on right: 161
expression_statement (153)
    on left: 177 178, on right: 45 46


State 0

    0 $accept: . program $end

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    PACKAGE         shift, and go to state 6
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    program                         go to state 39
    package_statement               go to state 40
    import_statements               go to state 41
    import_statement                go to state 42
    declarations                    go to state 43
    type_declaration                go to state 44
    function_declaration            go to state 45
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 73
    assignment_expression           go to state 74
    assignment_variable_list        go to state 75
    assignment_variable             go to state 76
    expression_statement            go to state 77


State 1

  122 unary_expression: INC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 82
    unary_operator                  go to state 62


State 2

  123 unary_expression: DEC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 83
    unary_operator                  go to state 62


State 3

   79 just_not_name: TOKEN_THIS .

    $default  reduce using rule 79 (just_not_name)


State 4

   68 function_declaration: FUNC . ID '(' ')' code_block
   69                     | FUNC . ID '(' ')' return_type_list code_block
   70                     | FUNC . ID '(' parameter_list ')' code_block
   71                     | FUNC . ID '(' parameter_list ')' return_type_list code_block
   72 anonymous_function_declaration: FUNC . '(' ')' code_block
   73                               | FUNC . '(' ')' return_type_list code_block
   74                               | FUNC . '(' parameter_list ')' code_block
   75                               | FUNC . '(' parameter_list ')' return_type_list code_block

    ID   shift, and go to state 84
    '('  shift, and go to state 85


State 5

   47 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   48                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   49                 | TYPE . ID type_name semicolons
   50                 | TYPE . ID function_type semicolons

    ID  shift, and go to state 86


State 6

   36 package_statement: PACKAGE . qualified_name semicolons

    ID  shift, and go to state 27

    qualified_name  go to state 87


State 7

   39 import_statement: IMPORT . qualified_name semicolons
   40                 | IMPORT . qualified_name '.' '*' semicolons

    ID  shift, and go to state 27

    qualified_name  go to state 88


State 8

   14 primitive_type: INT8 .

    $default  reduce using rule 14 (primitive_type)


State 9

   15 primitive_type: INT16 .

    $default  reduce using rule 15 (primitive_type)


State 10

   16 primitive_type: INT32 .

    $default  reduce using rule 16 (primitive_type)


State 11

   17 primitive_type: INT64 .

    $default  reduce using rule 17 (primitive_type)


State 12

   10 primitive_type: UINT8 .

    $default  reduce using rule 10 (primitive_type)


State 13

   11 primitive_type: UINT16 .

    $default  reduce using rule 11 (primitive_type)


State 14

   12 primitive_type: UINT32 .

    $default  reduce using rule 12 (primitive_type)


State 15

   13 primitive_type: UINT64 .

    $default  reduce using rule 13 (primitive_type)


State 16

   18 primitive_type: FLOAT32 .

    $default  reduce using rule 18 (primitive_type)


State 17

   19 primitive_type: FLOAT64 .

    $default  reduce using rule 19 (primitive_type)


State 18

   20 primitive_type: BOOL .

    $default  reduce using rule 20 (primitive_type)


State 19

   21 primitive_type: STRING .

    $default  reduce using rule 21 (primitive_type)


State 20

   22 primitive_type: ANY_TYPE .

    $default  reduce using rule 22 (primitive_type)


State 21

   91 literal_name: TOKEN_NULL .

    $default  reduce using rule 91 (literal_name)


State 22

   92 literal_name: TOKEN_TRUE .

    $default  reduce using rule 92 (literal_name)


State 23

   93 literal_name: TOKEN_FALSE .

    $default  reduce using rule 93 (literal_name)


State 24

   88 literal_name: INTEGER .

    $default  reduce using rule 88 (literal_name)


State 25

   89 literal_name: FLOAT .

    $default  reduce using rule 89 (literal_name)


State 26

   90 literal_name: STRING_LITERAL .

    $default  reduce using rule 90 (literal_name)


State 27

    3 qualified_name: ID .

    $default  reduce using rule 3 (qualified_name)


State 28

   82 complex_primary: '(' . expression ')'
   94 array_complex_primary: '(' . expression ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 89


State 29

   27 array_type: '[' . INTEGER ']' type_name

    INTEGER  shift, and go to state 90


State 30

  107 struct_initializer: '{' . '}'
  108                   | '{' . expression_list '}'
  109                   | '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 91
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '}'             shift, and go to state 92
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    field_name                      go to state 93
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    field_initializer_list          go to state 94
    field_initializer               go to state 95
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 96
    expression_list                 go to state 97


State 31

  125 unary_operator: '+' .

    $default  reduce using rule 125 (unary_operator)


State 32

  126 unary_operator: '-' .

    $default  reduce using rule 126 (unary_operator)


State 33

  127 unary_operator: '~' .

    $default  reduce using rule 127 (unary_operator)


State 34

  128 unary_operator: '!' .

    $default  reduce using rule 128 (unary_operator)


State 35

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   77 primary_expression: qualified_name .
   98 array_access: qualified_name . '[' expression ']'
  104 method_access: qualified_name .
  164 assignment_variable: qualified_name .

    '.'  shift, and go to state 98
    '['  shift, and go to state 99

    ADD_ASSIGN    reduce using rule 164 (assignment_variable)
    SUB_ASSIGN    reduce using rule 164 (assignment_variable)
    MUL_ASSIGN    reduce using rule 164 (assignment_variable)
    DIV_ASSIGN    reduce using rule 164 (assignment_variable)
    MOD_ASSIGN    reduce using rule 164 (assignment_variable)
    AND_ASSIGN    reduce using rule 164 (assignment_variable)
    OR_ASSIGN     reduce using rule 164 (assignment_variable)
    XOR_ASSIGN    reduce using rule 164 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 164 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 164 (assignment_variable)
    ','           reduce using rule 164 (assignment_variable)
    '('           reduce using rule 104 (method_access)
    '{'           reduce using rule 8 (type_name)
    '='           reduce using rule 164 (assignment_variable)
    $default      reduce using rule 77 (primary_expression)


State 36

  110 struct_initializer: type_name . '{' '}'
  111                   | type_name . '{' expression_list '}'
  112                   | type_name . '{' field_initializer_list '}'

    '{'  shift, and go to state 100


State 37

    7 type_name: primitive_type .

    $default  reduce using rule 7 (type_name)


State 38

    9 type_name: array_type .

    $default  reduce using rule 9 (type_name)


State 39

    0 $accept: program . $end

    $end  shift, and go to state 101


State 40

   29 program: package_statement . import_statements declarations
   30        | package_statement . import_statements
   31        | package_statement . declarations
   33        | package_statement .

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 33 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    import_statements               go to state 102
    import_statement                go to state 42
    declarations                    go to state 103
    type_declaration                go to state 44
    function_declaration            go to state 45
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 73
    assignment_expression           go to state 74
    assignment_variable_list        go to state 75
    assignment_variable             go to state 76
    expression_statement            go to state 77


State 41

   32 program: import_statements . declarations
   34        | import_statements .
   38 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 34 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    import_statement                go to state 104
    declarations                    go to state 105
    type_declaration                go to state 44
    function_declaration            go to state 45
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 73
    assignment_expression           go to state 74
    assignment_variable_list        go to state 75
    assignment_variable             go to state 76
    expression_statement            go to state 77


State 42

   37 import_statements: import_statement .

    $default  reduce using rule 37 (import_statements)


State 43

   35 program: declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . function_declaration
   46             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 35 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    type_declaration                go to state 106
    function_declaration            go to state 107
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 73
    assignment_expression           go to state 74
    assignment_variable_list        go to state 75
    assignment_variable             go to state 76
    expression_statement            go to state 108


State 44

   41 declarations: type_declaration .

    $default  reduce using rule 41 (declarations)


State 45

   43 declarations: function_declaration .

    $default  reduce using rule 43 (declarations)


State 46

  106 initializer_expression: anonymous_function_declaration .

    $default  reduce using rule 106 (initializer_expression)


State 47

  116 postfix_expression: primary_expression .

    $default  reduce using rule 116 (postfix_expression)


State 48

   78 primary_expression: just_not_name .
  100 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 109

    $default  reduce using rule 78 (primary_expression)


State 49

   81 just_not_name: complex_primary .

    $default  reduce using rule 81 (just_not_name)


State 50

   83 complex_primary: complex_primary_no_parenthesis .
  103 method_access: complex_primary_no_parenthesis .

    '('       reduce using rule 103 (method_access)
    $default  reduce using rule 83 (complex_primary)


State 51

   84 complex_primary_no_parenthesis: literal_name .

    $default  reduce using rule 84 (complex_primary_no_parenthesis)


State 52

   99 array_access: array_complex_primary . '[' expression ']'

    '['  shift, and go to state 110


State 53

   85 complex_primary_no_parenthesis: array_access .
   95 array_complex_primary: array_access .
  165 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 165 (assignment_variable)
    SUB_ASSIGN    reduce using rule 165 (assignment_variable)
    MUL_ASSIGN    reduce using rule 165 (assignment_variable)
    DIV_ASSIGN    reduce using rule 165 (assignment_variable)
    MOD_ASSIGN    reduce using rule 165 (assignment_variable)
    AND_ASSIGN    reduce using rule 165 (assignment_variable)
    OR_ASSIGN     reduce using rule 165 (assignment_variable)
    XOR_ASSIGN    reduce using rule 165 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 165 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 165 (assignment_variable)
    ','           reduce using rule 165 (assignment_variable)
    '['           reduce using rule 95 (array_complex_primary)
    '='           reduce using rule 165 (assignment_variable)
    $default      reduce using rule 85 (complex_primary_no_parenthesis)


State 54

   86 complex_primary_no_parenthesis: field_access .
   96 array_complex_primary: field_access .
  166 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 166 (assignment_variable)
    SUB_ASSIGN    reduce using rule 166 (assignment_variable)
    MUL_ASSIGN    reduce using rule 166 (assignment_variable)
    DIV_ASSIGN    reduce using rule 166 (assignment_variable)
    MOD_ASSIGN    reduce using rule 166 (assignment_variable)
    AND_ASSIGN    reduce using rule 166 (assignment_variable)
    OR_ASSIGN     reduce using rule 166 (assignment_variable)
    XOR_ASSIGN    reduce using rule 166 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 166 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 166 (assignment_variable)
    ','           reduce using rule 166 (assignment_variable)
    '['           reduce using rule 96 (array_complex_primary)
    '='           reduce using rule 166 (assignment_variable)
    $default      reduce using rule 86 (complex_primary_no_parenthesis)


State 55

   87 complex_primary_no_parenthesis: method_call .
   97 array_complex_primary: method_call .

    '['       reduce using rule 97 (array_complex_primary)
    $default  reduce using rule 87 (complex_primary_no_parenthesis)


State 56

  101 method_call: method_access . '(' argument_list ')'
  102            | method_access . '(' ')'

    '('  shift, and go to state 111


State 57

   80 just_not_name: initializer_expression .

    $default  reduce using rule 80 (just_not_name)


State 58

  105 initializer_expression: struct_initializer .

    $default  reduce using rule 105 (initializer_expression)


State 59

  118 real_postfix_expression: postfix_expression . INC
  119                        | postfix_expression . DEC
  121 unary_expression: postfix_expression .

    INC  shift, and go to state 112
    DEC  shift, and go to state 113

    $default  reduce using rule 121 (unary_expression)


State 60

  117 postfix_expression: real_postfix_expression .

    $default  reduce using rule 117 (postfix_expression)


State 61

  129 multiplicative_expression: unary_expression .

    $default  reduce using rule 129 (multiplicative_expression)


State 62

  124 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 114
    unary_operator                  go to state 62


State 63

  130 multiplicative_expression: multiplicative_expression . '*' unary_expression
  131                          | multiplicative_expression . '/' unary_expression
  132                          | multiplicative_expression . '%' unary_expression
  133 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 133 (additive_expression)


State 64

  134 additive_expression: additive_expression . '+' multiplicative_expression
  135                    | additive_expression . '-' multiplicative_expression
  136 shift_expression: additive_expression .

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 136 (shift_expression)


State 65

  137 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  138                 | shift_expression . SHIFT_RIGHT additive_expression
  139 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 120
    SHIFT_RIGHT  shift, and go to state 121

    $default  reduce using rule 139 (relational_expression)


State 66

  140 relational_expression: relational_expression . '<' shift_expression
  141                      | relational_expression . '>' shift_expression
  142                      | relational_expression . LE shift_expression
  143                      | relational_expression . GE shift_expression
  144 equality_expression: relational_expression .

    GE   shift, and go to state 122
    LE   shift, and go to state 123
    '<'  shift, and go to state 124
    '>'  shift, and go to state 125

    $default  reduce using rule 144 (equality_expression)


State 67

  145 equality_expression: equality_expression . EQ relational_expression
  146                    | equality_expression . NE relational_expression
  147 and_expression: equality_expression .

    EQ  shift, and go to state 126
    NE  shift, and go to state 127

    $default  reduce using rule 147 (and_expression)


State 68

  148 and_expression: and_expression . '&' equality_expression
  149 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 128

    $default  reduce using rule 149 (exclusive_or_expression)


State 69

  150 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  151 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 129

    $default  reduce using rule 151 (inclusive_or_expression)


State 70

  152 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  153 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 130

    $default  reduce using rule 153 (logical_and_expression)


State 71

  154 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  155 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 131

    $default  reduce using rule 155 (logical_or_expression)


State 72

  156 logical_or_expression: logical_or_expression . OR logical_and_expression
  157 expression: logical_or_expression .

    OR  shift, and go to state 132

    $default  reduce using rule 157 (expression)


State 73

  177 expression_statement: expression . semicolons

    ';'  shift, and go to state 133

    semicolons  go to state 134


State 74

  178 expression_statement: assignment_expression . semicolons

    ';'  shift, and go to state 133

    semicolons  go to state 135


State 75

  160 assignment_expression: assignment_variable_list . '=' expression_list
  163 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 136
    '='  shift, and go to state 137


State 76

  161 assignment_expression: assignment_variable . compound_assignment_operator expression
  162 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 138
    SUB_ASSIGN    shift, and go to state 139
    MUL_ASSIGN    shift, and go to state 140
    DIV_ASSIGN    shift, and go to state 141
    MOD_ASSIGN    shift, and go to state 142
    AND_ASSIGN    shift, and go to state 143
    OR_ASSIGN     shift, and go to state 144
    XOR_ASSIGN    shift, and go to state 145
    RIGHT_ASSIGN  shift, and go to state 146
    LEFT_ASSIGN   shift, and go to state 147

    $default  reduce using rule 162 (assignment_variable_list)

    compound_assignment_operator  go to state 148


State 77

   45 declarations: expression_statement .

    $default  reduce using rule 45 (declarations)


State 78

   72 anonymous_function_declaration: FUNC . '(' ')' code_block
   73                               | FUNC . '(' ')' return_type_list code_block
   74                               | FUNC . '(' parameter_list ')' code_block
   75                               | FUNC . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 85


State 79

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   77 primary_expression: qualified_name .
   98 array_access: qualified_name . '[' expression ']'
  104 method_access: qualified_name .

    '.'  shift, and go to state 98
    '['  shift, and go to state 99

    '('       reduce using rule 104 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 77 (primary_expression)


State 80

   85 complex_primary_no_parenthesis: array_access .
   95 array_complex_primary: array_access .

    '['       reduce using rule 95 (array_complex_primary)
    $default  reduce using rule 85 (complex_primary_no_parenthesis)


State 81

   86 complex_primary_no_parenthesis: field_access .
   96 array_complex_primary: field_access .

    '['       reduce using rule 96 (array_complex_primary)
    $default  reduce using rule 86 (complex_primary_no_parenthesis)


State 82

  122 unary_expression: INC unary_expression .

    $default  reduce using rule 122 (unary_expression)


State 83

  123 unary_expression: DEC unary_expression .

    $default  reduce using rule 123 (unary_expression)


State 84

   68 function_declaration: FUNC ID . '(' ')' code_block
   69                     | FUNC ID . '(' ')' return_type_list code_block
   70                     | FUNC ID . '(' parameter_list ')' code_block
   71                     | FUNC ID . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 149


State 85

   72 anonymous_function_declaration: FUNC '(' . ')' code_block
   73                               | FUNC '(' . ')' return_type_list code_block
   74                               | FUNC '(' . parameter_list ')' code_block
   75                               | FUNC '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 150
    ')'  shift, and go to state 151

    parameter_list  go to state 152


State 86

   47 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   48                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   49                 | TYPE ID . type_name semicolons
   50                 | TYPE ID . function_type semicolons

    FUNC       shift, and go to state 153
    STRUCT     shift, and go to state 154
    INTERFACE  shift, and go to state 155
    INT8       shift, and go to state 8
    INT16      shift, and go to state 9
    INT32      shift, and go to state 10
    INT64      shift, and go to state 11
    UINT8      shift, and go to state 12
    UINT16     shift, and go to state 13
    UINT32     shift, and go to state 14
    UINT64     shift, and go to state 15
    FLOAT32    shift, and go to state 16
    FLOAT64    shift, and go to state 17
    BOOL       shift, and go to state 18
    STRING     shift, and go to state 19
    ANY_TYPE   shift, and go to state 20
    ID         shift, and go to state 27
    '['        shift, and go to state 29

    qualified_name  go to state 156
    type_name       go to state 157
    primitive_type  go to state 37
    function_type   go to state 158
    array_type      go to state 38


State 87

    4 qualified_name: qualified_name . '.' ID
   36 package_statement: PACKAGE qualified_name . semicolons

    ';'  shift, and go to state 133
    '.'  shift, and go to state 98

    semicolons  go to state 159


State 88

    4 qualified_name: qualified_name . '.' ID
   39 import_statement: IMPORT qualified_name . semicolons
   40                 | IMPORT qualified_name . '.' '*' semicolons

    ';'  shift, and go to state 133
    '.'  shift, and go to state 160

    semicolons  go to state 161


State 89

   82 complex_primary: '(' expression . ')'
   94 array_complex_primary: '(' expression . ')'

    ')'  shift, and go to state 162


State 90

   27 array_type: '[' INTEGER . ']' type_name

    ']'  shift, and go to state 163


State 91

    3 qualified_name: ID .
   28 field_name: ID .

    ':'       reduce using rule 28 (field_name)
    $default  reduce using rule 3 (qualified_name)


State 92

  107 struct_initializer: '{' '}' .

    $default  reduce using rule 107 (struct_initializer)


State 93

  115 field_initializer: field_name . ':' expression

    ':'  shift, and go to state 164


State 94

  109 struct_initializer: '{' field_initializer_list . '}'
  114 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 165
    '}'  shift, and go to state 166


State 95

  113 field_initializer_list: field_initializer .

    $default  reduce using rule 113 (field_initializer_list)


State 96

  158 expression_list: expression .

    $default  reduce using rule 158 (expression_list)


State 97

  108 struct_initializer: '{' expression_list . '}'
  159 expression_list: expression_list . ',' expression

    ','  shift, and go to state 167
    '}'  shift, and go to state 168


State 98

    4 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 169


State 99

   98 array_access: qualified_name '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 170


State 100

  110 struct_initializer: type_name '{' . '}'
  111                   | type_name '{' . expression_list '}'
  112                   | type_name '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 91
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '}'             shift, and go to state 171
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    field_name                      go to state 93
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    field_initializer_list          go to state 172
    field_initializer               go to state 95
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 96
    expression_list                 go to state 173


State 101

    0 $accept: program $end .

    $default  accept


State 102

   29 program: package_statement import_statements . declarations
   30        | package_statement import_statements .
   38 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 30 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    import_statement                go to state 104
    declarations                    go to state 174
    type_declaration                go to state 44
    function_declaration            go to state 45
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 73
    assignment_expression           go to state 74
    assignment_variable_list        go to state 75
    assignment_variable             go to state 76
    expression_statement            go to state 77


State 103

   31 program: package_statement declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . function_declaration
   46             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 31 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    type_declaration                go to state 106
    function_declaration            go to state 107
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 73
    assignment_expression           go to state 74
    assignment_variable_list        go to state 75
    assignment_variable             go to state 76
    expression_statement            go to state 108


State 104

   38 import_statements: import_statements import_statement .

    $default  reduce using rule 38 (import_statements)


State 105

   32 program: import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . function_declaration
   46             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 32 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    type_declaration                go to state 106
    function_declaration            go to state 107
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 73
    assignment_expression           go to state 74
    assignment_variable_list        go to state 75
    assignment_variable             go to state 76
    expression_statement            go to state 108


State 106

   42 declarations: declarations type_declaration .

    $default  reduce using rule 42 (declarations)


State 107

   44 declarations: declarations function_declaration .

    $default  reduce using rule 44 (declarations)


State 108

   46 declarations: declarations expression_statement .

    $default  reduce using rule 46 (declarations)


State 109

  100 field_access: just_not_name '.' . ID

    ID  shift, and go to state 175


State 110

   99 array_access: array_complex_primary '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 176


State 111

  101 method_call: method_access '(' . argument_list ')'
  102            | method_access '(' . ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    ')'             shift, and go to state 177
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    argument_list                   go to state 178
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 96
    expression_list                 go to state 179


State 112

  118 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 118 (real_postfix_expression)


State 113

  119 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 119 (real_postfix_expression)


State 114

  124 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 124 (unary_expression)


State 115

  130 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 180
    unary_operator                  go to state 62


State 116

  131 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 181
    unary_operator                  go to state 62


State 117

  132 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 182
    unary_operator                  go to state 62


State 118

  134 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 183


State 119

  135 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 184


State 120

  137 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 185


State 121

  138 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 186


State 122

  143 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 187


State 123

  142 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 188


State 124

  140 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 189


State 125

  141 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 190


State 126

  145 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 191


State 127

  146 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 192


State 128

  148 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 193


State 129

  150 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 194


State 130

  152 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 195


State 131

  154 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 196


State 132

  156 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 197


State 133

    1 semicolons: ';' .

    $default  reduce using rule 1 (semicolons)


State 134

    2 semicolons: semicolons . ';'
  177 expression_statement: expression semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 177 (expression_statement)


State 135

    2 semicolons: semicolons . ';'
  178 expression_statement: assignment_expression semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 178 (expression_statement)


State 136

  163 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30

    qualified_name                  go to state 199
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    just_not_name                   go to state 200
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    assignment_variable             go to state 201


State 137

  160 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 96
    expression_list                 go to state 202


State 138

  167 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 167 (compound_assignment_operator)


State 139

  168 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 168 (compound_assignment_operator)


State 140

  169 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 169 (compound_assignment_operator)


State 141

  170 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 170 (compound_assignment_operator)


State 142

  171 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 171 (compound_assignment_operator)


State 143

  172 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 172 (compound_assignment_operator)


State 144

  173 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 173 (compound_assignment_operator)


State 145

  174 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 174 (compound_assignment_operator)


State 146

  175 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 175 (compound_assignment_operator)


State 147

  176 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 176 (compound_assignment_operator)


State 148

  161 assignment_expression: assignment_variable compound_assignment_operator . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 203


State 149

   68 function_declaration: FUNC ID '(' . ')' code_block
   69                     | FUNC ID '(' . ')' return_type_list code_block
   70                     | FUNC ID '(' . parameter_list ')' code_block
   71                     | FUNC ID '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 150
    ')'  shift, and go to state 204

    parameter_list  go to state 205


State 150

   66 parameter_list: ID . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 156
    type_name       go to state 206
    primitive_type  go to state 37
    array_type      go to state 38


State 151

   72 anonymous_function_declaration: FUNC '(' ')' . code_block
   73                               | FUNC '(' ')' . return_type_list code_block

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 207
    '['       shift, and go to state 29
    '{'       shift, and go to state 208

    qualified_name    go to state 156
    type_name         go to state 209
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 210
    code_block        go to state 211


State 152

   67 parameter_list: parameter_list . ',' ID type_name
   74 anonymous_function_declaration: FUNC '(' parameter_list . ')' code_block
   75                               | FUNC '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 212
    ')'  shift, and go to state 213


State 153

   23 function_type: FUNC . '(' ')'
   24              | FUNC . '(' ')' return_type_list
   25              | FUNC . '(' parameter_type_list ')'
   26              | FUNC . '(' parameter_type_list ')' return_type_list

    '('  shift, and go to state 214


State 154

   47 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 215


State 155

   48 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 216


State 156

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .

    '.'  shift, and go to state 98

    $default  reduce using rule 8 (type_name)


State 157

   49 type_declaration: TYPE ID type_name . semicolons

    ';'  shift, and go to state 133

    semicolons  go to state 217


State 158

   50 type_declaration: TYPE ID function_type . semicolons

    ';'  shift, and go to state 133

    semicolons  go to state 218


State 159

    2 semicolons: semicolons . ';'
   36 package_statement: PACKAGE qualified_name semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 36 (package_statement)


State 160

    4 qualified_name: qualified_name '.' . ID
   40 import_statement: IMPORT qualified_name '.' . '*' semicolons

    ID   shift, and go to state 169
    '*'  shift, and go to state 219


State 161

    2 semicolons: semicolons . ';'
   39 import_statement: IMPORT qualified_name semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 39 (import_statement)


State 162

   82 complex_primary: '(' expression ')' .
   94 array_complex_primary: '(' expression ')' .

    '['       reduce using rule 94 (array_complex_primary)
    $default  reduce using rule 82 (complex_primary)


State 163

   27 array_type: '[' INTEGER ']' . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 156
    type_name       go to state 220
    primitive_type  go to state 37
    array_type      go to state 38


State 164

  115 field_initializer: field_name ':' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 221


State 165

  114 field_initializer_list: field_initializer_list ',' . field_initializer

    ID  shift, and go to state 222

    field_name         go to state 93
    field_initializer  go to state 223


State 166

  109 struct_initializer: '{' field_initializer_list '}' .

    $default  reduce using rule 109 (struct_initializer)


State 167

  159 expression_list: expression_list ',' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 78
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 79
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 80
    field_access                    go to state 81
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 224


State 168

  108 struct_initializer: '{' expression_list '}' .

    $default  reduce using rule 108 (struct_initializer)


State 169

    4 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 4 (qualified_name)


State 170

   98 array_access: qualified_name '[' expression . ']'

    ']'  shift, and go to state 225


State 171

  110 struct_initializer: type_name '{' '}' .

    $default  reduce using rule 110 (struct_initializer)


State 172

  112 struct_initializer: type_name '{' field_initializer_list . '}'
  114 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 165
    '}'  shift, and go to state 226


State 173

  111 struct_initializer: type_name '{' expression_list . '}'
  159 expression_list: expression_list . ',' expression

    ','  shift, and go to state 167
    '}'  shift, and go to state 227


State 174

   29 program: package_statement import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . function_declaration
   46             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 29 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    type_declaration                go to state 106
    function_declaration            go to state 107
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 47
    just_not_name                   go to state 48
    complex_primary                 go to state 49
    complex_primary_no_parenthesis  go to state 50
    literal_name                    go to state 51
    array_complex_primary           go to state 52
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 55
    method_access                   go to state 56
    initializer_expression          go to state 57
    struct_initializer              go to state 58
    postfix_expression              go to state 59
    real_postfix_expression         go to state 60
    unary_expression                go to state 61
    unary_operator                  go to state 62
    multiplicative_expression       go to state 63
    additive_expression             go to state 64
    shift_expression                go to state 65
    relational_expression           go to state 66
    equality_expression             go to state 67
    and_expression                  go to state 68
    exclusive_or_expression         go to state 69
    inclusive_or_expression         go to state 70
    logical_and_expression          go to state 71
    logical_or_expression           go to state 72
    expression                      go to state 73
    assignment_expression           go to state 74
    assignment_variable_list        go to state 75
    assignment_variable             go to state 76
    expression_statement            go to state 108


State 175

  100 field_access: just_not_name '.' ID .

    $default  reduce using rule 100 (field_access)


State 176

   99 array_access: array_complex_primary '[' expression . ']'

    ']'  shift, and go to state 228


State 177

  102 method_call: method_access '(' ')' .

    $default  reduce using rule 102 (method_call)


State 178

  101 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 229


State 179

  120 argument_list: expression_list .
  159 expression_list: expression_list . ',' expression

    ','  shift, and go to state 167

    $default  reduce using rule 120 (argument_list)


State 180

  130 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 130 (multiplicative_expression)


State 181

  131 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 131 (multiplicative_expression)


State 182

  132 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 132 (multiplicative_expression)


State 183

  130 multiplicative_expression: multiplicative_expression . '*' unary_expression
  131                          | multiplicative_expression . '/' unary_expression
  132                          | multiplicative_expression . '%' unary_expression
  134 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 134 (additive_expression)


State 184

  130 multiplicative_expression: multiplicative_expression . '*' unary_expression
  131                          | multiplicative_expression . '/' unary_expression
  132                          | multiplicative_expression . '%' unary_expression
  135 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 115
    '/'  shift, and go to state 116
    '%'  shift, and go to state 117

    $default  reduce using rule 135 (additive_expression)


State 185

  134 additive_expression: additive_expression . '+' multiplicative_expression
  135                    | additive_expression . '-' multiplicative_expression
  137 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 137 (shift_expression)


State 186

  134 additive_expression: additive_expression . '+' multiplicative_expression
  135                    | additive_expression . '-' multiplicative_expression
  138 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 118
    '-'  shift, and go to state 119

    $default  reduce using rule 138 (shift_expression)


State 187

  137 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  138                 | shift_expression . SHIFT_RIGHT additive_expression
  143 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 120
    SHIFT_RIGHT  shift, and go to state 121

    $default  reduce using rule 143 (relational_expression)


State 188

  137 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  138                 | shift_expression . SHIFT_RIGHT additive_expression
  142 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 120
    SHIFT_RIGHT  shift, and go to state 121

    $default  reduce using rule 142 (relational_expression)


State 189

  137 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  138                 | shift_expression . SHIFT_RIGHT additive_expression
  140 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 120
    SHIFT_RIGHT  shift, and go to state 121

    $default  reduce using rule 140 (relational_expression)


State 190

  137 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  138                 | shift_expression . SHIFT_RIGHT additive_expression
  141 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 120
    SHIFT_RIGHT  shift, and go to state 121

    $default  reduce using rule 141 (relational_expression)


State 191

  140 relational_expression: relational_expression . '<' shift_expression
  141                      | relational_expression . '>' shift_expression
  142                      | relational_expression . LE shift_expression
  143                      | relational_expression . GE shift_expression
  145 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 122
    LE   shift, and go to state 123
    '<'  shift, and go to state 124
    '>'  shift, and go to state 125

    $default  reduce using rule 145 (equality_expression)


State 192

  140 relational_expression: relational_expression . '<' shift_expression
  141                      | relational_expression . '>' shift_expression
  142                      | relational_expression . LE shift_expression
  143                      | relational_expression . GE shift_expression
  146 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 122
    LE   shift, and go to state 123
    '<'  shift, and go to state 124
    '>'  shift, and go to state 125

    $default  reduce using rule 146 (equality_expression)


State 193

  145 equality_expression: equality_expression . EQ relational_expression
  146                    | equality_expression . NE relational_expression
  148 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 126
    NE  shift, and go to state 127

    $default  reduce using rule 148 (and_expression)


State 194

  148 and_expression: and_expression . '&' equality_expression
  150 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 128

    $default  reduce using rule 150 (exclusive_or_expression)


State 195

  150 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  152 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 129

    $default  reduce using rule 152 (inclusive_or_expression)


State 196

  152 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  154 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 130

    $default  reduce using rule 154 (logical_and_expression)


State 197

  154 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  156 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 131

    $default  reduce using rule 156 (logical_or_expression)


State 198

    2 semicolons: semicolons ';' .

    $default  reduce using rule 2 (semicolons)


State 199

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   98 array_access: qualified_name . '[' expression ']'
  104 method_access: qualified_name .
  164 assignment_variable: qualified_name .

    '.'  shift, and go to state 98
    '['  shift, and go to state 99

    '('       reduce using rule 104 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 164 (assignment_variable)


State 200

  100 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 109


State 201

  163 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 163 (assignment_variable_list)


State 202

  159 expression_list: expression_list . ',' expression
  160 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 167

    $default  reduce using rule 160 (assignment_expression)


State 203

  161 assignment_expression: assignment_variable compound_assignment_operator expression .

    $default  reduce using rule 161 (assignment_expression)


State 204

   68 function_declaration: FUNC ID '(' ')' . code_block
   69                     | FUNC ID '(' ')' . return_type_list code_block

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 207
    '['       shift, and go to state 29
    '{'       shift, and go to state 208

    qualified_name    go to state 156
    type_name         go to state 209
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 230
    code_block        go to state 231


State 205

   67 parameter_list: parameter_list . ',' ID type_name
   70 function_declaration: FUNC ID '(' parameter_list . ')' code_block
   71                     | FUNC ID '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 212
    ')'  shift, and go to state 232


State 206

   66 parameter_list: ID type_name .

    $default  reduce using rule 66 (parameter_list)


State 207

   63 return_type_list: '(' . type_name_list ')'

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 156
    type_name_list  go to state 233
    type_name       go to state 234
    primitive_type  go to state 37
    array_type      go to state 38


State 208

   76 code_block: '{' . '}'

    '}'  shift, and go to state 235


State 209

   62 return_type_list: type_name .

    $default  reduce using rule 62 (return_type_list)


State 210

   73 anonymous_function_declaration: FUNC '(' ')' return_type_list . code_block

    '{'  shift, and go to state 208

    code_block  go to state 236


State 211

   72 anonymous_function_declaration: FUNC '(' ')' code_block .

    $default  reduce using rule 72 (anonymous_function_declaration)


State 212

   67 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 237


State 213

   74 anonymous_function_declaration: FUNC '(' parameter_list ')' . code_block
   75                               | FUNC '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 207
    '['       shift, and go to state 29
    '{'       shift, and go to state 208

    qualified_name    go to state 156
    type_name         go to state 209
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 238
    code_block        go to state 239


State 214

   23 function_type: FUNC '(' . ')'
   24              | FUNC '(' . ')' return_type_list
   25              | FUNC '(' . parameter_type_list ')'
   26              | FUNC '(' . parameter_type_list ')' return_type_list

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ')'       shift, and go to state 240
    '['       shift, and go to state 29

    qualified_name       go to state 156
    type_name            go to state 241
    primitive_type       go to state 37
    array_type           go to state 38
    parameter_type_list  go to state 242


State 215

   47 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 243

    field_declarations  go to state 244
    field_declaration   go to state 245


State 216

   48 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    FUNC  shift, and go to state 246

    interface_function_declarations  go to state 247
    interface_function_declaration   go to state 248


State 217

    2 semicolons: semicolons . ';'
   49 type_declaration: TYPE ID type_name semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 49 (type_declaration)


State 218

    2 semicolons: semicolons . ';'
   50 type_declaration: TYPE ID function_type semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 50 (type_declaration)


State 219

   40 import_statement: IMPORT qualified_name '.' '*' . semicolons

    ';'  shift, and go to state 133

    semicolons  go to state 249


State 220

   27 array_type: '[' INTEGER ']' type_name .

    $default  reduce using rule 27 (array_type)


State 221

  115 field_initializer: field_name ':' expression .

    $default  reduce using rule 115 (field_initializer)


State 222

   28 field_name: ID .

    $default  reduce using rule 28 (field_name)


State 223

  114 field_initializer_list: field_initializer_list ',' field_initializer .

    $default  reduce using rule 114 (field_initializer_list)


State 224

  159 expression_list: expression_list ',' expression .

    $default  reduce using rule 159 (expression_list)


State 225

   98 array_access: qualified_name '[' expression ']' .

    $default  reduce using rule 98 (array_access)


State 226

  112 struct_initializer: type_name '{' field_initializer_list '}' .

    $default  reduce using rule 112 (struct_initializer)


State 227

  111 struct_initializer: type_name '{' expression_list '}' .

    $default  reduce using rule 111 (struct_initializer)


State 228

   99 array_access: array_complex_primary '[' expression ']' .

    $default  reduce using rule 99 (array_access)


State 229

  101 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 101 (method_call)


State 230

   69 function_declaration: FUNC ID '(' ')' return_type_list . code_block

    '{'  shift, and go to state 208

    code_block  go to state 250


State 231

   68 function_declaration: FUNC ID '(' ')' code_block .

    $default  reduce using rule 68 (function_declaration)


State 232

   70 function_declaration: FUNC ID '(' parameter_list ')' . code_block
   71                     | FUNC ID '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 207
    '['       shift, and go to state 29
    '{'       shift, and go to state 208

    qualified_name    go to state 156
    type_name         go to state 209
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 251
    code_block        go to state 252


State 233

    6 type_name_list: type_name_list . ',' type_name
   63 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 253
    ')'  shift, and go to state 254


State 234

    5 type_name_list: type_name .

    $default  reduce using rule 5 (type_name_list)


State 235

   76 code_block: '{' '}' .

    $default  reduce using rule 76 (code_block)


State 236

   73 anonymous_function_declaration: FUNC '(' ')' return_type_list code_block .

    $default  reduce using rule 73 (anonymous_function_declaration)


State 237

   67 parameter_list: parameter_list ',' ID . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 156
    type_name       go to state 255
    primitive_type  go to state 37
    array_type      go to state 38


State 238

   75 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 208

    code_block  go to state 256


State 239

   74 anonymous_function_declaration: FUNC '(' parameter_list ')' code_block .

    $default  reduce using rule 74 (anonymous_function_declaration)


State 240

   23 function_type: FUNC '(' ')' .
   24              | FUNC '(' ')' . return_type_list

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 207
    '['       shift, and go to state 29

    $default  reduce using rule 23 (function_type)

    qualified_name    go to state 156
    type_name         go to state 209
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 257


State 241

   64 parameter_type_list: type_name .

    $default  reduce using rule 64 (parameter_type_list)


State 242

   25 function_type: FUNC '(' parameter_type_list . ')'
   26              | FUNC '(' parameter_type_list . ')' return_type_list
   65 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 258
    ')'  shift, and go to state 259


State 243

   53 field_declaration: ID . type_name semicolons

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 156
    type_name       go to state 260
    primitive_type  go to state 37
    array_type      go to state 38


State 244

   47 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   52 field_declarations: field_declarations . field_declaration

    ID   shift, and go to state 243
    '}'  shift, and go to state 261

    field_declaration  go to state 262


State 245

   51 field_declarations: field_declaration .

    $default  reduce using rule 51 (field_declarations)


State 246

   56 interface_function_declaration: FUNC . ID '(' ')' semicolons
   57                               | FUNC . ID '(' ')' return_type_list semicolons
   58                               | FUNC . ID '(' parameter_type_list ')' semicolons
   59                               | FUNC . ID '(' parameter_type_list ')' return_type_list semicolons
   60                               | FUNC . ID '(' parameter_list ')' semicolons
   61                               | FUNC . ID '(' parameter_list ')' return_type_list semicolons

    ID  shift, and go to state 263


State 247

   48 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   55 interface_function_declarations: interface_function_declarations . interface_function_declaration

    FUNC  shift, and go to state 246
    '}'   shift, and go to state 264

    interface_function_declaration  go to state 265


State 248

   54 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 54 (interface_function_declarations)


State 249

    2 semicolons: semicolons . ';'
   40 import_statement: IMPORT qualified_name '.' '*' semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 40 (import_statement)


State 250

   69 function_declaration: FUNC ID '(' ')' return_type_list code_block .

    $default  reduce using rule 69 (function_declaration)


State 251

   71 function_declaration: FUNC ID '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 208

    code_block  go to state 266


State 252

   70 function_declaration: FUNC ID '(' parameter_list ')' code_block .

    $default  reduce using rule 70 (function_declaration)


State 253

    6 type_name_list: type_name_list ',' . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 156
    type_name       go to state 267
    primitive_type  go to state 37
    array_type      go to state 38


State 254

   63 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 63 (return_type_list)


State 255

   67 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 67 (parameter_list)


State 256

   75 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 75 (anonymous_function_declaration)


State 257

   24 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 24 (function_type)


State 258

   65 parameter_type_list: parameter_type_list ',' . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 156
    type_name       go to state 268
    primitive_type  go to state 37
    array_type      go to state 38


State 259

   25 function_type: FUNC '(' parameter_type_list ')' .
   26              | FUNC '(' parameter_type_list ')' . return_type_list

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 207
    '['       shift, and go to state 29

    $default  reduce using rule 25 (function_type)

    qualified_name    go to state 156
    type_name         go to state 209
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 269


State 260

   53 field_declaration: ID type_name . semicolons

    ';'  shift, and go to state 133

    semicolons  go to state 270


State 261

   47 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 47 (type_declaration)


State 262

   52 field_declarations: field_declarations field_declaration .

    $default  reduce using rule 52 (field_declarations)


State 263

   56 interface_function_declaration: FUNC ID . '(' ')' semicolons
   57                               | FUNC ID . '(' ')' return_type_list semicolons
   58                               | FUNC ID . '(' parameter_type_list ')' semicolons
   59                               | FUNC ID . '(' parameter_type_list ')' return_type_list semicolons
   60                               | FUNC ID . '(' parameter_list ')' semicolons
   61                               | FUNC ID . '(' parameter_list ')' return_type_list semicolons

    '('  shift, and go to state 271


State 264

   48 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 48 (type_declaration)


State 265

   55 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 55 (interface_function_declarations)


State 266

   71 function_declaration: FUNC ID '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 71 (function_declaration)


State 267

    6 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 6 (type_name_list)


State 268

   65 parameter_type_list: parameter_type_list ',' type_name .

    $default  reduce using rule 65 (parameter_type_list)


State 269

   26 function_type: FUNC '(' parameter_type_list ')' return_type_list .

    $default  reduce using rule 26 (function_type)


State 270

    2 semicolons: semicolons . ';'
   53 field_declaration: ID type_name semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 53 (field_declaration)


State 271

   56 interface_function_declaration: FUNC ID '(' . ')' semicolons
   57                               | FUNC ID '(' . ')' return_type_list semicolons
   58                               | FUNC ID '(' . parameter_type_list ')' semicolons
   59                               | FUNC ID '(' . parameter_type_list ')' return_type_list semicolons
   60                               | FUNC ID '(' . parameter_list ')' semicolons
   61                               | FUNC ID '(' . parameter_list ')' return_type_list semicolons

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 272
    ')'       shift, and go to state 273
    '['       shift, and go to state 29

    qualified_name       go to state 156
    type_name            go to state 241
    primitive_type       go to state 37
    array_type           go to state 38
    parameter_type_list  go to state 274
    parameter_list       go to state 275


State 272

    3 qualified_name: ID .
   66 parameter_list: ID . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    $default  reduce using rule 3 (qualified_name)

    qualified_name  go to state 156
    type_name       go to state 206
    primitive_type  go to state 37
    array_type      go to state 38


State 273

   56 interface_function_declaration: FUNC ID '(' ')' . semicolons
   57                               | FUNC ID '(' ')' . return_type_list semicolons

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ';'       shift, and go to state 133
    '('       shift, and go to state 207
    '['       shift, and go to state 29

    semicolons        go to state 276
    qualified_name    go to state 156
    type_name         go to state 209
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 277


State 274

   58 interface_function_declaration: FUNC ID '(' parameter_type_list . ')' semicolons
   59                               | FUNC ID '(' parameter_type_list . ')' return_type_list semicolons
   65 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 258
    ')'  shift, and go to state 278


State 275

   60 interface_function_declaration: FUNC ID '(' parameter_list . ')' semicolons
   61                               | FUNC ID '(' parameter_list . ')' return_type_list semicolons
   67 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 212
    ')'  shift, and go to state 279


State 276

    2 semicolons: semicolons . ';'
   56 interface_function_declaration: FUNC ID '(' ')' semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 56 (interface_function_declaration)


State 277

   57 interface_function_declaration: FUNC ID '(' ')' return_type_list . semicolons

    ';'  shift, and go to state 133

    semicolons  go to state 280


State 278

   58 interface_function_declaration: FUNC ID '(' parameter_type_list ')' . semicolons
   59                               | FUNC ID '(' parameter_type_list ')' . return_type_list semicolons

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ';'       shift, and go to state 133
    '('       shift, and go to state 207
    '['       shift, and go to state 29

    semicolons        go to state 281
    qualified_name    go to state 156
    type_name         go to state 209
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 282


State 279

   60 interface_function_declaration: FUNC ID '(' parameter_list ')' . semicolons
   61                               | FUNC ID '(' parameter_list ')' . return_type_list semicolons

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ';'       shift, and go to state 133
    '('       shift, and go to state 207
    '['       shift, and go to state 29

    semicolons        go to state 283
    qualified_name    go to state 156
    type_name         go to state 209
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 284


State 280

    2 semicolons: semicolons . ';'
   57 interface_function_declaration: FUNC ID '(' ')' return_type_list semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 57 (interface_function_declaration)


State 281

    2 semicolons: semicolons . ';'
   58 interface_function_declaration: FUNC ID '(' parameter_type_list ')' semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 58 (interface_function_declaration)


State 282

   59 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list . semicolons

    ';'  shift, and go to state 133

    semicolons  go to state 285


State 283

    2 semicolons: semicolons . ';'
   60 interface_function_declaration: FUNC ID '(' parameter_list ')' semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 60 (interface_function_declaration)


State 284

   61 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list . semicolons

    ';'  shift, and go to state 133

    semicolons  go to state 286


State 285

    2 semicolons: semicolons . ';'
   59 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 59 (interface_function_declaration)


State 286

    2 semicolons: semicolons . ';'
   61 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list semicolons .

    ';'  shift, and go to state 198

    $default  reduce using rule 61 (interface_function_declaration)
