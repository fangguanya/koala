Terminals unused in grammar

   ELLIPSIS
   NOT
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   HEX
   OCT
   OP
   IFX
   NO_CODE_BLOCK


Grammar

    0 $accept: program $end

    1 semicolons: ';'

    2 qualified_name: ID
    3               | qualified_name '.' ID

    4 type_name_list: type_name
    5               | type_name_list ',' type_name

    6 type_name: primitive_type
    7          | qualified_name
    8          | array_type

    9 primitive_type: UINT8
   10               | UINT16
   11               | UINT32
   12               | UINT64
   13               | INT8
   14               | INT16
   15               | INT32
   16               | INT64
   17               | FLOAT32
   18               | FLOAT64
   19               | BOOL
   20               | STRING
   21               | INTERFACE '{' '}'

   22 function_type: FUNC '(' ')'
   23              | FUNC '(' ')' return_type_list
   24              | FUNC '(' parameter_type_list ')'
   25              | FUNC '(' parameter_type_list ')' return_type_list

   26 array_type: '[' INTEGER ']' type_name

   27 field_name: ID

   28 program: package_statement import_statements declarations
   29        | package_statement import_statements
   30        | package_statement declarations
   31        | import_statements declarations
   32        | package_statement
   33        | import_statements
   34        | declarations

   35 package_statement: PACKAGE qualified_name semicolons

   36 import_statements: import_statement
   37                  | import_statements import_statement

   38 import_statement: IMPORT qualified_name semicolons
   39                 | IMPORT qualified_name '.' '*' semicolons

   40 declarations: type_declaration
   41             | declarations type_declaration
   42             | variable_declaration
   43             | declarations variable_declaration
   44             | function_declaration
   45             | declarations function_declaration
   46             | method_declaration
   47             | declarations method_declaration

   48 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   49                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   50                 | TYPE ID variable_type semicolons

   51 field_declarations: field_declaration
   52                   | field_declarations field_declaration

   53 field_declaration: ID type_name semicolons

   54 interface_function_declarations: interface_function_declaration
   55                                | interface_function_declarations interface_function_declaration

   56 interface_function_declaration: ID '(' ')' semicolons
   57                               | ID '(' ')' return_type_list semicolons
   58                               | ID '(' parameter_type_list ')' semicolons
   59                               | ID '(' parameter_type_list ')' return_type_list semicolons
   60                               | ID '(' parameter_list ')' semicolons
   61                               | ID '(' parameter_list ')' return_type_list semicolons

   62 return_type_list: type_name
   63                 | '(' type_name_list ')'

   64 parameter_type_list: type_name
   65                    | parameter_type_list ',' type_name

   66 parameter_list: ID type_name
   67               | parameter_list ',' ID type_name

   68 function_declaration: FUNC ID '(' ')' code_block
   69                     | FUNC ID '(' ')' return_type_list code_block
   70                     | FUNC ID '(' parameter_list ')' code_block
   71                     | FUNC ID '(' parameter_list ')' return_type_list code_block

   72 anonymous_function_declaration: FUNC '(' ')' code_block
   73                               | FUNC '(' ')' return_type_list code_block
   74                               | FUNC '(' parameter_list ')' code_block
   75                               | FUNC '(' parameter_list ')' return_type_list code_block

   76 method_declaration: FUNC method_name '(' ')' code_block
   77                   | FUNC method_name '(' ')' return_type_list code_block
   78                   | FUNC method_name '(' parameter_list ')' code_block
   79                   | FUNC method_name '(' parameter_list ')' return_type_list code_block

   80 method_name: ID '.' ID

   81 code_block: '{' local_variable_declaration_statements '}'
   82           | '{' '}'

   83 local_variable_declaration_statements: local_variable_declaration_statement
   84                                      | local_variable_declaration_statements local_variable_declaration_statement

   85 local_variable_declaration_statement: variable_declaration
   86                                     | statemnet

   87 statemnet: expression_statement ';'
   88          | selection_statement
   89          | iteration_statemnet
   90          | jump_statement

   91 selection_statement: if_statement
   92                    | switch_statement

   93 if_statement: IF '(' expression ')' code_block
   94             | IF '(' expression ')' code_block ELSE else_statemnet

   95 else_statemnet: if_statement
   96               | code_block

   97 switch_statement: SWITCH '(' expression ')' code_block

   98 iteration_statemnet: WHILE '(' expression ')' code_block
   99                    | DO code_block WHILE '(' expression ')' ';'
  100                    | FOR '(' for_init for_expr for_incr ')' code_block

  101 for_init: expression_statement ';'
  102         | variable_declaration
  103         | ';'

  104 for_expr: expression ';'
  105         | ';'

  106 for_incr: expression_statement

  107 jump_statement: RETURN ';'
  108               | RETURN expression_list ';'

  109 variable_declaration: VAR var_list variable_type ';'
  110                     | VAR var_list '=' expression_list ';'
  111                     | VAR var_list variable_type '=' expression_list ';'

  112 var_list: ID
  113         | var_list ',' ID

  114 variable_type: type_name
  115              | function_type

  116 primary_expression: qualified_name
  117                   | literal_name
  118                   | just_not_name

  119 just_not_name: TOKEN_THIS
  120              | '(' expression ')'
  121              | complex_primary

  122 complex_primary: array_access
  123                | field_access
  124                | method_call

  125 literal_name: INTEGER
  126             | FLOAT
  127             | STRING_LITERAL
  128             | TOKEN_NIL
  129             | TOKEN_TRUE
  130             | TOKEN_FALSE

  131 array_complex_primary: '(' expression ')'
  132                      | array_access
  133                      | field_access
  134                      | method_call

  135 array_access: qualified_name '[' expression ']'
  136             | array_complex_primary '[' expression ']'

  137 field_access: just_not_name '.' ID

  138 method_call: method_access '(' argument_list ')'
  139            | method_access '(' ')'

  140 method_access: complex_primary
  141              | qualified_name

  142 initializer_expression: struct_initializer
  143                       | anonymous_function_declaration

  144 struct_initializer: '{' '}'
  145                   | '{' expression_list '}'
  146                   | '{' field_initializer_list '}'
  147                   | type_name '{' '}'
  148                   | type_name '{' expression_list '}'
  149                   | type_name '{' field_initializer_list '}'

  150 field_initializer_list: field_initializer
  151                       | field_initializer_list ',' field_initializer

  152 field_initializer: field_name ':' expression

  153 postfix_expression: primary_expression
  154                   | real_postfix_expression

  155 real_postfix_expression: postfix_expression INC
  156                        | postfix_expression DEC

  157 argument_list: expression_list

  158 unary_expression: postfix_expression
  159                 | INC unary_expression
  160                 | DEC unary_expression
  161                 | unary_operator unary_expression

  162 unary_operator: '+'
  163               | '-'
  164               | '~'
  165               | '!'

  166 multiplicative_expression: unary_expression
  167                          | multiplicative_expression '*' unary_expression
  168                          | multiplicative_expression '/' unary_expression
  169                          | multiplicative_expression '%' unary_expression

  170 additive_expression: multiplicative_expression
  171                    | additive_expression '+' multiplicative_expression
  172                    | additive_expression '-' multiplicative_expression

  173 shift_expression: additive_expression
  174                 | shift_expression SHIFT_LEFT additive_expression
  175                 | shift_expression SHIFT_RIGHT additive_expression

  176 relational_expression: shift_expression
  177                      | relational_expression '<' shift_expression
  178                      | relational_expression '>' shift_expression
  179                      | relational_expression LE shift_expression
  180                      | relational_expression GE shift_expression

  181 equality_expression: relational_expression
  182                    | equality_expression EQ relational_expression
  183                    | equality_expression NE relational_expression

  184 and_expression: equality_expression
  185               | and_expression '&' equality_expression

  186 exclusive_or_expression: and_expression
  187                        | exclusive_or_expression '^' and_expression

  188 inclusive_or_expression: exclusive_or_expression
  189                        | inclusive_or_expression '|' exclusive_or_expression

  190 logical_and_expression: inclusive_or_expression
  191                       | logical_and_expression AND inclusive_or_expression

  192 logical_or_expression: logical_and_expression
  193                      | logical_or_expression OR logical_and_expression

  194 expression: logical_or_expression

  195 expressions: expression
  196            | initializer_expression

  197 expression_list: expressions
  198                | expression_list ',' expressions

  199 assignment_expression: assignment_variable_list '=' expression_list
  200                      | assignment_variable compound_assignment_operator expression

  201 assignment_variable_list: assignment_variable
  202                         | assignment_variable_list ',' assignment_variable

  203 assignment_variable: qualified_name
  204                    | array_access
  205                    | field_access

  206 compound_assignment_operator: ADD_ASSIGN
  207                             | SUB_ASSIGN
  208                             | MUL_ASSIGN
  209                             | DIV_ASSIGN
  210                             | MOD_ASSIGN
  211                             | AND_ASSIGN
  212                             | OR_ASSIGN
  213                             | XOR_ASSIGN
  214                             | RIGHT_ASSIGN
  215                             | LEFT_ASSIGN

  216 expression_statement: expression
  217                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 165
'%' (37) 169
'&' (38) 185
'(' (40) 22 23 24 25 56 57 58 59 60 61 63 68 69 70 71 72 73 74 75 76
    77 78 79 93 94 97 98 99 100 120 131 138 139
')' (41) 22 23 24 25 56 57 58 59 60 61 63 68 69 70 71 72 73 74 75 76
    77 78 79 93 94 97 98 99 100 120 131 138 139
'*' (42) 39 167
'+' (43) 162 171
',' (44) 5 65 67 113 151 198 202
'-' (45) 163 172
'.' (46) 3 39 80 137
'/' (47) 168
':' (58) 152
';' (59) 1 87 99 101 103 104 105 107 108 109 110 111
'<' (60) 177
'=' (61) 110 111 199
'>' (62) 178
'[' (91) 26 135 136
']' (93) 26 135 136
'^' (94) 187
'{' (123) 21 48 49 81 82 144 145 146 147 148 149
'|' (124) 189
'}' (125) 21 48 49 81 82 144 145 146 147 148 149
'~' (126) 164
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 206
SUB_ASSIGN (260) 207
MUL_ASSIGN (261) 208
DIV_ASSIGN (262) 209
MOD_ASSIGN (263) 210
AND_ASSIGN (264) 211
OR_ASSIGN (265) 212
XOR_ASSIGN (266) 213
RIGHT_ASSIGN (267) 214
LEFT_ASSIGN (268) 215
EQ (269) 182
NE (270) 183
GE (271) 180
LE (272) 179
AND (273) 191
OR (274) 193
NOT (275)
SHIFT_LEFT (276) 174
SHIFT_RIGHT (277) 175
INC (278) 155 159
DEC (279) 156 160
TOKEN_THIS (280) 119
IF (281) 93 94
ELSE (282) 94
WHILE (283) 98 99
DO (284) 99
FOR (285) 100
IN (286)
SWITCH (287) 97
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 109 110 111
FUNC (293) 22 23 24 25 68 69 70 71 72 73 74 75 76 77 78 79
RETURN (294) 107 108
STRUCT (295) 48
INTERFACE (296) 21 49
TYPE (297) 48 49 50
CONST (298)
PACKAGE (299) 35
IMPORT (300) 38 39
INT8 (301) 13
INT16 (302) 14
INT32 (303) 15
INT64 (304) 16
UINT8 (305) 9
UINT16 (306) 10
UINT32 (307) 11
UINT64 (308) 12
FLOAT32 (309) 17
FLOAT64 (310) 18
BOOL (311) 19
STRING (312) 20
TOKEN_NIL (313) 128
TOKEN_TRUE (314) 129
TOKEN_FALSE (315) 130
INTEGER (316) 26 125
HEX (317)
OCT (318)
FLOAT (319) 126
STRING_LITERAL (320) 127
ID (321) 2 3 27 48 49 50 53 56 57 58 59 60 61 66 67 68 69 70 71 80
    112 113 137
OP (322)
IFX (323)
NO_CODE_BLOCK (324)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
semicolons (94)
    on left: 1, on right: 35 38 39 50 53 56 57 58 59 60 61
qualified_name (95)
    on left: 2 3, on right: 3 7 35 38 39 116 135 141 203
type_name_list (96)
    on left: 4 5, on right: 5 63
type_name (97)
    on left: 6 7 8, on right: 4 5 26 53 62 64 65 66 67 114 147 148
    149
primitive_type (98)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21, on right: 6
function_type (99)
    on left: 22 23 24 25, on right: 115
array_type (100)
    on left: 26, on right: 8
field_name (101)
    on left: 27, on right: 152
program (102)
    on left: 28 29 30 31 32 33 34, on right: 0
package_statement (103)
    on left: 35, on right: 28 29 30 32
import_statements (104)
    on left: 36 37, on right: 28 29 31 33 37
import_statement (105)
    on left: 38 39, on right: 36 37
declarations (106)
    on left: 40 41 42 43 44 45 46 47, on right: 28 30 31 34 41 43 45
    47
type_declaration (107)
    on left: 48 49 50, on right: 40 41
field_declarations (108)
    on left: 51 52, on right: 48 52
field_declaration (109)
    on left: 53, on right: 51 52
interface_function_declarations (110)
    on left: 54 55, on right: 49 55
interface_function_declaration (111)
    on left: 56 57 58 59 60 61, on right: 54 55
return_type_list (112)
    on left: 62 63, on right: 23 25 57 59 61 69 71 73 75 77 79
parameter_type_list (113)
    on left: 64 65, on right: 24 25 58 59 65
parameter_list (114)
    on left: 66 67, on right: 60 61 67 70 71 74 75 78 79
function_declaration (115)
    on left: 68 69 70 71, on right: 44 45
anonymous_function_declaration (116)
    on left: 72 73 74 75, on right: 143
method_declaration (117)
    on left: 76 77 78 79, on right: 46 47
method_name (118)
    on left: 80, on right: 76 77 78 79
code_block (119)
    on left: 81 82, on right: 68 69 70 71 72 73 74 75 76 77 78 79 93
    94 96 97 98 99 100
local_variable_declaration_statements (120)
    on left: 83 84, on right: 81 84
local_variable_declaration_statement (121)
    on left: 85 86, on right: 83 84
statemnet (122)
    on left: 87 88 89 90, on right: 86
selection_statement (123)
    on left: 91 92, on right: 88
if_statement (124)
    on left: 93 94, on right: 91 95
else_statemnet (125)
    on left: 95 96, on right: 94
switch_statement (126)
    on left: 97, on right: 92
iteration_statemnet (127)
    on left: 98 99 100, on right: 89
for_init (128)
    on left: 101 102 103, on right: 100
for_expr (129)
    on left: 104 105, on right: 100
for_incr (130)
    on left: 106, on right: 100
jump_statement (131)
    on left: 107 108, on right: 90
variable_declaration (132)
    on left: 109 110 111, on right: 42 43 85 102
var_list (133)
    on left: 112 113, on right: 109 110 111 113
variable_type (134)
    on left: 114 115, on right: 50 109 111
primary_expression (135)
    on left: 116 117 118, on right: 153
just_not_name (136)
    on left: 119 120 121, on right: 118 137
complex_primary (137)
    on left: 122 123 124, on right: 121 140
literal_name (138)
    on left: 125 126 127 128 129 130, on right: 117
array_complex_primary (139)
    on left: 131 132 133 134, on right: 136
array_access (140)
    on left: 135 136, on right: 122 132 204
field_access (141)
    on left: 137, on right: 123 133 205
method_call (142)
    on left: 138 139, on right: 124 134
method_access (143)
    on left: 140 141, on right: 138 139
initializer_expression (144)
    on left: 142 143, on right: 196
struct_initializer (145)
    on left: 144 145 146 147 148 149, on right: 142
field_initializer_list (146)
    on left: 150 151, on right: 146 149 151
field_initializer (147)
    on left: 152, on right: 150 151
postfix_expression (148)
    on left: 153 154, on right: 155 156 158
real_postfix_expression (149)
    on left: 155 156, on right: 154
argument_list (150)
    on left: 157, on right: 138
unary_expression (151)
    on left: 158 159 160 161, on right: 159 160 161 166 167 168 169
unary_operator (152)
    on left: 162 163 164 165, on right: 161
multiplicative_expression (153)
    on left: 166 167 168 169, on right: 167 168 169 170 171 172
additive_expression (154)
    on left: 170 171 172, on right: 171 172 173 174 175
shift_expression (155)
    on left: 173 174 175, on right: 174 175 176 177 178 179 180
relational_expression (156)
    on left: 176 177 178 179 180, on right: 177 178 179 180 181 182
    183
equality_expression (157)
    on left: 181 182 183, on right: 182 183 184 185
and_expression (158)
    on left: 184 185, on right: 185 186 187
exclusive_or_expression (159)
    on left: 186 187, on right: 187 188 189
inclusive_or_expression (160)
    on left: 188 189, on right: 189 190 191
logical_and_expression (161)
    on left: 190 191, on right: 191 192 193
logical_or_expression (162)
    on left: 192 193, on right: 193 194
expression (163)
    on left: 194, on right: 93 94 97 98 99 104 120 131 135 136 152
    195 200 216
expressions (164)
    on left: 195 196, on right: 197 198
expression_list (165)
    on left: 197 198, on right: 108 110 111 145 148 157 198 199
assignment_expression (166)
    on left: 199 200, on right: 217
assignment_variable_list (167)
    on left: 201 202, on right: 199 202
assignment_variable (168)
    on left: 203 204 205, on right: 200 201 202
compound_assignment_operator (169)
    on left: 206 207 208 209 210 211 212 213 214 215, on right: 200
expression_statement (170)
    on left: 216 217, on right: 87 101 106


State 0

    0 $accept: . program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    PACKAGE  shift, and go to state 4
    IMPORT   shift, and go to state 5

    program               go to state 6
    package_statement     go to state 7
    import_statements     go to state 8
    import_statement      go to state 9
    declarations          go to state 10
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 1

  109 variable_declaration: VAR . var_list variable_type ';'
  110                     | VAR . var_list '=' expression_list ';'
  111                     | VAR . var_list variable_type '=' expression_list ';'

    ID  shift, and go to state 15

    var_list  go to state 16


State 2

   68 function_declaration: FUNC . ID '(' ')' code_block
   69                     | FUNC . ID '(' ')' return_type_list code_block
   70                     | FUNC . ID '(' parameter_list ')' code_block
   71                     | FUNC . ID '(' parameter_list ')' return_type_list code_block
   76 method_declaration: FUNC . method_name '(' ')' code_block
   77                   | FUNC . method_name '(' ')' return_type_list code_block
   78                   | FUNC . method_name '(' parameter_list ')' code_block
   79                   | FUNC . method_name '(' parameter_list ')' return_type_list code_block

    ID  shift, and go to state 17

    method_name  go to state 18


State 3

   48 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   49                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   50                 | TYPE . ID variable_type semicolons

    ID  shift, and go to state 19


State 4

   35 package_statement: PACKAGE . qualified_name semicolons

    ID  shift, and go to state 20

    qualified_name  go to state 21


State 5

   38 import_statement: IMPORT . qualified_name semicolons
   39                 | IMPORT . qualified_name '.' '*' semicolons

    ID  shift, and go to state 20

    qualified_name  go to state 22


State 6

    0 $accept: program . $end

    $end  shift, and go to state 23


State 7

   28 program: package_statement . import_statements declarations
   29        | package_statement . import_statements
   30        | package_statement . declarations
   32        | package_statement .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 32 (program)

    import_statements     go to state 24
    import_statement      go to state 9
    declarations          go to state 25
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 8

   31 program: import_statements . declarations
   33        | import_statements .
   37 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 33 (program)

    import_statement      go to state 26
    declarations          go to state 27
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 9

   36 import_statements: import_statement .

    $default  reduce using rule 36 (import_statements)


State 10

   34 program: declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 34 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 11

   40 declarations: type_declaration .

    $default  reduce using rule 40 (declarations)


State 12

   44 declarations: function_declaration .

    $default  reduce using rule 44 (declarations)


State 13

   46 declarations: method_declaration .

    $default  reduce using rule 46 (declarations)


State 14

   42 declarations: variable_declaration .

    $default  reduce using rule 42 (declarations)


State 15

  112 var_list: ID .

    $default  reduce using rule 112 (var_list)


State 16

  109 variable_declaration: VAR var_list . variable_type ';'
  110                     | VAR var_list . '=' expression_list ';'
  111                     | VAR var_list . variable_type '=' expression_list ';'
  113 var_list: var_list . ',' ID

    FUNC       shift, and go to state 32
    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    ','        shift, and go to state 46
    '['        shift, and go to state 47
    '='        shift, and go to state 48

    qualified_name  go to state 49
    type_name       go to state 50
    primitive_type  go to state 51
    function_type   go to state 52
    array_type      go to state 53
    variable_type   go to state 54


State 17

   68 function_declaration: FUNC ID . '(' ')' code_block
   69                     | FUNC ID . '(' ')' return_type_list code_block
   70                     | FUNC ID . '(' parameter_list ')' code_block
   71                     | FUNC ID . '(' parameter_list ')' return_type_list code_block
   80 method_name: ID . '.' ID

    '.'  shift, and go to state 55
    '('  shift, and go to state 56


State 18

   76 method_declaration: FUNC method_name . '(' ')' code_block
   77                   | FUNC method_name . '(' ')' return_type_list code_block
   78                   | FUNC method_name . '(' parameter_list ')' code_block
   79                   | FUNC method_name . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 57


State 19

   48 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   49                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   50                 | TYPE ID . variable_type semicolons

    FUNC       shift, and go to state 32
    STRUCT     shift, and go to state 58
    INTERFACE  shift, and go to state 59
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 50
    primitive_type  go to state 51
    function_type   go to state 52
    array_type      go to state 53
    variable_type   go to state 60


State 20

    2 qualified_name: ID .

    $default  reduce using rule 2 (qualified_name)


State 21

    3 qualified_name: qualified_name . '.' ID
   35 package_statement: PACKAGE qualified_name . semicolons

    ';'  shift, and go to state 61
    '.'  shift, and go to state 62

    semicolons  go to state 63


State 22

    3 qualified_name: qualified_name . '.' ID
   38 import_statement: IMPORT qualified_name . semicolons
   39                 | IMPORT qualified_name . '.' '*' semicolons

    ';'  shift, and go to state 61
    '.'  shift, and go to state 64

    semicolons  go to state 65


State 23

    0 $accept: program $end .

    $default  accept


State 24

   28 program: package_statement import_statements . declarations
   29        | package_statement import_statements .
   37 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 29 (program)

    import_statement      go to state 26
    declarations          go to state 66
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 25

   30 program: package_statement declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 30 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 26

   37 import_statements: import_statements import_statement .

    $default  reduce using rule 37 (import_statements)


State 27

   31 program: import_statements declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 31 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 28

   41 declarations: declarations type_declaration .

    $default  reduce using rule 41 (declarations)


State 29

   45 declarations: declarations function_declaration .

    $default  reduce using rule 45 (declarations)


State 30

   47 declarations: declarations method_declaration .

    $default  reduce using rule 47 (declarations)


State 31

   43 declarations: declarations variable_declaration .

    $default  reduce using rule 43 (declarations)


State 32

   22 function_type: FUNC . '(' ')'
   23              | FUNC . '(' ')' return_type_list
   24              | FUNC . '(' parameter_type_list ')'
   25              | FUNC . '(' parameter_type_list ')' return_type_list

    '('  shift, and go to state 67


State 33

   21 primitive_type: INTERFACE . '{' '}'

    '{'  shift, and go to state 68


State 34

   13 primitive_type: INT8 .

    $default  reduce using rule 13 (primitive_type)


State 35

   14 primitive_type: INT16 .

    $default  reduce using rule 14 (primitive_type)


State 36

   15 primitive_type: INT32 .

    $default  reduce using rule 15 (primitive_type)


State 37

   16 primitive_type: INT64 .

    $default  reduce using rule 16 (primitive_type)


State 38

    9 primitive_type: UINT8 .

    $default  reduce using rule 9 (primitive_type)


State 39

   10 primitive_type: UINT16 .

    $default  reduce using rule 10 (primitive_type)


State 40

   11 primitive_type: UINT32 .

    $default  reduce using rule 11 (primitive_type)


State 41

   12 primitive_type: UINT64 .

    $default  reduce using rule 12 (primitive_type)


State 42

   17 primitive_type: FLOAT32 .

    $default  reduce using rule 17 (primitive_type)


State 43

   18 primitive_type: FLOAT64 .

    $default  reduce using rule 18 (primitive_type)


State 44

   19 primitive_type: BOOL .

    $default  reduce using rule 19 (primitive_type)


State 45

   20 primitive_type: STRING .

    $default  reduce using rule 20 (primitive_type)


State 46

  113 var_list: var_list ',' . ID

    ID  shift, and go to state 69


State 47

   26 array_type: '[' . INTEGER ']' type_name

    INTEGER  shift, and go to state 70


State 48

  110 variable_declaration: VAR var_list '=' . expression_list ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INTERFACE       shift, and go to state 33
    INT8            shift, and go to state 34
    INT16           shift, and go to state 35
    INT32           shift, and go to state 36
    INT64           shift, and go to state 37
    UINT8           shift, and go to state 38
    UINT16          shift, and go to state 39
    UINT32          shift, and go to state 40
    UINT64          shift, and go to state 41
    FLOAT32         shift, and go to state 42
    FLOAT64         shift, and go to state 43
    BOOL            shift, and go to state 44
    STRING          shift, and go to state 45
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '{'             shift, and go to state 81
    '('             shift, and go to state 82
    '['             shift, and go to state 47
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    literal_name                    go to state 93
    array_complex_primary           go to state 94
    array_access                    go to state 95
    field_access                    go to state 96
    method_call                     go to state 97
    method_access                   go to state 98
    initializer_expression          go to state 99
    struct_initializer              go to state 100
    postfix_expression              go to state 101
    real_postfix_expression         go to state 102
    unary_expression                go to state 103
    unary_operator                  go to state 104
    multiplicative_expression       go to state 105
    additive_expression             go to state 106
    shift_expression                go to state 107
    relational_expression           go to state 108
    equality_expression             go to state 109
    and_expression                  go to state 110
    exclusive_or_expression         go to state 111
    inclusive_or_expression         go to state 112
    logical_and_expression          go to state 113
    logical_or_expression           go to state 114
    expression                      go to state 115
    expressions                     go to state 116
    expression_list                 go to state 117


State 49

    3 qualified_name: qualified_name . '.' ID
    7 type_name: qualified_name .

    '.'  shift, and go to state 62

    $default  reduce using rule 7 (type_name)


State 50

  114 variable_type: type_name .

    $default  reduce using rule 114 (variable_type)


State 51

    6 type_name: primitive_type .

    $default  reduce using rule 6 (type_name)


State 52

  115 variable_type: function_type .

    $default  reduce using rule 115 (variable_type)


State 53

    8 type_name: array_type .

    $default  reduce using rule 8 (type_name)


State 54

  109 variable_declaration: VAR var_list variable_type . ';'
  111                     | VAR var_list variable_type . '=' expression_list ';'

    ';'  shift, and go to state 118
    '='  shift, and go to state 119


State 55

   80 method_name: ID '.' . ID

    ID  shift, and go to state 120


State 56

   68 function_declaration: FUNC ID '(' . ')' code_block
   69                     | FUNC ID '(' . ')' return_type_list code_block
   70                     | FUNC ID '(' . parameter_list ')' code_block
   71                     | FUNC ID '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 121
    ')'  shift, and go to state 122

    parameter_list  go to state 123


State 57

   76 method_declaration: FUNC method_name '(' . ')' code_block
   77                   | FUNC method_name '(' . ')' return_type_list code_block
   78                   | FUNC method_name '(' . parameter_list ')' code_block
   79                   | FUNC method_name '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 121
    ')'  shift, and go to state 124

    parameter_list  go to state 125


State 58

   48 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 126


State 59

   21 primitive_type: INTERFACE . '{' '}'
   49 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 127


State 60

   50 type_declaration: TYPE ID variable_type . semicolons

    ';'  shift, and go to state 61

    semicolons  go to state 128


State 61

    1 semicolons: ';' .

    $default  reduce using rule 1 (semicolons)


State 62

    3 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 129


State 63

   35 package_statement: PACKAGE qualified_name semicolons .

    $default  reduce using rule 35 (package_statement)


State 64

    3 qualified_name: qualified_name '.' . ID
   39 import_statement: IMPORT qualified_name '.' . '*' semicolons

    ID   shift, and go to state 129
    '*'  shift, and go to state 130


State 65

   38 import_statement: IMPORT qualified_name semicolons .

    $default  reduce using rule 38 (import_statement)


State 66

   28 program: package_statement import_statements declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 28 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 67

   22 function_type: FUNC '(' . ')'
   23              | FUNC '(' . ')' return_type_list
   24              | FUNC '(' . parameter_type_list ')'
   25              | FUNC '(' . parameter_type_list ')' return_type_list

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    ')'        shift, and go to state 131
    '['        shift, and go to state 47

    qualified_name       go to state 49
    type_name            go to state 132
    primitive_type       go to state 51
    array_type           go to state 53
    parameter_type_list  go to state 133


State 68

   21 primitive_type: INTERFACE '{' . '}'

    '}'  shift, and go to state 134


State 69

  113 var_list: var_list ',' ID .

    $default  reduce using rule 113 (var_list)


State 70

   26 array_type: '[' INTEGER . ']' type_name

    ']'  shift, and go to state 135


State 71

  159 unary_expression: INC . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name           go to state 136
    primary_expression       go to state 90
    just_not_name            go to state 91
    complex_primary          go to state 92
    literal_name             go to state 93
    array_complex_primary    go to state 94
    array_access             go to state 95
    field_access             go to state 96
    method_call              go to state 97
    method_access            go to state 98
    postfix_expression       go to state 101
    real_postfix_expression  go to state 102
    unary_expression         go to state 137
    unary_operator           go to state 104


State 72

  160 unary_expression: DEC . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name           go to state 136
    primary_expression       go to state 90
    just_not_name            go to state 91
    complex_primary          go to state 92
    literal_name             go to state 93
    array_complex_primary    go to state 94
    array_access             go to state 95
    field_access             go to state 96
    method_call              go to state 97
    method_access            go to state 98
    postfix_expression       go to state 101
    real_postfix_expression  go to state 102
    unary_expression         go to state 138
    unary_operator           go to state 104


State 73

  119 just_not_name: TOKEN_THIS .

    $default  reduce using rule 119 (just_not_name)


State 74

   72 anonymous_function_declaration: FUNC . '(' ')' code_block
   73                               | FUNC . '(' ')' return_type_list code_block
   74                               | FUNC . '(' parameter_list ')' code_block
   75                               | FUNC . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 139


State 75

  128 literal_name: TOKEN_NIL .

    $default  reduce using rule 128 (literal_name)


State 76

  129 literal_name: TOKEN_TRUE .

    $default  reduce using rule 129 (literal_name)


State 77

  130 literal_name: TOKEN_FALSE .

    $default  reduce using rule 130 (literal_name)


State 78

  125 literal_name: INTEGER .

    $default  reduce using rule 125 (literal_name)


State 79

  126 literal_name: FLOAT .

    $default  reduce using rule 126 (literal_name)


State 80

  127 literal_name: STRING_LITERAL .

    $default  reduce using rule 127 (literal_name)


State 81

  144 struct_initializer: '{' . '}'
  145                   | '{' . expression_list '}'
  146                   | '{' . field_initializer_list '}'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INTERFACE       shift, and go to state 33
    INT8            shift, and go to state 34
    INT16           shift, and go to state 35
    INT32           shift, and go to state 36
    INT64           shift, and go to state 37
    UINT8           shift, and go to state 38
    UINT16          shift, and go to state 39
    UINT32          shift, and go to state 40
    UINT64          shift, and go to state 41
    FLOAT32         shift, and go to state 42
    FLOAT64         shift, and go to state 43
    BOOL            shift, and go to state 44
    STRING          shift, and go to state 45
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 140
    '{'             shift, and go to state 81
    '}'             shift, and go to state 141
    '('             shift, and go to state 82
    '['             shift, and go to state 47
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    field_name                      go to state 142
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    literal_name                    go to state 93
    array_complex_primary           go to state 94
    array_access                    go to state 95
    field_access                    go to state 96
    method_call                     go to state 97
    method_access                   go to state 98
    initializer_expression          go to state 99
    struct_initializer              go to state 100
    field_initializer_list          go to state 143
    field_initializer               go to state 144
    postfix_expression              go to state 101
    real_postfix_expression         go to state 102
    unary_expression                go to state 103
    unary_operator                  go to state 104
    multiplicative_expression       go to state 105
    additive_expression             go to state 106
    shift_expression                go to state 107
    relational_expression           go to state 108
    equality_expression             go to state 109
    and_expression                  go to state 110
    exclusive_or_expression         go to state 111
    inclusive_or_expression         go to state 112
    logical_and_expression          go to state 113
    logical_or_expression           go to state 114
    expression                      go to state 115
    expressions                     go to state 116
    expression_list                 go to state 145


State 82

  120 just_not_name: '(' . expression ')'
  131 array_complex_primary: '(' . expression ')'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 146


State 83

  162 unary_operator: '+' .

    $default  reduce using rule 162 (unary_operator)


State 84

  163 unary_operator: '-' .

    $default  reduce using rule 163 (unary_operator)


State 85

  164 unary_operator: '~' .

    $default  reduce using rule 164 (unary_operator)


State 86

  165 unary_operator: '!' .

    $default  reduce using rule 165 (unary_operator)


State 87

    3 qualified_name: qualified_name . '.' ID
    7 type_name: qualified_name .
  116 primary_expression: qualified_name .
  135 array_access: qualified_name . '[' expression ']'
  141 method_access: qualified_name .

    '.'  shift, and go to state 62
    '['  shift, and go to state 147

    '{'       reduce using rule 7 (type_name)
    '('       reduce using rule 141 (method_access)
    $default  reduce using rule 116 (primary_expression)


State 88

  147 struct_initializer: type_name . '{' '}'
  148                   | type_name . '{' expression_list '}'
  149                   | type_name . '{' field_initializer_list '}'

    '{'  shift, and go to state 148


State 89

  143 initializer_expression: anonymous_function_declaration .

    $default  reduce using rule 143 (initializer_expression)


State 90

  153 postfix_expression: primary_expression .

    $default  reduce using rule 153 (postfix_expression)


State 91

  118 primary_expression: just_not_name .
  137 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 149

    $default  reduce using rule 118 (primary_expression)


State 92

  121 just_not_name: complex_primary .
  140 method_access: complex_primary .

    '('       reduce using rule 140 (method_access)
    $default  reduce using rule 121 (just_not_name)


State 93

  117 primary_expression: literal_name .

    $default  reduce using rule 117 (primary_expression)


State 94

  136 array_access: array_complex_primary . '[' expression ']'

    '['  shift, and go to state 150


State 95

  122 complex_primary: array_access .
  132 array_complex_primary: array_access .

    '['       reduce using rule 132 (array_complex_primary)
    $default  reduce using rule 122 (complex_primary)


State 96

  123 complex_primary: field_access .
  133 array_complex_primary: field_access .

    '['       reduce using rule 133 (array_complex_primary)
    $default  reduce using rule 123 (complex_primary)


State 97

  124 complex_primary: method_call .
  134 array_complex_primary: method_call .

    '['       reduce using rule 134 (array_complex_primary)
    $default  reduce using rule 124 (complex_primary)


State 98

  138 method_call: method_access . '(' argument_list ')'
  139            | method_access . '(' ')'

    '('  shift, and go to state 151


State 99

  196 expressions: initializer_expression .

    $default  reduce using rule 196 (expressions)


State 100

  142 initializer_expression: struct_initializer .

    $default  reduce using rule 142 (initializer_expression)


State 101

  155 real_postfix_expression: postfix_expression . INC
  156                        | postfix_expression . DEC
  158 unary_expression: postfix_expression .

    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 158 (unary_expression)


State 102

  154 postfix_expression: real_postfix_expression .

    $default  reduce using rule 154 (postfix_expression)


State 103

  166 multiplicative_expression: unary_expression .

    $default  reduce using rule 166 (multiplicative_expression)


State 104

  161 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name           go to state 136
    primary_expression       go to state 90
    just_not_name            go to state 91
    complex_primary          go to state 92
    literal_name             go to state 93
    array_complex_primary    go to state 94
    array_access             go to state 95
    field_access             go to state 96
    method_call              go to state 97
    method_access            go to state 98
    postfix_expression       go to state 101
    real_postfix_expression  go to state 102
    unary_expression         go to state 154
    unary_operator           go to state 104


State 105

  167 multiplicative_expression: multiplicative_expression . '*' unary_expression
  168                          | multiplicative_expression . '/' unary_expression
  169                          | multiplicative_expression . '%' unary_expression
  170 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 170 (additive_expression)


State 106

  171 additive_expression: additive_expression . '+' multiplicative_expression
  172                    | additive_expression . '-' multiplicative_expression
  173 shift_expression: additive_expression .

    '+'  shift, and go to state 158
    '-'  shift, and go to state 159

    $default  reduce using rule 173 (shift_expression)


State 107

  174 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  175                 | shift_expression . SHIFT_RIGHT additive_expression
  176 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 160
    SHIFT_RIGHT  shift, and go to state 161

    $default  reduce using rule 176 (relational_expression)


State 108

  177 relational_expression: relational_expression . '<' shift_expression
  178                      | relational_expression . '>' shift_expression
  179                      | relational_expression . LE shift_expression
  180                      | relational_expression . GE shift_expression
  181 equality_expression: relational_expression .

    GE   shift, and go to state 162
    LE   shift, and go to state 163
    '<'  shift, and go to state 164
    '>'  shift, and go to state 165

    $default  reduce using rule 181 (equality_expression)


State 109

  182 equality_expression: equality_expression . EQ relational_expression
  183                    | equality_expression . NE relational_expression
  184 and_expression: equality_expression .

    EQ  shift, and go to state 166
    NE  shift, and go to state 167

    $default  reduce using rule 184 (and_expression)


State 110

  185 and_expression: and_expression . '&' equality_expression
  186 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 168

    $default  reduce using rule 186 (exclusive_or_expression)


State 111

  187 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  188 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 169

    $default  reduce using rule 188 (inclusive_or_expression)


State 112

  189 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  190 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 170

    $default  reduce using rule 190 (logical_and_expression)


State 113

  191 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  192 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 171

    $default  reduce using rule 192 (logical_or_expression)


State 114

  193 logical_or_expression: logical_or_expression . OR logical_and_expression
  194 expression: logical_or_expression .

    OR  shift, and go to state 172

    $default  reduce using rule 194 (expression)


State 115

  195 expressions: expression .

    $default  reduce using rule 195 (expressions)


State 116

  197 expression_list: expressions .

    $default  reduce using rule 197 (expression_list)


State 117

  110 variable_declaration: VAR var_list '=' expression_list . ';'
  198 expression_list: expression_list . ',' expressions

    ';'  shift, and go to state 173
    ','  shift, and go to state 174


State 118

  109 variable_declaration: VAR var_list variable_type ';' .

    $default  reduce using rule 109 (variable_declaration)


State 119

  111 variable_declaration: VAR var_list variable_type '=' . expression_list ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INTERFACE       shift, and go to state 33
    INT8            shift, and go to state 34
    INT16           shift, and go to state 35
    INT32           shift, and go to state 36
    INT64           shift, and go to state 37
    UINT8           shift, and go to state 38
    UINT16          shift, and go to state 39
    UINT32          shift, and go to state 40
    UINT64          shift, and go to state 41
    FLOAT32         shift, and go to state 42
    FLOAT64         shift, and go to state 43
    BOOL            shift, and go to state 44
    STRING          shift, and go to state 45
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '{'             shift, and go to state 81
    '('             shift, and go to state 82
    '['             shift, and go to state 47
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    literal_name                    go to state 93
    array_complex_primary           go to state 94
    array_access                    go to state 95
    field_access                    go to state 96
    method_call                     go to state 97
    method_access                   go to state 98
    initializer_expression          go to state 99
    struct_initializer              go to state 100
    postfix_expression              go to state 101
    real_postfix_expression         go to state 102
    unary_expression                go to state 103
    unary_operator                  go to state 104
    multiplicative_expression       go to state 105
    additive_expression             go to state 106
    shift_expression                go to state 107
    relational_expression           go to state 108
    equality_expression             go to state 109
    and_expression                  go to state 110
    exclusive_or_expression         go to state 111
    inclusive_or_expression         go to state 112
    logical_and_expression          go to state 113
    logical_or_expression           go to state 114
    expression                      go to state 115
    expressions                     go to state 116
    expression_list                 go to state 175


State 120

   80 method_name: ID '.' ID .

    $default  reduce using rule 80 (method_name)


State 121

   66 parameter_list: ID . type_name

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 176
    primitive_type  go to state 51
    array_type      go to state 53


State 122

   68 function_declaration: FUNC ID '(' ')' . code_block
   69                     | FUNC ID '(' ')' . return_type_list code_block

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '{'        shift, and go to state 177
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 180
    code_block        go to state 181


State 123

   67 parameter_list: parameter_list . ',' ID type_name
   70 function_declaration: FUNC ID '(' parameter_list . ')' code_block
   71                     | FUNC ID '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 182
    ')'  shift, and go to state 183


State 124

   76 method_declaration: FUNC method_name '(' ')' . code_block
   77                   | FUNC method_name '(' ')' . return_type_list code_block

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '{'        shift, and go to state 177
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 184
    code_block        go to state 185


State 125

   67 parameter_list: parameter_list . ',' ID type_name
   78 method_declaration: FUNC method_name '(' parameter_list . ')' code_block
   79                   | FUNC method_name '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 182
    ')'  shift, and go to state 186


State 126

   48 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 187

    field_declarations  go to state 188
    field_declaration   go to state 189


State 127

   21 primitive_type: INTERFACE '{' . '}'
   49 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    ID   shift, and go to state 190
    '}'  shift, and go to state 134

    interface_function_declarations  go to state 191
    interface_function_declaration   go to state 192


State 128

   50 type_declaration: TYPE ID variable_type semicolons .

    $default  reduce using rule 50 (type_declaration)


State 129

    3 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 3 (qualified_name)


State 130

   39 import_statement: IMPORT qualified_name '.' '*' . semicolons

    ';'  shift, and go to state 61

    semicolons  go to state 193


State 131

   22 function_type: FUNC '(' ')' .
   23              | FUNC '(' ')' . return_type_list

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    $default  reduce using rule 22 (function_type)

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 194


State 132

   64 parameter_type_list: type_name .

    $default  reduce using rule 64 (parameter_type_list)


State 133

   24 function_type: FUNC '(' parameter_type_list . ')'
   25              | FUNC '(' parameter_type_list . ')' return_type_list
   65 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 195
    ')'  shift, and go to state 196


State 134

   21 primitive_type: INTERFACE '{' '}' .

    $default  reduce using rule 21 (primitive_type)


State 135

   26 array_type: '[' INTEGER ']' . type_name

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 197
    primitive_type  go to state 51
    array_type      go to state 53


State 136

    3 qualified_name: qualified_name . '.' ID
  116 primary_expression: qualified_name .
  135 array_access: qualified_name . '[' expression ']'
  141 method_access: qualified_name .

    '.'  shift, and go to state 62
    '['  shift, and go to state 147

    '('       reduce using rule 141 (method_access)
    $default  reduce using rule 116 (primary_expression)


State 137

  159 unary_expression: INC unary_expression .

    $default  reduce using rule 159 (unary_expression)


State 138

  160 unary_expression: DEC unary_expression .

    $default  reduce using rule 160 (unary_expression)


State 139

   72 anonymous_function_declaration: FUNC '(' . ')' code_block
   73                               | FUNC '(' . ')' return_type_list code_block
   74                               | FUNC '(' . parameter_list ')' code_block
   75                               | FUNC '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 121
    ')'  shift, and go to state 198

    parameter_list  go to state 199


State 140

    2 qualified_name: ID .
   27 field_name: ID .

    ':'       reduce using rule 27 (field_name)
    $default  reduce using rule 2 (qualified_name)


State 141

  144 struct_initializer: '{' '}' .

    $default  reduce using rule 144 (struct_initializer)


State 142

  152 field_initializer: field_name . ':' expression

    ':'  shift, and go to state 200


State 143

  146 struct_initializer: '{' field_initializer_list . '}'
  151 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 201
    '}'  shift, and go to state 202


State 144

  150 field_initializer_list: field_initializer .

    $default  reduce using rule 150 (field_initializer_list)


State 145

  145 struct_initializer: '{' expression_list . '}'
  198 expression_list: expression_list . ',' expressions

    ','  shift, and go to state 174
    '}'  shift, and go to state 203


State 146

  120 just_not_name: '(' expression . ')'
  131 array_complex_primary: '(' expression . ')'

    ')'  shift, and go to state 204


State 147

  135 array_access: qualified_name '[' . expression ']'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 205


State 148

  147 struct_initializer: type_name '{' . '}'
  148                   | type_name '{' . expression_list '}'
  149                   | type_name '{' . field_initializer_list '}'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INTERFACE       shift, and go to state 33
    INT8            shift, and go to state 34
    INT16           shift, and go to state 35
    INT32           shift, and go to state 36
    INT64           shift, and go to state 37
    UINT8           shift, and go to state 38
    UINT16          shift, and go to state 39
    UINT32          shift, and go to state 40
    UINT64          shift, and go to state 41
    FLOAT32         shift, and go to state 42
    FLOAT64         shift, and go to state 43
    BOOL            shift, and go to state 44
    STRING          shift, and go to state 45
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 140
    '{'             shift, and go to state 81
    '}'             shift, and go to state 206
    '('             shift, and go to state 82
    '['             shift, and go to state 47
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    field_name                      go to state 142
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    literal_name                    go to state 93
    array_complex_primary           go to state 94
    array_access                    go to state 95
    field_access                    go to state 96
    method_call                     go to state 97
    method_access                   go to state 98
    initializer_expression          go to state 99
    struct_initializer              go to state 100
    field_initializer_list          go to state 207
    field_initializer               go to state 144
    postfix_expression              go to state 101
    real_postfix_expression         go to state 102
    unary_expression                go to state 103
    unary_operator                  go to state 104
    multiplicative_expression       go to state 105
    additive_expression             go to state 106
    shift_expression                go to state 107
    relational_expression           go to state 108
    equality_expression             go to state 109
    and_expression                  go to state 110
    exclusive_or_expression         go to state 111
    inclusive_or_expression         go to state 112
    logical_and_expression          go to state 113
    logical_or_expression           go to state 114
    expression                      go to state 115
    expressions                     go to state 116
    expression_list                 go to state 208


State 149

  137 field_access: just_not_name '.' . ID

    ID  shift, and go to state 209


State 150

  136 array_access: array_complex_primary '[' . expression ']'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 210


State 151

  138 method_call: method_access '(' . argument_list ')'
  139            | method_access '(' . ')'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INTERFACE       shift, and go to state 33
    INT8            shift, and go to state 34
    INT16           shift, and go to state 35
    INT32           shift, and go to state 36
    INT64           shift, and go to state 37
    UINT8           shift, and go to state 38
    UINT16          shift, and go to state 39
    UINT32          shift, and go to state 40
    UINT64          shift, and go to state 41
    FLOAT32         shift, and go to state 42
    FLOAT64         shift, and go to state 43
    BOOL            shift, and go to state 44
    STRING          shift, and go to state 45
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '{'             shift, and go to state 81
    '('             shift, and go to state 82
    ')'             shift, and go to state 211
    '['             shift, and go to state 47
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    literal_name                    go to state 93
    array_complex_primary           go to state 94
    array_access                    go to state 95
    field_access                    go to state 96
    method_call                     go to state 97
    method_access                   go to state 98
    initializer_expression          go to state 99
    struct_initializer              go to state 100
    postfix_expression              go to state 101
    real_postfix_expression         go to state 102
    argument_list                   go to state 212
    unary_expression                go to state 103
    unary_operator                  go to state 104
    multiplicative_expression       go to state 105
    additive_expression             go to state 106
    shift_expression                go to state 107
    relational_expression           go to state 108
    equality_expression             go to state 109
    and_expression                  go to state 110
    exclusive_or_expression         go to state 111
    inclusive_or_expression         go to state 112
    logical_and_expression          go to state 113
    logical_or_expression           go to state 114
    expression                      go to state 115
    expressions                     go to state 116
    expression_list                 go to state 213


State 152

  155 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 155 (real_postfix_expression)


State 153

  156 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 156 (real_postfix_expression)


State 154

  161 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 161 (unary_expression)


State 155

  167 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name           go to state 136
    primary_expression       go to state 90
    just_not_name            go to state 91
    complex_primary          go to state 92
    literal_name             go to state 93
    array_complex_primary    go to state 94
    array_access             go to state 95
    field_access             go to state 96
    method_call              go to state 97
    method_access            go to state 98
    postfix_expression       go to state 101
    real_postfix_expression  go to state 102
    unary_expression         go to state 214
    unary_operator           go to state 104


State 156

  168 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name           go to state 136
    primary_expression       go to state 90
    just_not_name            go to state 91
    complex_primary          go to state 92
    literal_name             go to state 93
    array_complex_primary    go to state 94
    array_access             go to state 95
    field_access             go to state 96
    method_call              go to state 97
    method_access            go to state 98
    postfix_expression       go to state 101
    real_postfix_expression  go to state 102
    unary_expression         go to state 215
    unary_operator           go to state 104


State 157

  169 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name           go to state 136
    primary_expression       go to state 90
    just_not_name            go to state 91
    complex_primary          go to state 92
    literal_name             go to state 93
    array_complex_primary    go to state 94
    array_access             go to state 95
    field_access             go to state 96
    method_call              go to state 97
    method_access            go to state 98
    postfix_expression       go to state 101
    real_postfix_expression  go to state 102
    unary_expression         go to state 216
    unary_operator           go to state 104


State 158

  171 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 217


State 159

  172 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 218


State 160

  174 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 219


State 161

  175 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 220


State 162

  180 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 221


State 163

  179 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 222


State 164

  177 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 223


State 165

  178 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 224


State 166

  182 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 225


State 167

  183 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 226


State 168

  185 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 227


State 169

  187 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 228


State 170

  189 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 229


State 171

  191 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 230


State 172

  193 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 231


State 173

  110 variable_declaration: VAR var_list '=' expression_list ';' .

    $default  reduce using rule 110 (variable_declaration)


State 174

  198 expression_list: expression_list ',' . expressions

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INTERFACE       shift, and go to state 33
    INT8            shift, and go to state 34
    INT16           shift, and go to state 35
    INT32           shift, and go to state 36
    INT64           shift, and go to state 37
    UINT8           shift, and go to state 38
    UINT16          shift, and go to state 39
    UINT32          shift, and go to state 40
    UINT64          shift, and go to state 41
    FLOAT32         shift, and go to state 42
    FLOAT64         shift, and go to state 43
    BOOL            shift, and go to state 44
    STRING          shift, and go to state 45
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '{'             shift, and go to state 81
    '('             shift, and go to state 82
    '['             shift, and go to state 47
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    literal_name                    go to state 93
    array_complex_primary           go to state 94
    array_access                    go to state 95
    field_access                    go to state 96
    method_call                     go to state 97
    method_access                   go to state 98
    initializer_expression          go to state 99
    struct_initializer              go to state 100
    postfix_expression              go to state 101
    real_postfix_expression         go to state 102
    unary_expression                go to state 103
    unary_operator                  go to state 104
    multiplicative_expression       go to state 105
    additive_expression             go to state 106
    shift_expression                go to state 107
    relational_expression           go to state 108
    equality_expression             go to state 109
    and_expression                  go to state 110
    exclusive_or_expression         go to state 111
    inclusive_or_expression         go to state 112
    logical_and_expression          go to state 113
    logical_or_expression           go to state 114
    expression                      go to state 115
    expressions                     go to state 232


State 175

  111 variable_declaration: VAR var_list variable_type '=' expression_list . ';'
  198 expression_list: expression_list . ',' expressions

    ';'  shift, and go to state 233
    ','  shift, and go to state 174


State 176

   66 parameter_list: ID type_name .

    $default  reduce using rule 66 (parameter_list)


State 177

   81 code_block: '{' . local_variable_declaration_statements '}'
   82           | '{' . '}'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    IF              shift, and go to state 234
    WHILE           shift, and go to state 235
    DO              shift, and go to state 236
    FOR             shift, and go to state 237
    SWITCH          shift, and go to state 238
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 239
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '}'             shift, and go to state 240
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                         go to state 241
    local_variable_declaration_statements  go to state 242
    local_variable_declaration_statement   go to state 243
    statemnet                              go to state 244
    selection_statement                    go to state 245
    if_statement                           go to state 246
    switch_statement                       go to state 247
    iteration_statemnet                    go to state 248
    jump_statement                         go to state 249
    variable_declaration                   go to state 250
    primary_expression                     go to state 90
    just_not_name                          go to state 91
    complex_primary                        go to state 92
    literal_name                           go to state 93
    array_complex_primary                  go to state 94
    array_access                           go to state 251
    field_access                           go to state 252
    method_call                            go to state 97
    method_access                          go to state 98
    postfix_expression                     go to state 101
    real_postfix_expression                go to state 102
    unary_expression                       go to state 103
    unary_operator                         go to state 104
    multiplicative_expression              go to state 105
    additive_expression                    go to state 106
    shift_expression                       go to state 107
    relational_expression                  go to state 108
    equality_expression                    go to state 109
    and_expression                         go to state 110
    exclusive_or_expression                go to state 111
    inclusive_or_expression                go to state 112
    logical_and_expression                 go to state 113
    logical_or_expression                  go to state 114
    expression                             go to state 253
    assignment_expression                  go to state 254
    assignment_variable_list               go to state 255
    assignment_variable                    go to state 256
    expression_statement                   go to state 257


State 178

   63 return_type_list: '(' . type_name_list ')'

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    qualified_name  go to state 49
    type_name_list  go to state 258
    type_name       go to state 259
    primitive_type  go to state 51
    array_type      go to state 53


State 179

   62 return_type_list: type_name .

    $default  reduce using rule 62 (return_type_list)


State 180

   69 function_declaration: FUNC ID '(' ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 260


State 181

   68 function_declaration: FUNC ID '(' ')' code_block .

    $default  reduce using rule 68 (function_declaration)


State 182

   67 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 261


State 183

   70 function_declaration: FUNC ID '(' parameter_list ')' . code_block
   71                     | FUNC ID '(' parameter_list ')' . return_type_list code_block

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '{'        shift, and go to state 177
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 262
    code_block        go to state 263


State 184

   77 method_declaration: FUNC method_name '(' ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 264


State 185

   76 method_declaration: FUNC method_name '(' ')' code_block .

    $default  reduce using rule 76 (method_declaration)


State 186

   78 method_declaration: FUNC method_name '(' parameter_list ')' . code_block
   79                   | FUNC method_name '(' parameter_list ')' . return_type_list code_block

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '{'        shift, and go to state 177
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 265
    code_block        go to state 266


State 187

   53 field_declaration: ID . type_name semicolons

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 267
    primitive_type  go to state 51
    array_type      go to state 53


State 188

   48 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   52 field_declarations: field_declarations . field_declaration

    ID   shift, and go to state 187
    '}'  shift, and go to state 268

    field_declaration  go to state 269


State 189

   51 field_declarations: field_declaration .

    $default  reduce using rule 51 (field_declarations)


State 190

   56 interface_function_declaration: ID . '(' ')' semicolons
   57                               | ID . '(' ')' return_type_list semicolons
   58                               | ID . '(' parameter_type_list ')' semicolons
   59                               | ID . '(' parameter_type_list ')' return_type_list semicolons
   60                               | ID . '(' parameter_list ')' semicolons
   61                               | ID . '(' parameter_list ')' return_type_list semicolons

    '('  shift, and go to state 270


State 191

   49 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   55 interface_function_declarations: interface_function_declarations . interface_function_declaration

    ID   shift, and go to state 190
    '}'  shift, and go to state 271

    interface_function_declaration  go to state 272


State 192

   54 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 54 (interface_function_declarations)


State 193

   39 import_statement: IMPORT qualified_name '.' '*' semicolons .

    $default  reduce using rule 39 (import_statement)


State 194

   23 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 23 (function_type)


State 195

   65 parameter_type_list: parameter_type_list ',' . type_name

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 273
    primitive_type  go to state 51
    array_type      go to state 53


State 196

   24 function_type: FUNC '(' parameter_type_list ')' .
   25              | FUNC '(' parameter_type_list ')' . return_type_list

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    $default  reduce using rule 24 (function_type)

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 274


State 197

   26 array_type: '[' INTEGER ']' type_name .

    $default  reduce using rule 26 (array_type)


State 198

   72 anonymous_function_declaration: FUNC '(' ')' . code_block
   73                               | FUNC '(' ')' . return_type_list code_block

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '{'        shift, and go to state 177
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 275
    code_block        go to state 276


State 199

   67 parameter_list: parameter_list . ',' ID type_name
   74 anonymous_function_declaration: FUNC '(' parameter_list . ')' code_block
   75                               | FUNC '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 182
    ')'  shift, and go to state 277


State 200

  152 field_initializer: field_name ':' . expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 278


State 201

  151 field_initializer_list: field_initializer_list ',' . field_initializer

    ID  shift, and go to state 279

    field_name         go to state 142
    field_initializer  go to state 280


State 202

  146 struct_initializer: '{' field_initializer_list '}' .

    $default  reduce using rule 146 (struct_initializer)


State 203

  145 struct_initializer: '{' expression_list '}' .

    $default  reduce using rule 145 (struct_initializer)


State 204

  120 just_not_name: '(' expression ')' .
  131 array_complex_primary: '(' expression ')' .

    '['       reduce using rule 131 (array_complex_primary)
    $default  reduce using rule 120 (just_not_name)


State 205

  135 array_access: qualified_name '[' expression . ']'

    ']'  shift, and go to state 281


State 206

  147 struct_initializer: type_name '{' '}' .

    $default  reduce using rule 147 (struct_initializer)


State 207

  149 struct_initializer: type_name '{' field_initializer_list . '}'
  151 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 201
    '}'  shift, and go to state 282


State 208

  148 struct_initializer: type_name '{' expression_list . '}'
  198 expression_list: expression_list . ',' expressions

    ','  shift, and go to state 174
    '}'  shift, and go to state 283


State 209

  137 field_access: just_not_name '.' ID .

    $default  reduce using rule 137 (field_access)


State 210

  136 array_access: array_complex_primary '[' expression . ']'

    ']'  shift, and go to state 284


State 211

  139 method_call: method_access '(' ')' .

    $default  reduce using rule 139 (method_call)


State 212

  138 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 285


State 213

  157 argument_list: expression_list .
  198 expression_list: expression_list . ',' expressions

    ','  shift, and go to state 174

    $default  reduce using rule 157 (argument_list)


State 214

  167 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 167 (multiplicative_expression)


State 215

  168 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 168 (multiplicative_expression)


State 216

  169 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 169 (multiplicative_expression)


State 217

  167 multiplicative_expression: multiplicative_expression . '*' unary_expression
  168                          | multiplicative_expression . '/' unary_expression
  169                          | multiplicative_expression . '%' unary_expression
  171 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 171 (additive_expression)


State 218

  167 multiplicative_expression: multiplicative_expression . '*' unary_expression
  168                          | multiplicative_expression . '/' unary_expression
  169                          | multiplicative_expression . '%' unary_expression
  172 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 172 (additive_expression)


State 219

  171 additive_expression: additive_expression . '+' multiplicative_expression
  172                    | additive_expression . '-' multiplicative_expression
  174 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 158
    '-'  shift, and go to state 159

    $default  reduce using rule 174 (shift_expression)


State 220

  171 additive_expression: additive_expression . '+' multiplicative_expression
  172                    | additive_expression . '-' multiplicative_expression
  175 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 158
    '-'  shift, and go to state 159

    $default  reduce using rule 175 (shift_expression)


State 221

  174 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  175                 | shift_expression . SHIFT_RIGHT additive_expression
  180 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 160
    SHIFT_RIGHT  shift, and go to state 161

    $default  reduce using rule 180 (relational_expression)


State 222

  174 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  175                 | shift_expression . SHIFT_RIGHT additive_expression
  179 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 160
    SHIFT_RIGHT  shift, and go to state 161

    $default  reduce using rule 179 (relational_expression)


State 223

  174 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  175                 | shift_expression . SHIFT_RIGHT additive_expression
  177 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 160
    SHIFT_RIGHT  shift, and go to state 161

    $default  reduce using rule 177 (relational_expression)


State 224

  174 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  175                 | shift_expression . SHIFT_RIGHT additive_expression
  178 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 160
    SHIFT_RIGHT  shift, and go to state 161

    $default  reduce using rule 178 (relational_expression)


State 225

  177 relational_expression: relational_expression . '<' shift_expression
  178                      | relational_expression . '>' shift_expression
  179                      | relational_expression . LE shift_expression
  180                      | relational_expression . GE shift_expression
  182 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 162
    LE   shift, and go to state 163
    '<'  shift, and go to state 164
    '>'  shift, and go to state 165

    $default  reduce using rule 182 (equality_expression)


State 226

  177 relational_expression: relational_expression . '<' shift_expression
  178                      | relational_expression . '>' shift_expression
  179                      | relational_expression . LE shift_expression
  180                      | relational_expression . GE shift_expression
  183 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 162
    LE   shift, and go to state 163
    '<'  shift, and go to state 164
    '>'  shift, and go to state 165

    $default  reduce using rule 183 (equality_expression)


State 227

  182 equality_expression: equality_expression . EQ relational_expression
  183                    | equality_expression . NE relational_expression
  185 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 166
    NE  shift, and go to state 167

    $default  reduce using rule 185 (and_expression)


State 228

  185 and_expression: and_expression . '&' equality_expression
  187 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 168

    $default  reduce using rule 187 (exclusive_or_expression)


State 229

  187 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  189 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 169

    $default  reduce using rule 189 (inclusive_or_expression)


State 230

  189 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  191 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 170

    $default  reduce using rule 191 (logical_and_expression)


State 231

  191 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  193 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 171

    $default  reduce using rule 193 (logical_or_expression)


State 232

  198 expression_list: expression_list ',' expressions .

    $default  reduce using rule 198 (expression_list)


State 233

  111 variable_declaration: VAR var_list variable_type '=' expression_list ';' .

    $default  reduce using rule 111 (variable_declaration)


State 234

   93 if_statement: IF . '(' expression ')' code_block
   94             | IF . '(' expression ')' code_block ELSE else_statemnet

    '('  shift, and go to state 286


State 235

   98 iteration_statemnet: WHILE . '(' expression ')' code_block

    '('  shift, and go to state 287


State 236

   99 iteration_statemnet: DO . code_block WHILE '(' expression ')' ';'

    '{'  shift, and go to state 177

    code_block  go to state 288


State 237

  100 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' code_block

    '('  shift, and go to state 289


State 238

   97 switch_statement: SWITCH . '(' expression ')' code_block

    '('  shift, and go to state 290


State 239

  107 jump_statement: RETURN . ';'
  108               | RETURN . expression_list ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INTERFACE       shift, and go to state 33
    INT8            shift, and go to state 34
    INT16           shift, and go to state 35
    INT32           shift, and go to state 36
    INT64           shift, and go to state 37
    UINT8           shift, and go to state 38
    UINT16          shift, and go to state 39
    UINT32          shift, and go to state 40
    UINT64          shift, and go to state 41
    FLOAT32         shift, and go to state 42
    FLOAT64         shift, and go to state 43
    BOOL            shift, and go to state 44
    STRING          shift, and go to state 45
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    ';'             shift, and go to state 291
    '{'             shift, and go to state 81
    '('             shift, and go to state 82
    '['             shift, and go to state 47
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    literal_name                    go to state 93
    array_complex_primary           go to state 94
    array_access                    go to state 95
    field_access                    go to state 96
    method_call                     go to state 97
    method_access                   go to state 98
    initializer_expression          go to state 99
    struct_initializer              go to state 100
    postfix_expression              go to state 101
    real_postfix_expression         go to state 102
    unary_expression                go to state 103
    unary_operator                  go to state 104
    multiplicative_expression       go to state 105
    additive_expression             go to state 106
    shift_expression                go to state 107
    relational_expression           go to state 108
    equality_expression             go to state 109
    and_expression                  go to state 110
    exclusive_or_expression         go to state 111
    inclusive_or_expression         go to state 112
    logical_and_expression          go to state 113
    logical_or_expression           go to state 114
    expression                      go to state 115
    expressions                     go to state 116
    expression_list                 go to state 292


State 240

   82 code_block: '{' '}' .

    $default  reduce using rule 82 (code_block)


State 241

    3 qualified_name: qualified_name . '.' ID
  116 primary_expression: qualified_name .
  135 array_access: qualified_name . '[' expression ']'
  141 method_access: qualified_name .
  203 assignment_variable: qualified_name .

    '.'  shift, and go to state 62
    '['  shift, and go to state 147

    ADD_ASSIGN    reduce using rule 203 (assignment_variable)
    SUB_ASSIGN    reduce using rule 203 (assignment_variable)
    MUL_ASSIGN    reduce using rule 203 (assignment_variable)
    DIV_ASSIGN    reduce using rule 203 (assignment_variable)
    MOD_ASSIGN    reduce using rule 203 (assignment_variable)
    AND_ASSIGN    reduce using rule 203 (assignment_variable)
    OR_ASSIGN     reduce using rule 203 (assignment_variable)
    XOR_ASSIGN    reduce using rule 203 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 203 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 203 (assignment_variable)
    ','           reduce using rule 203 (assignment_variable)
    '('           reduce using rule 141 (method_access)
    '='           reduce using rule 203 (assignment_variable)
    $default      reduce using rule 116 (primary_expression)


State 242

   81 code_block: '{' local_variable_declaration_statements . '}'
   84 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    IF              shift, and go to state 234
    WHILE           shift, and go to state 235
    DO              shift, and go to state 236
    FOR             shift, and go to state 237
    SWITCH          shift, and go to state 238
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 239
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '}'             shift, and go to state 293
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                        go to state 241
    local_variable_declaration_statement  go to state 294
    statemnet                             go to state 244
    selection_statement                   go to state 245
    if_statement                          go to state 246
    switch_statement                      go to state 247
    iteration_statemnet                   go to state 248
    jump_statement                        go to state 249
    variable_declaration                  go to state 250
    primary_expression                    go to state 90
    just_not_name                         go to state 91
    complex_primary                       go to state 92
    literal_name                          go to state 93
    array_complex_primary                 go to state 94
    array_access                          go to state 251
    field_access                          go to state 252
    method_call                           go to state 97
    method_access                         go to state 98
    postfix_expression                    go to state 101
    real_postfix_expression               go to state 102
    unary_expression                      go to state 103
    unary_operator                        go to state 104
    multiplicative_expression             go to state 105
    additive_expression                   go to state 106
    shift_expression                      go to state 107
    relational_expression                 go to state 108
    equality_expression                   go to state 109
    and_expression                        go to state 110
    exclusive_or_expression               go to state 111
    inclusive_or_expression               go to state 112
    logical_and_expression                go to state 113
    logical_or_expression                 go to state 114
    expression                            go to state 253
    assignment_expression                 go to state 254
    assignment_variable_list              go to state 255
    assignment_variable                   go to state 256
    expression_statement                  go to state 257


State 243

   83 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 83 (local_variable_declaration_statements)


State 244

   86 local_variable_declaration_statement: statemnet .

    $default  reduce using rule 86 (local_variable_declaration_statement)


State 245

   88 statemnet: selection_statement .

    $default  reduce using rule 88 (statemnet)


State 246

   91 selection_statement: if_statement .

    $default  reduce using rule 91 (selection_statement)


State 247

   92 selection_statement: switch_statement .

    $default  reduce using rule 92 (selection_statement)


State 248

   89 statemnet: iteration_statemnet .

    $default  reduce using rule 89 (statemnet)


State 249

   90 statemnet: jump_statement .

    $default  reduce using rule 90 (statemnet)


State 250

   85 local_variable_declaration_statement: variable_declaration .

    $default  reduce using rule 85 (local_variable_declaration_statement)


State 251

  122 complex_primary: array_access .
  132 array_complex_primary: array_access .
  204 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 204 (assignment_variable)
    SUB_ASSIGN    reduce using rule 204 (assignment_variable)
    MUL_ASSIGN    reduce using rule 204 (assignment_variable)
    DIV_ASSIGN    reduce using rule 204 (assignment_variable)
    MOD_ASSIGN    reduce using rule 204 (assignment_variable)
    AND_ASSIGN    reduce using rule 204 (assignment_variable)
    OR_ASSIGN     reduce using rule 204 (assignment_variable)
    XOR_ASSIGN    reduce using rule 204 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 204 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 204 (assignment_variable)
    ','           reduce using rule 204 (assignment_variable)
    '['           reduce using rule 132 (array_complex_primary)
    '='           reduce using rule 204 (assignment_variable)
    $default      reduce using rule 122 (complex_primary)


State 252

  123 complex_primary: field_access .
  133 array_complex_primary: field_access .
  205 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 205 (assignment_variable)
    SUB_ASSIGN    reduce using rule 205 (assignment_variable)
    MUL_ASSIGN    reduce using rule 205 (assignment_variable)
    DIV_ASSIGN    reduce using rule 205 (assignment_variable)
    MOD_ASSIGN    reduce using rule 205 (assignment_variable)
    AND_ASSIGN    reduce using rule 205 (assignment_variable)
    OR_ASSIGN     reduce using rule 205 (assignment_variable)
    XOR_ASSIGN    reduce using rule 205 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 205 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 205 (assignment_variable)
    ','           reduce using rule 205 (assignment_variable)
    '['           reduce using rule 133 (array_complex_primary)
    '='           reduce using rule 205 (assignment_variable)
    $default      reduce using rule 123 (complex_primary)


State 253

  216 expression_statement: expression .

    $default  reduce using rule 216 (expression_statement)


State 254

  217 expression_statement: assignment_expression .

    $default  reduce using rule 217 (expression_statement)


State 255

  199 assignment_expression: assignment_variable_list . '=' expression_list
  202 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 295
    '='  shift, and go to state 296


State 256

  200 assignment_expression: assignment_variable . compound_assignment_operator expression
  201 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 297
    SUB_ASSIGN    shift, and go to state 298
    MUL_ASSIGN    shift, and go to state 299
    DIV_ASSIGN    shift, and go to state 300
    MOD_ASSIGN    shift, and go to state 301
    AND_ASSIGN    shift, and go to state 302
    OR_ASSIGN     shift, and go to state 303
    XOR_ASSIGN    shift, and go to state 304
    RIGHT_ASSIGN  shift, and go to state 305
    LEFT_ASSIGN   shift, and go to state 306

    $default  reduce using rule 201 (assignment_variable_list)

    compound_assignment_operator  go to state 307


State 257

   87 statemnet: expression_statement . ';'

    ';'  shift, and go to state 308


State 258

    5 type_name_list: type_name_list . ',' type_name
   63 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 309
    ')'  shift, and go to state 310


State 259

    4 type_name_list: type_name .

    $default  reduce using rule 4 (type_name_list)


State 260

   69 function_declaration: FUNC ID '(' ')' return_type_list code_block .

    $default  reduce using rule 69 (function_declaration)


State 261

   67 parameter_list: parameter_list ',' ID . type_name

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 311
    primitive_type  go to state 51
    array_type      go to state 53


State 262

   71 function_declaration: FUNC ID '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 312


State 263

   70 function_declaration: FUNC ID '(' parameter_list ')' code_block .

    $default  reduce using rule 70 (function_declaration)


State 264

   77 method_declaration: FUNC method_name '(' ')' return_type_list code_block .

    $default  reduce using rule 77 (method_declaration)


State 265

   79 method_declaration: FUNC method_name '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 313


State 266

   78 method_declaration: FUNC method_name '(' parameter_list ')' code_block .

    $default  reduce using rule 78 (method_declaration)


State 267

   53 field_declaration: ID type_name . semicolons

    ';'  shift, and go to state 61

    semicolons  go to state 314


State 268

   48 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 48 (type_declaration)


State 269

   52 field_declarations: field_declarations field_declaration .

    $default  reduce using rule 52 (field_declarations)


State 270

   56 interface_function_declaration: ID '(' . ')' semicolons
   57                               | ID '(' . ')' return_type_list semicolons
   58                               | ID '(' . parameter_type_list ')' semicolons
   59                               | ID '(' . parameter_type_list ')' return_type_list semicolons
   60                               | ID '(' . parameter_list ')' semicolons
   61                               | ID '(' . parameter_list ')' return_type_list semicolons

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 315
    ')'        shift, and go to state 316
    '['        shift, and go to state 47

    qualified_name       go to state 49
    type_name            go to state 132
    primitive_type       go to state 51
    array_type           go to state 53
    parameter_type_list  go to state 317
    parameter_list       go to state 318


State 271

   49 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 49 (type_declaration)


State 272

   55 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 55 (interface_function_declarations)


State 273

   65 parameter_type_list: parameter_type_list ',' type_name .

    $default  reduce using rule 65 (parameter_type_list)


State 274

   25 function_type: FUNC '(' parameter_type_list ')' return_type_list .

    $default  reduce using rule 25 (function_type)


State 275

   73 anonymous_function_declaration: FUNC '(' ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 319


State 276

   72 anonymous_function_declaration: FUNC '(' ')' code_block .

    $default  reduce using rule 72 (anonymous_function_declaration)


State 277

   74 anonymous_function_declaration: FUNC '(' parameter_list ')' . code_block
   75                               | FUNC '(' parameter_list ')' . return_type_list code_block

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '{'        shift, and go to state 177
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 320
    code_block        go to state 321


State 278

  152 field_initializer: field_name ':' expression .

    $default  reduce using rule 152 (field_initializer)


State 279

   27 field_name: ID .

    $default  reduce using rule 27 (field_name)


State 280

  151 field_initializer_list: field_initializer_list ',' field_initializer .

    $default  reduce using rule 151 (field_initializer_list)


State 281

  135 array_access: qualified_name '[' expression ']' .

    $default  reduce using rule 135 (array_access)


State 282

  149 struct_initializer: type_name '{' field_initializer_list '}' .

    $default  reduce using rule 149 (struct_initializer)


State 283

  148 struct_initializer: type_name '{' expression_list '}' .

    $default  reduce using rule 148 (struct_initializer)


State 284

  136 array_access: array_complex_primary '[' expression ']' .

    $default  reduce using rule 136 (array_access)


State 285

  138 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 138 (method_call)


State 286

   93 if_statement: IF '(' . expression ')' code_block
   94             | IF '(' . expression ')' code_block ELSE else_statemnet

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 322


State 287

   98 iteration_statemnet: WHILE '(' . expression ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 323


State 288

   99 iteration_statemnet: DO code_block . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 324


State 289

  100 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    VAR             shift, and go to state 1
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    ';'             shift, and go to state 325
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 241
    for_init                   go to state 326
    variable_declaration       go to state 327
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 251
    field_access               go to state 252
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 253
    assignment_expression      go to state 254
    assignment_variable_list   go to state 255
    assignment_variable        go to state 256
    expression_statement       go to state 328


State 290

   97 switch_statement: SWITCH '(' . expression ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 329


State 291

  107 jump_statement: RETURN ';' .

    $default  reduce using rule 107 (jump_statement)


State 292

  108 jump_statement: RETURN expression_list . ';'
  198 expression_list: expression_list . ',' expressions

    ';'  shift, and go to state 330
    ','  shift, and go to state 174


State 293

   81 code_block: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 81 (code_block)


State 294

   84 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 84 (local_variable_declaration_statements)


State 295

  202 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    TOKEN_THIS  shift, and go to state 73
    ID          shift, and go to state 20
    '('         shift, and go to state 82

    qualified_name         go to state 331
    just_not_name          go to state 332
    complex_primary        go to state 92
    array_complex_primary  go to state 94
    array_access           go to state 251
    field_access           go to state 252
    method_call            go to state 97
    method_access          go to state 98
    assignment_variable    go to state 333


State 296

  199 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INTERFACE       shift, and go to state 33
    INT8            shift, and go to state 34
    INT16           shift, and go to state 35
    INT32           shift, and go to state 36
    INT64           shift, and go to state 37
    UINT8           shift, and go to state 38
    UINT16          shift, and go to state 39
    UINT32          shift, and go to state 40
    UINT64          shift, and go to state 41
    FLOAT32         shift, and go to state 42
    FLOAT64         shift, and go to state 43
    BOOL            shift, and go to state 44
    STRING          shift, and go to state 45
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '{'             shift, and go to state 81
    '('             shift, and go to state 82
    '['             shift, and go to state 47
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    literal_name                    go to state 93
    array_complex_primary           go to state 94
    array_access                    go to state 95
    field_access                    go to state 96
    method_call                     go to state 97
    method_access                   go to state 98
    initializer_expression          go to state 99
    struct_initializer              go to state 100
    postfix_expression              go to state 101
    real_postfix_expression         go to state 102
    unary_expression                go to state 103
    unary_operator                  go to state 104
    multiplicative_expression       go to state 105
    additive_expression             go to state 106
    shift_expression                go to state 107
    relational_expression           go to state 108
    equality_expression             go to state 109
    and_expression                  go to state 110
    exclusive_or_expression         go to state 111
    inclusive_or_expression         go to state 112
    logical_and_expression          go to state 113
    logical_or_expression           go to state 114
    expression                      go to state 115
    expressions                     go to state 116
    expression_list                 go to state 334


State 297

  206 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 206 (compound_assignment_operator)


State 298

  207 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 207 (compound_assignment_operator)


State 299

  208 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 208 (compound_assignment_operator)


State 300

  209 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 209 (compound_assignment_operator)


State 301

  210 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 210 (compound_assignment_operator)


State 302

  211 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 211 (compound_assignment_operator)


State 303

  212 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 212 (compound_assignment_operator)


State 304

  213 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 213 (compound_assignment_operator)


State 305

  214 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 214 (compound_assignment_operator)


State 306

  215 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 215 (compound_assignment_operator)


State 307

  200 assignment_expression: assignment_variable compound_assignment_operator . expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 335


State 308

   87 statemnet: expression_statement ';' .

    $default  reduce using rule 87 (statemnet)


State 309

    5 type_name_list: type_name_list ',' . type_name

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 336
    primitive_type  go to state 51
    array_type      go to state 53


State 310

   63 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 63 (return_type_list)


State 311

   67 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 67 (parameter_list)


State 312

   71 function_declaration: FUNC ID '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 71 (function_declaration)


State 313

   79 method_declaration: FUNC method_name '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 79 (method_declaration)


State 314

   53 field_declaration: ID type_name semicolons .

    $default  reduce using rule 53 (field_declaration)


State 315

    2 qualified_name: ID .
   66 parameter_list: ID . type_name

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    $default  reduce using rule 2 (qualified_name)

    qualified_name  go to state 49
    type_name       go to state 176
    primitive_type  go to state 51
    array_type      go to state 53


State 316

   56 interface_function_declaration: ID '(' ')' . semicolons
   57                               | ID '(' ')' . return_type_list semicolons

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    ';'        shift, and go to state 61
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    semicolons        go to state 337
    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 338


State 317

   58 interface_function_declaration: ID '(' parameter_type_list . ')' semicolons
   59                               | ID '(' parameter_type_list . ')' return_type_list semicolons
   65 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 195
    ')'  shift, and go to state 339


State 318

   60 interface_function_declaration: ID '(' parameter_list . ')' semicolons
   61                               | ID '(' parameter_list . ')' return_type_list semicolons
   67 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 182
    ')'  shift, and go to state 340


State 319

   73 anonymous_function_declaration: FUNC '(' ')' return_type_list code_block .

    $default  reduce using rule 73 (anonymous_function_declaration)


State 320

   75 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 341


State 321

   74 anonymous_function_declaration: FUNC '(' parameter_list ')' code_block .

    $default  reduce using rule 74 (anonymous_function_declaration)


State 322

   93 if_statement: IF '(' expression . ')' code_block
   94             | IF '(' expression . ')' code_block ELSE else_statemnet

    ')'  shift, and go to state 342


State 323

   98 iteration_statemnet: WHILE '(' expression . ')' code_block

    ')'  shift, and go to state 343


State 324

   99 iteration_statemnet: DO code_block WHILE . '(' expression ')' ';'

    '('  shift, and go to state 344


State 325

  103 for_init: ';' .

    $default  reduce using rule 103 (for_init)


State 326

  100 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    ';'             shift, and go to state 345
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    for_expr                   go to state 346
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 347


State 327

  102 for_init: variable_declaration .

    $default  reduce using rule 102 (for_init)


State 328

  101 for_init: expression_statement . ';'

    ';'  shift, and go to state 348


State 329

   97 switch_statement: SWITCH '(' expression . ')' code_block

    ')'  shift, and go to state 349


State 330

  108 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 108 (jump_statement)


State 331

    3 qualified_name: qualified_name . '.' ID
  135 array_access: qualified_name . '[' expression ']'
  141 method_access: qualified_name .
  203 assignment_variable: qualified_name .

    '.'  shift, and go to state 62
    '['  shift, and go to state 147

    '('       reduce using rule 141 (method_access)
    $default  reduce using rule 203 (assignment_variable)


State 332

  137 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 149


State 333

  202 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 202 (assignment_variable_list)


State 334

  198 expression_list: expression_list . ',' expressions
  199 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 174

    $default  reduce using rule 199 (assignment_expression)


State 335

  200 assignment_expression: assignment_variable compound_assignment_operator expression .

    $default  reduce using rule 200 (assignment_expression)


State 336

    5 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 5 (type_name_list)


State 337

   56 interface_function_declaration: ID '(' ')' semicolons .

    $default  reduce using rule 56 (interface_function_declaration)


State 338

   57 interface_function_declaration: ID '(' ')' return_type_list . semicolons

    ';'  shift, and go to state 61

    semicolons  go to state 350


State 339

   58 interface_function_declaration: ID '(' parameter_type_list ')' . semicolons
   59                               | ID '(' parameter_type_list ')' . return_type_list semicolons

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    ';'        shift, and go to state 61
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    semicolons        go to state 351
    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 352


State 340

   60 interface_function_declaration: ID '(' parameter_list ')' . semicolons
   61                               | ID '(' parameter_list ')' . return_type_list semicolons

    INTERFACE  shift, and go to state 33
    INT8       shift, and go to state 34
    INT16      shift, and go to state 35
    INT32      shift, and go to state 36
    INT64      shift, and go to state 37
    UINT8      shift, and go to state 38
    UINT16     shift, and go to state 39
    UINT32     shift, and go to state 40
    UINT64     shift, and go to state 41
    FLOAT32    shift, and go to state 42
    FLOAT64    shift, and go to state 43
    BOOL       shift, and go to state 44
    STRING     shift, and go to state 45
    ID         shift, and go to state 20
    ';'        shift, and go to state 61
    '('        shift, and go to state 178
    '['        shift, and go to state 47

    semicolons        go to state 353
    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 354


State 341

   75 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 75 (anonymous_function_declaration)


State 342

   93 if_statement: IF '(' expression ')' . code_block
   94             | IF '(' expression ')' . code_block ELSE else_statemnet

    '{'  shift, and go to state 177

    code_block  go to state 355


State 343

   98 iteration_statemnet: WHILE '(' expression ')' . code_block

    '{'  shift, and go to state 177

    code_block  go to state 356


State 344

   99 iteration_statemnet: DO code_block WHILE '(' . expression ')' ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 136
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 95
    field_access               go to state 96
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 357


State 345

  105 for_expr: ';' .

    $default  reduce using rule 105 (for_expr)


State 346

  100 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    TOKEN_NIL       shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name             go to state 241
    for_incr                   go to state 358
    primary_expression         go to state 90
    just_not_name              go to state 91
    complex_primary            go to state 92
    literal_name               go to state 93
    array_complex_primary      go to state 94
    array_access               go to state 251
    field_access               go to state 252
    method_call                go to state 97
    method_access              go to state 98
    postfix_expression         go to state 101
    real_postfix_expression    go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    multiplicative_expression  go to state 105
    additive_expression        go to state 106
    shift_expression           go to state 107
    relational_expression      go to state 108
    equality_expression        go to state 109
    and_expression             go to state 110
    exclusive_or_expression    go to state 111
    inclusive_or_expression    go to state 112
    logical_and_expression     go to state 113
    logical_or_expression      go to state 114
    expression                 go to state 253
    assignment_expression      go to state 254
    assignment_variable_list   go to state 255
    assignment_variable        go to state 256
    expression_statement       go to state 359


State 347

  104 for_expr: expression . ';'

    ';'  shift, and go to state 360


State 348

  101 for_init: expression_statement ';' .

    $default  reduce using rule 101 (for_init)


State 349

   97 switch_statement: SWITCH '(' expression ')' . code_block

    '{'  shift, and go to state 177

    code_block  go to state 361


State 350

   57 interface_function_declaration: ID '(' ')' return_type_list semicolons .

    $default  reduce using rule 57 (interface_function_declaration)


State 351

   58 interface_function_declaration: ID '(' parameter_type_list ')' semicolons .

    $default  reduce using rule 58 (interface_function_declaration)


State 352

   59 interface_function_declaration: ID '(' parameter_type_list ')' return_type_list . semicolons

    ';'  shift, and go to state 61

    semicolons  go to state 362


State 353

   60 interface_function_declaration: ID '(' parameter_list ')' semicolons .

    $default  reduce using rule 60 (interface_function_declaration)


State 354

   61 interface_function_declaration: ID '(' parameter_list ')' return_type_list . semicolons

    ';'  shift, and go to state 61

    semicolons  go to state 363


State 355

   93 if_statement: IF '(' expression ')' code_block .
   94             | IF '(' expression ')' code_block . ELSE else_statemnet

    ELSE  shift, and go to state 364

    $default  reduce using rule 93 (if_statement)


State 356

   98 iteration_statemnet: WHILE '(' expression ')' code_block .

    $default  reduce using rule 98 (iteration_statemnet)


State 357

   99 iteration_statemnet: DO code_block WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 365


State 358

  100 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' code_block

    ')'  shift, and go to state 366


State 359

  106 for_incr: expression_statement .

    $default  reduce using rule 106 (for_incr)


State 360

  104 for_expr: expression ';' .

    $default  reduce using rule 104 (for_expr)


State 361

   97 switch_statement: SWITCH '(' expression ')' code_block .

    $default  reduce using rule 97 (switch_statement)


State 362

   59 interface_function_declaration: ID '(' parameter_type_list ')' return_type_list semicolons .

    $default  reduce using rule 59 (interface_function_declaration)


State 363

   61 interface_function_declaration: ID '(' parameter_list ')' return_type_list semicolons .

    $default  reduce using rule 61 (interface_function_declaration)


State 364

   94 if_statement: IF '(' expression ')' code_block ELSE . else_statemnet

    IF   shift, and go to state 234
    '{'  shift, and go to state 177

    code_block      go to state 367
    if_statement    go to state 368
    else_statemnet  go to state 369


State 365

   99 iteration_statemnet: DO code_block WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 370


State 366

  100 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . code_block

    '{'  shift, and go to state 177

    code_block  go to state 371


State 367

   96 else_statemnet: code_block .

    $default  reduce using rule 96 (else_statemnet)


State 368

   95 else_statemnet: if_statement .

    $default  reduce using rule 95 (else_statemnet)


State 369

   94 if_statement: IF '(' expression ')' code_block ELSE else_statemnet .

    $default  reduce using rule 94 (if_statement)


State 370

   99 iteration_statemnet: DO code_block WHILE '(' expression ')' ';' .

    $default  reduce using rule 99 (iteration_statemnet)


State 371

  100 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' code_block .

    $default  reduce using rule 100 (iteration_statemnet)
