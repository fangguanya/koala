Terminals unused in grammar

   ELLIPSIS
   NOT
   IF
   ELSE
   WHILE
   DO
   FOR
   IN
   SWITCH
   CASE
   BREAK
   CONTINUE
   DEFAULT
   VAR
   RETURN
   CONST
   HEX
   OCT
   IFX


Grammar

    0 $accept: program $end

    1 semicolons: ';'
    2           | semicolons ';'

    3 qualified_name: ID
    4               | qualified_name '.' ID

    5 type_name_list: type_name
    6               | type_name_list ',' type_name

    7 type_name: primitive_type
    8          | qualified_name
    9          | function_type
   10          | array_type

   11 primitive_type: UINT8
   12               | UINT16
   13               | UINT32
   14               | UINT64
   15               | INT8
   16               | INT16
   17               | INT32
   18               | INT64
   19               | FLOAT32
   20               | FLOAT64
   21               | BOOL
   22               | STRING
   23               | ANY_TYPE

   24 function_type: FUNC '(' ')'
   25              | FUNC '(' ')' return_type_list
   26              | FUNC '(' parameter_type_list ')'
   27              | FUNC '(' parameter_type_list ')' return_type_list

   28 array_type: '[' INTEGER ']' type_name

   29 field_name: ID

   30 program: package_statement import_statements declarations
   31        | package_statement import_statements
   32        | package_statement declarations
   33        | import_statements declarations
   34        | package_statement
   35        | import_statements
   36        | declarations

   37 package_statement: PACKAGE qualified_name semicolons

   38 import_statements: import_statement
   39                  | import_statements import_statement

   40 import_statement: IMPORT qualified_name semicolons
   41                 | IMPORT qualified_name '.' '*' semicolons

   42 declarations: type_declaration
   43             | declarations type_declaration
   44             | expression_statement
   45             | declarations expression_statement

   46 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   47                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   48                 | TYPE ID type_name semicolons

   49 field_declarations: field_declaration
   50                   | field_declarations field_declaration

   51 field_declaration: ID type_name semicolons

   52 interface_function_declarations: interface_function_declaration
   53                                | interface_function_declarations interface_function_declaration

   54 interface_function_declaration: FUNC ID '(' ')' semicolons
   55                               | FUNC ID '(' ')' return_type_list semicolons
   56                               | FUNC ID '(' parameter_type_list ')' semicolons
   57                               | FUNC ID '(' parameter_type_list ')' return_type_list semicolons
   58                               | FUNC ID '(' parameter_list ')' semicolons
   59                               | FUNC ID '(' parameter_list ')' return_type_list semicolons

   60 return_type_list: type_name
   61                 | '(' type_name_list ')'

   62 parameter_type_list: type_name
   63                    | parameter_type_list ',' type_name

   64 parameter_list: ID type_name
   65               | parameter_list ',' ID type_name

   66 primary_expression: qualified_name
   67                   | just_not_name

   68 just_not_name: TOKEN_THIS
   69              | initializer_expression
   70              | complex_primary

   71 complex_primary: '(' expression ')'
   72                | complex_primary_no_parenthesis

   73 complex_primary_no_parenthesis: literal_name
   74                               | array_access
   75                               | field_access
   76                               | method_call

   77 literal_name: INTEGER
   78             | FLOAT
   79             | STRING_LITERAL
   80             | TOKEN_NULL
   81             | TOKEN_TRUE
   82             | TOKEN_FALSE

   83 array_complex_primary: '(' expression ')'
   84                      | array_access
   85                      | field_access
   86                      | method_call

   87 array_access: qualified_name '[' expression ']'
   88             | array_complex_primary '[' expression ']'

   89 field_access: just_not_name '.' ID

   90 method_call: method_access '(' argument_list ')'
   91            | method_access '(' ')'

   92 method_access: complex_primary_no_parenthesis
   93              | qualified_name

   94 initializer_expression: struct_initializer

   95 struct_initializer: '{' '}'
   96                   | '{' expression_list '}'
   97                   | '{' field_initializer_list '}'
   98                   | type_name '{' '}'
   99                   | type_name '{' expression_list '}'
  100                   | type_name '{' field_initializer_list '}'

  101 field_initializer_list: field_initializer
  102                       | field_initializer_list ',' field_initializer

  103 field_initializer: field_name ':' expression

  104 postfix_expression: primary_expression
  105                   | real_postfix_expression

  106 real_postfix_expression: postfix_expression INC
  107                        | postfix_expression DEC

  108 argument_list: expression_list

  109 unary_expression: postfix_expression
  110                 | INC unary_expression
  111                 | DEC unary_expression
  112                 | unary_operator unary_expression

  113 unary_operator: '+'
  114               | '-'
  115               | '~'
  116               | '!'

  117 multiplicative_expression: unary_expression
  118                          | multiplicative_expression '*' unary_expression
  119                          | multiplicative_expression '/' unary_expression
  120                          | multiplicative_expression '%' unary_expression

  121 additive_expression: multiplicative_expression
  122                    | additive_expression '+' multiplicative_expression
  123                    | additive_expression '-' multiplicative_expression

  124 shift_expression: additive_expression
  125                 | shift_expression SHIFT_LEFT additive_expression
  126                 | shift_expression SHIFT_RIGHT additive_expression

  127 relational_expression: shift_expression
  128                      | relational_expression '<' shift_expression
  129                      | relational_expression '>' shift_expression
  130                      | relational_expression LE shift_expression
  131                      | relational_expression GE shift_expression

  132 equality_expression: relational_expression
  133                    | equality_expression EQ relational_expression
  134                    | equality_expression NE relational_expression

  135 and_expression: equality_expression
  136               | and_expression '&' equality_expression

  137 exclusive_or_expression: and_expression
  138                        | exclusive_or_expression '^' and_expression

  139 inclusive_or_expression: exclusive_or_expression
  140                        | inclusive_or_expression '|' exclusive_or_expression

  141 logical_and_expression: inclusive_or_expression
  142                       | logical_and_expression AND inclusive_or_expression

  143 logical_or_expression: logical_and_expression
  144                      | logical_or_expression OR logical_and_expression

  145 expression: logical_or_expression

  146 expression_list: expression
  147                | expression_list ',' expression

  148 assignment_expression: assignment_variable_list '=' expression_list
  149                      | assignment_variable compound_assignment_operator expression

  150 assignment_variable_list: assignment_variable
  151                         | assignment_variable_list ',' assignment_variable

  152 assignment_variable: qualified_name
  153                    | array_access
  154                    | field_access

  155 compound_assignment_operator: ADD_ASSIGN
  156                             | SUB_ASSIGN
  157                             | MUL_ASSIGN
  158                             | DIV_ASSIGN
  159                             | MOD_ASSIGN
  160                             | AND_ASSIGN
  161                             | OR_ASSIGN
  162                             | XOR_ASSIGN
  163                             | RIGHT_ASSIGN
  164                             | LEFT_ASSIGN

  165 expression_statement: expression semicolons
  166                     | assignment_expression semicolons


Terminals, with rules where they appear

$end (0) 0
'!' (33) 116
'%' (37) 120
'&' (38) 136
'(' (40) 24 25 26 27 54 55 56 57 58 59 61 71 83 90 91
')' (41) 24 25 26 27 54 55 56 57 58 59 61 71 83 90 91
'*' (42) 41 118
'+' (43) 113 122
',' (44) 6 63 65 102 147 151
'-' (45) 114 123
'.' (46) 4 41 89
'/' (47) 119
':' (58) 103
';' (59) 1 2
'<' (60) 128
'=' (61) 148
'>' (62) 129
'[' (91) 28 87 88
']' (93) 28 87 88
'^' (94) 138
'{' (123) 46 47 95 96 97 98 99 100
'|' (124) 140
'}' (125) 46 47 95 96 97 98 99 100
'~' (126) 115
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 155
SUB_ASSIGN (260) 156
MUL_ASSIGN (261) 157
DIV_ASSIGN (262) 158
MOD_ASSIGN (263) 159
AND_ASSIGN (264) 160
OR_ASSIGN (265) 161
XOR_ASSIGN (266) 162
RIGHT_ASSIGN (267) 163
LEFT_ASSIGN (268) 164
EQ (269) 133
NE (270) 134
GE (271) 131
LE (272) 130
AND (273) 142
OR (274) 144
NOT (275)
SHIFT_LEFT (276) 125
SHIFT_RIGHT (277) 126
INC (278) 106 110
DEC (279) 107 111
TOKEN_THIS (280) 68
IF (281)
ELSE (282)
WHILE (283)
DO (284)
FOR (285)
IN (286)
SWITCH (287)
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292)
FUNC (293) 24 25 26 27 54 55 56 57 58 59
RETURN (294)
STRUCT (295) 46
INTERFACE (296) 47
TYPE (297) 46 47 48
CONST (298)
PACKAGE (299) 37
IMPORT (300) 40 41
INT8 (301) 15
INT16 (302) 16
INT32 (303) 17
INT64 (304) 18
UINT8 (305) 11
UINT16 (306) 12
UINT32 (307) 13
UINT64 (308) 14
FLOAT32 (309) 19
FLOAT64 (310) 20
BOOL (311) 21
STRING (312) 22
ANY_TYPE (313) 23
TOKEN_NULL (314) 80
TOKEN_TRUE (315) 81
TOKEN_FALSE (316) 82
INTEGER (317) 28 77
HEX (318)
OCT (319)
FLOAT (320) 78
STRING_LITERAL (321) 79
ID (322) 3 4 29 46 47 48 51 54 55 56 57 58 59 64 65 89
IFX (323)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
semicolons (93)
    on left: 1 2, on right: 2 37 40 41 48 51 54 55 56 57 58 59 165
    166
qualified_name (94)
    on left: 3 4, on right: 4 8 37 40 41 66 87 93 152
type_name_list (95)
    on left: 5 6, on right: 6 61
type_name (96)
    on left: 7 8 9 10, on right: 5 6 28 48 51 60 62 63 64 65 98 99
    100
primitive_type (97)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23, on right: 7
function_type (98)
    on left: 24 25 26 27, on right: 9
array_type (99)
    on left: 28, on right: 10
field_name (100)
    on left: 29, on right: 103
program (101)
    on left: 30 31 32 33 34 35 36, on right: 0
package_statement (102)
    on left: 37, on right: 30 31 32 34
import_statements (103)
    on left: 38 39, on right: 30 31 33 35 39
import_statement (104)
    on left: 40 41, on right: 38 39
declarations (105)
    on left: 42 43 44 45, on right: 30 32 33 36 43 45
type_declaration (106)
    on left: 46 47 48, on right: 42 43
field_declarations (107)
    on left: 49 50, on right: 46 50
field_declaration (108)
    on left: 51, on right: 49 50
interface_function_declarations (109)
    on left: 52 53, on right: 47 53
interface_function_declaration (110)
    on left: 54 55 56 57 58 59, on right: 52 53
return_type_list (111)
    on left: 60 61, on right: 25 27 55 57 59
parameter_type_list (112)
    on left: 62 63, on right: 26 27 56 57 63
parameter_list (113)
    on left: 64 65, on right: 58 59 65
primary_expression (114)
    on left: 66 67, on right: 104
just_not_name (115)
    on left: 68 69 70, on right: 67 89
complex_primary (116)
    on left: 71 72, on right: 70
complex_primary_no_parenthesis (117)
    on left: 73 74 75 76, on right: 72 92
literal_name (118)
    on left: 77 78 79 80 81 82, on right: 73
array_complex_primary (119)
    on left: 83 84 85 86, on right: 88
array_access (120)
    on left: 87 88, on right: 74 84 153
field_access (121)
    on left: 89, on right: 75 85 154
method_call (122)
    on left: 90 91, on right: 76 86
method_access (123)
    on left: 92 93, on right: 90 91
initializer_expression (124)
    on left: 94, on right: 69
struct_initializer (125)
    on left: 95 96 97 98 99 100, on right: 94
field_initializer_list (126)
    on left: 101 102, on right: 97 100 102
field_initializer (127)
    on left: 103, on right: 101 102
postfix_expression (128)
    on left: 104 105, on right: 106 107 109
real_postfix_expression (129)
    on left: 106 107, on right: 105
argument_list (130)
    on left: 108, on right: 90
unary_expression (131)
    on left: 109 110 111 112, on right: 110 111 112 117 118 119 120
unary_operator (132)
    on left: 113 114 115 116, on right: 112
multiplicative_expression (133)
    on left: 117 118 119 120, on right: 118 119 120 121 122 123
additive_expression (134)
    on left: 121 122 123, on right: 122 123 124 125 126
shift_expression (135)
    on left: 124 125 126, on right: 125 126 127 128 129 130 131
relational_expression (136)
    on left: 127 128 129 130 131, on right: 128 129 130 131 132 133
    134
equality_expression (137)
    on left: 132 133 134, on right: 133 134 135 136
and_expression (138)
    on left: 135 136, on right: 136 137 138
exclusive_or_expression (139)
    on left: 137 138, on right: 138 139 140
inclusive_or_expression (140)
    on left: 139 140, on right: 140 141 142
logical_and_expression (141)
    on left: 141 142, on right: 142 143 144
logical_or_expression (142)
    on left: 143 144, on right: 144 145
expression (143)
    on left: 145, on right: 71 83 87 88 103 146 147 149 165
expression_list (144)
    on left: 146 147, on right: 96 99 108 147 148
assignment_expression (145)
    on left: 148 149, on right: 166
assignment_variable_list (146)
    on left: 150 151, on right: 148 151
assignment_variable (147)
    on left: 152 153 154, on right: 149 150 151
compound_assignment_operator (148)
    on left: 155 156 157 158 159 160 161 162 163 164, on right: 149
expression_statement (149)
    on left: 165 166, on right: 44 45


State 0

    0 $accept: . program $end

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    PACKAGE         shift, and go to state 6
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    program                         go to state 40
    package_statement               go to state 41
    import_statements               go to state 42
    import_statement                go to state 43
    declarations                    go to state 44
    type_declaration                go to state 45
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 52
    field_access                    go to state 53
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 72
    assignment_expression           go to state 73
    assignment_variable_list        go to state 74
    assignment_variable             go to state 75
    expression_statement            go to state 76


State 1

  110 unary_expression: INC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 80
    unary_operator                  go to state 61


State 2

  111 unary_expression: DEC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 81
    unary_operator                  go to state 61


State 3

   68 just_not_name: TOKEN_THIS .

    $default  reduce using rule 68 (just_not_name)


State 4

   24 function_type: FUNC . '(' ')'
   25              | FUNC . '(' ')' return_type_list
   26              | FUNC . '(' parameter_type_list ')'
   27              | FUNC . '(' parameter_type_list ')' return_type_list

    '('  shift, and go to state 82


State 5

   46 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   47                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   48                 | TYPE . ID type_name semicolons

    ID  shift, and go to state 83


State 6

   37 package_statement: PACKAGE . qualified_name semicolons

    ID  shift, and go to state 27

    qualified_name  go to state 84


State 7

   40 import_statement: IMPORT . qualified_name semicolons
   41                 | IMPORT . qualified_name '.' '*' semicolons

    ID  shift, and go to state 27

    qualified_name  go to state 85


State 8

   15 primitive_type: INT8 .

    $default  reduce using rule 15 (primitive_type)


State 9

   16 primitive_type: INT16 .

    $default  reduce using rule 16 (primitive_type)


State 10

   17 primitive_type: INT32 .

    $default  reduce using rule 17 (primitive_type)


State 11

   18 primitive_type: INT64 .

    $default  reduce using rule 18 (primitive_type)


State 12

   11 primitive_type: UINT8 .

    $default  reduce using rule 11 (primitive_type)


State 13

   12 primitive_type: UINT16 .

    $default  reduce using rule 12 (primitive_type)


State 14

   13 primitive_type: UINT32 .

    $default  reduce using rule 13 (primitive_type)


State 15

   14 primitive_type: UINT64 .

    $default  reduce using rule 14 (primitive_type)


State 16

   19 primitive_type: FLOAT32 .

    $default  reduce using rule 19 (primitive_type)


State 17

   20 primitive_type: FLOAT64 .

    $default  reduce using rule 20 (primitive_type)


State 18

   21 primitive_type: BOOL .

    $default  reduce using rule 21 (primitive_type)


State 19

   22 primitive_type: STRING .

    $default  reduce using rule 22 (primitive_type)


State 20

   23 primitive_type: ANY_TYPE .

    $default  reduce using rule 23 (primitive_type)


State 21

   80 literal_name: TOKEN_NULL .

    $default  reduce using rule 80 (literal_name)


State 22

   81 literal_name: TOKEN_TRUE .

    $default  reduce using rule 81 (literal_name)


State 23

   82 literal_name: TOKEN_FALSE .

    $default  reduce using rule 82 (literal_name)


State 24

   77 literal_name: INTEGER .

    $default  reduce using rule 77 (literal_name)


State 25

   78 literal_name: FLOAT .

    $default  reduce using rule 78 (literal_name)


State 26

   79 literal_name: STRING_LITERAL .

    $default  reduce using rule 79 (literal_name)


State 27

    3 qualified_name: ID .

    $default  reduce using rule 3 (qualified_name)


State 28

   71 complex_primary: '(' . expression ')'
   83 array_complex_primary: '(' . expression ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 86


State 29

   28 array_type: '[' . INTEGER ']' type_name

    INTEGER  shift, and go to state 87


State 30

   95 struct_initializer: '{' . '}'
   96                   | '{' . expression_list '}'
   97                   | '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 88
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '}'             shift, and go to state 89
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    field_name                      go to state 90
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    field_initializer_list          go to state 91
    field_initializer               go to state 92
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 93
    expression_list                 go to state 94


State 31

  113 unary_operator: '+' .

    $default  reduce using rule 113 (unary_operator)


State 32

  114 unary_operator: '-' .

    $default  reduce using rule 114 (unary_operator)


State 33

  115 unary_operator: '~' .

    $default  reduce using rule 115 (unary_operator)


State 34

  116 unary_operator: '!' .

    $default  reduce using rule 116 (unary_operator)


State 35

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   66 primary_expression: qualified_name .
   87 array_access: qualified_name . '[' expression ']'
   93 method_access: qualified_name .
  152 assignment_variable: qualified_name .

    '.'  shift, and go to state 95
    '['  shift, and go to state 96

    ADD_ASSIGN    reduce using rule 152 (assignment_variable)
    SUB_ASSIGN    reduce using rule 152 (assignment_variable)
    MUL_ASSIGN    reduce using rule 152 (assignment_variable)
    DIV_ASSIGN    reduce using rule 152 (assignment_variable)
    MOD_ASSIGN    reduce using rule 152 (assignment_variable)
    AND_ASSIGN    reduce using rule 152 (assignment_variable)
    OR_ASSIGN     reduce using rule 152 (assignment_variable)
    XOR_ASSIGN    reduce using rule 152 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 152 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 152 (assignment_variable)
    ','           reduce using rule 152 (assignment_variable)
    '('           reduce using rule 93 (method_access)
    '{'           reduce using rule 8 (type_name)
    '='           reduce using rule 152 (assignment_variable)
    $default      reduce using rule 66 (primary_expression)


State 36

   98 struct_initializer: type_name . '{' '}'
   99                   | type_name . '{' expression_list '}'
  100                   | type_name . '{' field_initializer_list '}'

    '{'  shift, and go to state 97


State 37

    7 type_name: primitive_type .

    $default  reduce using rule 7 (type_name)


State 38

    9 type_name: function_type .

    $default  reduce using rule 9 (type_name)


State 39

   10 type_name: array_type .

    $default  reduce using rule 10 (type_name)


State 40

    0 $accept: program . $end

    $end  shift, and go to state 98


State 41

   30 program: package_statement . import_statements declarations
   31        | package_statement . import_statements
   32        | package_statement . declarations
   34        | package_statement .

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 34 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    import_statements               go to state 99
    import_statement                go to state 43
    declarations                    go to state 100
    type_declaration                go to state 45
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 52
    field_access                    go to state 53
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 72
    assignment_expression           go to state 73
    assignment_variable_list        go to state 74
    assignment_variable             go to state 75
    expression_statement            go to state 76


State 42

   33 program: import_statements . declarations
   35        | import_statements .
   39 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 35 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    import_statement                go to state 101
    declarations                    go to state 102
    type_declaration                go to state 45
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 52
    field_access                    go to state 53
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 72
    assignment_expression           go to state 73
    assignment_variable_list        go to state 74
    assignment_variable             go to state 75
    expression_statement            go to state 76


State 43

   38 import_statements: import_statement .

    $default  reduce using rule 38 (import_statements)


State 44

   36 program: declarations .
   43 declarations: declarations . type_declaration
   45             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 36 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    type_declaration                go to state 103
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 52
    field_access                    go to state 53
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 72
    assignment_expression           go to state 73
    assignment_variable_list        go to state 74
    assignment_variable             go to state 75
    expression_statement            go to state 104


State 45

   42 declarations: type_declaration .

    $default  reduce using rule 42 (declarations)


State 46

  104 postfix_expression: primary_expression .

    $default  reduce using rule 104 (postfix_expression)


State 47

   67 primary_expression: just_not_name .
   89 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 105

    $default  reduce using rule 67 (primary_expression)


State 48

   70 just_not_name: complex_primary .

    $default  reduce using rule 70 (just_not_name)


State 49

   72 complex_primary: complex_primary_no_parenthesis .
   92 method_access: complex_primary_no_parenthesis .

    '('       reduce using rule 92 (method_access)
    $default  reduce using rule 72 (complex_primary)


State 50

   73 complex_primary_no_parenthesis: literal_name .

    $default  reduce using rule 73 (complex_primary_no_parenthesis)


State 51

   88 array_access: array_complex_primary . '[' expression ']'

    '['  shift, and go to state 106


State 52

   74 complex_primary_no_parenthesis: array_access .
   84 array_complex_primary: array_access .
  153 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 153 (assignment_variable)
    SUB_ASSIGN    reduce using rule 153 (assignment_variable)
    MUL_ASSIGN    reduce using rule 153 (assignment_variable)
    DIV_ASSIGN    reduce using rule 153 (assignment_variable)
    MOD_ASSIGN    reduce using rule 153 (assignment_variable)
    AND_ASSIGN    reduce using rule 153 (assignment_variable)
    OR_ASSIGN     reduce using rule 153 (assignment_variable)
    XOR_ASSIGN    reduce using rule 153 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 153 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 153 (assignment_variable)
    ','           reduce using rule 153 (assignment_variable)
    '['           reduce using rule 84 (array_complex_primary)
    '='           reduce using rule 153 (assignment_variable)
    $default      reduce using rule 74 (complex_primary_no_parenthesis)


State 53

   75 complex_primary_no_parenthesis: field_access .
   85 array_complex_primary: field_access .
  154 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 154 (assignment_variable)
    SUB_ASSIGN    reduce using rule 154 (assignment_variable)
    MUL_ASSIGN    reduce using rule 154 (assignment_variable)
    DIV_ASSIGN    reduce using rule 154 (assignment_variable)
    MOD_ASSIGN    reduce using rule 154 (assignment_variable)
    AND_ASSIGN    reduce using rule 154 (assignment_variable)
    OR_ASSIGN     reduce using rule 154 (assignment_variable)
    XOR_ASSIGN    reduce using rule 154 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 154 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 154 (assignment_variable)
    ','           reduce using rule 154 (assignment_variable)
    '['           reduce using rule 85 (array_complex_primary)
    '='           reduce using rule 154 (assignment_variable)
    $default      reduce using rule 75 (complex_primary_no_parenthesis)


State 54

   76 complex_primary_no_parenthesis: method_call .
   86 array_complex_primary: method_call .

    '['       reduce using rule 86 (array_complex_primary)
    $default  reduce using rule 76 (complex_primary_no_parenthesis)


State 55

   90 method_call: method_access . '(' argument_list ')'
   91            | method_access . '(' ')'

    '('  shift, and go to state 107


State 56

   69 just_not_name: initializer_expression .

    $default  reduce using rule 69 (just_not_name)


State 57

   94 initializer_expression: struct_initializer .

    $default  reduce using rule 94 (initializer_expression)


State 58

  106 real_postfix_expression: postfix_expression . INC
  107                        | postfix_expression . DEC
  109 unary_expression: postfix_expression .

    INC  shift, and go to state 108
    DEC  shift, and go to state 109

    $default  reduce using rule 109 (unary_expression)


State 59

  105 postfix_expression: real_postfix_expression .

    $default  reduce using rule 105 (postfix_expression)


State 60

  117 multiplicative_expression: unary_expression .

    $default  reduce using rule 117 (multiplicative_expression)


State 61

  112 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 110
    unary_operator                  go to state 61


State 62

  118 multiplicative_expression: multiplicative_expression . '*' unary_expression
  119                          | multiplicative_expression . '/' unary_expression
  120                          | multiplicative_expression . '%' unary_expression
  121 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113

    $default  reduce using rule 121 (additive_expression)


State 63

  122 additive_expression: additive_expression . '+' multiplicative_expression
  123                    | additive_expression . '-' multiplicative_expression
  124 shift_expression: additive_expression .

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 124 (shift_expression)


State 64

  125 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  126                 | shift_expression . SHIFT_RIGHT additive_expression
  127 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 116
    SHIFT_RIGHT  shift, and go to state 117

    $default  reduce using rule 127 (relational_expression)


State 65

  128 relational_expression: relational_expression . '<' shift_expression
  129                      | relational_expression . '>' shift_expression
  130                      | relational_expression . LE shift_expression
  131                      | relational_expression . GE shift_expression
  132 equality_expression: relational_expression .

    GE   shift, and go to state 118
    LE   shift, and go to state 119
    '<'  shift, and go to state 120
    '>'  shift, and go to state 121

    $default  reduce using rule 132 (equality_expression)


State 66

  133 equality_expression: equality_expression . EQ relational_expression
  134                    | equality_expression . NE relational_expression
  135 and_expression: equality_expression .

    EQ  shift, and go to state 122
    NE  shift, and go to state 123

    $default  reduce using rule 135 (and_expression)


State 67

  136 and_expression: and_expression . '&' equality_expression
  137 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 124

    $default  reduce using rule 137 (exclusive_or_expression)


State 68

  138 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  139 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 125

    $default  reduce using rule 139 (inclusive_or_expression)


State 69

  140 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  141 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 126

    $default  reduce using rule 141 (logical_and_expression)


State 70

  142 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  143 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 127

    $default  reduce using rule 143 (logical_or_expression)


State 71

  144 logical_or_expression: logical_or_expression . OR logical_and_expression
  145 expression: logical_or_expression .

    OR  shift, and go to state 128

    $default  reduce using rule 145 (expression)


State 72

  165 expression_statement: expression . semicolons

    ';'  shift, and go to state 129

    semicolons  go to state 130


State 73

  166 expression_statement: assignment_expression . semicolons

    ';'  shift, and go to state 129

    semicolons  go to state 131


State 74

  148 assignment_expression: assignment_variable_list . '=' expression_list
  151 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 132
    '='  shift, and go to state 133


State 75

  149 assignment_expression: assignment_variable . compound_assignment_operator expression
  150 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 134
    SUB_ASSIGN    shift, and go to state 135
    MUL_ASSIGN    shift, and go to state 136
    DIV_ASSIGN    shift, and go to state 137
    MOD_ASSIGN    shift, and go to state 138
    AND_ASSIGN    shift, and go to state 139
    OR_ASSIGN     shift, and go to state 140
    XOR_ASSIGN    shift, and go to state 141
    RIGHT_ASSIGN  shift, and go to state 142
    LEFT_ASSIGN   shift, and go to state 143

    $default  reduce using rule 150 (assignment_variable_list)

    compound_assignment_operator  go to state 144


State 76

   44 declarations: expression_statement .

    $default  reduce using rule 44 (declarations)


State 77

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   66 primary_expression: qualified_name .
   87 array_access: qualified_name . '[' expression ']'
   93 method_access: qualified_name .

    '.'  shift, and go to state 95
    '['  shift, and go to state 96

    '('       reduce using rule 93 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 66 (primary_expression)


State 78

   74 complex_primary_no_parenthesis: array_access .
   84 array_complex_primary: array_access .

    '['       reduce using rule 84 (array_complex_primary)
    $default  reduce using rule 74 (complex_primary_no_parenthesis)


State 79

   75 complex_primary_no_parenthesis: field_access .
   85 array_complex_primary: field_access .

    '['       reduce using rule 85 (array_complex_primary)
    $default  reduce using rule 75 (complex_primary_no_parenthesis)


State 80

  110 unary_expression: INC unary_expression .

    $default  reduce using rule 110 (unary_expression)


State 81

  111 unary_expression: DEC unary_expression .

    $default  reduce using rule 111 (unary_expression)


State 82

   24 function_type: FUNC '(' . ')'
   25              | FUNC '(' . ')' return_type_list
   26              | FUNC '(' . parameter_type_list ')'
   27              | FUNC '(' . parameter_type_list ')' return_type_list

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ')'       shift, and go to state 145
    '['       shift, and go to state 29

    qualified_name       go to state 146
    type_name            go to state 147
    primitive_type       go to state 37
    function_type        go to state 38
    array_type           go to state 39
    parameter_type_list  go to state 148


State 83

   46 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   47                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   48                 | TYPE ID . type_name semicolons

    FUNC       shift, and go to state 4
    STRUCT     shift, and go to state 149
    INTERFACE  shift, and go to state 150
    INT8       shift, and go to state 8
    INT16      shift, and go to state 9
    INT32      shift, and go to state 10
    INT64      shift, and go to state 11
    UINT8      shift, and go to state 12
    UINT16     shift, and go to state 13
    UINT32     shift, and go to state 14
    UINT64     shift, and go to state 15
    FLOAT32    shift, and go to state 16
    FLOAT64    shift, and go to state 17
    BOOL       shift, and go to state 18
    STRING     shift, and go to state 19
    ANY_TYPE   shift, and go to state 20
    ID         shift, and go to state 27
    '['        shift, and go to state 29

    qualified_name  go to state 146
    type_name       go to state 151
    primitive_type  go to state 37
    function_type   go to state 38
    array_type      go to state 39


State 84

    4 qualified_name: qualified_name . '.' ID
   37 package_statement: PACKAGE qualified_name . semicolons

    ';'  shift, and go to state 129
    '.'  shift, and go to state 95

    semicolons  go to state 152


State 85

    4 qualified_name: qualified_name . '.' ID
   40 import_statement: IMPORT qualified_name . semicolons
   41                 | IMPORT qualified_name . '.' '*' semicolons

    ';'  shift, and go to state 129
    '.'  shift, and go to state 153

    semicolons  go to state 154


State 86

   71 complex_primary: '(' expression . ')'
   83 array_complex_primary: '(' expression . ')'

    ')'  shift, and go to state 155


State 87

   28 array_type: '[' INTEGER . ']' type_name

    ']'  shift, and go to state 156


State 88

    3 qualified_name: ID .
   29 field_name: ID .

    ':'       reduce using rule 29 (field_name)
    $default  reduce using rule 3 (qualified_name)


State 89

   95 struct_initializer: '{' '}' .

    $default  reduce using rule 95 (struct_initializer)


State 90

  103 field_initializer: field_name . ':' expression

    ':'  shift, and go to state 157


State 91

   97 struct_initializer: '{' field_initializer_list . '}'
  102 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 158
    '}'  shift, and go to state 159


State 92

  101 field_initializer_list: field_initializer .

    $default  reduce using rule 101 (field_initializer_list)


State 93

  146 expression_list: expression .

    $default  reduce using rule 146 (expression_list)


State 94

   96 struct_initializer: '{' expression_list . '}'
  147 expression_list: expression_list . ',' expression

    ','  shift, and go to state 160
    '}'  shift, and go to state 161


State 95

    4 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 162


State 96

   87 array_access: qualified_name '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 163


State 97

   98 struct_initializer: type_name '{' . '}'
   99                   | type_name '{' . expression_list '}'
  100                   | type_name '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 88
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '}'             shift, and go to state 164
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    field_name                      go to state 90
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    field_initializer_list          go to state 165
    field_initializer               go to state 92
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 93
    expression_list                 go to state 166


State 98

    0 $accept: program $end .

    $default  accept


State 99

   30 program: package_statement import_statements . declarations
   31        | package_statement import_statements .
   39 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 31 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    import_statement                go to state 101
    declarations                    go to state 167
    type_declaration                go to state 45
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 52
    field_access                    go to state 53
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 72
    assignment_expression           go to state 73
    assignment_variable_list        go to state 74
    assignment_variable             go to state 75
    expression_statement            go to state 76


State 100

   32 program: package_statement declarations .
   43 declarations: declarations . type_declaration
   45             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 32 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    type_declaration                go to state 103
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 52
    field_access                    go to state 53
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 72
    assignment_expression           go to state 73
    assignment_variable_list        go to state 74
    assignment_variable             go to state 75
    expression_statement            go to state 104


State 101

   39 import_statements: import_statements import_statement .

    $default  reduce using rule 39 (import_statements)


State 102

   33 program: import_statements declarations .
   43 declarations: declarations . type_declaration
   45             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 33 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    type_declaration                go to state 103
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 52
    field_access                    go to state 53
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 72
    assignment_expression           go to state 73
    assignment_variable_list        go to state 74
    assignment_variable             go to state 75
    expression_statement            go to state 104


State 103

   43 declarations: declarations type_declaration .

    $default  reduce using rule 43 (declarations)


State 104

   45 declarations: declarations expression_statement .

    $default  reduce using rule 45 (declarations)


State 105

   89 field_access: just_not_name '.' . ID

    ID  shift, and go to state 168


State 106

   88 array_access: array_complex_primary '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 169


State 107

   90 method_call: method_access '(' . argument_list ')'
   91            | method_access '(' . ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    ')'             shift, and go to state 170
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    argument_list                   go to state 171
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 93
    expression_list                 go to state 172


State 108

  106 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 106 (real_postfix_expression)


State 109

  107 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 107 (real_postfix_expression)


State 110

  112 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 112 (unary_expression)


State 111

  118 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 173
    unary_operator                  go to state 61


State 112

  119 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 174
    unary_operator                  go to state 61


State 113

  120 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 175
    unary_operator                  go to state 61


State 114

  122 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 176


State 115

  123 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 177


State 116

  125 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 178


State 117

  126 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 179


State 118

  131 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 180


State 119

  130 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 181


State 120

  128 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 182


State 121

  129 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 183


State 122

  133 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 184


State 123

  134 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 185


State 124

  136 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 186


State 125

  138 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 187


State 126

  140 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 188


State 127

  142 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 189


State 128

  144 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 190


State 129

    1 semicolons: ';' .

    $default  reduce using rule 1 (semicolons)


State 130

    2 semicolons: semicolons . ';'
  165 expression_statement: expression semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 165 (expression_statement)


State 131

    2 semicolons: semicolons . ';'
  166 expression_statement: assignment_expression semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 166 (expression_statement)


State 132

  151 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30

    qualified_name                  go to state 192
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    just_not_name                   go to state 193
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 52
    field_access                    go to state 53
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    assignment_variable             go to state 194


State 133

  148 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 93
    expression_list                 go to state 195


State 134

  155 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 155 (compound_assignment_operator)


State 135

  156 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 156 (compound_assignment_operator)


State 136

  157 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 157 (compound_assignment_operator)


State 137

  158 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 158 (compound_assignment_operator)


State 138

  159 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 159 (compound_assignment_operator)


State 139

  160 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 160 (compound_assignment_operator)


State 140

  161 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 161 (compound_assignment_operator)


State 141

  162 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 162 (compound_assignment_operator)


State 142

  163 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 163 (compound_assignment_operator)


State 143

  164 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 164 (compound_assignment_operator)


State 144

  149 assignment_expression: assignment_variable compound_assignment_operator . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 196


State 145

   24 function_type: FUNC '(' ')' .
   25              | FUNC '(' ')' . return_type_list

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 197
    '['       shift, and go to state 29

    $default  reduce using rule 24 (function_type)

    qualified_name    go to state 146
    type_name         go to state 198
    primitive_type    go to state 37
    function_type     go to state 38
    array_type        go to state 39
    return_type_list  go to state 199


State 146

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .

    '.'  shift, and go to state 95

    $default  reduce using rule 8 (type_name)


State 147

   62 parameter_type_list: type_name .

    $default  reduce using rule 62 (parameter_type_list)


State 148

   26 function_type: FUNC '(' parameter_type_list . ')'
   27              | FUNC '(' parameter_type_list . ')' return_type_list
   63 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 200
    ')'  shift, and go to state 201


State 149

   46 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 202


State 150

   47 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 203


State 151

   48 type_declaration: TYPE ID type_name . semicolons

    ';'  shift, and go to state 129

    semicolons  go to state 204


State 152

    2 semicolons: semicolons . ';'
   37 package_statement: PACKAGE qualified_name semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 37 (package_statement)


State 153

    4 qualified_name: qualified_name '.' . ID
   41 import_statement: IMPORT qualified_name '.' . '*' semicolons

    ID   shift, and go to state 162
    '*'  shift, and go to state 205


State 154

    2 semicolons: semicolons . ';'
   40 import_statement: IMPORT qualified_name semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 40 (import_statement)


State 155

   71 complex_primary: '(' expression ')' .
   83 array_complex_primary: '(' expression ')' .

    '['       reduce using rule 83 (array_complex_primary)
    $default  reduce using rule 71 (complex_primary)


State 156

   28 array_type: '[' INTEGER ']' . type_name

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 146
    type_name       go to state 206
    primitive_type  go to state 37
    function_type   go to state 38
    array_type      go to state 39


State 157

  103 field_initializer: field_name ':' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 207


State 158

  102 field_initializer_list: field_initializer_list ',' . field_initializer

    ID  shift, and go to state 208

    field_name         go to state 90
    field_initializer  go to state 209


State 159

   97 struct_initializer: '{' field_initializer_list '}' .

    $default  reduce using rule 97 (struct_initializer)


State 160

  147 expression_list: expression_list ',' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 77
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 78
    field_access                    go to state 79
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 210


State 161

   96 struct_initializer: '{' expression_list '}' .

    $default  reduce using rule 96 (struct_initializer)


State 162

    4 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 4 (qualified_name)


State 163

   87 array_access: qualified_name '[' expression . ']'

    ']'  shift, and go to state 211


State 164

   98 struct_initializer: type_name '{' '}' .

    $default  reduce using rule 98 (struct_initializer)


State 165

  100 struct_initializer: type_name '{' field_initializer_list . '}'
  102 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 158
    '}'  shift, and go to state 212


State 166

   99 struct_initializer: type_name '{' expression_list . '}'
  147 expression_list: expression_list . ',' expression

    ','  shift, and go to state 160
    '}'  shift, and go to state 213


State 167

   30 program: package_statement import_statements declarations .
   43 declarations: declarations . type_declaration
   45             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 30 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    function_type                   go to state 38
    array_type                      go to state 39
    type_declaration                go to state 103
    primary_expression              go to state 46
    just_not_name                   go to state 47
    complex_primary                 go to state 48
    complex_primary_no_parenthesis  go to state 49
    literal_name                    go to state 50
    array_complex_primary           go to state 51
    array_access                    go to state 52
    field_access                    go to state 53
    method_call                     go to state 54
    method_access                   go to state 55
    initializer_expression          go to state 56
    struct_initializer              go to state 57
    postfix_expression              go to state 58
    real_postfix_expression         go to state 59
    unary_expression                go to state 60
    unary_operator                  go to state 61
    multiplicative_expression       go to state 62
    additive_expression             go to state 63
    shift_expression                go to state 64
    relational_expression           go to state 65
    equality_expression             go to state 66
    and_expression                  go to state 67
    exclusive_or_expression         go to state 68
    inclusive_or_expression         go to state 69
    logical_and_expression          go to state 70
    logical_or_expression           go to state 71
    expression                      go to state 72
    assignment_expression           go to state 73
    assignment_variable_list        go to state 74
    assignment_variable             go to state 75
    expression_statement            go to state 104


State 168

   89 field_access: just_not_name '.' ID .

    $default  reduce using rule 89 (field_access)


State 169

   88 array_access: array_complex_primary '[' expression . ']'

    ']'  shift, and go to state 214


State 170

   91 method_call: method_access '(' ')' .

    $default  reduce using rule 91 (method_call)


State 171

   90 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 215


State 172

  108 argument_list: expression_list .
  147 expression_list: expression_list . ',' expression

    ','  shift, and go to state 160

    $default  reduce using rule 108 (argument_list)


State 173

  118 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 118 (multiplicative_expression)


State 174

  119 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 119 (multiplicative_expression)


State 175

  120 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 120 (multiplicative_expression)


State 176

  118 multiplicative_expression: multiplicative_expression . '*' unary_expression
  119                          | multiplicative_expression . '/' unary_expression
  120                          | multiplicative_expression . '%' unary_expression
  122 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113

    $default  reduce using rule 122 (additive_expression)


State 177

  118 multiplicative_expression: multiplicative_expression . '*' unary_expression
  119                          | multiplicative_expression . '/' unary_expression
  120                          | multiplicative_expression . '%' unary_expression
  123 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113

    $default  reduce using rule 123 (additive_expression)


State 178

  122 additive_expression: additive_expression . '+' multiplicative_expression
  123                    | additive_expression . '-' multiplicative_expression
  125 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 125 (shift_expression)


State 179

  122 additive_expression: additive_expression . '+' multiplicative_expression
  123                    | additive_expression . '-' multiplicative_expression
  126 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 126 (shift_expression)


State 180

  125 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  126                 | shift_expression . SHIFT_RIGHT additive_expression
  131 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 116
    SHIFT_RIGHT  shift, and go to state 117

    $default  reduce using rule 131 (relational_expression)


State 181

  125 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  126                 | shift_expression . SHIFT_RIGHT additive_expression
  130 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 116
    SHIFT_RIGHT  shift, and go to state 117

    $default  reduce using rule 130 (relational_expression)


State 182

  125 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  126                 | shift_expression . SHIFT_RIGHT additive_expression
  128 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 116
    SHIFT_RIGHT  shift, and go to state 117

    $default  reduce using rule 128 (relational_expression)


State 183

  125 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  126                 | shift_expression . SHIFT_RIGHT additive_expression
  129 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 116
    SHIFT_RIGHT  shift, and go to state 117

    $default  reduce using rule 129 (relational_expression)


State 184

  128 relational_expression: relational_expression . '<' shift_expression
  129                      | relational_expression . '>' shift_expression
  130                      | relational_expression . LE shift_expression
  131                      | relational_expression . GE shift_expression
  133 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 118
    LE   shift, and go to state 119
    '<'  shift, and go to state 120
    '>'  shift, and go to state 121

    $default  reduce using rule 133 (equality_expression)


State 185

  128 relational_expression: relational_expression . '<' shift_expression
  129                      | relational_expression . '>' shift_expression
  130                      | relational_expression . LE shift_expression
  131                      | relational_expression . GE shift_expression
  134 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 118
    LE   shift, and go to state 119
    '<'  shift, and go to state 120
    '>'  shift, and go to state 121

    $default  reduce using rule 134 (equality_expression)


State 186

  133 equality_expression: equality_expression . EQ relational_expression
  134                    | equality_expression . NE relational_expression
  136 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 122
    NE  shift, and go to state 123

    $default  reduce using rule 136 (and_expression)


State 187

  136 and_expression: and_expression . '&' equality_expression
  138 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 124

    $default  reduce using rule 138 (exclusive_or_expression)


State 188

  138 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  140 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 125

    $default  reduce using rule 140 (inclusive_or_expression)


State 189

  140 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  142 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 126

    $default  reduce using rule 142 (logical_and_expression)


State 190

  142 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  144 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 127

    $default  reduce using rule 144 (logical_or_expression)


State 191

    2 semicolons: semicolons ';' .

    $default  reduce using rule 2 (semicolons)


State 192

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   87 array_access: qualified_name . '[' expression ']'
   93 method_access: qualified_name .
  152 assignment_variable: qualified_name .

    '.'  shift, and go to state 95
    '['  shift, and go to state 96

    '('       reduce using rule 93 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 152 (assignment_variable)


State 193

   89 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 105


State 194

  151 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 151 (assignment_variable_list)


State 195

  147 expression_list: expression_list . ',' expression
  148 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 160

    $default  reduce using rule 148 (assignment_expression)


State 196

  149 assignment_expression: assignment_variable compound_assignment_operator expression .

    $default  reduce using rule 149 (assignment_expression)


State 197

   61 return_type_list: '(' . type_name_list ')'

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 146
    type_name_list  go to state 216
    type_name       go to state 217
    primitive_type  go to state 37
    function_type   go to state 38
    array_type      go to state 39


State 198

   60 return_type_list: type_name .

    $default  reduce using rule 60 (return_type_list)


State 199

   25 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 25 (function_type)


State 200

   63 parameter_type_list: parameter_type_list ',' . type_name

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 146
    type_name       go to state 218
    primitive_type  go to state 37
    function_type   go to state 38
    array_type      go to state 39


State 201

   26 function_type: FUNC '(' parameter_type_list ')' .
   27              | FUNC '(' parameter_type_list ')' . return_type_list

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 197
    '['       shift, and go to state 29

    $default  reduce using rule 26 (function_type)

    qualified_name    go to state 146
    type_name         go to state 198
    primitive_type    go to state 37
    function_type     go to state 38
    array_type        go to state 39
    return_type_list  go to state 219


State 202

   46 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 220

    field_declarations  go to state 221
    field_declaration   go to state 222


State 203

   47 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    FUNC  shift, and go to state 223

    interface_function_declarations  go to state 224
    interface_function_declaration   go to state 225


State 204

    2 semicolons: semicolons . ';'
   48 type_declaration: TYPE ID type_name semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 48 (type_declaration)


State 205

   41 import_statement: IMPORT qualified_name '.' '*' . semicolons

    ';'  shift, and go to state 129

    semicolons  go to state 226


State 206

   28 array_type: '[' INTEGER ']' type_name .

    $default  reduce using rule 28 (array_type)


State 207

  103 field_initializer: field_name ':' expression .

    $default  reduce using rule 103 (field_initializer)


State 208

   29 field_name: ID .

    $default  reduce using rule 29 (field_name)


State 209

  102 field_initializer_list: field_initializer_list ',' field_initializer .

    $default  reduce using rule 102 (field_initializer_list)


State 210

  147 expression_list: expression_list ',' expression .

    $default  reduce using rule 147 (expression_list)


State 211

   87 array_access: qualified_name '[' expression ']' .

    $default  reduce using rule 87 (array_access)


State 212

  100 struct_initializer: type_name '{' field_initializer_list '}' .

    $default  reduce using rule 100 (struct_initializer)


State 213

   99 struct_initializer: type_name '{' expression_list '}' .

    $default  reduce using rule 99 (struct_initializer)


State 214

   88 array_access: array_complex_primary '[' expression ']' .

    $default  reduce using rule 88 (array_access)


State 215

   90 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 90 (method_call)


State 216

    6 type_name_list: type_name_list . ',' type_name
   61 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 227
    ')'  shift, and go to state 228


State 217

    5 type_name_list: type_name .

    $default  reduce using rule 5 (type_name_list)


State 218

   63 parameter_type_list: parameter_type_list ',' type_name .

    $default  reduce using rule 63 (parameter_type_list)


State 219

   27 function_type: FUNC '(' parameter_type_list ')' return_type_list .

    $default  reduce using rule 27 (function_type)


State 220

   51 field_declaration: ID . type_name semicolons

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 146
    type_name       go to state 229
    primitive_type  go to state 37
    function_type   go to state 38
    array_type      go to state 39


State 221

   46 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   50 field_declarations: field_declarations . field_declaration

    ID   shift, and go to state 220
    '}'  shift, and go to state 230

    field_declaration  go to state 231


State 222

   49 field_declarations: field_declaration .

    $default  reduce using rule 49 (field_declarations)


State 223

   54 interface_function_declaration: FUNC . ID '(' ')' semicolons
   55                               | FUNC . ID '(' ')' return_type_list semicolons
   56                               | FUNC . ID '(' parameter_type_list ')' semicolons
   57                               | FUNC . ID '(' parameter_type_list ')' return_type_list semicolons
   58                               | FUNC . ID '(' parameter_list ')' semicolons
   59                               | FUNC . ID '(' parameter_list ')' return_type_list semicolons

    ID  shift, and go to state 232


State 224

   47 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   53 interface_function_declarations: interface_function_declarations . interface_function_declaration

    FUNC  shift, and go to state 223
    '}'   shift, and go to state 233

    interface_function_declaration  go to state 234


State 225

   52 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 52 (interface_function_declarations)


State 226

    2 semicolons: semicolons . ';'
   41 import_statement: IMPORT qualified_name '.' '*' semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 41 (import_statement)


State 227

    6 type_name_list: type_name_list ',' . type_name

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 146
    type_name       go to state 235
    primitive_type  go to state 37
    function_type   go to state 38
    array_type      go to state 39


State 228

   61 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 61 (return_type_list)


State 229

   51 field_declaration: ID type_name . semicolons

    ';'  shift, and go to state 129

    semicolons  go to state 236


State 230

   46 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 46 (type_declaration)


State 231

   50 field_declarations: field_declarations field_declaration .

    $default  reduce using rule 50 (field_declarations)


State 232

   54 interface_function_declaration: FUNC ID . '(' ')' semicolons
   55                               | FUNC ID . '(' ')' return_type_list semicolons
   56                               | FUNC ID . '(' parameter_type_list ')' semicolons
   57                               | FUNC ID . '(' parameter_type_list ')' return_type_list semicolons
   58                               | FUNC ID . '(' parameter_list ')' semicolons
   59                               | FUNC ID . '(' parameter_list ')' return_type_list semicolons

    '('  shift, and go to state 237


State 233

   47 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 47 (type_declaration)


State 234

   53 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 53 (interface_function_declarations)


State 235

    6 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 6 (type_name_list)


State 236

    2 semicolons: semicolons . ';'
   51 field_declaration: ID type_name semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 51 (field_declaration)


State 237

   54 interface_function_declaration: FUNC ID '(' . ')' semicolons
   55                               | FUNC ID '(' . ')' return_type_list semicolons
   56                               | FUNC ID '(' . parameter_type_list ')' semicolons
   57                               | FUNC ID '(' . parameter_type_list ')' return_type_list semicolons
   58                               | FUNC ID '(' . parameter_list ')' semicolons
   59                               | FUNC ID '(' . parameter_list ')' return_type_list semicolons

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 238
    ')'       shift, and go to state 239
    '['       shift, and go to state 29

    qualified_name       go to state 146
    type_name            go to state 147
    primitive_type       go to state 37
    function_type        go to state 38
    array_type           go to state 39
    parameter_type_list  go to state 240
    parameter_list       go to state 241


State 238

    3 qualified_name: ID .
   64 parameter_list: ID . type_name

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    $default  reduce using rule 3 (qualified_name)

    qualified_name  go to state 146
    type_name       go to state 242
    primitive_type  go to state 37
    function_type   go to state 38
    array_type      go to state 39


State 239

   54 interface_function_declaration: FUNC ID '(' ')' . semicolons
   55                               | FUNC ID '(' ')' . return_type_list semicolons

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ';'       shift, and go to state 129
    '('       shift, and go to state 197
    '['       shift, and go to state 29

    semicolons        go to state 243
    qualified_name    go to state 146
    type_name         go to state 198
    primitive_type    go to state 37
    function_type     go to state 38
    array_type        go to state 39
    return_type_list  go to state 244


State 240

   56 interface_function_declaration: FUNC ID '(' parameter_type_list . ')' semicolons
   57                               | FUNC ID '(' parameter_type_list . ')' return_type_list semicolons
   63 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 200
    ')'  shift, and go to state 245


State 241

   58 interface_function_declaration: FUNC ID '(' parameter_list . ')' semicolons
   59                               | FUNC ID '(' parameter_list . ')' return_type_list semicolons
   65 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 246
    ')'  shift, and go to state 247


State 242

   64 parameter_list: ID type_name .

    $default  reduce using rule 64 (parameter_list)


State 243

    2 semicolons: semicolons . ';'
   54 interface_function_declaration: FUNC ID '(' ')' semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 54 (interface_function_declaration)


State 244

   55 interface_function_declaration: FUNC ID '(' ')' return_type_list . semicolons

    ';'  shift, and go to state 129

    semicolons  go to state 248


State 245

   56 interface_function_declaration: FUNC ID '(' parameter_type_list ')' . semicolons
   57                               | FUNC ID '(' parameter_type_list ')' . return_type_list semicolons

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ';'       shift, and go to state 129
    '('       shift, and go to state 197
    '['       shift, and go to state 29

    semicolons        go to state 249
    qualified_name    go to state 146
    type_name         go to state 198
    primitive_type    go to state 37
    function_type     go to state 38
    array_type        go to state 39
    return_type_list  go to state 250


State 246

   65 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 251


State 247

   58 interface_function_declaration: FUNC ID '(' parameter_list ')' . semicolons
   59                               | FUNC ID '(' parameter_list ')' . return_type_list semicolons

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ';'       shift, and go to state 129
    '('       shift, and go to state 197
    '['       shift, and go to state 29

    semicolons        go to state 252
    qualified_name    go to state 146
    type_name         go to state 198
    primitive_type    go to state 37
    function_type     go to state 38
    array_type        go to state 39
    return_type_list  go to state 253


State 248

    2 semicolons: semicolons . ';'
   55 interface_function_declaration: FUNC ID '(' ')' return_type_list semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 55 (interface_function_declaration)


State 249

    2 semicolons: semicolons . ';'
   56 interface_function_declaration: FUNC ID '(' parameter_type_list ')' semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 56 (interface_function_declaration)


State 250

   57 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list . semicolons

    ';'  shift, and go to state 129

    semicolons  go to state 254


State 251

   65 parameter_list: parameter_list ',' ID . type_name

    FUNC      shift, and go to state 4
    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 146
    type_name       go to state 255
    primitive_type  go to state 37
    function_type   go to state 38
    array_type      go to state 39


State 252

    2 semicolons: semicolons . ';'
   58 interface_function_declaration: FUNC ID '(' parameter_list ')' semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 58 (interface_function_declaration)


State 253

   59 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list . semicolons

    ';'  shift, and go to state 129

    semicolons  go to state 256


State 254

    2 semicolons: semicolons . ';'
   57 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 57 (interface_function_declaration)


State 255

   65 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 65 (parameter_list)


State 256

    2 semicolons: semicolons . ';'
   59 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list semicolons .

    ';'  shift, and go to state 191

    $default  reduce using rule 59 (interface_function_declaration)
