Terminals unused in grammar

   ELLIPSIS
   NOT
   IF
   ELSE
   WHILE
   DO
   FOR
   IN
   SWITCH
   CASE
   BREAK
   CONTINUE
   DEFAULT
   VAR
   RETURN
   CONST
   HEX
   OCT
   IFX


Grammar

    0 $accept: program $end

    1 semicolons: ';'
    2           | semicolons ';'

    3 qualified_name: ID
    4               | qualified_name '.' ID

    5 type_name_list: type_name
    6               | type_name_list ',' type_name

    7 type_name: primitive_type
    8          | qualified_name

    9 primitive_type: UINT8
   10               | UINT16
   11               | UINT32
   12               | UINT64
   13               | INT8
   14               | INT16
   15               | INT32
   16               | INT64
   17               | FLOAT32
   18               | FLOAT64
   19               | BOOL
   20               | STRING

   21 field_name: ID

   22 program: package_statement import_statements declarations
   23        | package_statement import_statements
   24        | package_statement declarations
   25        | import_statements declarations
   26        | package_statement
   27        | import_statements
   28        | declarations

   29 package_statement: PACKAGE qualified_name semicolons

   30 import_statements: import_statement
   31                  | import_statements import_statement

   32 import_statement: IMPORT qualified_name semicolons
   33                 | IMPORT qualified_name '.' '*' semicolons

   34 declarations: type_declaration
   35             | declarations type_declaration
   36             | expression_statement
   37             | declarations expression_statement

   38 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   39                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   40                 | TYPE ID type_name semicolons

   41 field_declarations: field_declaration
   42                   | field_declarations field_declaration

   43 field_declaration: ID type_name semicolons

   44 interface_function_declarations: interface_function_declaration
   45                                | interface_function_declarations interface_function_declaration

   46 interface_function_declaration: FUNC ID '(' ')' semicolons
   47                               | FUNC ID '(' ')' return_type_list semicolons
   48                               | FUNC ID '(' parameter_type_list ')' semicolons
   49                               | FUNC ID '(' parameter_type_list ')' return_type_list semicolons
   50                               | FUNC ID '(' parameter_list ')' semicolons
   51                               | FUNC ID '(' parameter_list ')' return_type_list semicolons

   52 return_type_list: type_name
   53                 | '(' type_name_list ')'

   54 parameter_type_list: type_name
   55                    | parameter_type_list ',' type_name

   56 parameter_list: ID type_name
   57               | parameter_list ',' ID type_name

   58 primary_expression: qualified_name
   59                   | just_not_name

   60 just_not_name: TOKEN_THIS
   61              | initializer_expression
   62              | complex_primary

   63 complex_primary: '(' expression ')'
   64                | complex_primary_no_parenthesis

   65 complex_primary_no_parenthesis: literal_name
   66                               | array_access
   67                               | field_access
   68                               | method_call

   69 literal_name: INTEGER
   70             | FLOAT
   71             | STRING_LITERAL
   72             | TOKEN_NULL
   73             | TOKEN_TRUE
   74             | TOKEN_FALSE

   75 array_complex_primary: '(' expression ')'
   76                      | array_access
   77                      | field_access
   78                      | method_call

   79 array_access: qualified_name '[' expression ']'
   80             | array_complex_primary '[' expression ']'

   81 field_access: just_not_name '.' ID

   82 method_call: method_access '(' argument_list ')'
   83            | method_access '(' ')'

   84 method_access: complex_primary_no_parenthesis
   85              | qualified_name

   86 initializer_expression: struct_initializer

   87 struct_initializer: '{' '}'
   88                   | '{' expression_list '}'
   89                   | '{' field_initializer_list '}'
   90                   | type_name '{' '}'
   91                   | type_name '{' expression_list '}'
   92                   | type_name '{' field_initializer_list '}'

   93 field_initializer_list: field_initializer
   94                       | field_initializer_list ',' field_initializer

   95 field_initializer: field_name ':' expression

   96 postfix_expression: primary_expression
   97                   | real_postfix_expression

   98 real_postfix_expression: postfix_expression INC
   99                        | postfix_expression DEC

  100 argument_list: expression_list

  101 unary_expression: postfix_expression
  102                 | INC unary_expression
  103                 | DEC unary_expression
  104                 | unary_operator unary_expression

  105 unary_operator: '+'
  106               | '-'
  107               | '~'
  108               | '!'

  109 multiplicative_expression: unary_expression
  110                          | multiplicative_expression '*' unary_expression
  111                          | multiplicative_expression '/' unary_expression
  112                          | multiplicative_expression '%' unary_expression

  113 additive_expression: multiplicative_expression
  114                    | additive_expression '+' multiplicative_expression
  115                    | additive_expression '-' multiplicative_expression

  116 shift_expression: additive_expression
  117                 | shift_expression SHIFT_LEFT additive_expression
  118                 | shift_expression SHIFT_RIGHT additive_expression

  119 relational_expression: shift_expression
  120                      | relational_expression '<' shift_expression
  121                      | relational_expression '>' shift_expression
  122                      | relational_expression LE shift_expression
  123                      | relational_expression GE shift_expression

  124 equality_expression: relational_expression
  125                    | equality_expression EQ relational_expression
  126                    | equality_expression NE relational_expression

  127 and_expression: equality_expression
  128               | and_expression '&' equality_expression

  129 exclusive_or_expression: and_expression
  130                        | exclusive_or_expression '^' and_expression

  131 inclusive_or_expression: exclusive_or_expression
  132                        | inclusive_or_expression '|' exclusive_or_expression

  133 logical_and_expression: inclusive_or_expression
  134                       | logical_and_expression AND inclusive_or_expression

  135 logical_or_expression: logical_and_expression
  136                      | logical_or_expression OR logical_and_expression

  137 expression: logical_or_expression

  138 expression_list: expression
  139                | expression_list ',' expression

  140 assignment_expression: assignment_variable_list '=' expression_list
  141                      | assignment_variable compound_assignment_operator expression

  142 assignment_variable_list: assignment_variable
  143                         | assignment_variable_list ',' assignment_variable

  144 assignment_variable: qualified_name
  145                    | array_access
  146                    | field_access

  147 compound_assignment_operator: ADD_ASSIGN
  148                             | SUB_ASSIGN
  149                             | MUL_ASSIGN
  150                             | DIV_ASSIGN
  151                             | MOD_ASSIGN
  152                             | AND_ASSIGN
  153                             | OR_ASSIGN
  154                             | XOR_ASSIGN
  155                             | RIGHT_ASSIGN
  156                             | LEFT_ASSIGN

  157 expression_statement: expression semicolons
  158                     | assignment_expression semicolons


Terminals, with rules where they appear

$end (0) 0
'!' (33) 108
'%' (37) 112
'&' (38) 128
'(' (40) 46 47 48 49 50 51 53 63 75 82 83
')' (41) 46 47 48 49 50 51 53 63 75 82 83
'*' (42) 33 110
'+' (43) 105 114
',' (44) 6 55 57 94 139 143
'-' (45) 106 115
'.' (46) 4 33 81
'/' (47) 111
':' (58) 95
';' (59) 1 2
'<' (60) 120
'=' (61) 140
'>' (62) 121
'[' (91) 79 80
']' (93) 79 80
'^' (94) 130
'{' (123) 38 39 87 88 89 90 91 92
'|' (124) 132
'}' (125) 38 39 87 88 89 90 91 92
'~' (126) 107
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 147
SUB_ASSIGN (260) 148
MUL_ASSIGN (261) 149
DIV_ASSIGN (262) 150
MOD_ASSIGN (263) 151
AND_ASSIGN (264) 152
OR_ASSIGN (265) 153
XOR_ASSIGN (266) 154
RIGHT_ASSIGN (267) 155
LEFT_ASSIGN (268) 156
EQ (269) 125
NE (270) 126
GE (271) 123
LE (272) 122
AND (273) 134
OR (274) 136
NOT (275)
SHIFT_LEFT (276) 117
SHIFT_RIGHT (277) 118
INC (278) 98 102
DEC (279) 99 103
TOKEN_THIS (280) 60
IF (281)
ELSE (282)
WHILE (283)
DO (284)
FOR (285)
IN (286)
SWITCH (287)
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292)
FUNC (293) 46 47 48 49 50 51
RETURN (294)
STRUCT (295) 38
INTERFACE (296) 39
TYPE (297) 38 39 40
CONST (298)
PACKAGE (299) 29
IMPORT (300) 32 33
INT8 (301) 13
INT16 (302) 14
INT32 (303) 15
INT64 (304) 16
UINT8 (305) 9
UINT16 (306) 10
UINT32 (307) 11
UINT64 (308) 12
FLOAT32 (309) 17
FLOAT64 (310) 18
BOOL (311) 19
STRING (312) 20
TOKEN_NULL (313) 72
TOKEN_TRUE (314) 73
TOKEN_FALSE (315) 74
INTEGER (316) 69
HEX (317)
OCT (318)
FLOAT (319) 70
STRING_LITERAL (320) 71
ID (321) 3 4 21 38 39 40 43 46 47 48 49 50 51 56 57 81
IFX (322)


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
semicolons (92)
    on left: 1 2, on right: 2 29 32 33 40 43 46 47 48 49 50 51 157
    158
qualified_name (93)
    on left: 3 4, on right: 4 8 29 32 33 58 79 85 144
type_name_list (94)
    on left: 5 6, on right: 6 53
type_name (95)
    on left: 7 8, on right: 5 6 40 43 52 54 55 56 57 90 91 92
primitive_type (96)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20, on right: 7
field_name (97)
    on left: 21, on right: 95
program (98)
    on left: 22 23 24 25 26 27 28, on right: 0
package_statement (99)
    on left: 29, on right: 22 23 24 26
import_statements (100)
    on left: 30 31, on right: 22 23 25 27 31
import_statement (101)
    on left: 32 33, on right: 30 31
declarations (102)
    on left: 34 35 36 37, on right: 22 24 25 28 35 37
type_declaration (103)
    on left: 38 39 40, on right: 34 35
field_declarations (104)
    on left: 41 42, on right: 38 42
field_declaration (105)
    on left: 43, on right: 41 42
interface_function_declarations (106)
    on left: 44 45, on right: 39 45
interface_function_declaration (107)
    on left: 46 47 48 49 50 51, on right: 44 45
return_type_list (108)
    on left: 52 53, on right: 47 49 51
parameter_type_list (109)
    on left: 54 55, on right: 48 49 55
parameter_list (110)
    on left: 56 57, on right: 50 51 57
primary_expression (111)
    on left: 58 59, on right: 96
just_not_name (112)
    on left: 60 61 62, on right: 59 81
complex_primary (113)
    on left: 63 64, on right: 62
complex_primary_no_parenthesis (114)
    on left: 65 66 67 68, on right: 64 84
literal_name (115)
    on left: 69 70 71 72 73 74, on right: 65
array_complex_primary (116)
    on left: 75 76 77 78, on right: 80
array_access (117)
    on left: 79 80, on right: 66 76 145
field_access (118)
    on left: 81, on right: 67 77 146
method_call (119)
    on left: 82 83, on right: 68 78
method_access (120)
    on left: 84 85, on right: 82 83
initializer_expression (121)
    on left: 86, on right: 61
struct_initializer (122)
    on left: 87 88 89 90 91 92, on right: 86
field_initializer_list (123)
    on left: 93 94, on right: 89 92 94
field_initializer (124)
    on left: 95, on right: 93 94
postfix_expression (125)
    on left: 96 97, on right: 98 99 101
real_postfix_expression (126)
    on left: 98 99, on right: 97
argument_list (127)
    on left: 100, on right: 82
unary_expression (128)
    on left: 101 102 103 104, on right: 102 103 104 109 110 111 112
unary_operator (129)
    on left: 105 106 107 108, on right: 104
multiplicative_expression (130)
    on left: 109 110 111 112, on right: 110 111 112 113 114 115
additive_expression (131)
    on left: 113 114 115, on right: 114 115 116 117 118
shift_expression (132)
    on left: 116 117 118, on right: 117 118 119 120 121 122 123
relational_expression (133)
    on left: 119 120 121 122 123, on right: 120 121 122 123 124 125
    126
equality_expression (134)
    on left: 124 125 126, on right: 125 126 127 128
and_expression (135)
    on left: 127 128, on right: 128 129 130
exclusive_or_expression (136)
    on left: 129 130, on right: 130 131 132
inclusive_or_expression (137)
    on left: 131 132, on right: 132 133 134
logical_and_expression (138)
    on left: 133 134, on right: 134 135 136
logical_or_expression (139)
    on left: 135 136, on right: 136 137
expression (140)
    on left: 137, on right: 63 75 79 80 95 138 139 141 157
expression_list (141)
    on left: 138 139, on right: 88 91 100 139 140
assignment_expression (142)
    on left: 140 141, on right: 158
assignment_variable_list (143)
    on left: 142 143, on right: 140 143
assignment_variable (144)
    on left: 144 145 146, on right: 141 142 143
compound_assignment_operator (145)
    on left: 147 148 149 150 151 152 153 154 155 156, on right: 141
expression_statement (146)
    on left: 157 158, on right: 36 37


State 0

    0 $accept: . program $end

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TYPE            shift, and go to state 4
    PACKAGE         shift, and go to state 5
    IMPORT          shift, and go to state 6
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 32
    type_name                       go to state 33
    primitive_type                  go to state 34
    program                         go to state 35
    package_statement               go to state 36
    import_statements               go to state 37
    import_statement                go to state 38
    declarations                    go to state 39
    type_declaration                go to state 40
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 47
    field_access                    go to state 48
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 67
    assignment_expression           go to state 68
    assignment_variable_list        go to state 69
    assignment_variable             go to state 70
    expression_statement            go to state 71


State 1

  102 unary_expression: INC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 75
    unary_operator                  go to state 56


State 2

  103 unary_expression: DEC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 76
    unary_operator                  go to state 56


State 3

   60 just_not_name: TOKEN_THIS .

    $default  reduce using rule 60 (just_not_name)


State 4

   38 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   39                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   40                 | TYPE . ID type_name semicolons

    ID  shift, and go to state 77


State 5

   29 package_statement: PACKAGE . qualified_name semicolons

    ID  shift, and go to state 25

    qualified_name  go to state 78


State 6

   32 import_statement: IMPORT . qualified_name semicolons
   33                 | IMPORT . qualified_name '.' '*' semicolons

    ID  shift, and go to state 25

    qualified_name  go to state 79


State 7

   13 primitive_type: INT8 .

    $default  reduce using rule 13 (primitive_type)


State 8

   14 primitive_type: INT16 .

    $default  reduce using rule 14 (primitive_type)


State 9

   15 primitive_type: INT32 .

    $default  reduce using rule 15 (primitive_type)


State 10

   16 primitive_type: INT64 .

    $default  reduce using rule 16 (primitive_type)


State 11

    9 primitive_type: UINT8 .

    $default  reduce using rule 9 (primitive_type)


State 12

   10 primitive_type: UINT16 .

    $default  reduce using rule 10 (primitive_type)


State 13

   11 primitive_type: UINT32 .

    $default  reduce using rule 11 (primitive_type)


State 14

   12 primitive_type: UINT64 .

    $default  reduce using rule 12 (primitive_type)


State 15

   17 primitive_type: FLOAT32 .

    $default  reduce using rule 17 (primitive_type)


State 16

   18 primitive_type: FLOAT64 .

    $default  reduce using rule 18 (primitive_type)


State 17

   19 primitive_type: BOOL .

    $default  reduce using rule 19 (primitive_type)


State 18

   20 primitive_type: STRING .

    $default  reduce using rule 20 (primitive_type)


State 19

   72 literal_name: TOKEN_NULL .

    $default  reduce using rule 72 (literal_name)


State 20

   73 literal_name: TOKEN_TRUE .

    $default  reduce using rule 73 (literal_name)


State 21

   74 literal_name: TOKEN_FALSE .

    $default  reduce using rule 74 (literal_name)


State 22

   69 literal_name: INTEGER .

    $default  reduce using rule 69 (literal_name)


State 23

   70 literal_name: FLOAT .

    $default  reduce using rule 70 (literal_name)


State 24

   71 literal_name: STRING_LITERAL .

    $default  reduce using rule 71 (literal_name)


State 25

    3 qualified_name: ID .

    $default  reduce using rule 3 (qualified_name)


State 26

   87 struct_initializer: '{' . '}'
   88                   | '{' . expression_list '}'
   89                   | '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 80
    '{'             shift, and go to state 26
    '}'             shift, and go to state 81
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    field_name                      go to state 82
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    field_initializer_list          go to state 83
    field_initializer               go to state 84
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 85
    expression_list                 go to state 86


State 27

   63 complex_primary: '(' . expression ')'
   75 array_complex_primary: '(' . expression ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 87


State 28

  105 unary_operator: '+' .

    $default  reduce using rule 105 (unary_operator)


State 29

  106 unary_operator: '-' .

    $default  reduce using rule 106 (unary_operator)


State 30

  107 unary_operator: '~' .

    $default  reduce using rule 107 (unary_operator)


State 31

  108 unary_operator: '!' .

    $default  reduce using rule 108 (unary_operator)


State 32

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   58 primary_expression: qualified_name .
   79 array_access: qualified_name . '[' expression ']'
   85 method_access: qualified_name .
  144 assignment_variable: qualified_name .

    '.'  shift, and go to state 88
    '['  shift, and go to state 89

    ADD_ASSIGN    reduce using rule 144 (assignment_variable)
    SUB_ASSIGN    reduce using rule 144 (assignment_variable)
    MUL_ASSIGN    reduce using rule 144 (assignment_variable)
    DIV_ASSIGN    reduce using rule 144 (assignment_variable)
    MOD_ASSIGN    reduce using rule 144 (assignment_variable)
    AND_ASSIGN    reduce using rule 144 (assignment_variable)
    OR_ASSIGN     reduce using rule 144 (assignment_variable)
    XOR_ASSIGN    reduce using rule 144 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 144 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 144 (assignment_variable)
    ','           reduce using rule 144 (assignment_variable)
    '{'           reduce using rule 8 (type_name)
    '('           reduce using rule 85 (method_access)
    '='           reduce using rule 144 (assignment_variable)
    $default      reduce using rule 58 (primary_expression)


State 33

   90 struct_initializer: type_name . '{' '}'
   91                   | type_name . '{' expression_list '}'
   92                   | type_name . '{' field_initializer_list '}'

    '{'  shift, and go to state 90


State 34

    7 type_name: primitive_type .

    $default  reduce using rule 7 (type_name)


State 35

    0 $accept: program . $end

    $end  shift, and go to state 91


State 36

   22 program: package_statement . import_statements declarations
   23        | package_statement . import_statements
   24        | package_statement . declarations
   26        | package_statement .

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TYPE            shift, and go to state 4
    IMPORT          shift, and go to state 6
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    $default  reduce using rule 26 (program)

    qualified_name                  go to state 32
    type_name                       go to state 33
    primitive_type                  go to state 34
    import_statements               go to state 92
    import_statement                go to state 38
    declarations                    go to state 93
    type_declaration                go to state 40
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 47
    field_access                    go to state 48
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 67
    assignment_expression           go to state 68
    assignment_variable_list        go to state 69
    assignment_variable             go to state 70
    expression_statement            go to state 71


State 37

   25 program: import_statements . declarations
   27        | import_statements .
   31 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TYPE            shift, and go to state 4
    IMPORT          shift, and go to state 6
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    $default  reduce using rule 27 (program)

    qualified_name                  go to state 32
    type_name                       go to state 33
    primitive_type                  go to state 34
    import_statement                go to state 94
    declarations                    go to state 95
    type_declaration                go to state 40
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 47
    field_access                    go to state 48
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 67
    assignment_expression           go to state 68
    assignment_variable_list        go to state 69
    assignment_variable             go to state 70
    expression_statement            go to state 71


State 38

   30 import_statements: import_statement .

    $default  reduce using rule 30 (import_statements)


State 39

   28 program: declarations .
   35 declarations: declarations . type_declaration
   37             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TYPE            shift, and go to state 4
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    $default  reduce using rule 28 (program)

    qualified_name                  go to state 32
    type_name                       go to state 33
    primitive_type                  go to state 34
    type_declaration                go to state 96
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 47
    field_access                    go to state 48
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 67
    assignment_expression           go to state 68
    assignment_variable_list        go to state 69
    assignment_variable             go to state 70
    expression_statement            go to state 97


State 40

   34 declarations: type_declaration .

    $default  reduce using rule 34 (declarations)


State 41

   96 postfix_expression: primary_expression .

    $default  reduce using rule 96 (postfix_expression)


State 42

   59 primary_expression: just_not_name .
   81 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 98

    $default  reduce using rule 59 (primary_expression)


State 43

   62 just_not_name: complex_primary .

    $default  reduce using rule 62 (just_not_name)


State 44

   64 complex_primary: complex_primary_no_parenthesis .
   84 method_access: complex_primary_no_parenthesis .

    '('       reduce using rule 84 (method_access)
    $default  reduce using rule 64 (complex_primary)


State 45

   65 complex_primary_no_parenthesis: literal_name .

    $default  reduce using rule 65 (complex_primary_no_parenthesis)


State 46

   80 array_access: array_complex_primary . '[' expression ']'

    '['  shift, and go to state 99


State 47

   66 complex_primary_no_parenthesis: array_access .
   76 array_complex_primary: array_access .
  145 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 145 (assignment_variable)
    SUB_ASSIGN    reduce using rule 145 (assignment_variable)
    MUL_ASSIGN    reduce using rule 145 (assignment_variable)
    DIV_ASSIGN    reduce using rule 145 (assignment_variable)
    MOD_ASSIGN    reduce using rule 145 (assignment_variable)
    AND_ASSIGN    reduce using rule 145 (assignment_variable)
    OR_ASSIGN     reduce using rule 145 (assignment_variable)
    XOR_ASSIGN    reduce using rule 145 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 145 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 145 (assignment_variable)
    ','           reduce using rule 145 (assignment_variable)
    '['           reduce using rule 76 (array_complex_primary)
    '='           reduce using rule 145 (assignment_variable)
    $default      reduce using rule 66 (complex_primary_no_parenthesis)


State 48

   67 complex_primary_no_parenthesis: field_access .
   77 array_complex_primary: field_access .
  146 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 146 (assignment_variable)
    SUB_ASSIGN    reduce using rule 146 (assignment_variable)
    MUL_ASSIGN    reduce using rule 146 (assignment_variable)
    DIV_ASSIGN    reduce using rule 146 (assignment_variable)
    MOD_ASSIGN    reduce using rule 146 (assignment_variable)
    AND_ASSIGN    reduce using rule 146 (assignment_variable)
    OR_ASSIGN     reduce using rule 146 (assignment_variable)
    XOR_ASSIGN    reduce using rule 146 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 146 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 146 (assignment_variable)
    ','           reduce using rule 146 (assignment_variable)
    '['           reduce using rule 77 (array_complex_primary)
    '='           reduce using rule 146 (assignment_variable)
    $default      reduce using rule 67 (complex_primary_no_parenthesis)


State 49

   68 complex_primary_no_parenthesis: method_call .
   78 array_complex_primary: method_call .

    '['       reduce using rule 78 (array_complex_primary)
    $default  reduce using rule 68 (complex_primary_no_parenthesis)


State 50

   82 method_call: method_access . '(' argument_list ')'
   83            | method_access . '(' ')'

    '('  shift, and go to state 100


State 51

   61 just_not_name: initializer_expression .

    $default  reduce using rule 61 (just_not_name)


State 52

   86 initializer_expression: struct_initializer .

    $default  reduce using rule 86 (initializer_expression)


State 53

   98 real_postfix_expression: postfix_expression . INC
   99                        | postfix_expression . DEC
  101 unary_expression: postfix_expression .

    INC  shift, and go to state 101
    DEC  shift, and go to state 102

    $default  reduce using rule 101 (unary_expression)


State 54

   97 postfix_expression: real_postfix_expression .

    $default  reduce using rule 97 (postfix_expression)


State 55

  109 multiplicative_expression: unary_expression .

    $default  reduce using rule 109 (multiplicative_expression)


State 56

  104 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 103
    unary_operator                  go to state 56


State 57

  110 multiplicative_expression: multiplicative_expression . '*' unary_expression
  111                          | multiplicative_expression . '/' unary_expression
  112                          | multiplicative_expression . '%' unary_expression
  113 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 104
    '/'  shift, and go to state 105
    '%'  shift, and go to state 106

    $default  reduce using rule 113 (additive_expression)


State 58

  114 additive_expression: additive_expression . '+' multiplicative_expression
  115                    | additive_expression . '-' multiplicative_expression
  116 shift_expression: additive_expression .

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108

    $default  reduce using rule 116 (shift_expression)


State 59

  117 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  118                 | shift_expression . SHIFT_RIGHT additive_expression
  119 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 119 (relational_expression)


State 60

  120 relational_expression: relational_expression . '<' shift_expression
  121                      | relational_expression . '>' shift_expression
  122                      | relational_expression . LE shift_expression
  123                      | relational_expression . GE shift_expression
  124 equality_expression: relational_expression .

    GE   shift, and go to state 111
    LE   shift, and go to state 112
    '<'  shift, and go to state 113
    '>'  shift, and go to state 114

    $default  reduce using rule 124 (equality_expression)


State 61

  125 equality_expression: equality_expression . EQ relational_expression
  126                    | equality_expression . NE relational_expression
  127 and_expression: equality_expression .

    EQ  shift, and go to state 115
    NE  shift, and go to state 116

    $default  reduce using rule 127 (and_expression)


State 62

  128 and_expression: and_expression . '&' equality_expression
  129 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 117

    $default  reduce using rule 129 (exclusive_or_expression)


State 63

  130 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  131 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 118

    $default  reduce using rule 131 (inclusive_or_expression)


State 64

  132 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  133 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 119

    $default  reduce using rule 133 (logical_and_expression)


State 65

  134 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  135 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 120

    $default  reduce using rule 135 (logical_or_expression)


State 66

  136 logical_or_expression: logical_or_expression . OR logical_and_expression
  137 expression: logical_or_expression .

    OR  shift, and go to state 121

    $default  reduce using rule 137 (expression)


State 67

  157 expression_statement: expression . semicolons

    ';'  shift, and go to state 122

    semicolons  go to state 123


State 68

  158 expression_statement: assignment_expression . semicolons

    ';'  shift, and go to state 122

    semicolons  go to state 124


State 69

  140 assignment_expression: assignment_variable_list . '=' expression_list
  143 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 125
    '='  shift, and go to state 126


State 70

  141 assignment_expression: assignment_variable . compound_assignment_operator expression
  142 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 127
    SUB_ASSIGN    shift, and go to state 128
    MUL_ASSIGN    shift, and go to state 129
    DIV_ASSIGN    shift, and go to state 130
    MOD_ASSIGN    shift, and go to state 131
    AND_ASSIGN    shift, and go to state 132
    OR_ASSIGN     shift, and go to state 133
    XOR_ASSIGN    shift, and go to state 134
    RIGHT_ASSIGN  shift, and go to state 135
    LEFT_ASSIGN   shift, and go to state 136

    $default  reduce using rule 142 (assignment_variable_list)

    compound_assignment_operator  go to state 137


State 71

   36 declarations: expression_statement .

    $default  reduce using rule 36 (declarations)


State 72

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   58 primary_expression: qualified_name .
   79 array_access: qualified_name . '[' expression ']'
   85 method_access: qualified_name .

    '.'  shift, and go to state 88
    '['  shift, and go to state 89

    '{'       reduce using rule 8 (type_name)
    '('       reduce using rule 85 (method_access)
    $default  reduce using rule 58 (primary_expression)


State 73

   66 complex_primary_no_parenthesis: array_access .
   76 array_complex_primary: array_access .

    '['       reduce using rule 76 (array_complex_primary)
    $default  reduce using rule 66 (complex_primary_no_parenthesis)


State 74

   67 complex_primary_no_parenthesis: field_access .
   77 array_complex_primary: field_access .

    '['       reduce using rule 77 (array_complex_primary)
    $default  reduce using rule 67 (complex_primary_no_parenthesis)


State 75

  102 unary_expression: INC unary_expression .

    $default  reduce using rule 102 (unary_expression)


State 76

  103 unary_expression: DEC unary_expression .

    $default  reduce using rule 103 (unary_expression)


State 77

   38 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   39                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   40                 | TYPE ID . type_name semicolons

    STRUCT     shift, and go to state 138
    INTERFACE  shift, and go to state 139
    INT8       shift, and go to state 7
    INT16      shift, and go to state 8
    INT32      shift, and go to state 9
    INT64      shift, and go to state 10
    UINT8      shift, and go to state 11
    UINT16     shift, and go to state 12
    UINT32     shift, and go to state 13
    UINT64     shift, and go to state 14
    FLOAT32    shift, and go to state 15
    FLOAT64    shift, and go to state 16
    BOOL       shift, and go to state 17
    STRING     shift, and go to state 18
    ID         shift, and go to state 25

    qualified_name  go to state 140
    type_name       go to state 141
    primitive_type  go to state 34


State 78

    4 qualified_name: qualified_name . '.' ID
   29 package_statement: PACKAGE qualified_name . semicolons

    ';'  shift, and go to state 122
    '.'  shift, and go to state 88

    semicolons  go to state 142


State 79

    4 qualified_name: qualified_name . '.' ID
   32 import_statement: IMPORT qualified_name . semicolons
   33                 | IMPORT qualified_name . '.' '*' semicolons

    ';'  shift, and go to state 122
    '.'  shift, and go to state 143

    semicolons  go to state 144


State 80

    3 qualified_name: ID .
   21 field_name: ID .

    ':'       reduce using rule 21 (field_name)
    $default  reduce using rule 3 (qualified_name)


State 81

   87 struct_initializer: '{' '}' .

    $default  reduce using rule 87 (struct_initializer)


State 82

   95 field_initializer: field_name . ':' expression

    ':'  shift, and go to state 145


State 83

   89 struct_initializer: '{' field_initializer_list . '}'
   94 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 146
    '}'  shift, and go to state 147


State 84

   93 field_initializer_list: field_initializer .

    $default  reduce using rule 93 (field_initializer_list)


State 85

  138 expression_list: expression .

    $default  reduce using rule 138 (expression_list)


State 86

   88 struct_initializer: '{' expression_list . '}'
  139 expression_list: expression_list . ',' expression

    ','  shift, and go to state 148
    '}'  shift, and go to state 149


State 87

   63 complex_primary: '(' expression . ')'
   75 array_complex_primary: '(' expression . ')'

    ')'  shift, and go to state 150


State 88

    4 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 151


State 89

   79 array_access: qualified_name '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 152


State 90

   90 struct_initializer: type_name '{' . '}'
   91                   | type_name '{' . expression_list '}'
   92                   | type_name '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 80
    '{'             shift, and go to state 26
    '}'             shift, and go to state 153
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    field_name                      go to state 82
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    field_initializer_list          go to state 154
    field_initializer               go to state 84
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 85
    expression_list                 go to state 155


State 91

    0 $accept: program $end .

    $default  accept


State 92

   22 program: package_statement import_statements . declarations
   23        | package_statement import_statements .
   31 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TYPE            shift, and go to state 4
    IMPORT          shift, and go to state 6
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    $default  reduce using rule 23 (program)

    qualified_name                  go to state 32
    type_name                       go to state 33
    primitive_type                  go to state 34
    import_statement                go to state 94
    declarations                    go to state 156
    type_declaration                go to state 40
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 47
    field_access                    go to state 48
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 67
    assignment_expression           go to state 68
    assignment_variable_list        go to state 69
    assignment_variable             go to state 70
    expression_statement            go to state 71


State 93

   24 program: package_statement declarations .
   35 declarations: declarations . type_declaration
   37             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TYPE            shift, and go to state 4
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    $default  reduce using rule 24 (program)

    qualified_name                  go to state 32
    type_name                       go to state 33
    primitive_type                  go to state 34
    type_declaration                go to state 96
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 47
    field_access                    go to state 48
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 67
    assignment_expression           go to state 68
    assignment_variable_list        go to state 69
    assignment_variable             go to state 70
    expression_statement            go to state 97


State 94

   31 import_statements: import_statements import_statement .

    $default  reduce using rule 31 (import_statements)


State 95

   25 program: import_statements declarations .
   35 declarations: declarations . type_declaration
   37             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TYPE            shift, and go to state 4
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    $default  reduce using rule 25 (program)

    qualified_name                  go to state 32
    type_name                       go to state 33
    primitive_type                  go to state 34
    type_declaration                go to state 96
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 47
    field_access                    go to state 48
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 67
    assignment_expression           go to state 68
    assignment_variable_list        go to state 69
    assignment_variable             go to state 70
    expression_statement            go to state 97


State 96

   35 declarations: declarations type_declaration .

    $default  reduce using rule 35 (declarations)


State 97

   37 declarations: declarations expression_statement .

    $default  reduce using rule 37 (declarations)


State 98

   81 field_access: just_not_name '.' . ID

    ID  shift, and go to state 157


State 99

   80 array_access: array_complex_primary '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 158


State 100

   82 method_call: method_access '(' . argument_list ')'
   83            | method_access '(' . ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    ')'             shift, and go to state 159
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    argument_list                   go to state 160
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 85
    expression_list                 go to state 161


State 101

   98 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 98 (real_postfix_expression)


State 102

   99 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 99 (real_postfix_expression)


State 103

  104 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 104 (unary_expression)


State 104

  110 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 162
    unary_operator                  go to state 56


State 105

  111 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 163
    unary_operator                  go to state 56


State 106

  112 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 164
    unary_operator                  go to state 56


State 107

  114 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 165


State 108

  115 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 166


State 109

  117 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 167


State 110

  118 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 168


State 111

  123 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 169


State 112

  122 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 170


State 113

  120 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 171


State 114

  121 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 172


State 115

  125 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 173


State 116

  126 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 174


State 117

  128 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 175


State 118

  130 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 176


State 119

  132 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 177


State 120

  134 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 178


State 121

  136 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 179


State 122

    1 semicolons: ';' .

    $default  reduce using rule 1 (semicolons)


State 123

    2 semicolons: semicolons . ';'
  157 expression_statement: expression semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 157 (expression_statement)


State 124

    2 semicolons: semicolons . ';'
  158 expression_statement: assignment_expression semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 158 (expression_statement)


State 125

  143 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27

    qualified_name                  go to state 181
    type_name                       go to state 33
    primitive_type                  go to state 34
    just_not_name                   go to state 182
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 47
    field_access                    go to state 48
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    assignment_variable             go to state 183


State 126

  140 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 85
    expression_list                 go to state 184


State 127

  147 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 147 (compound_assignment_operator)


State 128

  148 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 148 (compound_assignment_operator)


State 129

  149 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 149 (compound_assignment_operator)


State 130

  150 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 150 (compound_assignment_operator)


State 131

  151 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 151 (compound_assignment_operator)


State 132

  152 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 152 (compound_assignment_operator)


State 133

  153 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 153 (compound_assignment_operator)


State 134

  154 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 154 (compound_assignment_operator)


State 135

  155 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 155 (compound_assignment_operator)


State 136

  156 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 156 (compound_assignment_operator)


State 137

  141 assignment_expression: assignment_variable compound_assignment_operator . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 185


State 138

   38 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 186


State 139

   39 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 187


State 140

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .

    '.'  shift, and go to state 88

    $default  reduce using rule 8 (type_name)


State 141

   40 type_declaration: TYPE ID type_name . semicolons

    ';'  shift, and go to state 122

    semicolons  go to state 188


State 142

    2 semicolons: semicolons . ';'
   29 package_statement: PACKAGE qualified_name semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 29 (package_statement)


State 143

    4 qualified_name: qualified_name '.' . ID
   33 import_statement: IMPORT qualified_name '.' . '*' semicolons

    ID   shift, and go to state 151
    '*'  shift, and go to state 189


State 144

    2 semicolons: semicolons . ';'
   32 import_statement: IMPORT qualified_name semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 32 (import_statement)


State 145

   95 field_initializer: field_name ':' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 190


State 146

   94 field_initializer_list: field_initializer_list ',' . field_initializer

    ID  shift, and go to state 191

    field_name         go to state 82
    field_initializer  go to state 192


State 147

   89 struct_initializer: '{' field_initializer_list '}' .

    $default  reduce using rule 89 (struct_initializer)


State 148

  139 expression_list: expression_list ',' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    qualified_name                  go to state 72
    type_name                       go to state 33
    primitive_type                  go to state 34
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 73
    field_access                    go to state 74
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 193


State 149

   88 struct_initializer: '{' expression_list '}' .

    $default  reduce using rule 88 (struct_initializer)


State 150

   63 complex_primary: '(' expression ')' .
   75 array_complex_primary: '(' expression ')' .

    '['       reduce using rule 75 (array_complex_primary)
    $default  reduce using rule 63 (complex_primary)


State 151

    4 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 4 (qualified_name)


State 152

   79 array_access: qualified_name '[' expression . ']'

    ']'  shift, and go to state 194


State 153

   90 struct_initializer: type_name '{' '}' .

    $default  reduce using rule 90 (struct_initializer)


State 154

   92 struct_initializer: type_name '{' field_initializer_list . '}'
   94 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 146
    '}'  shift, and go to state 195


State 155

   91 struct_initializer: type_name '{' expression_list . '}'
  139 expression_list: expression_list . ',' expression

    ','  shift, and go to state 148
    '}'  shift, and go to state 196


State 156

   22 program: package_statement import_statements declarations .
   35 declarations: declarations . type_declaration
   37             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TYPE            shift, and go to state 4
    INT8            shift, and go to state 7
    INT16           shift, and go to state 8
    INT32           shift, and go to state 9
    INT64           shift, and go to state 10
    UINT8           shift, and go to state 11
    UINT16          shift, and go to state 12
    UINT32          shift, and go to state 13
    UINT64          shift, and go to state 14
    FLOAT32         shift, and go to state 15
    FLOAT64         shift, and go to state 16
    BOOL            shift, and go to state 17
    STRING          shift, and go to state 18
    TOKEN_NULL      shift, and go to state 19
    TOKEN_TRUE      shift, and go to state 20
    TOKEN_FALSE     shift, and go to state 21
    INTEGER         shift, and go to state 22
    FLOAT           shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    ID              shift, and go to state 25
    '{'             shift, and go to state 26
    '('             shift, and go to state 27
    '+'             shift, and go to state 28
    '-'             shift, and go to state 29
    '~'             shift, and go to state 30
    '!'             shift, and go to state 31

    $default  reduce using rule 22 (program)

    qualified_name                  go to state 32
    type_name                       go to state 33
    primitive_type                  go to state 34
    type_declaration                go to state 96
    primary_expression              go to state 41
    just_not_name                   go to state 42
    complex_primary                 go to state 43
    complex_primary_no_parenthesis  go to state 44
    literal_name                    go to state 45
    array_complex_primary           go to state 46
    array_access                    go to state 47
    field_access                    go to state 48
    method_call                     go to state 49
    method_access                   go to state 50
    initializer_expression          go to state 51
    struct_initializer              go to state 52
    postfix_expression              go to state 53
    real_postfix_expression         go to state 54
    unary_expression                go to state 55
    unary_operator                  go to state 56
    multiplicative_expression       go to state 57
    additive_expression             go to state 58
    shift_expression                go to state 59
    relational_expression           go to state 60
    equality_expression             go to state 61
    and_expression                  go to state 62
    exclusive_or_expression         go to state 63
    inclusive_or_expression         go to state 64
    logical_and_expression          go to state 65
    logical_or_expression           go to state 66
    expression                      go to state 67
    assignment_expression           go to state 68
    assignment_variable_list        go to state 69
    assignment_variable             go to state 70
    expression_statement            go to state 97


State 157

   81 field_access: just_not_name '.' ID .

    $default  reduce using rule 81 (field_access)


State 158

   80 array_access: array_complex_primary '[' expression . ']'

    ']'  shift, and go to state 197


State 159

   83 method_call: method_access '(' ')' .

    $default  reduce using rule 83 (method_call)


State 160

   82 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 198


State 161

  100 argument_list: expression_list .
  139 expression_list: expression_list . ',' expression

    ','  shift, and go to state 148

    $default  reduce using rule 100 (argument_list)


State 162

  110 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 110 (multiplicative_expression)


State 163

  111 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 111 (multiplicative_expression)


State 164

  112 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 112 (multiplicative_expression)


State 165

  110 multiplicative_expression: multiplicative_expression . '*' unary_expression
  111                          | multiplicative_expression . '/' unary_expression
  112                          | multiplicative_expression . '%' unary_expression
  114 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 104
    '/'  shift, and go to state 105
    '%'  shift, and go to state 106

    $default  reduce using rule 114 (additive_expression)


State 166

  110 multiplicative_expression: multiplicative_expression . '*' unary_expression
  111                          | multiplicative_expression . '/' unary_expression
  112                          | multiplicative_expression . '%' unary_expression
  115 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 104
    '/'  shift, and go to state 105
    '%'  shift, and go to state 106

    $default  reduce using rule 115 (additive_expression)


State 167

  114 additive_expression: additive_expression . '+' multiplicative_expression
  115                    | additive_expression . '-' multiplicative_expression
  117 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108

    $default  reduce using rule 117 (shift_expression)


State 168

  114 additive_expression: additive_expression . '+' multiplicative_expression
  115                    | additive_expression . '-' multiplicative_expression
  118 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 107
    '-'  shift, and go to state 108

    $default  reduce using rule 118 (shift_expression)


State 169

  117 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  118                 | shift_expression . SHIFT_RIGHT additive_expression
  123 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 123 (relational_expression)


State 170

  117 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  118                 | shift_expression . SHIFT_RIGHT additive_expression
  122 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 122 (relational_expression)


State 171

  117 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  118                 | shift_expression . SHIFT_RIGHT additive_expression
  120 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 120 (relational_expression)


State 172

  117 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  118                 | shift_expression . SHIFT_RIGHT additive_expression
  121 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 109
    SHIFT_RIGHT  shift, and go to state 110

    $default  reduce using rule 121 (relational_expression)


State 173

  120 relational_expression: relational_expression . '<' shift_expression
  121                      | relational_expression . '>' shift_expression
  122                      | relational_expression . LE shift_expression
  123                      | relational_expression . GE shift_expression
  125 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 111
    LE   shift, and go to state 112
    '<'  shift, and go to state 113
    '>'  shift, and go to state 114

    $default  reduce using rule 125 (equality_expression)


State 174

  120 relational_expression: relational_expression . '<' shift_expression
  121                      | relational_expression . '>' shift_expression
  122                      | relational_expression . LE shift_expression
  123                      | relational_expression . GE shift_expression
  126 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 111
    LE   shift, and go to state 112
    '<'  shift, and go to state 113
    '>'  shift, and go to state 114

    $default  reduce using rule 126 (equality_expression)


State 175

  125 equality_expression: equality_expression . EQ relational_expression
  126                    | equality_expression . NE relational_expression
  128 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 115
    NE  shift, and go to state 116

    $default  reduce using rule 128 (and_expression)


State 176

  128 and_expression: and_expression . '&' equality_expression
  130 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 117

    $default  reduce using rule 130 (exclusive_or_expression)


State 177

  130 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  132 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 118

    $default  reduce using rule 132 (inclusive_or_expression)


State 178

  132 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  134 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 119

    $default  reduce using rule 134 (logical_and_expression)


State 179

  134 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  136 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 120

    $default  reduce using rule 136 (logical_or_expression)


State 180

    2 semicolons: semicolons ';' .

    $default  reduce using rule 2 (semicolons)


State 181

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   79 array_access: qualified_name . '[' expression ']'
   85 method_access: qualified_name .
  144 assignment_variable: qualified_name .

    '.'  shift, and go to state 88
    '['  shift, and go to state 89

    '{'       reduce using rule 8 (type_name)
    '('       reduce using rule 85 (method_access)
    $default  reduce using rule 144 (assignment_variable)


State 182

   81 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 98


State 183

  143 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 143 (assignment_variable_list)


State 184

  139 expression_list: expression_list . ',' expression
  140 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 148

    $default  reduce using rule 140 (assignment_expression)


State 185

  141 assignment_expression: assignment_variable compound_assignment_operator expression .

    $default  reduce using rule 141 (assignment_expression)


State 186

   38 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 199

    field_declarations  go to state 200
    field_declaration   go to state 201


State 187

   39 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    FUNC  shift, and go to state 202

    interface_function_declarations  go to state 203
    interface_function_declaration   go to state 204


State 188

    2 semicolons: semicolons . ';'
   40 type_declaration: TYPE ID type_name semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 40 (type_declaration)


State 189

   33 import_statement: IMPORT qualified_name '.' '*' . semicolons

    ';'  shift, and go to state 122

    semicolons  go to state 205


State 190

   95 field_initializer: field_name ':' expression .

    $default  reduce using rule 95 (field_initializer)


State 191

   21 field_name: ID .

    $default  reduce using rule 21 (field_name)


State 192

   94 field_initializer_list: field_initializer_list ',' field_initializer .

    $default  reduce using rule 94 (field_initializer_list)


State 193

  139 expression_list: expression_list ',' expression .

    $default  reduce using rule 139 (expression_list)


State 194

   79 array_access: qualified_name '[' expression ']' .

    $default  reduce using rule 79 (array_access)


State 195

   92 struct_initializer: type_name '{' field_initializer_list '}' .

    $default  reduce using rule 92 (struct_initializer)


State 196

   91 struct_initializer: type_name '{' expression_list '}' .

    $default  reduce using rule 91 (struct_initializer)


State 197

   80 array_access: array_complex_primary '[' expression ']' .

    $default  reduce using rule 80 (array_access)


State 198

   82 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 82 (method_call)


State 199

   43 field_declaration: ID . type_name semicolons

    INT8     shift, and go to state 7
    INT16    shift, and go to state 8
    INT32    shift, and go to state 9
    INT64    shift, and go to state 10
    UINT8    shift, and go to state 11
    UINT16   shift, and go to state 12
    UINT32   shift, and go to state 13
    UINT64   shift, and go to state 14
    FLOAT32  shift, and go to state 15
    FLOAT64  shift, and go to state 16
    BOOL     shift, and go to state 17
    STRING   shift, and go to state 18
    ID       shift, and go to state 25

    qualified_name  go to state 140
    type_name       go to state 206
    primitive_type  go to state 34


State 200

   38 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   42 field_declarations: field_declarations . field_declaration

    ID   shift, and go to state 199
    '}'  shift, and go to state 207

    field_declaration  go to state 208


State 201

   41 field_declarations: field_declaration .

    $default  reduce using rule 41 (field_declarations)


State 202

   46 interface_function_declaration: FUNC . ID '(' ')' semicolons
   47                               | FUNC . ID '(' ')' return_type_list semicolons
   48                               | FUNC . ID '(' parameter_type_list ')' semicolons
   49                               | FUNC . ID '(' parameter_type_list ')' return_type_list semicolons
   50                               | FUNC . ID '(' parameter_list ')' semicolons
   51                               | FUNC . ID '(' parameter_list ')' return_type_list semicolons

    ID  shift, and go to state 209


State 203

   39 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   45 interface_function_declarations: interface_function_declarations . interface_function_declaration

    FUNC  shift, and go to state 202
    '}'   shift, and go to state 210

    interface_function_declaration  go to state 211


State 204

   44 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 44 (interface_function_declarations)


State 205

    2 semicolons: semicolons . ';'
   33 import_statement: IMPORT qualified_name '.' '*' semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 33 (import_statement)


State 206

   43 field_declaration: ID type_name . semicolons

    ';'  shift, and go to state 122

    semicolons  go to state 212


State 207

   38 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 38 (type_declaration)


State 208

   42 field_declarations: field_declarations field_declaration .

    $default  reduce using rule 42 (field_declarations)


State 209

   46 interface_function_declaration: FUNC ID . '(' ')' semicolons
   47                               | FUNC ID . '(' ')' return_type_list semicolons
   48                               | FUNC ID . '(' parameter_type_list ')' semicolons
   49                               | FUNC ID . '(' parameter_type_list ')' return_type_list semicolons
   50                               | FUNC ID . '(' parameter_list ')' semicolons
   51                               | FUNC ID . '(' parameter_list ')' return_type_list semicolons

    '('  shift, and go to state 213


State 210

   39 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 39 (type_declaration)


State 211

   45 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 45 (interface_function_declarations)


State 212

    2 semicolons: semicolons . ';'
   43 field_declaration: ID type_name semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 43 (field_declaration)


State 213

   46 interface_function_declaration: FUNC ID '(' . ')' semicolons
   47                               | FUNC ID '(' . ')' return_type_list semicolons
   48                               | FUNC ID '(' . parameter_type_list ')' semicolons
   49                               | FUNC ID '(' . parameter_type_list ')' return_type_list semicolons
   50                               | FUNC ID '(' . parameter_list ')' semicolons
   51                               | FUNC ID '(' . parameter_list ')' return_type_list semicolons

    INT8     shift, and go to state 7
    INT16    shift, and go to state 8
    INT32    shift, and go to state 9
    INT64    shift, and go to state 10
    UINT8    shift, and go to state 11
    UINT16   shift, and go to state 12
    UINT32   shift, and go to state 13
    UINT64   shift, and go to state 14
    FLOAT32  shift, and go to state 15
    FLOAT64  shift, and go to state 16
    BOOL     shift, and go to state 17
    STRING   shift, and go to state 18
    ID       shift, and go to state 214
    ')'      shift, and go to state 215

    qualified_name       go to state 140
    type_name            go to state 216
    primitive_type       go to state 34
    parameter_type_list  go to state 217
    parameter_list       go to state 218


State 214

    3 qualified_name: ID .
   56 parameter_list: ID . type_name

    INT8     shift, and go to state 7
    INT16    shift, and go to state 8
    INT32    shift, and go to state 9
    INT64    shift, and go to state 10
    UINT8    shift, and go to state 11
    UINT16   shift, and go to state 12
    UINT32   shift, and go to state 13
    UINT64   shift, and go to state 14
    FLOAT32  shift, and go to state 15
    FLOAT64  shift, and go to state 16
    BOOL     shift, and go to state 17
    STRING   shift, and go to state 18
    ID       shift, and go to state 25

    $default  reduce using rule 3 (qualified_name)

    qualified_name  go to state 140
    type_name       go to state 219
    primitive_type  go to state 34


State 215

   46 interface_function_declaration: FUNC ID '(' ')' . semicolons
   47                               | FUNC ID '(' ')' . return_type_list semicolons

    INT8     shift, and go to state 7
    INT16    shift, and go to state 8
    INT32    shift, and go to state 9
    INT64    shift, and go to state 10
    UINT8    shift, and go to state 11
    UINT16   shift, and go to state 12
    UINT32   shift, and go to state 13
    UINT64   shift, and go to state 14
    FLOAT32  shift, and go to state 15
    FLOAT64  shift, and go to state 16
    BOOL     shift, and go to state 17
    STRING   shift, and go to state 18
    ID       shift, and go to state 25
    ';'      shift, and go to state 122
    '('      shift, and go to state 220

    semicolons        go to state 221
    qualified_name    go to state 140
    type_name         go to state 222
    primitive_type    go to state 34
    return_type_list  go to state 223


State 216

   54 parameter_type_list: type_name .

    $default  reduce using rule 54 (parameter_type_list)


State 217

   48 interface_function_declaration: FUNC ID '(' parameter_type_list . ')' semicolons
   49                               | FUNC ID '(' parameter_type_list . ')' return_type_list semicolons
   55 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 224
    ')'  shift, and go to state 225


State 218

   50 interface_function_declaration: FUNC ID '(' parameter_list . ')' semicolons
   51                               | FUNC ID '(' parameter_list . ')' return_type_list semicolons
   57 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 226
    ')'  shift, and go to state 227


State 219

   56 parameter_list: ID type_name .

    $default  reduce using rule 56 (parameter_list)


State 220

   53 return_type_list: '(' . type_name_list ')'

    INT8     shift, and go to state 7
    INT16    shift, and go to state 8
    INT32    shift, and go to state 9
    INT64    shift, and go to state 10
    UINT8    shift, and go to state 11
    UINT16   shift, and go to state 12
    UINT32   shift, and go to state 13
    UINT64   shift, and go to state 14
    FLOAT32  shift, and go to state 15
    FLOAT64  shift, and go to state 16
    BOOL     shift, and go to state 17
    STRING   shift, and go to state 18
    ID       shift, and go to state 25

    qualified_name  go to state 140
    type_name_list  go to state 228
    type_name       go to state 229
    primitive_type  go to state 34


State 221

    2 semicolons: semicolons . ';'
   46 interface_function_declaration: FUNC ID '(' ')' semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 46 (interface_function_declaration)


State 222

   52 return_type_list: type_name .

    $default  reduce using rule 52 (return_type_list)


State 223

   47 interface_function_declaration: FUNC ID '(' ')' return_type_list . semicolons

    ';'  shift, and go to state 122

    semicolons  go to state 230


State 224

   55 parameter_type_list: parameter_type_list ',' . type_name

    INT8     shift, and go to state 7
    INT16    shift, and go to state 8
    INT32    shift, and go to state 9
    INT64    shift, and go to state 10
    UINT8    shift, and go to state 11
    UINT16   shift, and go to state 12
    UINT32   shift, and go to state 13
    UINT64   shift, and go to state 14
    FLOAT32  shift, and go to state 15
    FLOAT64  shift, and go to state 16
    BOOL     shift, and go to state 17
    STRING   shift, and go to state 18
    ID       shift, and go to state 25

    qualified_name  go to state 140
    type_name       go to state 231
    primitive_type  go to state 34


State 225

   48 interface_function_declaration: FUNC ID '(' parameter_type_list ')' . semicolons
   49                               | FUNC ID '(' parameter_type_list ')' . return_type_list semicolons

    INT8     shift, and go to state 7
    INT16    shift, and go to state 8
    INT32    shift, and go to state 9
    INT64    shift, and go to state 10
    UINT8    shift, and go to state 11
    UINT16   shift, and go to state 12
    UINT32   shift, and go to state 13
    UINT64   shift, and go to state 14
    FLOAT32  shift, and go to state 15
    FLOAT64  shift, and go to state 16
    BOOL     shift, and go to state 17
    STRING   shift, and go to state 18
    ID       shift, and go to state 25
    ';'      shift, and go to state 122
    '('      shift, and go to state 220

    semicolons        go to state 232
    qualified_name    go to state 140
    type_name         go to state 222
    primitive_type    go to state 34
    return_type_list  go to state 233


State 226

   57 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 234


State 227

   50 interface_function_declaration: FUNC ID '(' parameter_list ')' . semicolons
   51                               | FUNC ID '(' parameter_list ')' . return_type_list semicolons

    INT8     shift, and go to state 7
    INT16    shift, and go to state 8
    INT32    shift, and go to state 9
    INT64    shift, and go to state 10
    UINT8    shift, and go to state 11
    UINT16   shift, and go to state 12
    UINT32   shift, and go to state 13
    UINT64   shift, and go to state 14
    FLOAT32  shift, and go to state 15
    FLOAT64  shift, and go to state 16
    BOOL     shift, and go to state 17
    STRING   shift, and go to state 18
    ID       shift, and go to state 25
    ';'      shift, and go to state 122
    '('      shift, and go to state 220

    semicolons        go to state 235
    qualified_name    go to state 140
    type_name         go to state 222
    primitive_type    go to state 34
    return_type_list  go to state 236


State 228

    6 type_name_list: type_name_list . ',' type_name
   53 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 237
    ')'  shift, and go to state 238


State 229

    5 type_name_list: type_name .

    $default  reduce using rule 5 (type_name_list)


State 230

    2 semicolons: semicolons . ';'
   47 interface_function_declaration: FUNC ID '(' ')' return_type_list semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 47 (interface_function_declaration)


State 231

   55 parameter_type_list: parameter_type_list ',' type_name .

    $default  reduce using rule 55 (parameter_type_list)


State 232

    2 semicolons: semicolons . ';'
   48 interface_function_declaration: FUNC ID '(' parameter_type_list ')' semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 48 (interface_function_declaration)


State 233

   49 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list . semicolons

    ';'  shift, and go to state 122

    semicolons  go to state 239


State 234

   57 parameter_list: parameter_list ',' ID . type_name

    INT8     shift, and go to state 7
    INT16    shift, and go to state 8
    INT32    shift, and go to state 9
    INT64    shift, and go to state 10
    UINT8    shift, and go to state 11
    UINT16   shift, and go to state 12
    UINT32   shift, and go to state 13
    UINT64   shift, and go to state 14
    FLOAT32  shift, and go to state 15
    FLOAT64  shift, and go to state 16
    BOOL     shift, and go to state 17
    STRING   shift, and go to state 18
    ID       shift, and go to state 25

    qualified_name  go to state 140
    type_name       go to state 240
    primitive_type  go to state 34


State 235

    2 semicolons: semicolons . ';'
   50 interface_function_declaration: FUNC ID '(' parameter_list ')' semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 50 (interface_function_declaration)


State 236

   51 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list . semicolons

    ';'  shift, and go to state 122

    semicolons  go to state 241


State 237

    6 type_name_list: type_name_list ',' . type_name

    INT8     shift, and go to state 7
    INT16    shift, and go to state 8
    INT32    shift, and go to state 9
    INT64    shift, and go to state 10
    UINT8    shift, and go to state 11
    UINT16   shift, and go to state 12
    UINT32   shift, and go to state 13
    UINT64   shift, and go to state 14
    FLOAT32  shift, and go to state 15
    FLOAT64  shift, and go to state 16
    BOOL     shift, and go to state 17
    STRING   shift, and go to state 18
    ID       shift, and go to state 25

    qualified_name  go to state 140
    type_name       go to state 242
    primitive_type  go to state 34


State 238

   53 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 53 (return_type_list)


State 239

    2 semicolons: semicolons . ';'
   49 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 49 (interface_function_declaration)


State 240

   57 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 57 (parameter_list)


State 241

    2 semicolons: semicolons . ';'
   51 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list semicolons .

    ';'  shift, and go to state 180

    $default  reduce using rule 51 (interface_function_declaration)


State 242

    6 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 6 (type_name_list)
