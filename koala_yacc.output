Terminals unused in grammar

   ELLIPSIS
   NOT
   IF
   ELSE
   WHILE
   DO
   FOR
   IN
   SWITCH
   CASE
   BREAK
   CONTINUE
   DEFAULT
   VAR
   RETURN
   CONST
   HEX
   OCT
   IFX
   NO_CODE_BLOCK


Grammar

    0 $accept: program $end

    1 semicolons: ';'
    2           | semicolons ';'

    3 qualified_name: ID
    4               | qualified_name '.' ID

    5 type_name_list: type_name
    6               | type_name_list ',' type_name

    7 type_name: primitive_type
    8          | qualified_name
    9          | array_type

   10 primitive_type: UINT8
   11               | UINT16
   12               | UINT32
   13               | UINT64
   14               | INT8
   15               | INT16
   16               | INT32
   17               | INT64
   18               | FLOAT32
   19               | FLOAT64
   20               | BOOL
   21               | STRING
   22               | ANY_TYPE

   23 function_type: FUNC '(' ')'
   24              | FUNC '(' ')' return_type_list
   25              | FUNC '(' parameter_type_list ')'
   26              | FUNC '(' parameter_type_list ')' return_type_list

   27 array_type: '[' INTEGER ']' type_name

   28 field_name: ID

   29 program: package_statement import_statements declarations
   30        | package_statement import_statements
   31        | package_statement declarations
   32        | import_statements declarations
   33        | package_statement
   34        | import_statements
   35        | declarations

   36 package_statement: PACKAGE qualified_name semicolons

   37 import_statements: import_statement
   38                  | import_statements import_statement

   39 import_statement: IMPORT qualified_name semicolons
   40                 | IMPORT qualified_name '.' '*' semicolons

   41 declarations: type_declaration
   42             | declarations type_declaration
   43             | function_declaration
   44             | declarations function_declaration
   45             | method_declaration
   46             | declarations method_declaration
   47             | expression_statement
   48             | declarations expression_statement

   49 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   50                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE ID type_name semicolons
   52                 | TYPE ID function_type semicolons

   53 field_declarations: field_declaration
   54                   | field_declarations field_declaration

   55 field_declaration: ID type_name semicolons

   56 interface_function_declarations: interface_function_declaration
   57                                | interface_function_declarations interface_function_declaration

   58 interface_function_declaration: FUNC ID '(' ')' semicolons
   59                               | FUNC ID '(' ')' return_type_list semicolons
   60                               | FUNC ID '(' parameter_type_list ')' semicolons
   61                               | FUNC ID '(' parameter_type_list ')' return_type_list semicolons
   62                               | FUNC ID '(' parameter_list ')' semicolons
   63                               | FUNC ID '(' parameter_list ')' return_type_list semicolons

   64 return_type_list: type_name
   65                 | '(' type_name_list ')'

   66 parameter_type_list: type_name
   67                    | parameter_type_list ',' type_name

   68 parameter_list: ID type_name
   69               | parameter_list ',' ID type_name

   70 function_declaration: FUNC ID '(' ')' code_block
   71                     | FUNC ID '(' ')' return_type_list code_block
   72                     | FUNC ID '(' parameter_list ')' code_block
   73                     | FUNC ID '(' parameter_list ')' return_type_list code_block

   74 anonymous_function_declaration: FUNC '(' ')' code_block
   75                               | FUNC '(' ')' return_type_list code_block
   76                               | FUNC '(' parameter_list ')' code_block
   77                               | FUNC '(' parameter_list ')' return_type_list code_block

   78 method_declaration: FUNC method_name '(' ')' code_block
   79                   | FUNC method_name '(' ')' return_type_list code_block
   80                   | FUNC method_name '(' parameter_list ')' code_block
   81                   | FUNC method_name '(' parameter_list ')' return_type_list code_block

   82 method_name: ID '.' ID

   83 code_block: '{' '}'

   84 primary_expression: qualified_name
   85                   | just_not_name

   86 just_not_name: TOKEN_THIS
   87              | initializer_expression
   88              | complex_primary

   89 complex_primary: '(' expression ')'
   90                | complex_primary_no_parenthesis

   91 complex_primary_no_parenthesis: literal_name
   92                               | array_access
   93                               | field_access
   94                               | method_call

   95 literal_name: INTEGER
   96             | FLOAT
   97             | STRING_LITERAL
   98             | TOKEN_NULL
   99             | TOKEN_TRUE
  100             | TOKEN_FALSE

  101 array_complex_primary: '(' expression ')'
  102                      | array_access
  103                      | field_access
  104                      | method_call

  105 array_access: qualified_name '[' expression ']'
  106             | array_complex_primary '[' expression ']'

  107 field_access: just_not_name '.' ID

  108 method_call: method_access '(' argument_list ')'
  109            | method_access '(' ')'

  110 method_access: complex_primary_no_parenthesis
  111              | qualified_name

  112 initializer_expression: struct_initializer
  113                       | anonymous_function_declaration

  114 struct_initializer: '{' '}'
  115                   | '{' expression_list '}'
  116                   | '{' field_initializer_list '}'
  117                   | type_name '{' '}'
  118                   | type_name '{' expression_list '}'
  119                   | type_name '{' field_initializer_list '}'

  120 field_initializer_list: field_initializer
  121                       | field_initializer_list ',' field_initializer

  122 field_initializer: field_name ':' expression

  123 postfix_expression: primary_expression
  124                   | real_postfix_expression

  125 real_postfix_expression: postfix_expression INC
  126                        | postfix_expression DEC

  127 argument_list: expression_list

  128 unary_expression: postfix_expression
  129                 | INC unary_expression
  130                 | DEC unary_expression
  131                 | unary_operator unary_expression

  132 unary_operator: '+'
  133               | '-'
  134               | '~'
  135               | '!'

  136 multiplicative_expression: unary_expression
  137                          | multiplicative_expression '*' unary_expression
  138                          | multiplicative_expression '/' unary_expression
  139                          | multiplicative_expression '%' unary_expression

  140 additive_expression: multiplicative_expression
  141                    | additive_expression '+' multiplicative_expression
  142                    | additive_expression '-' multiplicative_expression

  143 shift_expression: additive_expression
  144                 | shift_expression SHIFT_LEFT additive_expression
  145                 | shift_expression SHIFT_RIGHT additive_expression

  146 relational_expression: shift_expression
  147                      | relational_expression '<' shift_expression
  148                      | relational_expression '>' shift_expression
  149                      | relational_expression LE shift_expression
  150                      | relational_expression GE shift_expression

  151 equality_expression: relational_expression
  152                    | equality_expression EQ relational_expression
  153                    | equality_expression NE relational_expression

  154 and_expression: equality_expression
  155               | and_expression '&' equality_expression

  156 exclusive_or_expression: and_expression
  157                        | exclusive_or_expression '^' and_expression

  158 inclusive_or_expression: exclusive_or_expression
  159                        | inclusive_or_expression '|' exclusive_or_expression

  160 logical_and_expression: inclusive_or_expression
  161                       | logical_and_expression AND inclusive_or_expression

  162 logical_or_expression: logical_and_expression
  163                      | logical_or_expression OR logical_and_expression

  164 expression: logical_or_expression

  165 expression_list: expression
  166                | expression_list ',' expression

  167 assignment_expression: assignment_variable_list '=' expression_list
  168                      | assignment_variable compound_assignment_operator expression

  169 assignment_variable_list: assignment_variable
  170                         | assignment_variable_list ',' assignment_variable

  171 assignment_variable: qualified_name
  172                    | array_access
  173                    | field_access

  174 compound_assignment_operator: ADD_ASSIGN
  175                             | SUB_ASSIGN
  176                             | MUL_ASSIGN
  177                             | DIV_ASSIGN
  178                             | MOD_ASSIGN
  179                             | AND_ASSIGN
  180                             | OR_ASSIGN
  181                             | XOR_ASSIGN
  182                             | RIGHT_ASSIGN
  183                             | LEFT_ASSIGN

  184 expression_statement: expression semicolons
  185                     | assignment_expression semicolons


Terminals, with rules where they appear

$end (0) 0
'!' (33) 135
'%' (37) 139
'&' (38) 155
'(' (40) 23 24 25 26 58 59 60 61 62 63 65 70 71 72 73 74 75 76 77 78
    79 80 81 89 101 108 109
')' (41) 23 24 25 26 58 59 60 61 62 63 65 70 71 72 73 74 75 76 77 78
    79 80 81 89 101 108 109
'*' (42) 40 137
'+' (43) 132 141
',' (44) 6 67 69 121 166 170
'-' (45) 133 142
'.' (46) 4 40 82 107
'/' (47) 138
':' (58) 122
';' (59) 1 2
'<' (60) 147
'=' (61) 167
'>' (62) 148
'[' (91) 27 105 106
']' (93) 27 105 106
'^' (94) 157
'{' (123) 49 50 83 114 115 116 117 118 119
'|' (124) 159
'}' (125) 49 50 83 114 115 116 117 118 119
'~' (126) 134
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 174
SUB_ASSIGN (260) 175
MUL_ASSIGN (261) 176
DIV_ASSIGN (262) 177
MOD_ASSIGN (263) 178
AND_ASSIGN (264) 179
OR_ASSIGN (265) 180
XOR_ASSIGN (266) 181
RIGHT_ASSIGN (267) 182
LEFT_ASSIGN (268) 183
EQ (269) 152
NE (270) 153
GE (271) 150
LE (272) 149
AND (273) 161
OR (274) 163
NOT (275)
SHIFT_LEFT (276) 144
SHIFT_RIGHT (277) 145
INC (278) 125 129
DEC (279) 126 130
TOKEN_THIS (280) 86
IF (281)
ELSE (282)
WHILE (283)
DO (284)
FOR (285)
IN (286)
SWITCH (287)
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292)
FUNC (293) 23 24 25 26 58 59 60 61 62 63 70 71 72 73 74 75 76 77 78
    79 80 81
RETURN (294)
STRUCT (295) 49
INTERFACE (296) 50
TYPE (297) 49 50 51 52
CONST (298)
PACKAGE (299) 36
IMPORT (300) 39 40
INT8 (301) 14
INT16 (302) 15
INT32 (303) 16
INT64 (304) 17
UINT8 (305) 10
UINT16 (306) 11
UINT32 (307) 12
UINT64 (308) 13
FLOAT32 (309) 18
FLOAT64 (310) 19
BOOL (311) 20
STRING (312) 21
ANY_TYPE (313) 22
TOKEN_NULL (314) 98
TOKEN_TRUE (315) 99
TOKEN_FALSE (316) 100
INTEGER (317) 27 95
HEX (318)
OCT (319)
FLOAT (320) 96
STRING_LITERAL (321) 97
ID (322) 3 4 28 49 50 51 52 55 58 59 60 61 62 63 68 69 70 71 72 73
    82 107
IFX (323)
NO_CODE_BLOCK (324)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
semicolons (94)
    on left: 1 2, on right: 2 36 39 40 51 52 55 58 59 60 61 62 63 184
    185
qualified_name (95)
    on left: 3 4, on right: 4 8 36 39 40 84 105 111 171
type_name_list (96)
    on left: 5 6, on right: 6 65
type_name (97)
    on left: 7 8 9, on right: 5 6 27 51 55 64 66 67 68 69 117 118 119
primitive_type (98)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22, on right: 7
function_type (99)
    on left: 23 24 25 26, on right: 52
array_type (100)
    on left: 27, on right: 9
field_name (101)
    on left: 28, on right: 122
program (102)
    on left: 29 30 31 32 33 34 35, on right: 0
package_statement (103)
    on left: 36, on right: 29 30 31 33
import_statements (104)
    on left: 37 38, on right: 29 30 32 34 38
import_statement (105)
    on left: 39 40, on right: 37 38
declarations (106)
    on left: 41 42 43 44 45 46 47 48, on right: 29 31 32 35 42 44 46
    48
type_declaration (107)
    on left: 49 50 51 52, on right: 41 42
field_declarations (108)
    on left: 53 54, on right: 49 54
field_declaration (109)
    on left: 55, on right: 53 54
interface_function_declarations (110)
    on left: 56 57, on right: 50 57
interface_function_declaration (111)
    on left: 58 59 60 61 62 63, on right: 56 57
return_type_list (112)
    on left: 64 65, on right: 24 26 59 61 63 71 73 75 77 79 81
parameter_type_list (113)
    on left: 66 67, on right: 25 26 60 61 67
parameter_list (114)
    on left: 68 69, on right: 62 63 69 72 73 76 77 80 81
function_declaration (115)
    on left: 70 71 72 73, on right: 43 44
anonymous_function_declaration (116)
    on left: 74 75 76 77, on right: 113
method_declaration (117)
    on left: 78 79 80 81, on right: 45 46
method_name (118)
    on left: 82, on right: 78 79 80 81
code_block (119)
    on left: 83, on right: 70 71 72 73 74 75 76 77 78 79 80 81
primary_expression (120)
    on left: 84 85, on right: 123
just_not_name (121)
    on left: 86 87 88, on right: 85 107
complex_primary (122)
    on left: 89 90, on right: 88
complex_primary_no_parenthesis (123)
    on left: 91 92 93 94, on right: 90 110
literal_name (124)
    on left: 95 96 97 98 99 100, on right: 91
array_complex_primary (125)
    on left: 101 102 103 104, on right: 106
array_access (126)
    on left: 105 106, on right: 92 102 172
field_access (127)
    on left: 107, on right: 93 103 173
method_call (128)
    on left: 108 109, on right: 94 104
method_access (129)
    on left: 110 111, on right: 108 109
initializer_expression (130)
    on left: 112 113, on right: 87
struct_initializer (131)
    on left: 114 115 116 117 118 119, on right: 112
field_initializer_list (132)
    on left: 120 121, on right: 116 119 121
field_initializer (133)
    on left: 122, on right: 120 121
postfix_expression (134)
    on left: 123 124, on right: 125 126 128
real_postfix_expression (135)
    on left: 125 126, on right: 124
argument_list (136)
    on left: 127, on right: 108
unary_expression (137)
    on left: 128 129 130 131, on right: 129 130 131 136 137 138 139
unary_operator (138)
    on left: 132 133 134 135, on right: 131
multiplicative_expression (139)
    on left: 136 137 138 139, on right: 137 138 139 140 141 142
additive_expression (140)
    on left: 140 141 142, on right: 141 142 143 144 145
shift_expression (141)
    on left: 143 144 145, on right: 144 145 146 147 148 149 150
relational_expression (142)
    on left: 146 147 148 149 150, on right: 147 148 149 150 151 152
    153
equality_expression (143)
    on left: 151 152 153, on right: 152 153 154 155
and_expression (144)
    on left: 154 155, on right: 155 156 157
exclusive_or_expression (145)
    on left: 156 157, on right: 157 158 159
inclusive_or_expression (146)
    on left: 158 159, on right: 159 160 161
logical_and_expression (147)
    on left: 160 161, on right: 161 162 163
logical_or_expression (148)
    on left: 162 163, on right: 163 164
expression (149)
    on left: 164, on right: 89 101 105 106 122 165 166 168 184
expression_list (150)
    on left: 165 166, on right: 115 118 127 166 167
assignment_expression (151)
    on left: 167 168, on right: 185
assignment_variable_list (152)
    on left: 169 170, on right: 167 170
assignment_variable (153)
    on left: 171 172 173, on right: 168 169 170
compound_assignment_operator (154)
    on left: 174 175 176 177 178 179 180 181 182 183, on right: 168
expression_statement (155)
    on left: 184 185, on right: 47 48


State 0

    0 $accept: . program $end

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    PACKAGE         shift, and go to state 6
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    program                         go to state 39
    package_statement               go to state 40
    import_statements               go to state 41
    import_statement                go to state 42
    declarations                    go to state 43
    type_declaration                go to state 44
    function_declaration            go to state 45
    anonymous_function_declaration  go to state 46
    method_declaration              go to state 47
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 54
    field_access                    go to state 55
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 74
    assignment_expression           go to state 75
    assignment_variable_list        go to state 76
    assignment_variable             go to state 77
    expression_statement            go to state 78


State 1

  129 unary_expression: INC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 83
    unary_operator                  go to state 63


State 2

  130 unary_expression: DEC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 84
    unary_operator                  go to state 63


State 3

   86 just_not_name: TOKEN_THIS .

    $default  reduce using rule 86 (just_not_name)


State 4

   70 function_declaration: FUNC . ID '(' ')' code_block
   71                     | FUNC . ID '(' ')' return_type_list code_block
   72                     | FUNC . ID '(' parameter_list ')' code_block
   73                     | FUNC . ID '(' parameter_list ')' return_type_list code_block
   74 anonymous_function_declaration: FUNC . '(' ')' code_block
   75                               | FUNC . '(' ')' return_type_list code_block
   76                               | FUNC . '(' parameter_list ')' code_block
   77                               | FUNC . '(' parameter_list ')' return_type_list code_block
   78 method_declaration: FUNC . method_name '(' ')' code_block
   79                   | FUNC . method_name '(' ')' return_type_list code_block
   80                   | FUNC . method_name '(' parameter_list ')' code_block
   81                   | FUNC . method_name '(' parameter_list ')' return_type_list code_block

    ID   shift, and go to state 85
    '('  shift, and go to state 86

    method_name  go to state 87


State 5

   49 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   50                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE . ID type_name semicolons
   52                 | TYPE . ID function_type semicolons

    ID  shift, and go to state 88


State 6

   36 package_statement: PACKAGE . qualified_name semicolons

    ID  shift, and go to state 27

    qualified_name  go to state 89


State 7

   39 import_statement: IMPORT . qualified_name semicolons
   40                 | IMPORT . qualified_name '.' '*' semicolons

    ID  shift, and go to state 27

    qualified_name  go to state 90


State 8

   14 primitive_type: INT8 .

    $default  reduce using rule 14 (primitive_type)


State 9

   15 primitive_type: INT16 .

    $default  reduce using rule 15 (primitive_type)


State 10

   16 primitive_type: INT32 .

    $default  reduce using rule 16 (primitive_type)


State 11

   17 primitive_type: INT64 .

    $default  reduce using rule 17 (primitive_type)


State 12

   10 primitive_type: UINT8 .

    $default  reduce using rule 10 (primitive_type)


State 13

   11 primitive_type: UINT16 .

    $default  reduce using rule 11 (primitive_type)


State 14

   12 primitive_type: UINT32 .

    $default  reduce using rule 12 (primitive_type)


State 15

   13 primitive_type: UINT64 .

    $default  reduce using rule 13 (primitive_type)


State 16

   18 primitive_type: FLOAT32 .

    $default  reduce using rule 18 (primitive_type)


State 17

   19 primitive_type: FLOAT64 .

    $default  reduce using rule 19 (primitive_type)


State 18

   20 primitive_type: BOOL .

    $default  reduce using rule 20 (primitive_type)


State 19

   21 primitive_type: STRING .

    $default  reduce using rule 21 (primitive_type)


State 20

   22 primitive_type: ANY_TYPE .

    $default  reduce using rule 22 (primitive_type)


State 21

   98 literal_name: TOKEN_NULL .

    $default  reduce using rule 98 (literal_name)


State 22

   99 literal_name: TOKEN_TRUE .

    $default  reduce using rule 99 (literal_name)


State 23

  100 literal_name: TOKEN_FALSE .

    $default  reduce using rule 100 (literal_name)


State 24

   95 literal_name: INTEGER .

    $default  reduce using rule 95 (literal_name)


State 25

   96 literal_name: FLOAT .

    $default  reduce using rule 96 (literal_name)


State 26

   97 literal_name: STRING_LITERAL .

    $default  reduce using rule 97 (literal_name)


State 27

    3 qualified_name: ID .

    $default  reduce using rule 3 (qualified_name)


State 28

   89 complex_primary: '(' . expression ')'
  101 array_complex_primary: '(' . expression ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 91


State 29

   27 array_type: '[' . INTEGER ']' type_name

    INTEGER  shift, and go to state 92


State 30

  114 struct_initializer: '{' . '}'
  115                   | '{' . expression_list '}'
  116                   | '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 93
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '}'             shift, and go to state 94
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    field_name                      go to state 95
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    field_initializer_list          go to state 96
    field_initializer               go to state 97
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 98
    expression_list                 go to state 99


State 31

  132 unary_operator: '+' .

    $default  reduce using rule 132 (unary_operator)


State 32

  133 unary_operator: '-' .

    $default  reduce using rule 133 (unary_operator)


State 33

  134 unary_operator: '~' .

    $default  reduce using rule 134 (unary_operator)


State 34

  135 unary_operator: '!' .

    $default  reduce using rule 135 (unary_operator)


State 35

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   84 primary_expression: qualified_name .
  105 array_access: qualified_name . '[' expression ']'
  111 method_access: qualified_name .
  171 assignment_variable: qualified_name .

    '.'  shift, and go to state 100
    '['  shift, and go to state 101

    ADD_ASSIGN    reduce using rule 171 (assignment_variable)
    SUB_ASSIGN    reduce using rule 171 (assignment_variable)
    MUL_ASSIGN    reduce using rule 171 (assignment_variable)
    DIV_ASSIGN    reduce using rule 171 (assignment_variable)
    MOD_ASSIGN    reduce using rule 171 (assignment_variable)
    AND_ASSIGN    reduce using rule 171 (assignment_variable)
    OR_ASSIGN     reduce using rule 171 (assignment_variable)
    XOR_ASSIGN    reduce using rule 171 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 171 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 171 (assignment_variable)
    ','           reduce using rule 171 (assignment_variable)
    '('           reduce using rule 111 (method_access)
    '{'           reduce using rule 8 (type_name)
    '='           reduce using rule 171 (assignment_variable)
    $default      reduce using rule 84 (primary_expression)


State 36

  117 struct_initializer: type_name . '{' '}'
  118                   | type_name . '{' expression_list '}'
  119                   | type_name . '{' field_initializer_list '}'

    '{'  shift, and go to state 102


State 37

    7 type_name: primitive_type .

    $default  reduce using rule 7 (type_name)


State 38

    9 type_name: array_type .

    $default  reduce using rule 9 (type_name)


State 39

    0 $accept: program . $end

    $end  shift, and go to state 103


State 40

   29 program: package_statement . import_statements declarations
   30        | package_statement . import_statements
   31        | package_statement . declarations
   33        | package_statement .

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 33 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    import_statements               go to state 104
    import_statement                go to state 42
    declarations                    go to state 105
    type_declaration                go to state 44
    function_declaration            go to state 45
    anonymous_function_declaration  go to state 46
    method_declaration              go to state 47
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 54
    field_access                    go to state 55
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 74
    assignment_expression           go to state 75
    assignment_variable_list        go to state 76
    assignment_variable             go to state 77
    expression_statement            go to state 78


State 41

   32 program: import_statements . declarations
   34        | import_statements .
   38 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 34 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    import_statement                go to state 106
    declarations                    go to state 107
    type_declaration                go to state 44
    function_declaration            go to state 45
    anonymous_function_declaration  go to state 46
    method_declaration              go to state 47
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 54
    field_access                    go to state 55
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 74
    assignment_expression           go to state 75
    assignment_variable_list        go to state 76
    assignment_variable             go to state 77
    expression_statement            go to state 78


State 42

   37 import_statements: import_statement .

    $default  reduce using rule 37 (import_statements)


State 43

   35 program: declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . function_declaration
   46             | declarations . method_declaration
   48             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 35 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    type_declaration                go to state 108
    function_declaration            go to state 109
    anonymous_function_declaration  go to state 46
    method_declaration              go to state 110
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 54
    field_access                    go to state 55
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 74
    assignment_expression           go to state 75
    assignment_variable_list        go to state 76
    assignment_variable             go to state 77
    expression_statement            go to state 111


State 44

   41 declarations: type_declaration .

    $default  reduce using rule 41 (declarations)


State 45

   43 declarations: function_declaration .

    $default  reduce using rule 43 (declarations)


State 46

  113 initializer_expression: anonymous_function_declaration .

    $default  reduce using rule 113 (initializer_expression)


State 47

   45 declarations: method_declaration .

    $default  reduce using rule 45 (declarations)


State 48

  123 postfix_expression: primary_expression .

    $default  reduce using rule 123 (postfix_expression)


State 49

   85 primary_expression: just_not_name .
  107 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 112

    $default  reduce using rule 85 (primary_expression)


State 50

   88 just_not_name: complex_primary .

    $default  reduce using rule 88 (just_not_name)


State 51

   90 complex_primary: complex_primary_no_parenthesis .
  110 method_access: complex_primary_no_parenthesis .

    '('       reduce using rule 110 (method_access)
    $default  reduce using rule 90 (complex_primary)


State 52

   91 complex_primary_no_parenthesis: literal_name .

    $default  reduce using rule 91 (complex_primary_no_parenthesis)


State 53

  106 array_access: array_complex_primary . '[' expression ']'

    '['  shift, and go to state 113


State 54

   92 complex_primary_no_parenthesis: array_access .
  102 array_complex_primary: array_access .
  172 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 172 (assignment_variable)
    SUB_ASSIGN    reduce using rule 172 (assignment_variable)
    MUL_ASSIGN    reduce using rule 172 (assignment_variable)
    DIV_ASSIGN    reduce using rule 172 (assignment_variable)
    MOD_ASSIGN    reduce using rule 172 (assignment_variable)
    AND_ASSIGN    reduce using rule 172 (assignment_variable)
    OR_ASSIGN     reduce using rule 172 (assignment_variable)
    XOR_ASSIGN    reduce using rule 172 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 172 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 172 (assignment_variable)
    ','           reduce using rule 172 (assignment_variable)
    '['           reduce using rule 102 (array_complex_primary)
    '='           reduce using rule 172 (assignment_variable)
    $default      reduce using rule 92 (complex_primary_no_parenthesis)


State 55

   93 complex_primary_no_parenthesis: field_access .
  103 array_complex_primary: field_access .
  173 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 173 (assignment_variable)
    SUB_ASSIGN    reduce using rule 173 (assignment_variable)
    MUL_ASSIGN    reduce using rule 173 (assignment_variable)
    DIV_ASSIGN    reduce using rule 173 (assignment_variable)
    MOD_ASSIGN    reduce using rule 173 (assignment_variable)
    AND_ASSIGN    reduce using rule 173 (assignment_variable)
    OR_ASSIGN     reduce using rule 173 (assignment_variable)
    XOR_ASSIGN    reduce using rule 173 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 173 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 173 (assignment_variable)
    ','           reduce using rule 173 (assignment_variable)
    '['           reduce using rule 103 (array_complex_primary)
    '='           reduce using rule 173 (assignment_variable)
    $default      reduce using rule 93 (complex_primary_no_parenthesis)


State 56

   94 complex_primary_no_parenthesis: method_call .
  104 array_complex_primary: method_call .

    '['       reduce using rule 104 (array_complex_primary)
    $default  reduce using rule 94 (complex_primary_no_parenthesis)


State 57

  108 method_call: method_access . '(' argument_list ')'
  109            | method_access . '(' ')'

    '('  shift, and go to state 114


State 58

   87 just_not_name: initializer_expression .

    $default  reduce using rule 87 (just_not_name)


State 59

  112 initializer_expression: struct_initializer .

    $default  reduce using rule 112 (initializer_expression)


State 60

  125 real_postfix_expression: postfix_expression . INC
  126                        | postfix_expression . DEC
  128 unary_expression: postfix_expression .

    INC  shift, and go to state 115
    DEC  shift, and go to state 116

    $default  reduce using rule 128 (unary_expression)


State 61

  124 postfix_expression: real_postfix_expression .

    $default  reduce using rule 124 (postfix_expression)


State 62

  136 multiplicative_expression: unary_expression .

    $default  reduce using rule 136 (multiplicative_expression)


State 63

  131 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 117
    unary_operator                  go to state 63


State 64

  137 multiplicative_expression: multiplicative_expression . '*' unary_expression
  138                          | multiplicative_expression . '/' unary_expression
  139                          | multiplicative_expression . '%' unary_expression
  140 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 140 (additive_expression)


State 65

  141 additive_expression: additive_expression . '+' multiplicative_expression
  142                    | additive_expression . '-' multiplicative_expression
  143 shift_expression: additive_expression .

    '+'  shift, and go to state 121
    '-'  shift, and go to state 122

    $default  reduce using rule 143 (shift_expression)


State 66

  144 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  145                 | shift_expression . SHIFT_RIGHT additive_expression
  146 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 123
    SHIFT_RIGHT  shift, and go to state 124

    $default  reduce using rule 146 (relational_expression)


State 67

  147 relational_expression: relational_expression . '<' shift_expression
  148                      | relational_expression . '>' shift_expression
  149                      | relational_expression . LE shift_expression
  150                      | relational_expression . GE shift_expression
  151 equality_expression: relational_expression .

    GE   shift, and go to state 125
    LE   shift, and go to state 126
    '<'  shift, and go to state 127
    '>'  shift, and go to state 128

    $default  reduce using rule 151 (equality_expression)


State 68

  152 equality_expression: equality_expression . EQ relational_expression
  153                    | equality_expression . NE relational_expression
  154 and_expression: equality_expression .

    EQ  shift, and go to state 129
    NE  shift, and go to state 130

    $default  reduce using rule 154 (and_expression)


State 69

  155 and_expression: and_expression . '&' equality_expression
  156 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 131

    $default  reduce using rule 156 (exclusive_or_expression)


State 70

  157 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  158 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 132

    $default  reduce using rule 158 (inclusive_or_expression)


State 71

  159 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  160 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 133

    $default  reduce using rule 160 (logical_and_expression)


State 72

  161 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  162 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 134

    $default  reduce using rule 162 (logical_or_expression)


State 73

  163 logical_or_expression: logical_or_expression . OR logical_and_expression
  164 expression: logical_or_expression .

    OR  shift, and go to state 135

    $default  reduce using rule 164 (expression)


State 74

  184 expression_statement: expression . semicolons

    ';'  shift, and go to state 136

    semicolons  go to state 137


State 75

  185 expression_statement: assignment_expression . semicolons

    ';'  shift, and go to state 136

    semicolons  go to state 138


State 76

  167 assignment_expression: assignment_variable_list . '=' expression_list
  170 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 139
    '='  shift, and go to state 140


State 77

  168 assignment_expression: assignment_variable . compound_assignment_operator expression
  169 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 141
    SUB_ASSIGN    shift, and go to state 142
    MUL_ASSIGN    shift, and go to state 143
    DIV_ASSIGN    shift, and go to state 144
    MOD_ASSIGN    shift, and go to state 145
    AND_ASSIGN    shift, and go to state 146
    OR_ASSIGN     shift, and go to state 147
    XOR_ASSIGN    shift, and go to state 148
    RIGHT_ASSIGN  shift, and go to state 149
    LEFT_ASSIGN   shift, and go to state 150

    $default  reduce using rule 169 (assignment_variable_list)

    compound_assignment_operator  go to state 151


State 78

   47 declarations: expression_statement .

    $default  reduce using rule 47 (declarations)


State 79

   74 anonymous_function_declaration: FUNC . '(' ')' code_block
   75                               | FUNC . '(' ')' return_type_list code_block
   76                               | FUNC . '(' parameter_list ')' code_block
   77                               | FUNC . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 86


State 80

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   84 primary_expression: qualified_name .
  105 array_access: qualified_name . '[' expression ']'
  111 method_access: qualified_name .

    '.'  shift, and go to state 100
    '['  shift, and go to state 101

    '('       reduce using rule 111 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 84 (primary_expression)


State 81

   92 complex_primary_no_parenthesis: array_access .
  102 array_complex_primary: array_access .

    '['       reduce using rule 102 (array_complex_primary)
    $default  reduce using rule 92 (complex_primary_no_parenthesis)


State 82

   93 complex_primary_no_parenthesis: field_access .
  103 array_complex_primary: field_access .

    '['       reduce using rule 103 (array_complex_primary)
    $default  reduce using rule 93 (complex_primary_no_parenthesis)


State 83

  129 unary_expression: INC unary_expression .

    $default  reduce using rule 129 (unary_expression)


State 84

  130 unary_expression: DEC unary_expression .

    $default  reduce using rule 130 (unary_expression)


State 85

   70 function_declaration: FUNC ID . '(' ')' code_block
   71                     | FUNC ID . '(' ')' return_type_list code_block
   72                     | FUNC ID . '(' parameter_list ')' code_block
   73                     | FUNC ID . '(' parameter_list ')' return_type_list code_block
   82 method_name: ID . '.' ID

    '.'  shift, and go to state 152
    '('  shift, and go to state 153


State 86

   74 anonymous_function_declaration: FUNC '(' . ')' code_block
   75                               | FUNC '(' . ')' return_type_list code_block
   76                               | FUNC '(' . parameter_list ')' code_block
   77                               | FUNC '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 154
    ')'  shift, and go to state 155

    parameter_list  go to state 156


State 87

   78 method_declaration: FUNC method_name . '(' ')' code_block
   79                   | FUNC method_name . '(' ')' return_type_list code_block
   80                   | FUNC method_name . '(' parameter_list ')' code_block
   81                   | FUNC method_name . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 157


State 88

   49 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   50                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE ID . type_name semicolons
   52                 | TYPE ID . function_type semicolons

    FUNC       shift, and go to state 158
    STRUCT     shift, and go to state 159
    INTERFACE  shift, and go to state 160
    INT8       shift, and go to state 8
    INT16      shift, and go to state 9
    INT32      shift, and go to state 10
    INT64      shift, and go to state 11
    UINT8      shift, and go to state 12
    UINT16     shift, and go to state 13
    UINT32     shift, and go to state 14
    UINT64     shift, and go to state 15
    FLOAT32    shift, and go to state 16
    FLOAT64    shift, and go to state 17
    BOOL       shift, and go to state 18
    STRING     shift, and go to state 19
    ANY_TYPE   shift, and go to state 20
    ID         shift, and go to state 27
    '['        shift, and go to state 29

    qualified_name  go to state 161
    type_name       go to state 162
    primitive_type  go to state 37
    function_type   go to state 163
    array_type      go to state 38


State 89

    4 qualified_name: qualified_name . '.' ID
   36 package_statement: PACKAGE qualified_name . semicolons

    ';'  shift, and go to state 136
    '.'  shift, and go to state 100

    semicolons  go to state 164


State 90

    4 qualified_name: qualified_name . '.' ID
   39 import_statement: IMPORT qualified_name . semicolons
   40                 | IMPORT qualified_name . '.' '*' semicolons

    ';'  shift, and go to state 136
    '.'  shift, and go to state 165

    semicolons  go to state 166


State 91

   89 complex_primary: '(' expression . ')'
  101 array_complex_primary: '(' expression . ')'

    ')'  shift, and go to state 167


State 92

   27 array_type: '[' INTEGER . ']' type_name

    ']'  shift, and go to state 168


State 93

    3 qualified_name: ID .
   28 field_name: ID .

    ':'       reduce using rule 28 (field_name)
    $default  reduce using rule 3 (qualified_name)


State 94

  114 struct_initializer: '{' '}' .

    $default  reduce using rule 114 (struct_initializer)


State 95

  122 field_initializer: field_name . ':' expression

    ':'  shift, and go to state 169


State 96

  116 struct_initializer: '{' field_initializer_list . '}'
  121 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 170
    '}'  shift, and go to state 171


State 97

  120 field_initializer_list: field_initializer .

    $default  reduce using rule 120 (field_initializer_list)


State 98

  165 expression_list: expression .

    $default  reduce using rule 165 (expression_list)


State 99

  115 struct_initializer: '{' expression_list . '}'
  166 expression_list: expression_list . ',' expression

    ','  shift, and go to state 172
    '}'  shift, and go to state 173


State 100

    4 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 174


State 101

  105 array_access: qualified_name '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 175


State 102

  117 struct_initializer: type_name '{' . '}'
  118                   | type_name '{' . expression_list '}'
  119                   | type_name '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 93
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '}'             shift, and go to state 176
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    field_name                      go to state 95
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    field_initializer_list          go to state 177
    field_initializer               go to state 97
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 98
    expression_list                 go to state 178


State 103

    0 $accept: program $end .

    $default  accept


State 104

   29 program: package_statement import_statements . declarations
   30        | package_statement import_statements .
   38 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    IMPORT          shift, and go to state 7
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 30 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    import_statement                go to state 106
    declarations                    go to state 179
    type_declaration                go to state 44
    function_declaration            go to state 45
    anonymous_function_declaration  go to state 46
    method_declaration              go to state 47
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 54
    field_access                    go to state 55
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 74
    assignment_expression           go to state 75
    assignment_variable_list        go to state 76
    assignment_variable             go to state 77
    expression_statement            go to state 78


State 105

   31 program: package_statement declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . function_declaration
   46             | declarations . method_declaration
   48             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 31 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    type_declaration                go to state 108
    function_declaration            go to state 109
    anonymous_function_declaration  go to state 46
    method_declaration              go to state 110
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 54
    field_access                    go to state 55
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 74
    assignment_expression           go to state 75
    assignment_variable_list        go to state 76
    assignment_variable             go to state 77
    expression_statement            go to state 111


State 106

   38 import_statements: import_statements import_statement .

    $default  reduce using rule 38 (import_statements)


State 107

   32 program: import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . function_declaration
   46             | declarations . method_declaration
   48             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 32 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    type_declaration                go to state 108
    function_declaration            go to state 109
    anonymous_function_declaration  go to state 46
    method_declaration              go to state 110
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 54
    field_access                    go to state 55
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 74
    assignment_expression           go to state 75
    assignment_variable_list        go to state 76
    assignment_variable             go to state 77
    expression_statement            go to state 111


State 108

   42 declarations: declarations type_declaration .

    $default  reduce using rule 42 (declarations)


State 109

   44 declarations: declarations function_declaration .

    $default  reduce using rule 44 (declarations)


State 110

   46 declarations: declarations method_declaration .

    $default  reduce using rule 46 (declarations)


State 111

   48 declarations: declarations expression_statement .

    $default  reduce using rule 48 (declarations)


State 112

  107 field_access: just_not_name '.' . ID

    ID  shift, and go to state 180


State 113

  106 array_access: array_complex_primary '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 181


State 114

  108 method_call: method_access '(' . argument_list ')'
  109            | method_access '(' . ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    ')'             shift, and go to state 182
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    argument_list                   go to state 183
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 98
    expression_list                 go to state 184


State 115

  125 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 125 (real_postfix_expression)


State 116

  126 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 126 (real_postfix_expression)


State 117

  131 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 131 (unary_expression)


State 118

  137 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 185
    unary_operator                  go to state 63


State 119

  138 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 186
    unary_operator                  go to state 63


State 120

  139 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 187
    unary_operator                  go to state 63


State 121

  141 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 188


State 122

  142 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 189


State 123

  144 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 190


State 124

  145 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 191


State 125

  150 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 192


State 126

  149 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 193


State 127

  147 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 194


State 128

  148 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 195


State 129

  152 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 196


State 130

  153 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 197


State 131

  155 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 198


State 132

  157 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 199


State 133

  159 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 200


State 134

  161 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 201


State 135

  163 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 202


State 136

    1 semicolons: ';' .

    $default  reduce using rule 1 (semicolons)


State 137

    2 semicolons: semicolons . ';'
  184 expression_statement: expression semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 184 (expression_statement)


State 138

    2 semicolons: semicolons . ';'
  185 expression_statement: assignment_expression semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 185 (expression_statement)


State 139

  170 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30

    qualified_name                  go to state 204
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    just_not_name                   go to state 205
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 54
    field_access                    go to state 55
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    assignment_variable             go to state 206


State 140

  167 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 98
    expression_list                 go to state 207


State 141

  174 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 174 (compound_assignment_operator)


State 142

  175 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 175 (compound_assignment_operator)


State 143

  176 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 176 (compound_assignment_operator)


State 144

  177 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 177 (compound_assignment_operator)


State 145

  178 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 178 (compound_assignment_operator)


State 146

  179 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 179 (compound_assignment_operator)


State 147

  180 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 180 (compound_assignment_operator)


State 148

  181 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 181 (compound_assignment_operator)


State 149

  182 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 182 (compound_assignment_operator)


State 150

  183 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 183 (compound_assignment_operator)


State 151

  168 assignment_expression: assignment_variable compound_assignment_operator . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 208


State 152

   82 method_name: ID '.' . ID

    ID  shift, and go to state 209


State 153

   70 function_declaration: FUNC ID '(' . ')' code_block
   71                     | FUNC ID '(' . ')' return_type_list code_block
   72                     | FUNC ID '(' . parameter_list ')' code_block
   73                     | FUNC ID '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 154
    ')'  shift, and go to state 210

    parameter_list  go to state 211


State 154

   68 parameter_list: ID . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 161
    type_name       go to state 212
    primitive_type  go to state 37
    array_type      go to state 38


State 155

   74 anonymous_function_declaration: FUNC '(' ')' . code_block
   75                               | FUNC '(' ')' . return_type_list code_block

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 213
    '['       shift, and go to state 29
    '{'       shift, and go to state 214

    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 216
    code_block        go to state 217


State 156

   69 parameter_list: parameter_list . ',' ID type_name
   76 anonymous_function_declaration: FUNC '(' parameter_list . ')' code_block
   77                               | FUNC '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 218
    ')'  shift, and go to state 219


State 157

   78 method_declaration: FUNC method_name '(' . ')' code_block
   79                   | FUNC method_name '(' . ')' return_type_list code_block
   80                   | FUNC method_name '(' . parameter_list ')' code_block
   81                   | FUNC method_name '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 154
    ')'  shift, and go to state 220

    parameter_list  go to state 221


State 158

   23 function_type: FUNC . '(' ')'
   24              | FUNC . '(' ')' return_type_list
   25              | FUNC . '(' parameter_type_list ')'
   26              | FUNC . '(' parameter_type_list ')' return_type_list

    '('  shift, and go to state 222


State 159

   49 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 223


State 160

   50 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 224


State 161

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .

    '.'  shift, and go to state 100

    $default  reduce using rule 8 (type_name)


State 162

   51 type_declaration: TYPE ID type_name . semicolons

    ';'  shift, and go to state 136

    semicolons  go to state 225


State 163

   52 type_declaration: TYPE ID function_type . semicolons

    ';'  shift, and go to state 136

    semicolons  go to state 226


State 164

    2 semicolons: semicolons . ';'
   36 package_statement: PACKAGE qualified_name semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 36 (package_statement)


State 165

    4 qualified_name: qualified_name '.' . ID
   40 import_statement: IMPORT qualified_name '.' . '*' semicolons

    ID   shift, and go to state 174
    '*'  shift, and go to state 227


State 166

    2 semicolons: semicolons . ';'
   39 import_statement: IMPORT qualified_name semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 39 (import_statement)


State 167

   89 complex_primary: '(' expression ')' .
  101 array_complex_primary: '(' expression ')' .

    '['       reduce using rule 101 (array_complex_primary)
    $default  reduce using rule 89 (complex_primary)


State 168

   27 array_type: '[' INTEGER ']' . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 161
    type_name       go to state 228
    primitive_type  go to state 37
    array_type      go to state 38


State 169

  122 field_initializer: field_name ':' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 229


State 170

  121 field_initializer_list: field_initializer_list ',' . field_initializer

    ID  shift, and go to state 230

    field_name         go to state 95
    field_initializer  go to state 231


State 171

  116 struct_initializer: '{' field_initializer_list '}' .

    $default  reduce using rule 116 (struct_initializer)


State 172

  166 expression_list: expression_list ',' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 79
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    qualified_name                  go to state 80
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    anonymous_function_declaration  go to state 46
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 81
    field_access                    go to state 82
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 232


State 173

  115 struct_initializer: '{' expression_list '}' .

    $default  reduce using rule 115 (struct_initializer)


State 174

    4 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 4 (qualified_name)


State 175

  105 array_access: qualified_name '[' expression . ']'

    ']'  shift, and go to state 233


State 176

  117 struct_initializer: type_name '{' '}' .

    $default  reduce using rule 117 (struct_initializer)


State 177

  119 struct_initializer: type_name '{' field_initializer_list . '}'
  121 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 170
    '}'  shift, and go to state 234


State 178

  118 struct_initializer: type_name '{' expression_list . '}'
  166 expression_list: expression_list . ',' expression

    ','  shift, and go to state 172
    '}'  shift, and go to state 235


State 179

   29 program: package_statement import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . function_declaration
   46             | declarations . method_declaration
   48             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    TYPE            shift, and go to state 5
    INT8            shift, and go to state 8
    INT16           shift, and go to state 9
    INT32           shift, and go to state 10
    INT64           shift, and go to state 11
    UINT8           shift, and go to state 12
    UINT16          shift, and go to state 13
    UINT32          shift, and go to state 14
    UINT64          shift, and go to state 15
    FLOAT32         shift, and go to state 16
    FLOAT64         shift, and go to state 17
    BOOL            shift, and go to state 18
    STRING          shift, and go to state 19
    ANY_TYPE        shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '['             shift, and go to state 29
    '{'             shift, and go to state 30
    '+'             shift, and go to state 31
    '-'             shift, and go to state 32
    '~'             shift, and go to state 33
    '!'             shift, and go to state 34

    $default  reduce using rule 29 (program)

    qualified_name                  go to state 35
    type_name                       go to state 36
    primitive_type                  go to state 37
    array_type                      go to state 38
    type_declaration                go to state 108
    function_declaration            go to state 109
    anonymous_function_declaration  go to state 46
    method_declaration              go to state 110
    primary_expression              go to state 48
    just_not_name                   go to state 49
    complex_primary                 go to state 50
    complex_primary_no_parenthesis  go to state 51
    literal_name                    go to state 52
    array_complex_primary           go to state 53
    array_access                    go to state 54
    field_access                    go to state 55
    method_call                     go to state 56
    method_access                   go to state 57
    initializer_expression          go to state 58
    struct_initializer              go to state 59
    postfix_expression              go to state 60
    real_postfix_expression         go to state 61
    unary_expression                go to state 62
    unary_operator                  go to state 63
    multiplicative_expression       go to state 64
    additive_expression             go to state 65
    shift_expression                go to state 66
    relational_expression           go to state 67
    equality_expression             go to state 68
    and_expression                  go to state 69
    exclusive_or_expression         go to state 70
    inclusive_or_expression         go to state 71
    logical_and_expression          go to state 72
    logical_or_expression           go to state 73
    expression                      go to state 74
    assignment_expression           go to state 75
    assignment_variable_list        go to state 76
    assignment_variable             go to state 77
    expression_statement            go to state 111


State 180

  107 field_access: just_not_name '.' ID .

    $default  reduce using rule 107 (field_access)


State 181

  106 array_access: array_complex_primary '[' expression . ']'

    ']'  shift, and go to state 236


State 182

  109 method_call: method_access '(' ')' .

    $default  reduce using rule 109 (method_call)


State 183

  108 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 237


State 184

  127 argument_list: expression_list .
  166 expression_list: expression_list . ',' expression

    ','  shift, and go to state 172

    $default  reduce using rule 127 (argument_list)


State 185

  137 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 137 (multiplicative_expression)


State 186

  138 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 138 (multiplicative_expression)


State 187

  139 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 139 (multiplicative_expression)


State 188

  137 multiplicative_expression: multiplicative_expression . '*' unary_expression
  138                          | multiplicative_expression . '/' unary_expression
  139                          | multiplicative_expression . '%' unary_expression
  141 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 141 (additive_expression)


State 189

  137 multiplicative_expression: multiplicative_expression . '*' unary_expression
  138                          | multiplicative_expression . '/' unary_expression
  139                          | multiplicative_expression . '%' unary_expression
  142 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120

    $default  reduce using rule 142 (additive_expression)


State 190

  141 additive_expression: additive_expression . '+' multiplicative_expression
  142                    | additive_expression . '-' multiplicative_expression
  144 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 121
    '-'  shift, and go to state 122

    $default  reduce using rule 144 (shift_expression)


State 191

  141 additive_expression: additive_expression . '+' multiplicative_expression
  142                    | additive_expression . '-' multiplicative_expression
  145 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 121
    '-'  shift, and go to state 122

    $default  reduce using rule 145 (shift_expression)


State 192

  144 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  145                 | shift_expression . SHIFT_RIGHT additive_expression
  150 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 123
    SHIFT_RIGHT  shift, and go to state 124

    $default  reduce using rule 150 (relational_expression)


State 193

  144 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  145                 | shift_expression . SHIFT_RIGHT additive_expression
  149 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 123
    SHIFT_RIGHT  shift, and go to state 124

    $default  reduce using rule 149 (relational_expression)


State 194

  144 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  145                 | shift_expression . SHIFT_RIGHT additive_expression
  147 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 123
    SHIFT_RIGHT  shift, and go to state 124

    $default  reduce using rule 147 (relational_expression)


State 195

  144 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  145                 | shift_expression . SHIFT_RIGHT additive_expression
  148 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 123
    SHIFT_RIGHT  shift, and go to state 124

    $default  reduce using rule 148 (relational_expression)


State 196

  147 relational_expression: relational_expression . '<' shift_expression
  148                      | relational_expression . '>' shift_expression
  149                      | relational_expression . LE shift_expression
  150                      | relational_expression . GE shift_expression
  152 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 125
    LE   shift, and go to state 126
    '<'  shift, and go to state 127
    '>'  shift, and go to state 128

    $default  reduce using rule 152 (equality_expression)


State 197

  147 relational_expression: relational_expression . '<' shift_expression
  148                      | relational_expression . '>' shift_expression
  149                      | relational_expression . LE shift_expression
  150                      | relational_expression . GE shift_expression
  153 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 125
    LE   shift, and go to state 126
    '<'  shift, and go to state 127
    '>'  shift, and go to state 128

    $default  reduce using rule 153 (equality_expression)


State 198

  152 equality_expression: equality_expression . EQ relational_expression
  153                    | equality_expression . NE relational_expression
  155 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 129
    NE  shift, and go to state 130

    $default  reduce using rule 155 (and_expression)


State 199

  155 and_expression: and_expression . '&' equality_expression
  157 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 131

    $default  reduce using rule 157 (exclusive_or_expression)


State 200

  157 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  159 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 132

    $default  reduce using rule 159 (inclusive_or_expression)


State 201

  159 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  161 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 133

    $default  reduce using rule 161 (logical_and_expression)


State 202

  161 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  163 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 134

    $default  reduce using rule 163 (logical_or_expression)


State 203

    2 semicolons: semicolons ';' .

    $default  reduce using rule 2 (semicolons)


State 204

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
  105 array_access: qualified_name . '[' expression ']'
  111 method_access: qualified_name .
  171 assignment_variable: qualified_name .

    '.'  shift, and go to state 100
    '['  shift, and go to state 101

    '('       reduce using rule 111 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 171 (assignment_variable)


State 205

  107 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 112


State 206

  170 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 170 (assignment_variable_list)


State 207

  166 expression_list: expression_list . ',' expression
  167 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 172

    $default  reduce using rule 167 (assignment_expression)


State 208

  168 assignment_expression: assignment_variable compound_assignment_operator expression .

    $default  reduce using rule 168 (assignment_expression)


State 209

   82 method_name: ID '.' ID .

    $default  reduce using rule 82 (method_name)


State 210

   70 function_declaration: FUNC ID '(' ')' . code_block
   71                     | FUNC ID '(' ')' . return_type_list code_block

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 213
    '['       shift, and go to state 29
    '{'       shift, and go to state 214

    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 238
    code_block        go to state 239


State 211

   69 parameter_list: parameter_list . ',' ID type_name
   72 function_declaration: FUNC ID '(' parameter_list . ')' code_block
   73                     | FUNC ID '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 218
    ')'  shift, and go to state 240


State 212

   68 parameter_list: ID type_name .

    $default  reduce using rule 68 (parameter_list)


State 213

   65 return_type_list: '(' . type_name_list ')'

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 161
    type_name_list  go to state 241
    type_name       go to state 242
    primitive_type  go to state 37
    array_type      go to state 38


State 214

   83 code_block: '{' . '}'

    '}'  shift, and go to state 243


State 215

   64 return_type_list: type_name .

    $default  reduce using rule 64 (return_type_list)


State 216

   75 anonymous_function_declaration: FUNC '(' ')' return_type_list . code_block

    '{'  shift, and go to state 214

    code_block  go to state 244


State 217

   74 anonymous_function_declaration: FUNC '(' ')' code_block .

    $default  reduce using rule 74 (anonymous_function_declaration)


State 218

   69 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 245


State 219

   76 anonymous_function_declaration: FUNC '(' parameter_list ')' . code_block
   77                               | FUNC '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 213
    '['       shift, and go to state 29
    '{'       shift, and go to state 214

    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 246
    code_block        go to state 247


State 220

   78 method_declaration: FUNC method_name '(' ')' . code_block
   79                   | FUNC method_name '(' ')' . return_type_list code_block

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 213
    '['       shift, and go to state 29
    '{'       shift, and go to state 214

    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 248
    code_block        go to state 249


State 221

   69 parameter_list: parameter_list . ',' ID type_name
   80 method_declaration: FUNC method_name '(' parameter_list . ')' code_block
   81                   | FUNC method_name '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 218
    ')'  shift, and go to state 250


State 222

   23 function_type: FUNC '(' . ')'
   24              | FUNC '(' . ')' return_type_list
   25              | FUNC '(' . parameter_type_list ')'
   26              | FUNC '(' . parameter_type_list ')' return_type_list

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ')'       shift, and go to state 251
    '['       shift, and go to state 29

    qualified_name       go to state 161
    type_name            go to state 252
    primitive_type       go to state 37
    array_type           go to state 38
    parameter_type_list  go to state 253


State 223

   49 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 254

    field_declarations  go to state 255
    field_declaration   go to state 256


State 224

   50 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    FUNC  shift, and go to state 257

    interface_function_declarations  go to state 258
    interface_function_declaration   go to state 259


State 225

    2 semicolons: semicolons . ';'
   51 type_declaration: TYPE ID type_name semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 51 (type_declaration)


State 226

    2 semicolons: semicolons . ';'
   52 type_declaration: TYPE ID function_type semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 52 (type_declaration)


State 227

   40 import_statement: IMPORT qualified_name '.' '*' . semicolons

    ';'  shift, and go to state 136

    semicolons  go to state 260


State 228

   27 array_type: '[' INTEGER ']' type_name .

    $default  reduce using rule 27 (array_type)


State 229

  122 field_initializer: field_name ':' expression .

    $default  reduce using rule 122 (field_initializer)


State 230

   28 field_name: ID .

    $default  reduce using rule 28 (field_name)


State 231

  121 field_initializer_list: field_initializer_list ',' field_initializer .

    $default  reduce using rule 121 (field_initializer_list)


State 232

  166 expression_list: expression_list ',' expression .

    $default  reduce using rule 166 (expression_list)


State 233

  105 array_access: qualified_name '[' expression ']' .

    $default  reduce using rule 105 (array_access)


State 234

  119 struct_initializer: type_name '{' field_initializer_list '}' .

    $default  reduce using rule 119 (struct_initializer)


State 235

  118 struct_initializer: type_name '{' expression_list '}' .

    $default  reduce using rule 118 (struct_initializer)


State 236

  106 array_access: array_complex_primary '[' expression ']' .

    $default  reduce using rule 106 (array_access)


State 237

  108 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 108 (method_call)


State 238

   71 function_declaration: FUNC ID '(' ')' return_type_list . code_block

    '{'  shift, and go to state 214

    code_block  go to state 261


State 239

   70 function_declaration: FUNC ID '(' ')' code_block .

    $default  reduce using rule 70 (function_declaration)


State 240

   72 function_declaration: FUNC ID '(' parameter_list ')' . code_block
   73                     | FUNC ID '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 213
    '['       shift, and go to state 29
    '{'       shift, and go to state 214

    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 262
    code_block        go to state 263


State 241

    6 type_name_list: type_name_list . ',' type_name
   65 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 264
    ')'  shift, and go to state 265


State 242

    5 type_name_list: type_name .

    $default  reduce using rule 5 (type_name_list)


State 243

   83 code_block: '{' '}' .

    $default  reduce using rule 83 (code_block)


State 244

   75 anonymous_function_declaration: FUNC '(' ')' return_type_list code_block .

    $default  reduce using rule 75 (anonymous_function_declaration)


State 245

   69 parameter_list: parameter_list ',' ID . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 161
    type_name       go to state 266
    primitive_type  go to state 37
    array_type      go to state 38


State 246

   77 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 214

    code_block  go to state 267


State 247

   76 anonymous_function_declaration: FUNC '(' parameter_list ')' code_block .

    $default  reduce using rule 76 (anonymous_function_declaration)


State 248

   79 method_declaration: FUNC method_name '(' ')' return_type_list . code_block

    '{'  shift, and go to state 214

    code_block  go to state 268


State 249

   78 method_declaration: FUNC method_name '(' ')' code_block .

    $default  reduce using rule 78 (method_declaration)


State 250

   80 method_declaration: FUNC method_name '(' parameter_list ')' . code_block
   81                   | FUNC method_name '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 213
    '['       shift, and go to state 29
    '{'       shift, and go to state 214

    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 269
    code_block        go to state 270


State 251

   23 function_type: FUNC '(' ')' .
   24              | FUNC '(' ')' . return_type_list

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 213
    '['       shift, and go to state 29

    $default  reduce using rule 23 (function_type)

    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 271


State 252

   66 parameter_type_list: type_name .

    $default  reduce using rule 66 (parameter_type_list)


State 253

   25 function_type: FUNC '(' parameter_type_list . ')'
   26              | FUNC '(' parameter_type_list . ')' return_type_list
   67 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 272
    ')'  shift, and go to state 273


State 254

   55 field_declaration: ID . type_name semicolons

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 161
    type_name       go to state 274
    primitive_type  go to state 37
    array_type      go to state 38


State 255

   49 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   54 field_declarations: field_declarations . field_declaration

    ID   shift, and go to state 254
    '}'  shift, and go to state 275

    field_declaration  go to state 276


State 256

   53 field_declarations: field_declaration .

    $default  reduce using rule 53 (field_declarations)


State 257

   58 interface_function_declaration: FUNC . ID '(' ')' semicolons
   59                               | FUNC . ID '(' ')' return_type_list semicolons
   60                               | FUNC . ID '(' parameter_type_list ')' semicolons
   61                               | FUNC . ID '(' parameter_type_list ')' return_type_list semicolons
   62                               | FUNC . ID '(' parameter_list ')' semicolons
   63                               | FUNC . ID '(' parameter_list ')' return_type_list semicolons

    ID  shift, and go to state 277


State 258

   50 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   57 interface_function_declarations: interface_function_declarations . interface_function_declaration

    FUNC  shift, and go to state 257
    '}'   shift, and go to state 278

    interface_function_declaration  go to state 279


State 259

   56 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 56 (interface_function_declarations)


State 260

    2 semicolons: semicolons . ';'
   40 import_statement: IMPORT qualified_name '.' '*' semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 40 (import_statement)


State 261

   71 function_declaration: FUNC ID '(' ')' return_type_list code_block .

    $default  reduce using rule 71 (function_declaration)


State 262

   73 function_declaration: FUNC ID '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 214

    code_block  go to state 280


State 263

   72 function_declaration: FUNC ID '(' parameter_list ')' code_block .

    $default  reduce using rule 72 (function_declaration)


State 264

    6 type_name_list: type_name_list ',' . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 161
    type_name       go to state 281
    primitive_type  go to state 37
    array_type      go to state 38


State 265

   65 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 65 (return_type_list)


State 266

   69 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 69 (parameter_list)


State 267

   77 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 77 (anonymous_function_declaration)


State 268

   79 method_declaration: FUNC method_name '(' ')' return_type_list code_block .

    $default  reduce using rule 79 (method_declaration)


State 269

   81 method_declaration: FUNC method_name '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 214

    code_block  go to state 282


State 270

   80 method_declaration: FUNC method_name '(' parameter_list ')' code_block .

    $default  reduce using rule 80 (method_declaration)


State 271

   24 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 24 (function_type)


State 272

   67 parameter_type_list: parameter_type_list ',' . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    qualified_name  go to state 161
    type_name       go to state 283
    primitive_type  go to state 37
    array_type      go to state 38


State 273

   25 function_type: FUNC '(' parameter_type_list ')' .
   26              | FUNC '(' parameter_type_list ')' . return_type_list

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '('       shift, and go to state 213
    '['       shift, and go to state 29

    $default  reduce using rule 25 (function_type)

    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 284


State 274

   55 field_declaration: ID type_name . semicolons

    ';'  shift, and go to state 136

    semicolons  go to state 285


State 275

   49 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 49 (type_declaration)


State 276

   54 field_declarations: field_declarations field_declaration .

    $default  reduce using rule 54 (field_declarations)


State 277

   58 interface_function_declaration: FUNC ID . '(' ')' semicolons
   59                               | FUNC ID . '(' ')' return_type_list semicolons
   60                               | FUNC ID . '(' parameter_type_list ')' semicolons
   61                               | FUNC ID . '(' parameter_type_list ')' return_type_list semicolons
   62                               | FUNC ID . '(' parameter_list ')' semicolons
   63                               | FUNC ID . '(' parameter_list ')' return_type_list semicolons

    '('  shift, and go to state 286


State 278

   50 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 50 (type_declaration)


State 279

   57 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 57 (interface_function_declarations)


State 280

   73 function_declaration: FUNC ID '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 73 (function_declaration)


State 281

    6 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 6 (type_name_list)


State 282

   81 method_declaration: FUNC method_name '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 81 (method_declaration)


State 283

   67 parameter_type_list: parameter_type_list ',' type_name .

    $default  reduce using rule 67 (parameter_type_list)


State 284

   26 function_type: FUNC '(' parameter_type_list ')' return_type_list .

    $default  reduce using rule 26 (function_type)


State 285

    2 semicolons: semicolons . ';'
   55 field_declaration: ID type_name semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 55 (field_declaration)


State 286

   58 interface_function_declaration: FUNC ID '(' . ')' semicolons
   59                               | FUNC ID '(' . ')' return_type_list semicolons
   60                               | FUNC ID '(' . parameter_type_list ')' semicolons
   61                               | FUNC ID '(' . parameter_type_list ')' return_type_list semicolons
   62                               | FUNC ID '(' . parameter_list ')' semicolons
   63                               | FUNC ID '(' . parameter_list ')' return_type_list semicolons

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 287
    ')'       shift, and go to state 288
    '['       shift, and go to state 29

    qualified_name       go to state 161
    type_name            go to state 252
    primitive_type       go to state 37
    array_type           go to state 38
    parameter_type_list  go to state 289
    parameter_list       go to state 290


State 287

    3 qualified_name: ID .
   68 parameter_list: ID . type_name

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    '['       shift, and go to state 29

    $default  reduce using rule 3 (qualified_name)

    qualified_name  go to state 161
    type_name       go to state 212
    primitive_type  go to state 37
    array_type      go to state 38


State 288

   58 interface_function_declaration: FUNC ID '(' ')' . semicolons
   59                               | FUNC ID '(' ')' . return_type_list semicolons

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ';'       shift, and go to state 136
    '('       shift, and go to state 213
    '['       shift, and go to state 29

    semicolons        go to state 291
    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 292


State 289

   60 interface_function_declaration: FUNC ID '(' parameter_type_list . ')' semicolons
   61                               | FUNC ID '(' parameter_type_list . ')' return_type_list semicolons
   67 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 272
    ')'  shift, and go to state 293


State 290

   62 interface_function_declaration: FUNC ID '(' parameter_list . ')' semicolons
   63                               | FUNC ID '(' parameter_list . ')' return_type_list semicolons
   69 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 218
    ')'  shift, and go to state 294


State 291

    2 semicolons: semicolons . ';'
   58 interface_function_declaration: FUNC ID '(' ')' semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 58 (interface_function_declaration)


State 292

   59 interface_function_declaration: FUNC ID '(' ')' return_type_list . semicolons

    ';'  shift, and go to state 136

    semicolons  go to state 295


State 293

   60 interface_function_declaration: FUNC ID '(' parameter_type_list ')' . semicolons
   61                               | FUNC ID '(' parameter_type_list ')' . return_type_list semicolons

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ';'       shift, and go to state 136
    '('       shift, and go to state 213
    '['       shift, and go to state 29

    semicolons        go to state 296
    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 297


State 294

   62 interface_function_declaration: FUNC ID '(' parameter_list ')' . semicolons
   63                               | FUNC ID '(' parameter_list ')' . return_type_list semicolons

    INT8      shift, and go to state 8
    INT16     shift, and go to state 9
    INT32     shift, and go to state 10
    INT64     shift, and go to state 11
    UINT8     shift, and go to state 12
    UINT16    shift, and go to state 13
    UINT32    shift, and go to state 14
    UINT64    shift, and go to state 15
    FLOAT32   shift, and go to state 16
    FLOAT64   shift, and go to state 17
    BOOL      shift, and go to state 18
    STRING    shift, and go to state 19
    ANY_TYPE  shift, and go to state 20
    ID        shift, and go to state 27
    ';'       shift, and go to state 136
    '('       shift, and go to state 213
    '['       shift, and go to state 29

    semicolons        go to state 298
    qualified_name    go to state 161
    type_name         go to state 215
    primitive_type    go to state 37
    array_type        go to state 38
    return_type_list  go to state 299


State 295

    2 semicolons: semicolons . ';'
   59 interface_function_declaration: FUNC ID '(' ')' return_type_list semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 59 (interface_function_declaration)


State 296

    2 semicolons: semicolons . ';'
   60 interface_function_declaration: FUNC ID '(' parameter_type_list ')' semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 60 (interface_function_declaration)


State 297

   61 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list . semicolons

    ';'  shift, and go to state 136

    semicolons  go to state 300


State 298

    2 semicolons: semicolons . ';'
   62 interface_function_declaration: FUNC ID '(' parameter_list ')' semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 62 (interface_function_declaration)


State 299

   63 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list . semicolons

    ';'  shift, and go to state 136

    semicolons  go to state 301


State 300

    2 semicolons: semicolons . ';'
   61 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 61 (interface_function_declaration)


State 301

    2 semicolons: semicolons . ';'
   63 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list semicolons .

    ';'  shift, and go to state 203

    $default  reduce using rule 63 (interface_function_declaration)
