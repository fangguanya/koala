Terminals unused in grammar

   ELLIPSIS
   NOT
   TOKEN_THIS
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   HEX
   OCT
   OP
   IFX
   NO_CODE_BLOCK


Grammar

    0 $accept: program $end

    1 qualified_name: ID
    2               | qualified_name '.' ID

    3 type_name_list: type_name
    4               | type_name_list ',' type_name

    5 type_name: primitive_type
    6          | qualified_name
    7          | array_type
    8          | function_type
    9          | INTERFACE '{' '}'

   10 primitive_type: UINT8
   11               | UINT16
   12               | UINT32
   13               | UINT64
   14               | INT8
   15               | INT16
   16               | INT32
   17               | INT64
   18               | FLOAT32
   19               | FLOAT64
   20               | BOOL
   21               | STRING

   22 function_type: FUNC '(' ')'
   23              | FUNC '(' ')' return_type_list
   24              | FUNC '(' type_name_list ')'
   25              | FUNC '(' type_name_list ')' return_type_list

   26 array_type: '[' INTEGER ']' type_name

   27 return_type_list: type_name
   28                 | '(' type_name_list ')'

   29 program: package_statement import_statements declarations
   30        | package_statement import_statements
   31        | package_statement declarations
   32        | import_statements declarations
   33        | package_statement
   34        | import_statements
   35        | declarations

   36 package_statement: PACKAGE qualified_name ';'

   37 import_statements: import_statement
   38                  | import_statements import_statement

   39 import_statement: IMPORT qualified_name ';'
   40                 | IMPORT qualified_name '.' '*' ';'

   41 declarations: type_declaration
   42             | declarations type_declaration
   43             | variable_declaration
   44             | declarations variable_declaration
   45             | function_declaration
   46             | declarations function_declaration
   47             | method_declaration
   48             | declarations method_declaration

   49 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   50                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE ID type_name ';'

   52 field_declarations: ID type_name ';'
   53                   | field_declarations ID type_name ';'

   54 interface_function_declarations: interface_function_declaration
   55                                | interface_function_declarations interface_function_declaration

   56 interface_function_declaration: ID '(' ')' ';'
   57                               | ID '(' ')' return_type_list ';'
   58                               | ID '(' type_name_list ')' ';'
   59                               | ID '(' type_name_list ')' return_type_list ';'
   60                               | ID '(' parameter_list ')' ';'
   61                               | ID '(' parameter_list ')' return_type_list ';'

   62 parameter_list: ID type_name
   63               | parameter_list ',' ID type_name

   64 function_declaration: FUNC ID '(' ')' code_block
   65                     | FUNC ID '(' ')' return_type_list code_block
   66                     | FUNC ID '(' parameter_list ')' code_block
   67                     | FUNC ID '(' parameter_list ')' return_type_list code_block

   68 anonymous_function_declaration: FUNC '(' ')' code_block
   69                               | FUNC '(' ')' return_type_list code_block
   70                               | FUNC '(' parameter_list ')' code_block
   71                               | FUNC '(' parameter_list ')' return_type_list code_block

   72 method_declaration: FUNC ID '.' ID '(' ')' code_block
   73                   | FUNC ID '.' ID '(' ')' return_type_list code_block
   74                   | FUNC ID '.' ID '(' parameter_list ')' code_block
   75                   | FUNC ID '.' ID '(' parameter_list ')' return_type_list code_block

   76 code_block: '{' local_variable_declaration_statements '}'
   77           | '{' '}'

   78 local_variable_declaration_statements: local_variable_declaration_statement
   79                                      | local_variable_declaration_statements local_variable_declaration_statement

   80 local_variable_declaration_statement: variable_declaration
   81                                     | statement

   82 statement: expression_statement ';'
   83          | selection_statement
   84          | iteration_statemnet
   85          | jump_statement

   86 selection_statement: if_statement
   87                    | switch_statement

   88 if_statement: IF '(' base_expression ')' code_block
   89             | IF '(' base_expression ')' code_block ELSE else_statemnet

   90 else_statemnet: if_statement
   91               | code_block

   92 switch_statement: SWITCH '(' base_expression ')' code_block

   93 iteration_statemnet: WHILE '(' base_expression ')' code_block
   94                    | DO code_block WHILE '(' base_expression ')' ';'
   95                    | FOR '(' for_init for_expr for_incr ')' code_block

   96 for_init: expression_statement ';'
   97         | variable_declaration
   98         | ';'

   99 for_expr: base_expression ';'
  100         | ';'

  101 for_incr: expression_statement

  102 jump_statement: RETURN ';'
  103               | RETURN expression_list ';'

  104 variable_declaration: VAR var_list type_name ';'
  105                     | VAR var_list '=' expression_list ';'
  106                     | VAR var_list type_name '=' expression_list ';'

  107 var_list: ID
  108         | var_list ',' ID

  109 array_complex_primary: '(' base_expression ')'
  110                      | array_access
  111                      | field_access
  112                      | method_call

  113 array_access: qualified_name '[' base_expression ']'
  114             | array_complex_primary '[' base_expression ']'

  115 field_access: just_not_name '.' ID

  116 method_call: method_access '(' argument_list ')'
  117            | method_access '(' ')'

  118 method_access: complex_primary
  119              | qualified_name

  120 argument_list: expression_list

  121 initializer_expression: '{' '}'
  122                       | '{' expression_list '}'
  123                       | '{' field_initial_list '}'
  124                       | '{' array_initial_list '}'
  125                       | qualified_name '{' '}'
  126                       | qualified_name '{' expression_list '}'
  127                       | qualified_name '{' field_initial_list '}'
  128                       | array_type '{' '}'
  129                       | array_type '{' expression_list '}'
  130                       | array_type '{' array_initial_list '}'
  131                       | anonymous_function_declaration
  132                       | primitive_type '(' base_expression ')'

  133 field_initial_list: ID ':' expression
  134                   | field_initial_list ',' ID ':' expression

  135 array_initial_list: INTEGER ':' expression
  136                   | array_initial_list ',' INTEGER ':' expression

  137 primary_expression: qualified_name
  138                   | constant
  139                   | just_not_name

  140 just_not_name: '(' base_expression ')'
  141              | complex_primary

  142 complex_primary: array_access
  143                | field_access
  144                | method_call

  145 constant: INTEGER
  146         | FLOAT
  147         | STRING_LITERAL
  148         | TOKEN_NIL
  149         | TOKEN_TRUE
  150         | TOKEN_FALSE

  151 postfix_expression: primary_expression
  152                   | postfix_expression INC
  153                   | postfix_expression DEC

  154 unary_expression: postfix_expression
  155                 | INC unary_expression
  156                 | DEC unary_expression
  157                 | '+' unary_expression
  158                 | '-' unary_expression
  159                 | '~' unary_expression
  160                 | '!' unary_expression

  161 multiplicative_expression: unary_expression
  162                          | multiplicative_expression '*' unary_expression
  163                          | multiplicative_expression '/' unary_expression
  164                          | multiplicative_expression '%' unary_expression

  165 additive_expression: multiplicative_expression
  166                    | additive_expression '+' multiplicative_expression
  167                    | additive_expression '-' multiplicative_expression

  168 shift_expression: additive_expression
  169                 | shift_expression SHIFT_LEFT additive_expression
  170                 | shift_expression SHIFT_RIGHT additive_expression

  171 relational_expression: shift_expression
  172                      | relational_expression '<' shift_expression
  173                      | relational_expression '>' shift_expression
  174                      | relational_expression LE shift_expression
  175                      | relational_expression GE shift_expression

  176 equality_expression: relational_expression
  177                    | equality_expression EQ relational_expression
  178                    | equality_expression NE relational_expression

  179 and_expression: equality_expression
  180               | and_expression '&' equality_expression

  181 exclusive_or_expression: and_expression
  182                        | exclusive_or_expression '^' and_expression

  183 inclusive_or_expression: exclusive_or_expression
  184                        | inclusive_or_expression '|' exclusive_or_expression

  185 logical_and_expression: inclusive_or_expression
  186                       | logical_and_expression AND inclusive_or_expression

  187 logical_or_expression: logical_and_expression
  188                      | logical_or_expression OR logical_and_expression

  189 base_expression: logical_or_expression

  190 expression: base_expression
  191           | initializer_expression

  192 expression_list: expression
  193                | expression_list ',' expression

  194 assignment_expression: assignment_variable_list '=' expression_list
  195                      | assignment_variable compound_assignment_operator base_expression

  196 assignment_variable_list: assignment_variable
  197                         | assignment_variable_list ',' assignment_variable

  198 assignment_variable: qualified_name
  199                    | array_access
  200                    | field_access

  201 compound_assignment_operator: ADD_ASSIGN
  202                             | SUB_ASSIGN
  203                             | MUL_ASSIGN
  204                             | DIV_ASSIGN
  205                             | MOD_ASSIGN
  206                             | AND_ASSIGN
  207                             | OR_ASSIGN
  208                             | XOR_ASSIGN
  209                             | RIGHT_ASSIGN
  210                             | LEFT_ASSIGN

  211 expression_statement: base_expression
  212                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 160
'%' (37) 164
'&' (38) 180
'(' (40) 22 23 24 25 28 56 57 58 59 60 61 64 65 66 67 68 69 70 71 72
    73 74 75 88 89 92 93 94 95 109 116 117 132 140
')' (41) 22 23 24 25 28 56 57 58 59 60 61 64 65 66 67 68 69 70 71 72
    73 74 75 88 89 92 93 94 95 109 116 117 132 140
'*' (42) 40 162
'+' (43) 157 166
',' (44) 4 63 108 134 136 193 197
'-' (45) 158 167
'.' (46) 2 40 72 73 74 75 115
'/' (47) 163
':' (58) 133 134 135 136
';' (59) 36 39 40 51 52 53 56 57 58 59 60 61 82 94 96 98 99 100 102
    103 104 105 106
'<' (60) 172
'=' (61) 105 106 194
'>' (62) 173
'[' (91) 26 113 114
']' (93) 26 113 114
'^' (94) 182
'{' (123) 9 49 50 76 77 121 122 123 124 125 126 127 128 129 130
'|' (124) 184
'}' (125) 9 49 50 76 77 121 122 123 124 125 126 127 128 129 130
'~' (126) 159
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 201
SUB_ASSIGN (260) 202
MUL_ASSIGN (261) 203
DIV_ASSIGN (262) 204
MOD_ASSIGN (263) 205
AND_ASSIGN (264) 206
OR_ASSIGN (265) 207
XOR_ASSIGN (266) 208
RIGHT_ASSIGN (267) 209
LEFT_ASSIGN (268) 210
EQ (269) 177
NE (270) 178
GE (271) 175
LE (272) 174
AND (273) 186
OR (274) 188
NOT (275)
SHIFT_LEFT (276) 169
SHIFT_RIGHT (277) 170
INC (278) 152 155
DEC (279) 153 156
TOKEN_THIS (280)
IF (281) 88 89
ELSE (282) 89
WHILE (283) 93 94
DO (284) 94
FOR (285) 95
IN (286)
SWITCH (287) 92
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 104 105 106
FUNC (293) 22 23 24 25 64 65 66 67 68 69 70 71 72 73 74 75
RETURN (294) 102 103
STRUCT (295) 49
INTERFACE (296) 9 50
TYPE (297) 49 50 51
CONST (298)
PACKAGE (299) 36
IMPORT (300) 39 40
INT8 (301) 14
INT16 (302) 15
INT32 (303) 16
INT64 (304) 17
UINT8 (305) 10
UINT16 (306) 11
UINT32 (307) 12
UINT64 (308) 13
FLOAT32 (309) 18
FLOAT64 (310) 19
BOOL (311) 20
STRING (312) 21
TOKEN_NIL (313) 148
TOKEN_TRUE (314) 149
TOKEN_FALSE (315) 150
INTEGER (316) 26 135 136 145
HEX (317)
OCT (318)
FLOAT (319) 146
STRING_LITERAL (320) 147
ID (321) 1 2 49 50 51 52 53 56 57 58 59 60 61 62 63 64 65 66 67 72
    73 74 75 107 108 115 133 134
OP (322)
IFX (323)
NO_CODE_BLOCK (324)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
qualified_name (94)
    on left: 1 2, on right: 2 6 36 39 40 113 119 125 126 127 137 198
type_name_list (95)
    on left: 3 4, on right: 4 24 25 28 58 59
type_name (96)
    on left: 5 6 7 8 9, on right: 3 4 26 27 51 52 53 62 63 104 106
primitive_type (97)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21, on right: 5 132
function_type (98)
    on left: 22 23 24 25, on right: 8
array_type (99)
    on left: 26, on right: 7 128 129 130
return_type_list (100)
    on left: 27 28, on right: 23 25 57 59 61 65 67 69 71 73 75
program (101)
    on left: 29 30 31 32 33 34 35, on right: 0
package_statement (102)
    on left: 36, on right: 29 30 31 33
import_statements (103)
    on left: 37 38, on right: 29 30 32 34 38
import_statement (104)
    on left: 39 40, on right: 37 38
declarations (105)
    on left: 41 42 43 44 45 46 47 48, on right: 29 31 32 35 42 44 46
    48
type_declaration (106)
    on left: 49 50 51, on right: 41 42
field_declarations (107)
    on left: 52 53, on right: 49 53
interface_function_declarations (108)
    on left: 54 55, on right: 50 55
interface_function_declaration (109)
    on left: 56 57 58 59 60 61, on right: 54 55
parameter_list (110)
    on left: 62 63, on right: 60 61 63 66 67 70 71 74 75
function_declaration (111)
    on left: 64 65 66 67, on right: 45 46
anonymous_function_declaration (112)
    on left: 68 69 70 71, on right: 131
method_declaration (113)
    on left: 72 73 74 75, on right: 47 48
code_block (114)
    on left: 76 77, on right: 64 65 66 67 68 69 70 71 72 73 74 75 88
    89 91 92 93 94 95
local_variable_declaration_statements (115)
    on left: 78 79, on right: 76 79
local_variable_declaration_statement (116)
    on left: 80 81, on right: 78 79
statement (117)
    on left: 82 83 84 85, on right: 81
selection_statement (118)
    on left: 86 87, on right: 83
if_statement (119)
    on left: 88 89, on right: 86 90
else_statemnet (120)
    on left: 90 91, on right: 89
switch_statement (121)
    on left: 92, on right: 87
iteration_statemnet (122)
    on left: 93 94 95, on right: 84
for_init (123)
    on left: 96 97 98, on right: 95
for_expr (124)
    on left: 99 100, on right: 95
for_incr (125)
    on left: 101, on right: 95
jump_statement (126)
    on left: 102 103, on right: 85
variable_declaration (127)
    on left: 104 105 106, on right: 43 44 80 97
var_list (128)
    on left: 107 108, on right: 104 105 106 108
array_complex_primary (129)
    on left: 109 110 111 112, on right: 114
array_access (130)
    on left: 113 114, on right: 110 142 199
field_access (131)
    on left: 115, on right: 111 143 200
method_call (132)
    on left: 116 117, on right: 112 144
method_access (133)
    on left: 118 119, on right: 116 117
argument_list (134)
    on left: 120, on right: 116
initializer_expression (135)
    on left: 121 122 123 124 125 126 127 128 129 130 131 132, on right:
    191
field_initial_list (136)
    on left: 133 134, on right: 123 127 134
array_initial_list (137)
    on left: 135 136, on right: 124 130 136
primary_expression (138)
    on left: 137 138 139, on right: 151
just_not_name (139)
    on left: 140 141, on right: 115 139
complex_primary (140)
    on left: 142 143 144, on right: 118 141
constant (141)
    on left: 145 146 147 148 149 150, on right: 138
postfix_expression (142)
    on left: 151 152 153, on right: 152 153 154
unary_expression (143)
    on left: 154 155 156 157 158 159 160, on right: 155 156 157 158
    159 160 161 162 163 164
multiplicative_expression (144)
    on left: 161 162 163 164, on right: 162 163 164 165 166 167
additive_expression (145)
    on left: 165 166 167, on right: 166 167 168 169 170
shift_expression (146)
    on left: 168 169 170, on right: 169 170 171 172 173 174 175
relational_expression (147)
    on left: 171 172 173 174 175, on right: 172 173 174 175 176 177
    178
equality_expression (148)
    on left: 176 177 178, on right: 177 178 179 180
and_expression (149)
    on left: 179 180, on right: 180 181 182
exclusive_or_expression (150)
    on left: 181 182, on right: 182 183 184
inclusive_or_expression (151)
    on left: 183 184, on right: 184 185 186
logical_and_expression (152)
    on left: 185 186, on right: 186 187 188
logical_or_expression (153)
    on left: 187 188, on right: 188 189
base_expression (154)
    on left: 189, on right: 88 89 92 93 94 99 109 113 114 132 140 190
    195 211
expression (155)
    on left: 190 191, on right: 133 134 135 136 192 193
expression_list (156)
    on left: 192 193, on right: 103 105 106 120 122 126 129 193 194
assignment_expression (157)
    on left: 194 195, on right: 212
assignment_variable_list (158)
    on left: 196 197, on right: 194 197
assignment_variable (159)
    on left: 198 199 200, on right: 195 196 197
compound_assignment_operator (160)
    on left: 201 202 203 204 205 206 207 208 209 210, on right: 195
expression_statement (161)
    on left: 211 212, on right: 82 96 101


State 0

    0 $accept: . program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    PACKAGE  shift, and go to state 4
    IMPORT   shift, and go to state 5

    program               go to state 6
    package_statement     go to state 7
    import_statements     go to state 8
    import_statement      go to state 9
    declarations          go to state 10
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 1

  104 variable_declaration: VAR . var_list type_name ';'
  105                     | VAR . var_list '=' expression_list ';'
  106                     | VAR . var_list type_name '=' expression_list ';'

    ID  shift, and go to state 15

    var_list  go to state 16


State 2

   64 function_declaration: FUNC . ID '(' ')' code_block
   65                     | FUNC . ID '(' ')' return_type_list code_block
   66                     | FUNC . ID '(' parameter_list ')' code_block
   67                     | FUNC . ID '(' parameter_list ')' return_type_list code_block
   72 method_declaration: FUNC . ID '.' ID '(' ')' code_block
   73                   | FUNC . ID '.' ID '(' ')' return_type_list code_block
   74                   | FUNC . ID '.' ID '(' parameter_list ')' code_block
   75                   | FUNC . ID '.' ID '(' parameter_list ')' return_type_list code_block

    ID  shift, and go to state 17


State 3

   49 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   50                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE . ID type_name ';'

    ID  shift, and go to state 18


State 4

   36 package_statement: PACKAGE . qualified_name ';'

    ID  shift, and go to state 19

    qualified_name  go to state 20


State 5

   39 import_statement: IMPORT . qualified_name ';'
   40                 | IMPORT . qualified_name '.' '*' ';'

    ID  shift, and go to state 19

    qualified_name  go to state 21


State 6

    0 $accept: program . $end

    $end  shift, and go to state 22


State 7

   29 program: package_statement . import_statements declarations
   30        | package_statement . import_statements
   31        | package_statement . declarations
   33        | package_statement .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 33 (program)

    import_statements     go to state 23
    import_statement      go to state 9
    declarations          go to state 24
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 8

   32 program: import_statements . declarations
   34        | import_statements .
   38 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 34 (program)

    import_statement      go to state 25
    declarations          go to state 26
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 9

   37 import_statements: import_statement .

    $default  reduce using rule 37 (import_statements)


State 10

   35 program: declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 35 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 11

   41 declarations: type_declaration .

    $default  reduce using rule 41 (declarations)


State 12

   45 declarations: function_declaration .

    $default  reduce using rule 45 (declarations)


State 13

   47 declarations: method_declaration .

    $default  reduce using rule 47 (declarations)


State 14

   43 declarations: variable_declaration .

    $default  reduce using rule 43 (declarations)


State 15

  107 var_list: ID .

    $default  reduce using rule 107 (var_list)


State 16

  104 variable_declaration: VAR var_list . type_name ';'
  105                     | VAR var_list . '=' expression_list ';'
  106                     | VAR var_list . type_name '=' expression_list ';'
  108 var_list: var_list . ',' ID

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    ','        shift, and go to state 45
    '['        shift, and go to state 46
    '='        shift, and go to state 47

    qualified_name  go to state 48
    type_name       go to state 49
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 17

   64 function_declaration: FUNC ID . '(' ')' code_block
   65                     | FUNC ID . '(' ')' return_type_list code_block
   66                     | FUNC ID . '(' parameter_list ')' code_block
   67                     | FUNC ID . '(' parameter_list ')' return_type_list code_block
   72 method_declaration: FUNC ID . '.' ID '(' ')' code_block
   73                   | FUNC ID . '.' ID '(' ')' return_type_list code_block
   74                   | FUNC ID . '.' ID '(' parameter_list ')' code_block
   75                   | FUNC ID . '.' ID '(' parameter_list ')' return_type_list code_block

    '.'  shift, and go to state 53
    '('  shift, and go to state 54


State 18

   49 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   50                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE ID . type_name ';'

    FUNC       shift, and go to state 31
    STRUCT     shift, and go to state 55
    INTERFACE  shift, and go to state 56
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 57
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 19

    1 qualified_name: ID .

    $default  reduce using rule 1 (qualified_name)


State 20

    2 qualified_name: qualified_name . '.' ID
   36 package_statement: PACKAGE qualified_name . ';'

    '.'  shift, and go to state 58
    ';'  shift, and go to state 59


State 21

    2 qualified_name: qualified_name . '.' ID
   39 import_statement: IMPORT qualified_name . ';'
   40                 | IMPORT qualified_name . '.' '*' ';'

    '.'  shift, and go to state 60
    ';'  shift, and go to state 61


State 22

    0 $accept: program $end .

    $default  accept


State 23

   29 program: package_statement import_statements . declarations
   30        | package_statement import_statements .
   38 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 30 (program)

    import_statement      go to state 25
    declarations          go to state 62
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 24

   31 program: package_statement declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 31 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 25

   38 import_statements: import_statements import_statement .

    $default  reduce using rule 38 (import_statements)


State 26

   32 program: import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 32 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 27

   42 declarations: declarations type_declaration .

    $default  reduce using rule 42 (declarations)


State 28

   46 declarations: declarations function_declaration .

    $default  reduce using rule 46 (declarations)


State 29

   48 declarations: declarations method_declaration .

    $default  reduce using rule 48 (declarations)


State 30

   44 declarations: declarations variable_declaration .

    $default  reduce using rule 44 (declarations)


State 31

   22 function_type: FUNC . '(' ')'
   23              | FUNC . '(' ')' return_type_list
   24              | FUNC . '(' type_name_list ')'
   25              | FUNC . '(' type_name_list ')' return_type_list

    '('  shift, and go to state 63


State 32

    9 type_name: INTERFACE . '{' '}'

    '{'  shift, and go to state 64


State 33

   14 primitive_type: INT8 .

    $default  reduce using rule 14 (primitive_type)


State 34

   15 primitive_type: INT16 .

    $default  reduce using rule 15 (primitive_type)


State 35

   16 primitive_type: INT32 .

    $default  reduce using rule 16 (primitive_type)


State 36

   17 primitive_type: INT64 .

    $default  reduce using rule 17 (primitive_type)


State 37

   10 primitive_type: UINT8 .

    $default  reduce using rule 10 (primitive_type)


State 38

   11 primitive_type: UINT16 .

    $default  reduce using rule 11 (primitive_type)


State 39

   12 primitive_type: UINT32 .

    $default  reduce using rule 12 (primitive_type)


State 40

   13 primitive_type: UINT64 .

    $default  reduce using rule 13 (primitive_type)


State 41

   18 primitive_type: FLOAT32 .

    $default  reduce using rule 18 (primitive_type)


State 42

   19 primitive_type: FLOAT64 .

    $default  reduce using rule 19 (primitive_type)


State 43

   20 primitive_type: BOOL .

    $default  reduce using rule 20 (primitive_type)


State 44

   21 primitive_type: STRING .

    $default  reduce using rule 21 (primitive_type)


State 45

  108 var_list: var_list ',' . ID

    ID  shift, and go to state 65


State 46

   26 array_type: '[' . INTEGER ']' type_name

    INTEGER  shift, and go to state 66


State 47

  105 variable_declaration: VAR var_list '=' . expression_list ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 109
    expression_list                 go to state 110


State 48

    2 qualified_name: qualified_name . '.' ID
    6 type_name: qualified_name .

    '.'  shift, and go to state 58

    $default  reduce using rule 6 (type_name)


State 49

  104 variable_declaration: VAR var_list type_name . ';'
  106                     | VAR var_list type_name . '=' expression_list ';'

    ';'  shift, and go to state 111
    '='  shift, and go to state 112


State 50

    5 type_name: primitive_type .

    $default  reduce using rule 5 (type_name)


State 51

    8 type_name: function_type .

    $default  reduce using rule 8 (type_name)


State 52

    7 type_name: array_type .

    $default  reduce using rule 7 (type_name)


State 53

   72 method_declaration: FUNC ID '.' . ID '(' ')' code_block
   73                   | FUNC ID '.' . ID '(' ')' return_type_list code_block
   74                   | FUNC ID '.' . ID '(' parameter_list ')' code_block
   75                   | FUNC ID '.' . ID '(' parameter_list ')' return_type_list code_block

    ID  shift, and go to state 113


State 54

   64 function_declaration: FUNC ID '(' . ')' code_block
   65                     | FUNC ID '(' . ')' return_type_list code_block
   66                     | FUNC ID '(' . parameter_list ')' code_block
   67                     | FUNC ID '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 114
    ')'  shift, and go to state 115

    parameter_list  go to state 116


State 55

   49 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 117


State 56

    9 type_name: INTERFACE . '{' '}'
   50 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 118


State 57

   51 type_declaration: TYPE ID type_name . ';'

    ';'  shift, and go to state 119


State 58

    2 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 120


State 59

   36 package_statement: PACKAGE qualified_name ';' .

    $default  reduce using rule 36 (package_statement)


State 60

    2 qualified_name: qualified_name '.' . ID
   40 import_statement: IMPORT qualified_name '.' . '*' ';'

    ID   shift, and go to state 120
    '*'  shift, and go to state 121


State 61

   39 import_statement: IMPORT qualified_name ';' .

    $default  reduce using rule 39 (import_statement)


State 62

   29 program: package_statement import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 29 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 63

   22 function_type: FUNC '(' . ')'
   23              | FUNC '(' . ')' return_type_list
   24              | FUNC '(' . type_name_list ')'
   25              | FUNC '(' . type_name_list ')' return_type_list

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    ')'        shift, and go to state 122
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name_list  go to state 123
    type_name       go to state 124
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 64

    9 type_name: INTERFACE '{' . '}'

    '}'  shift, and go to state 125


State 65

  108 var_list: var_list ',' ID .

    $default  reduce using rule 108 (var_list)


State 66

   26 array_type: '[' INTEGER . ']' type_name

    ']'  shift, and go to state 126


State 67

  155 unary_expression: INC . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name         go to state 127
    array_complex_primary  go to state 86
    array_access           go to state 87
    field_access           go to state 88
    method_call            go to state 89
    method_access          go to state 90
    primary_expression     go to state 92
    just_not_name          go to state 93
    complex_primary        go to state 94
    constant               go to state 95
    postfix_expression     go to state 96
    unary_expression       go to state 128


State 68

  156 unary_expression: DEC . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name         go to state 127
    array_complex_primary  go to state 86
    array_access           go to state 87
    field_access           go to state 88
    method_call            go to state 89
    method_access          go to state 90
    primary_expression     go to state 92
    just_not_name          go to state 93
    complex_primary        go to state 94
    constant               go to state 95
    postfix_expression     go to state 96
    unary_expression       go to state 129


State 69

   68 anonymous_function_declaration: FUNC . '(' ')' code_block
   69                               | FUNC . '(' ')' return_type_list code_block
   70                               | FUNC . '(' parameter_list ')' code_block
   71                               | FUNC . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 130


State 70

  148 constant: TOKEN_NIL .

    $default  reduce using rule 148 (constant)


State 71

  149 constant: TOKEN_TRUE .

    $default  reduce using rule 149 (constant)


State 72

  150 constant: TOKEN_FALSE .

    $default  reduce using rule 150 (constant)


State 73

  145 constant: INTEGER .

    $default  reduce using rule 145 (constant)


State 74

  146 constant: FLOAT .

    $default  reduce using rule 146 (constant)


State 75

  147 constant: STRING_LITERAL .

    $default  reduce using rule 147 (constant)


State 76

  121 initializer_expression: '{' . '}'
  122                       | '{' . expression_list '}'
  123                       | '{' . field_initial_list '}'
  124                       | '{' . array_initial_list '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 132
    '{'             shift, and go to state 76
    '}'             shift, and go to state 133
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    field_initial_list              go to state 134
    array_initial_list              go to state 135
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 109
    expression_list                 go to state 136


State 77

  109 array_complex_primary: '(' . base_expression ')'
  140 just_not_name: '(' . base_expression ')'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 137


State 78

  157 unary_expression: '+' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name         go to state 127
    array_complex_primary  go to state 86
    array_access           go to state 87
    field_access           go to state 88
    method_call            go to state 89
    method_access          go to state 90
    primary_expression     go to state 92
    just_not_name          go to state 93
    complex_primary        go to state 94
    constant               go to state 95
    postfix_expression     go to state 96
    unary_expression       go to state 138


State 79

  158 unary_expression: '-' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name         go to state 127
    array_complex_primary  go to state 86
    array_access           go to state 87
    field_access           go to state 88
    method_call            go to state 89
    method_access          go to state 90
    primary_expression     go to state 92
    just_not_name          go to state 93
    complex_primary        go to state 94
    constant               go to state 95
    postfix_expression     go to state 96
    unary_expression       go to state 139


State 80

  159 unary_expression: '~' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name         go to state 127
    array_complex_primary  go to state 86
    array_access           go to state 87
    field_access           go to state 88
    method_call            go to state 89
    method_access          go to state 90
    primary_expression     go to state 92
    just_not_name          go to state 93
    complex_primary        go to state 94
    constant               go to state 95
    postfix_expression     go to state 96
    unary_expression       go to state 140


State 81

  160 unary_expression: '!' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name         go to state 127
    array_complex_primary  go to state 86
    array_access           go to state 87
    field_access           go to state 88
    method_call            go to state 89
    method_access          go to state 90
    primary_expression     go to state 92
    just_not_name          go to state 93
    complex_primary        go to state 94
    constant               go to state 95
    postfix_expression     go to state 96
    unary_expression       go to state 141


State 82

    2 qualified_name: qualified_name . '.' ID
  113 array_access: qualified_name . '[' base_expression ']'
  119 method_access: qualified_name .
  125 initializer_expression: qualified_name . '{' '}'
  126                       | qualified_name . '{' expression_list '}'
  127                       | qualified_name . '{' field_initial_list '}'
  137 primary_expression: qualified_name .

    '.'  shift, and go to state 58
    '{'  shift, and go to state 142
    '['  shift, and go to state 143

    '('       reduce using rule 119 (method_access)
    $default  reduce using rule 137 (primary_expression)


State 83

  132 initializer_expression: primitive_type . '(' base_expression ')'

    '('  shift, and go to state 144


State 84

  128 initializer_expression: array_type . '{' '}'
  129                       | array_type . '{' expression_list '}'
  130                       | array_type . '{' array_initial_list '}'

    '{'  shift, and go to state 145


State 85

  131 initializer_expression: anonymous_function_declaration .

    $default  reduce using rule 131 (initializer_expression)


State 86

  114 array_access: array_complex_primary . '[' base_expression ']'

    '['  shift, and go to state 146


State 87

  110 array_complex_primary: array_access .
  142 complex_primary: array_access .

    '['       reduce using rule 110 (array_complex_primary)
    $default  reduce using rule 142 (complex_primary)


State 88

  111 array_complex_primary: field_access .
  143 complex_primary: field_access .

    '['       reduce using rule 111 (array_complex_primary)
    $default  reduce using rule 143 (complex_primary)


State 89

  112 array_complex_primary: method_call .
  144 complex_primary: method_call .

    '['       reduce using rule 112 (array_complex_primary)
    $default  reduce using rule 144 (complex_primary)


State 90

  116 method_call: method_access . '(' argument_list ')'
  117            | method_access . '(' ')'

    '('  shift, and go to state 147


State 91

  191 expression: initializer_expression .

    $default  reduce using rule 191 (expression)


State 92

  151 postfix_expression: primary_expression .

    $default  reduce using rule 151 (postfix_expression)


State 93

  115 field_access: just_not_name . '.' ID
  139 primary_expression: just_not_name .

    '.'  shift, and go to state 148

    $default  reduce using rule 139 (primary_expression)


State 94

  118 method_access: complex_primary .
  141 just_not_name: complex_primary .

    '('       reduce using rule 118 (method_access)
    $default  reduce using rule 141 (just_not_name)


State 95

  138 primary_expression: constant .

    $default  reduce using rule 138 (primary_expression)


State 96

  152 postfix_expression: postfix_expression . INC
  153                   | postfix_expression . DEC
  154 unary_expression: postfix_expression .

    INC  shift, and go to state 149
    DEC  shift, and go to state 150

    $default  reduce using rule 154 (unary_expression)


State 97

  161 multiplicative_expression: unary_expression .

    $default  reduce using rule 161 (multiplicative_expression)


State 98

  162 multiplicative_expression: multiplicative_expression . '*' unary_expression
  163                          | multiplicative_expression . '/' unary_expression
  164                          | multiplicative_expression . '%' unary_expression
  165 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 151
    '/'  shift, and go to state 152
    '%'  shift, and go to state 153

    $default  reduce using rule 165 (additive_expression)


State 99

  166 additive_expression: additive_expression . '+' multiplicative_expression
  167                    | additive_expression . '-' multiplicative_expression
  168 shift_expression: additive_expression .

    '+'  shift, and go to state 154
    '-'  shift, and go to state 155

    $default  reduce using rule 168 (shift_expression)


State 100

  169 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  170                 | shift_expression . SHIFT_RIGHT additive_expression
  171 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 156
    SHIFT_RIGHT  shift, and go to state 157

    $default  reduce using rule 171 (relational_expression)


State 101

  172 relational_expression: relational_expression . '<' shift_expression
  173                      | relational_expression . '>' shift_expression
  174                      | relational_expression . LE shift_expression
  175                      | relational_expression . GE shift_expression
  176 equality_expression: relational_expression .

    GE   shift, and go to state 158
    LE   shift, and go to state 159
    '<'  shift, and go to state 160
    '>'  shift, and go to state 161

    $default  reduce using rule 176 (equality_expression)


State 102

  177 equality_expression: equality_expression . EQ relational_expression
  178                    | equality_expression . NE relational_expression
  179 and_expression: equality_expression .

    EQ  shift, and go to state 162
    NE  shift, and go to state 163

    $default  reduce using rule 179 (and_expression)


State 103

  180 and_expression: and_expression . '&' equality_expression
  181 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 164

    $default  reduce using rule 181 (exclusive_or_expression)


State 104

  182 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  183 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 165

    $default  reduce using rule 183 (inclusive_or_expression)


State 105

  184 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  185 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 166

    $default  reduce using rule 185 (logical_and_expression)


State 106

  186 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  187 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 167

    $default  reduce using rule 187 (logical_or_expression)


State 107

  188 logical_or_expression: logical_or_expression . OR logical_and_expression
  189 base_expression: logical_or_expression .

    OR  shift, and go to state 168

    $default  reduce using rule 189 (base_expression)


State 108

  190 expression: base_expression .

    $default  reduce using rule 190 (expression)


State 109

  192 expression_list: expression .

    $default  reduce using rule 192 (expression_list)


State 110

  105 variable_declaration: VAR var_list '=' expression_list . ';'
  193 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    ';'  shift, and go to state 170


State 111

  104 variable_declaration: VAR var_list type_name ';' .

    $default  reduce using rule 104 (variable_declaration)


State 112

  106 variable_declaration: VAR var_list type_name '=' . expression_list ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 109
    expression_list                 go to state 171


State 113

   72 method_declaration: FUNC ID '.' ID . '(' ')' code_block
   73                   | FUNC ID '.' ID . '(' ')' return_type_list code_block
   74                   | FUNC ID '.' ID . '(' parameter_list ')' code_block
   75                   | FUNC ID '.' ID . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 172


State 114

   62 parameter_list: ID . type_name

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 173
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 115

   64 function_declaration: FUNC ID '(' ')' . code_block
   65                     | FUNC ID '(' ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 177
    code_block        go to state 178


State 116

   63 parameter_list: parameter_list . ',' ID type_name
   66 function_declaration: FUNC ID '(' parameter_list . ')' code_block
   67                     | FUNC ID '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 179
    ')'  shift, and go to state 180


State 117

   49 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 181

    field_declarations  go to state 182


State 118

    9 type_name: INTERFACE '{' . '}'
   50 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    ID   shift, and go to state 183
    '}'  shift, and go to state 125

    interface_function_declarations  go to state 184
    interface_function_declaration   go to state 185


State 119

   51 type_declaration: TYPE ID type_name ';' .

    $default  reduce using rule 51 (type_declaration)


State 120

    2 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 2 (qualified_name)


State 121

   40 import_statement: IMPORT qualified_name '.' '*' . ';'

    ';'  shift, and go to state 186


State 122

   22 function_type: FUNC '(' ')' .
   23              | FUNC '(' ')' . return_type_list

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    $default  reduce using rule 22 (function_type)

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 187


State 123

    4 type_name_list: type_name_list . ',' type_name
   24 function_type: FUNC '(' type_name_list . ')'
   25              | FUNC '(' type_name_list . ')' return_type_list

    ','  shift, and go to state 188
    ')'  shift, and go to state 189


State 124

    3 type_name_list: type_name .

    $default  reduce using rule 3 (type_name_list)


State 125

    9 type_name: INTERFACE '{' '}' .

    $default  reduce using rule 9 (type_name)


State 126

   26 array_type: '[' INTEGER ']' . type_name

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 190
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 127

    2 qualified_name: qualified_name . '.' ID
  113 array_access: qualified_name . '[' base_expression ']'
  119 method_access: qualified_name .
  137 primary_expression: qualified_name .

    '.'  shift, and go to state 58
    '['  shift, and go to state 143

    '('       reduce using rule 119 (method_access)
    $default  reduce using rule 137 (primary_expression)


State 128

  155 unary_expression: INC unary_expression .

    $default  reduce using rule 155 (unary_expression)


State 129

  156 unary_expression: DEC unary_expression .

    $default  reduce using rule 156 (unary_expression)


State 130

   68 anonymous_function_declaration: FUNC '(' . ')' code_block
   69                               | FUNC '(' . ')' return_type_list code_block
   70                               | FUNC '(' . parameter_list ')' code_block
   71                               | FUNC '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 114
    ')'  shift, and go to state 191

    parameter_list  go to state 192


State 131

  135 array_initial_list: INTEGER . ':' expression
  145 constant: INTEGER .

    ':'  shift, and go to state 193

    $default  reduce using rule 145 (constant)


State 132

    1 qualified_name: ID .
  133 field_initial_list: ID . ':' expression

    ':'  shift, and go to state 194

    $default  reduce using rule 1 (qualified_name)


State 133

  121 initializer_expression: '{' '}' .

    $default  reduce using rule 121 (initializer_expression)


State 134

  123 initializer_expression: '{' field_initial_list . '}'
  134 field_initial_list: field_initial_list . ',' ID ':' expression

    ','  shift, and go to state 195
    '}'  shift, and go to state 196


State 135

  124 initializer_expression: '{' array_initial_list . '}'
  136 array_initial_list: array_initial_list . ',' INTEGER ':' expression

    ','  shift, and go to state 197
    '}'  shift, and go to state 198


State 136

  122 initializer_expression: '{' expression_list . '}'
  193 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    '}'  shift, and go to state 199


State 137

  109 array_complex_primary: '(' base_expression . ')'
  140 just_not_name: '(' base_expression . ')'

    ')'  shift, and go to state 200


State 138

  157 unary_expression: '+' unary_expression .

    $default  reduce using rule 157 (unary_expression)


State 139

  158 unary_expression: '-' unary_expression .

    $default  reduce using rule 158 (unary_expression)


State 140

  159 unary_expression: '~' unary_expression .

    $default  reduce using rule 159 (unary_expression)


State 141

  160 unary_expression: '!' unary_expression .

    $default  reduce using rule 160 (unary_expression)


State 142

  125 initializer_expression: qualified_name '{' . '}'
  126                       | qualified_name '{' . expression_list '}'
  127                       | qualified_name '{' . field_initial_list '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 132
    '{'             shift, and go to state 76
    '}'             shift, and go to state 201
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    field_initial_list              go to state 202
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 109
    expression_list                 go to state 203


State 143

  113 array_access: qualified_name '[' . base_expression ']'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 204


State 144

  132 initializer_expression: primitive_type '(' . base_expression ')'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 205


State 145

  128 initializer_expression: array_type '{' . '}'
  129                       | array_type '{' . expression_list '}'
  130                       | array_type '{' . array_initial_list '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '}'             shift, and go to state 206
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    array_initial_list              go to state 207
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 109
    expression_list                 go to state 208


State 146

  114 array_access: array_complex_primary '[' . base_expression ']'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 209


State 147

  116 method_call: method_access '(' . argument_list ')'
  117            | method_access '(' . ')'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '('             shift, and go to state 77
    ')'             shift, and go to state 210
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    argument_list                   go to state 211
    initializer_expression          go to state 91
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 109
    expression_list                 go to state 212


State 148

  115 field_access: just_not_name '.' . ID

    ID  shift, and go to state 213


State 149

  152 postfix_expression: postfix_expression INC .

    $default  reduce using rule 152 (postfix_expression)


State 150

  153 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 153 (postfix_expression)


State 151

  162 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name         go to state 127
    array_complex_primary  go to state 86
    array_access           go to state 87
    field_access           go to state 88
    method_call            go to state 89
    method_access          go to state 90
    primary_expression     go to state 92
    just_not_name          go to state 93
    complex_primary        go to state 94
    constant               go to state 95
    postfix_expression     go to state 96
    unary_expression       go to state 214


State 152

  163 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name         go to state 127
    array_complex_primary  go to state 86
    array_access           go to state 87
    field_access           go to state 88
    method_call            go to state 89
    method_access          go to state 90
    primary_expression     go to state 92
    just_not_name          go to state 93
    complex_primary        go to state 94
    constant               go to state 95
    postfix_expression     go to state 96
    unary_expression       go to state 215


State 153

  164 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name         go to state 127
    array_complex_primary  go to state 86
    array_access           go to state 87
    field_access           go to state 88
    method_call            go to state 89
    method_access          go to state 90
    primary_expression     go to state 92
    just_not_name          go to state 93
    complex_primary        go to state 94
    constant               go to state 95
    postfix_expression     go to state 96
    unary_expression       go to state 216


State 154

  166 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 217


State 155

  167 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 218


State 156

  169 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 219


State 157

  170 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 220


State 158

  175 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 221


State 159

  174 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 222


State 160

  172 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 223


State 161

  173 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 224


State 162

  177 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 225


State 163

  178 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 226


State 164

  180 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 227


State 165

  182 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 228


State 166

  184 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 229


State 167

  186 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 230


State 168

  188 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 231


State 169

  193 expression_list: expression_list ',' . expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 232


State 170

  105 variable_declaration: VAR var_list '=' expression_list ';' .

    $default  reduce using rule 105 (variable_declaration)


State 171

  106 variable_declaration: VAR var_list type_name '=' expression_list . ';'
  193 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    ';'  shift, and go to state 233


State 172

   72 method_declaration: FUNC ID '.' ID '(' . ')' code_block
   73                   | FUNC ID '.' ID '(' . ')' return_type_list code_block
   74                   | FUNC ID '.' ID '(' . parameter_list ')' code_block
   75                   | FUNC ID '.' ID '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 114
    ')'  shift, and go to state 234

    parameter_list  go to state 235


State 173

   62 parameter_list: ID type_name .

    $default  reduce using rule 62 (parameter_list)


State 174

   76 code_block: '{' . local_variable_declaration_statements '}'
   77           | '{' . '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    IF              shift, and go to state 236
    WHILE           shift, and go to state 237
    DO              shift, and go to state 238
    FOR             shift, and go to state 239
    SWITCH          shift, and go to state 240
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 241
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '}'             shift, and go to state 242
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                         go to state 243
    local_variable_declaration_statements  go to state 244
    local_variable_declaration_statement   go to state 245
    statement                              go to state 246
    selection_statement                    go to state 247
    if_statement                           go to state 248
    switch_statement                       go to state 249
    iteration_statemnet                    go to state 250
    jump_statement                         go to state 251
    variable_declaration                   go to state 252
    array_complex_primary                  go to state 86
    array_access                           go to state 253
    field_access                           go to state 254
    method_call                            go to state 89
    method_access                          go to state 90
    primary_expression                     go to state 92
    just_not_name                          go to state 93
    complex_primary                        go to state 94
    constant                               go to state 95
    postfix_expression                     go to state 96
    unary_expression                       go to state 97
    multiplicative_expression              go to state 98
    additive_expression                    go to state 99
    shift_expression                       go to state 100
    relational_expression                  go to state 101
    equality_expression                    go to state 102
    and_expression                         go to state 103
    exclusive_or_expression                go to state 104
    inclusive_or_expression                go to state 105
    logical_and_expression                 go to state 106
    logical_or_expression                  go to state 107
    base_expression                        go to state 255
    assignment_expression                  go to state 256
    assignment_variable_list               go to state 257
    assignment_variable                    go to state 258
    expression_statement                   go to state 259


State 175

   28 return_type_list: '(' . type_name_list ')'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name_list  go to state 260
    type_name       go to state 124
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 176

   27 return_type_list: type_name .

    $default  reduce using rule 27 (return_type_list)


State 177

   65 function_declaration: FUNC ID '(' ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 261


State 178

   64 function_declaration: FUNC ID '(' ')' code_block .

    $default  reduce using rule 64 (function_declaration)


State 179

   63 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 262


State 180

   66 function_declaration: FUNC ID '(' parameter_list ')' . code_block
   67                     | FUNC ID '(' parameter_list ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 263
    code_block        go to state 264


State 181

   52 field_declarations: ID . type_name ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 265
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 182

   49 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   53 field_declarations: field_declarations . ID type_name ';'

    ID   shift, and go to state 266
    '}'  shift, and go to state 267


State 183

   56 interface_function_declaration: ID . '(' ')' ';'
   57                               | ID . '(' ')' return_type_list ';'
   58                               | ID . '(' type_name_list ')' ';'
   59                               | ID . '(' type_name_list ')' return_type_list ';'
   60                               | ID . '(' parameter_list ')' ';'
   61                               | ID . '(' parameter_list ')' return_type_list ';'

    '('  shift, and go to state 268


State 184

   50 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   55 interface_function_declarations: interface_function_declarations . interface_function_declaration

    ID   shift, and go to state 183
    '}'  shift, and go to state 269

    interface_function_declaration  go to state 270


State 185

   54 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 54 (interface_function_declarations)


State 186

   40 import_statement: IMPORT qualified_name '.' '*' ';' .

    $default  reduce using rule 40 (import_statement)


State 187

   23 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 23 (function_type)


State 188

    4 type_name_list: type_name_list ',' . type_name

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 271
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 189

   24 function_type: FUNC '(' type_name_list ')' .
   25              | FUNC '(' type_name_list ')' . return_type_list

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    $default  reduce using rule 24 (function_type)

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 272


State 190

   26 array_type: '[' INTEGER ']' type_name .

    $default  reduce using rule 26 (array_type)


State 191

   68 anonymous_function_declaration: FUNC '(' ')' . code_block
   69                               | FUNC '(' ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 273
    code_block        go to state 274


State 192

   63 parameter_list: parameter_list . ',' ID type_name
   70 anonymous_function_declaration: FUNC '(' parameter_list . ')' code_block
   71                               | FUNC '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 179
    ')'  shift, and go to state 275


State 193

  135 array_initial_list: INTEGER ':' . expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 276


State 194

  133 field_initial_list: ID ':' . expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 277


State 195

  134 field_initial_list: field_initial_list ',' . ID ':' expression

    ID  shift, and go to state 278


State 196

  123 initializer_expression: '{' field_initial_list '}' .

    $default  reduce using rule 123 (initializer_expression)


State 197

  136 array_initial_list: array_initial_list ',' . INTEGER ':' expression

    INTEGER  shift, and go to state 279


State 198

  124 initializer_expression: '{' array_initial_list '}' .

    $default  reduce using rule 124 (initializer_expression)


State 199

  122 initializer_expression: '{' expression_list '}' .

    $default  reduce using rule 122 (initializer_expression)


State 200

  109 array_complex_primary: '(' base_expression ')' .
  140 just_not_name: '(' base_expression ')' .

    '['       reduce using rule 109 (array_complex_primary)
    $default  reduce using rule 140 (just_not_name)


State 201

  125 initializer_expression: qualified_name '{' '}' .

    $default  reduce using rule 125 (initializer_expression)


State 202

  127 initializer_expression: qualified_name '{' field_initial_list . '}'
  134 field_initial_list: field_initial_list . ',' ID ':' expression

    ','  shift, and go to state 195
    '}'  shift, and go to state 280


State 203

  126 initializer_expression: qualified_name '{' expression_list . '}'
  193 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    '}'  shift, and go to state 281


State 204

  113 array_access: qualified_name '[' base_expression . ']'

    ']'  shift, and go to state 282


State 205

  132 initializer_expression: primitive_type '(' base_expression . ')'

    ')'  shift, and go to state 283


State 206

  128 initializer_expression: array_type '{' '}' .

    $default  reduce using rule 128 (initializer_expression)


State 207

  130 initializer_expression: array_type '{' array_initial_list . '}'
  136 array_initial_list: array_initial_list . ',' INTEGER ':' expression

    ','  shift, and go to state 197
    '}'  shift, and go to state 284


State 208

  129 initializer_expression: array_type '{' expression_list . '}'
  193 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    '}'  shift, and go to state 285


State 209

  114 array_access: array_complex_primary '[' base_expression . ']'

    ']'  shift, and go to state 286


State 210

  117 method_call: method_access '(' ')' .

    $default  reduce using rule 117 (method_call)


State 211

  116 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 287


State 212

  120 argument_list: expression_list .
  193 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169

    $default  reduce using rule 120 (argument_list)


State 213

  115 field_access: just_not_name '.' ID .

    $default  reduce using rule 115 (field_access)


State 214

  162 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 162 (multiplicative_expression)


State 215

  163 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 163 (multiplicative_expression)


State 216

  164 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 164 (multiplicative_expression)


State 217

  162 multiplicative_expression: multiplicative_expression . '*' unary_expression
  163                          | multiplicative_expression . '/' unary_expression
  164                          | multiplicative_expression . '%' unary_expression
  166 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 151
    '/'  shift, and go to state 152
    '%'  shift, and go to state 153

    $default  reduce using rule 166 (additive_expression)


State 218

  162 multiplicative_expression: multiplicative_expression . '*' unary_expression
  163                          | multiplicative_expression . '/' unary_expression
  164                          | multiplicative_expression . '%' unary_expression
  167 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 151
    '/'  shift, and go to state 152
    '%'  shift, and go to state 153

    $default  reduce using rule 167 (additive_expression)


State 219

  166 additive_expression: additive_expression . '+' multiplicative_expression
  167                    | additive_expression . '-' multiplicative_expression
  169 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 154
    '-'  shift, and go to state 155

    $default  reduce using rule 169 (shift_expression)


State 220

  166 additive_expression: additive_expression . '+' multiplicative_expression
  167                    | additive_expression . '-' multiplicative_expression
  170 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 154
    '-'  shift, and go to state 155

    $default  reduce using rule 170 (shift_expression)


State 221

  169 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  170                 | shift_expression . SHIFT_RIGHT additive_expression
  175 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 156
    SHIFT_RIGHT  shift, and go to state 157

    $default  reduce using rule 175 (relational_expression)


State 222

  169 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  170                 | shift_expression . SHIFT_RIGHT additive_expression
  174 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 156
    SHIFT_RIGHT  shift, and go to state 157

    $default  reduce using rule 174 (relational_expression)


State 223

  169 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  170                 | shift_expression . SHIFT_RIGHT additive_expression
  172 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 156
    SHIFT_RIGHT  shift, and go to state 157

    $default  reduce using rule 172 (relational_expression)


State 224

  169 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  170                 | shift_expression . SHIFT_RIGHT additive_expression
  173 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 156
    SHIFT_RIGHT  shift, and go to state 157

    $default  reduce using rule 173 (relational_expression)


State 225

  172 relational_expression: relational_expression . '<' shift_expression
  173                      | relational_expression . '>' shift_expression
  174                      | relational_expression . LE shift_expression
  175                      | relational_expression . GE shift_expression
  177 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 158
    LE   shift, and go to state 159
    '<'  shift, and go to state 160
    '>'  shift, and go to state 161

    $default  reduce using rule 177 (equality_expression)


State 226

  172 relational_expression: relational_expression . '<' shift_expression
  173                      | relational_expression . '>' shift_expression
  174                      | relational_expression . LE shift_expression
  175                      | relational_expression . GE shift_expression
  178 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 158
    LE   shift, and go to state 159
    '<'  shift, and go to state 160
    '>'  shift, and go to state 161

    $default  reduce using rule 178 (equality_expression)


State 227

  177 equality_expression: equality_expression . EQ relational_expression
  178                    | equality_expression . NE relational_expression
  180 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 162
    NE  shift, and go to state 163

    $default  reduce using rule 180 (and_expression)


State 228

  180 and_expression: and_expression . '&' equality_expression
  182 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 164

    $default  reduce using rule 182 (exclusive_or_expression)


State 229

  182 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  184 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 165

    $default  reduce using rule 184 (inclusive_or_expression)


State 230

  184 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  186 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 166

    $default  reduce using rule 186 (logical_and_expression)


State 231

  186 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  188 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 167

    $default  reduce using rule 188 (logical_or_expression)


State 232

  193 expression_list: expression_list ',' expression .

    $default  reduce using rule 193 (expression_list)


State 233

  106 variable_declaration: VAR var_list type_name '=' expression_list ';' .

    $default  reduce using rule 106 (variable_declaration)


State 234

   72 method_declaration: FUNC ID '.' ID '(' ')' . code_block
   73                   | FUNC ID '.' ID '(' ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 288
    code_block        go to state 289


State 235

   63 parameter_list: parameter_list . ',' ID type_name
   74 method_declaration: FUNC ID '.' ID '(' parameter_list . ')' code_block
   75                   | FUNC ID '.' ID '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 179
    ')'  shift, and go to state 290


State 236

   88 if_statement: IF . '(' base_expression ')' code_block
   89             | IF . '(' base_expression ')' code_block ELSE else_statemnet

    '('  shift, and go to state 291


State 237

   93 iteration_statemnet: WHILE . '(' base_expression ')' code_block

    '('  shift, and go to state 292


State 238

   94 iteration_statemnet: DO . code_block WHILE '(' base_expression ')' ';'

    '{'  shift, and go to state 174

    code_block  go to state 293


State 239

   95 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' code_block

    '('  shift, and go to state 294


State 240

   92 switch_statement: SWITCH . '(' base_expression ')' code_block

    '('  shift, and go to state 295


State 241

  102 jump_statement: RETURN . ';'
  103               | RETURN . expression_list ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    ';'             shift, and go to state 296
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 109
    expression_list                 go to state 297


State 242

   77 code_block: '{' '}' .

    $default  reduce using rule 77 (code_block)


State 243

    2 qualified_name: qualified_name . '.' ID
  113 array_access: qualified_name . '[' base_expression ']'
  119 method_access: qualified_name .
  137 primary_expression: qualified_name .
  198 assignment_variable: qualified_name .

    '.'  shift, and go to state 58
    '['  shift, and go to state 143

    ADD_ASSIGN    reduce using rule 198 (assignment_variable)
    SUB_ASSIGN    reduce using rule 198 (assignment_variable)
    MUL_ASSIGN    reduce using rule 198 (assignment_variable)
    DIV_ASSIGN    reduce using rule 198 (assignment_variable)
    MOD_ASSIGN    reduce using rule 198 (assignment_variable)
    AND_ASSIGN    reduce using rule 198 (assignment_variable)
    OR_ASSIGN     reduce using rule 198 (assignment_variable)
    XOR_ASSIGN    reduce using rule 198 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 198 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 198 (assignment_variable)
    ','           reduce using rule 198 (assignment_variable)
    '('           reduce using rule 119 (method_access)
    '='           reduce using rule 198 (assignment_variable)
    $default      reduce using rule 137 (primary_expression)


State 244

   76 code_block: '{' local_variable_declaration_statements . '}'
   79 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    IF              shift, and go to state 236
    WHILE           shift, and go to state 237
    DO              shift, and go to state 238
    FOR             shift, and go to state 239
    SWITCH          shift, and go to state 240
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 241
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '}'             shift, and go to state 298
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                        go to state 243
    local_variable_declaration_statement  go to state 299
    statement                             go to state 246
    selection_statement                   go to state 247
    if_statement                          go to state 248
    switch_statement                      go to state 249
    iteration_statemnet                   go to state 250
    jump_statement                        go to state 251
    variable_declaration                  go to state 252
    array_complex_primary                 go to state 86
    array_access                          go to state 253
    field_access                          go to state 254
    method_call                           go to state 89
    method_access                         go to state 90
    primary_expression                    go to state 92
    just_not_name                         go to state 93
    complex_primary                       go to state 94
    constant                              go to state 95
    postfix_expression                    go to state 96
    unary_expression                      go to state 97
    multiplicative_expression             go to state 98
    additive_expression                   go to state 99
    shift_expression                      go to state 100
    relational_expression                 go to state 101
    equality_expression                   go to state 102
    and_expression                        go to state 103
    exclusive_or_expression               go to state 104
    inclusive_or_expression               go to state 105
    logical_and_expression                go to state 106
    logical_or_expression                 go to state 107
    base_expression                       go to state 255
    assignment_expression                 go to state 256
    assignment_variable_list              go to state 257
    assignment_variable                   go to state 258
    expression_statement                  go to state 259


State 245

   78 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 78 (local_variable_declaration_statements)


State 246

   81 local_variable_declaration_statement: statement .

    $default  reduce using rule 81 (local_variable_declaration_statement)


State 247

   83 statement: selection_statement .

    $default  reduce using rule 83 (statement)


State 248

   86 selection_statement: if_statement .

    $default  reduce using rule 86 (selection_statement)


State 249

   87 selection_statement: switch_statement .

    $default  reduce using rule 87 (selection_statement)


State 250

   84 statement: iteration_statemnet .

    $default  reduce using rule 84 (statement)


State 251

   85 statement: jump_statement .

    $default  reduce using rule 85 (statement)


State 252

   80 local_variable_declaration_statement: variable_declaration .

    $default  reduce using rule 80 (local_variable_declaration_statement)


State 253

  110 array_complex_primary: array_access .
  142 complex_primary: array_access .
  199 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 199 (assignment_variable)
    SUB_ASSIGN    reduce using rule 199 (assignment_variable)
    MUL_ASSIGN    reduce using rule 199 (assignment_variable)
    DIV_ASSIGN    reduce using rule 199 (assignment_variable)
    MOD_ASSIGN    reduce using rule 199 (assignment_variable)
    AND_ASSIGN    reduce using rule 199 (assignment_variable)
    OR_ASSIGN     reduce using rule 199 (assignment_variable)
    XOR_ASSIGN    reduce using rule 199 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 199 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 199 (assignment_variable)
    ','           reduce using rule 199 (assignment_variable)
    '['           reduce using rule 110 (array_complex_primary)
    '='           reduce using rule 199 (assignment_variable)
    $default      reduce using rule 142 (complex_primary)


State 254

  111 array_complex_primary: field_access .
  143 complex_primary: field_access .
  200 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 200 (assignment_variable)
    SUB_ASSIGN    reduce using rule 200 (assignment_variable)
    MUL_ASSIGN    reduce using rule 200 (assignment_variable)
    DIV_ASSIGN    reduce using rule 200 (assignment_variable)
    MOD_ASSIGN    reduce using rule 200 (assignment_variable)
    AND_ASSIGN    reduce using rule 200 (assignment_variable)
    OR_ASSIGN     reduce using rule 200 (assignment_variable)
    XOR_ASSIGN    reduce using rule 200 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 200 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 200 (assignment_variable)
    ','           reduce using rule 200 (assignment_variable)
    '['           reduce using rule 111 (array_complex_primary)
    '='           reduce using rule 200 (assignment_variable)
    $default      reduce using rule 143 (complex_primary)


State 255

  211 expression_statement: base_expression .

    $default  reduce using rule 211 (expression_statement)


State 256

  212 expression_statement: assignment_expression .

    $default  reduce using rule 212 (expression_statement)


State 257

  194 assignment_expression: assignment_variable_list . '=' expression_list
  197 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 300
    '='  shift, and go to state 301


State 258

  195 assignment_expression: assignment_variable . compound_assignment_operator base_expression
  196 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 302
    SUB_ASSIGN    shift, and go to state 303
    MUL_ASSIGN    shift, and go to state 304
    DIV_ASSIGN    shift, and go to state 305
    MOD_ASSIGN    shift, and go to state 306
    AND_ASSIGN    shift, and go to state 307
    OR_ASSIGN     shift, and go to state 308
    XOR_ASSIGN    shift, and go to state 309
    RIGHT_ASSIGN  shift, and go to state 310
    LEFT_ASSIGN   shift, and go to state 311

    $default  reduce using rule 196 (assignment_variable_list)

    compound_assignment_operator  go to state 312


State 259

   82 statement: expression_statement . ';'

    ';'  shift, and go to state 313


State 260

    4 type_name_list: type_name_list . ',' type_name
   28 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 188
    ')'  shift, and go to state 314


State 261

   65 function_declaration: FUNC ID '(' ')' return_type_list code_block .

    $default  reduce using rule 65 (function_declaration)


State 262

   63 parameter_list: parameter_list ',' ID . type_name

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 315
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 263

   67 function_declaration: FUNC ID '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 316


State 264

   66 function_declaration: FUNC ID '(' parameter_list ')' code_block .

    $default  reduce using rule 66 (function_declaration)


State 265

   52 field_declarations: ID type_name . ';'

    ';'  shift, and go to state 317


State 266

   53 field_declarations: field_declarations ID . type_name ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 318
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 267

   49 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 49 (type_declaration)


State 268

   56 interface_function_declaration: ID '(' . ')' ';'
   57                               | ID '(' . ')' return_type_list ';'
   58                               | ID '(' . type_name_list ')' ';'
   59                               | ID '(' . type_name_list ')' return_type_list ';'
   60                               | ID '(' . parameter_list ')' ';'
   61                               | ID '(' . parameter_list ')' return_type_list ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 319
    ')'        shift, and go to state 320
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name_list  go to state 321
    type_name       go to state 124
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52
    parameter_list  go to state 322


State 269

   50 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 50 (type_declaration)


State 270

   55 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 55 (interface_function_declarations)


State 271

    4 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 4 (type_name_list)


State 272

   25 function_type: FUNC '(' type_name_list ')' return_type_list .

    $default  reduce using rule 25 (function_type)


State 273

   69 anonymous_function_declaration: FUNC '(' ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 323


State 274

   68 anonymous_function_declaration: FUNC '(' ')' code_block .

    $default  reduce using rule 68 (anonymous_function_declaration)


State 275

   70 anonymous_function_declaration: FUNC '(' parameter_list ')' . code_block
   71                               | FUNC '(' parameter_list ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 324
    code_block        go to state 325


State 276

  135 array_initial_list: INTEGER ':' expression .

    $default  reduce using rule 135 (array_initial_list)


State 277

  133 field_initial_list: ID ':' expression .

    $default  reduce using rule 133 (field_initial_list)


State 278

  134 field_initial_list: field_initial_list ',' ID . ':' expression

    ':'  shift, and go to state 326


State 279

  136 array_initial_list: array_initial_list ',' INTEGER . ':' expression

    ':'  shift, and go to state 327


State 280

  127 initializer_expression: qualified_name '{' field_initial_list '}' .

    $default  reduce using rule 127 (initializer_expression)


State 281

  126 initializer_expression: qualified_name '{' expression_list '}' .

    $default  reduce using rule 126 (initializer_expression)


State 282

  113 array_access: qualified_name '[' base_expression ']' .

    $default  reduce using rule 113 (array_access)


State 283

  132 initializer_expression: primitive_type '(' base_expression ')' .

    $default  reduce using rule 132 (initializer_expression)


State 284

  130 initializer_expression: array_type '{' array_initial_list '}' .

    $default  reduce using rule 130 (initializer_expression)


State 285

  129 initializer_expression: array_type '{' expression_list '}' .

    $default  reduce using rule 129 (initializer_expression)


State 286

  114 array_access: array_complex_primary '[' base_expression ']' .

    $default  reduce using rule 114 (array_access)


State 287

  116 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 116 (method_call)


State 288

   73 method_declaration: FUNC ID '.' ID '(' ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 328


State 289

   72 method_declaration: FUNC ID '.' ID '(' ')' code_block .

    $default  reduce using rule 72 (method_declaration)


State 290

   74 method_declaration: FUNC ID '.' ID '(' parameter_list ')' . code_block
   75                   | FUNC ID '.' ID '(' parameter_list ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 329
    code_block        go to state 330


State 291

   88 if_statement: IF '(' . base_expression ')' code_block
   89             | IF '(' . base_expression ')' code_block ELSE else_statemnet

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 331


State 292

   93 iteration_statemnet: WHILE '(' . base_expression ')' code_block

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 332


State 293

   94 iteration_statemnet: DO code_block . WHILE '(' base_expression ')' ';'

    WHILE  shift, and go to state 333


State 294

   95 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' code_block

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    VAR             shift, and go to state 1
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    ';'             shift, and go to state 334
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 243
    for_init                   go to state 335
    variable_declaration       go to state 336
    array_complex_primary      go to state 86
    array_access               go to state 253
    field_access               go to state 254
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 255
    assignment_expression      go to state 256
    assignment_variable_list   go to state 257
    assignment_variable        go to state 258
    expression_statement       go to state 337


State 295

   92 switch_statement: SWITCH '(' . base_expression ')' code_block

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 338


State 296

  102 jump_statement: RETURN ';' .

    $default  reduce using rule 102 (jump_statement)


State 297

  103 jump_statement: RETURN expression_list . ';'
  193 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    ';'  shift, and go to state 339


State 298

   76 code_block: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 76 (code_block)


State 299

   79 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 79 (local_variable_declaration_statements)


State 300

  197 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    ID   shift, and go to state 19
    '('  shift, and go to state 77

    qualified_name         go to state 340
    array_complex_primary  go to state 86
    array_access           go to state 253
    field_access           go to state 254
    method_call            go to state 89
    method_access          go to state 90
    just_not_name          go to state 341
    complex_primary        go to state 94
    assignment_variable    go to state 342


State 301

  194 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 109
    expression_list                 go to state 343


State 302

  201 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 201 (compound_assignment_operator)


State 303

  202 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 202 (compound_assignment_operator)


State 304

  203 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 203 (compound_assignment_operator)


State 305

  204 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 204 (compound_assignment_operator)


State 306

  205 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 205 (compound_assignment_operator)


State 307

  206 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 206 (compound_assignment_operator)


State 308

  207 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 207 (compound_assignment_operator)


State 309

  208 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 208 (compound_assignment_operator)


State 310

  209 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 209 (compound_assignment_operator)


State 311

  210 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 210 (compound_assignment_operator)


State 312

  195 assignment_expression: assignment_variable compound_assignment_operator . base_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 344


State 313

   82 statement: expression_statement ';' .

    $default  reduce using rule 82 (statement)


State 314

   28 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 28 (return_type_list)


State 315

   63 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 63 (parameter_list)


State 316

   67 function_declaration: FUNC ID '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 67 (function_declaration)


State 317

   52 field_declarations: ID type_name ';' .

    $default  reduce using rule 52 (field_declarations)


State 318

   53 field_declarations: field_declarations ID type_name . ';'

    ';'  shift, and go to state 345


State 319

    1 qualified_name: ID .
   62 parameter_list: ID . type_name

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    $default  reduce using rule 1 (qualified_name)

    qualified_name  go to state 48
    type_name       go to state 173
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 320

   56 interface_function_declaration: ID '(' ')' . ';'
   57                               | ID '(' ')' . return_type_list ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '('        shift, and go to state 175
    '['        shift, and go to state 46
    ';'        shift, and go to state 346

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 347


State 321

    4 type_name_list: type_name_list . ',' type_name
   58 interface_function_declaration: ID '(' type_name_list . ')' ';'
   59                               | ID '(' type_name_list . ')' return_type_list ';'

    ','  shift, and go to state 188
    ')'  shift, and go to state 348


State 322

   60 interface_function_declaration: ID '(' parameter_list . ')' ';'
   61                               | ID '(' parameter_list . ')' return_type_list ';'
   63 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 179
    ')'  shift, and go to state 349


State 323

   69 anonymous_function_declaration: FUNC '(' ')' return_type_list code_block .

    $default  reduce using rule 69 (anonymous_function_declaration)


State 324

   71 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 350


State 325

   70 anonymous_function_declaration: FUNC '(' parameter_list ')' code_block .

    $default  reduce using rule 70 (anonymous_function_declaration)


State 326

  134 field_initial_list: field_initial_list ',' ID ':' . expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 351


State 327

  136 array_initial_list: array_initial_list ',' INTEGER ':' . expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '{'             shift, and go to state 76
    '('             shift, and go to state 77
    '['             shift, and go to state 46
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name                  go to state 82
    primitive_type                  go to state 83
    array_type                      go to state 84
    anonymous_function_declaration  go to state 85
    array_complex_primary           go to state 86
    array_access                    go to state 87
    field_access                    go to state 88
    method_call                     go to state 89
    method_access                   go to state 90
    initializer_expression          go to state 91
    primary_expression              go to state 92
    just_not_name                   go to state 93
    complex_primary                 go to state 94
    constant                        go to state 95
    postfix_expression              go to state 96
    unary_expression                go to state 97
    multiplicative_expression       go to state 98
    additive_expression             go to state 99
    shift_expression                go to state 100
    relational_expression           go to state 101
    equality_expression             go to state 102
    and_expression                  go to state 103
    exclusive_or_expression         go to state 104
    inclusive_or_expression         go to state 105
    logical_and_expression          go to state 106
    logical_or_expression           go to state 107
    base_expression                 go to state 108
    expression                      go to state 352


State 328

   73 method_declaration: FUNC ID '.' ID '(' ')' return_type_list code_block .

    $default  reduce using rule 73 (method_declaration)


State 329

   75 method_declaration: FUNC ID '.' ID '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 353


State 330

   74 method_declaration: FUNC ID '.' ID '(' parameter_list ')' code_block .

    $default  reduce using rule 74 (method_declaration)


State 331

   88 if_statement: IF '(' base_expression . ')' code_block
   89             | IF '(' base_expression . ')' code_block ELSE else_statemnet

    ')'  shift, and go to state 354


State 332

   93 iteration_statemnet: WHILE '(' base_expression . ')' code_block

    ')'  shift, and go to state 355


State 333

   94 iteration_statemnet: DO code_block WHILE . '(' base_expression ')' ';'

    '('  shift, and go to state 356


State 334

   98 for_init: ';' .

    $default  reduce using rule 98 (for_init)


State 335

   95 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' code_block

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    ';'             shift, and go to state 357
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    for_expr                   go to state 358
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 359


State 336

   97 for_init: variable_declaration .

    $default  reduce using rule 97 (for_init)


State 337

   96 for_init: expression_statement . ';'

    ';'  shift, and go to state 360


State 338

   92 switch_statement: SWITCH '(' base_expression . ')' code_block

    ')'  shift, and go to state 361


State 339

  103 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 103 (jump_statement)


State 340

    2 qualified_name: qualified_name . '.' ID
  113 array_access: qualified_name . '[' base_expression ']'
  119 method_access: qualified_name .
  198 assignment_variable: qualified_name .

    '.'  shift, and go to state 58
    '['  shift, and go to state 143

    '('       reduce using rule 119 (method_access)
    $default  reduce using rule 198 (assignment_variable)


State 341

  115 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 148


State 342

  197 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 197 (assignment_variable_list)


State 343

  193 expression_list: expression_list . ',' expression
  194 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 169

    $default  reduce using rule 194 (assignment_expression)


State 344

  195 assignment_expression: assignment_variable compound_assignment_operator base_expression .

    $default  reduce using rule 195 (assignment_expression)


State 345

   53 field_declarations: field_declarations ID type_name ';' .

    $default  reduce using rule 53 (field_declarations)


State 346

   56 interface_function_declaration: ID '(' ')' ';' .

    $default  reduce using rule 56 (interface_function_declaration)


State 347

   57 interface_function_declaration: ID '(' ')' return_type_list . ';'

    ';'  shift, and go to state 362


State 348

   58 interface_function_declaration: ID '(' type_name_list ')' . ';'
   59                               | ID '(' type_name_list ')' . return_type_list ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '('        shift, and go to state 175
    '['        shift, and go to state 46
    ';'        shift, and go to state 363

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 364


State 349

   60 interface_function_declaration: ID '(' parameter_list ')' . ';'
   61                               | ID '(' parameter_list ')' . return_type_list ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '('        shift, and go to state 175
    '['        shift, and go to state 46
    ';'        shift, and go to state 365

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 366


State 350

   71 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 71 (anonymous_function_declaration)


State 351

  134 field_initial_list: field_initial_list ',' ID ':' expression .

    $default  reduce using rule 134 (field_initial_list)


State 352

  136 array_initial_list: array_initial_list ',' INTEGER ':' expression .

    $default  reduce using rule 136 (array_initial_list)


State 353

   75 method_declaration: FUNC ID '.' ID '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 75 (method_declaration)


State 354

   88 if_statement: IF '(' base_expression ')' . code_block
   89             | IF '(' base_expression ')' . code_block ELSE else_statemnet

    '{'  shift, and go to state 174

    code_block  go to state 367


State 355

   93 iteration_statemnet: WHILE '(' base_expression ')' . code_block

    '{'  shift, and go to state 174

    code_block  go to state 368


State 356

   94 iteration_statemnet: DO code_block WHILE '(' . base_expression ')' ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 127
    array_complex_primary      go to state 86
    array_access               go to state 87
    field_access               go to state 88
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 369


State 357

  100 for_expr: ';' .

    $default  reduce using rule 100 (for_expr)


State 358

   95 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' code_block

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_NIL       shift, and go to state 70
    TOKEN_TRUE      shift, and go to state 71
    TOKEN_FALSE     shift, and go to state 72
    INTEGER         shift, and go to state 73
    FLOAT           shift, and go to state 74
    STRING_LITERAL  shift, and go to state 75
    ID              shift, and go to state 19
    '('             shift, and go to state 77
    '+'             shift, and go to state 78
    '-'             shift, and go to state 79
    '~'             shift, and go to state 80
    '!'             shift, and go to state 81

    qualified_name             go to state 243
    for_incr                   go to state 370
    array_complex_primary      go to state 86
    array_access               go to state 253
    field_access               go to state 254
    method_call                go to state 89
    method_access              go to state 90
    primary_expression         go to state 92
    just_not_name              go to state 93
    complex_primary            go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    base_expression            go to state 255
    assignment_expression      go to state 256
    assignment_variable_list   go to state 257
    assignment_variable        go to state 258
    expression_statement       go to state 371


State 359

   99 for_expr: base_expression . ';'

    ';'  shift, and go to state 372


State 360

   96 for_init: expression_statement ';' .

    $default  reduce using rule 96 (for_init)


State 361

   92 switch_statement: SWITCH '(' base_expression ')' . code_block

    '{'  shift, and go to state 174

    code_block  go to state 373


State 362

   57 interface_function_declaration: ID '(' ')' return_type_list ';' .

    $default  reduce using rule 57 (interface_function_declaration)


State 363

   58 interface_function_declaration: ID '(' type_name_list ')' ';' .

    $default  reduce using rule 58 (interface_function_declaration)


State 364

   59 interface_function_declaration: ID '(' type_name_list ')' return_type_list . ';'

    ';'  shift, and go to state 374


State 365

   60 interface_function_declaration: ID '(' parameter_list ')' ';' .

    $default  reduce using rule 60 (interface_function_declaration)


State 366

   61 interface_function_declaration: ID '(' parameter_list ')' return_type_list . ';'

    ';'  shift, and go to state 375


State 367

   88 if_statement: IF '(' base_expression ')' code_block .
   89             | IF '(' base_expression ')' code_block . ELSE else_statemnet

    ELSE  shift, and go to state 376

    $default  reduce using rule 88 (if_statement)


State 368

   93 iteration_statemnet: WHILE '(' base_expression ')' code_block .

    $default  reduce using rule 93 (iteration_statemnet)


State 369

   94 iteration_statemnet: DO code_block WHILE '(' base_expression . ')' ';'

    ')'  shift, and go to state 377


State 370

   95 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' code_block

    ')'  shift, and go to state 378


State 371

  101 for_incr: expression_statement .

    $default  reduce using rule 101 (for_incr)


State 372

   99 for_expr: base_expression ';' .

    $default  reduce using rule 99 (for_expr)


State 373

   92 switch_statement: SWITCH '(' base_expression ')' code_block .

    $default  reduce using rule 92 (switch_statement)


State 374

   59 interface_function_declaration: ID '(' type_name_list ')' return_type_list ';' .

    $default  reduce using rule 59 (interface_function_declaration)


State 375

   61 interface_function_declaration: ID '(' parameter_list ')' return_type_list ';' .

    $default  reduce using rule 61 (interface_function_declaration)


State 376

   89 if_statement: IF '(' base_expression ')' code_block ELSE . else_statemnet

    IF   shift, and go to state 236
    '{'  shift, and go to state 174

    code_block      go to state 379
    if_statement    go to state 380
    else_statemnet  go to state 381


State 377

   94 iteration_statemnet: DO code_block WHILE '(' base_expression ')' . ';'

    ';'  shift, and go to state 382


State 378

   95 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . code_block

    '{'  shift, and go to state 174

    code_block  go to state 383


State 379

   91 else_statemnet: code_block .

    $default  reduce using rule 91 (else_statemnet)


State 380

   90 else_statemnet: if_statement .

    $default  reduce using rule 90 (else_statemnet)


State 381

   89 if_statement: IF '(' base_expression ')' code_block ELSE else_statemnet .

    $default  reduce using rule 89 (if_statement)


State 382

   94 iteration_statemnet: DO code_block WHILE '(' base_expression ')' ';' .

    $default  reduce using rule 94 (iteration_statemnet)


State 383

   95 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' code_block .

    $default  reduce using rule 95 (iteration_statemnet)
