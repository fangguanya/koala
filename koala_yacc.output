Terminals unused in grammar

   ELLIPSIS
   NOT
   IF
   ELSE
   WHILE
   DO
   FOR
   IN
   SWITCH
   CASE
   BREAK
   CONTINUE
   DEFAULT
   VAR
   RETURN
   CONST
   HEX
   OCT
   IFX


Grammar

    0 $accept: program $end

    1 semicolons: ';'
    2           | semicolons ';'

    3 qualified_name: ID
    4               | qualified_name '.' ID

    5 type_name_list: type_name
    6               | type_name_list ',' type_name

    7 type_name: primitive_type
    8          | qualified_name
    9          | function_type
   10          | interface_root_type

   11 primitive_type: UINT8
   12               | UINT16
   13               | UINT32
   14               | UINT64
   15               | INT8
   16               | INT16
   17               | INT32
   18               | INT64
   19               | FLOAT32
   20               | FLOAT64
   21               | BOOL
   22               | STRING

   23 function_type: FUNC '(' ')'
   24              | FUNC '(' ')' return_type_list
   25              | FUNC '(' parameter_type_list ')'
   26              | FUNC '(' parameter_type_list ')' return_type_list

   27 interface_root_type: INTERFACE '{' '}'

   28 field_name: ID

   29 program: package_statement import_statements declarations
   30        | package_statement import_statements
   31        | package_statement declarations
   32        | import_statements declarations
   33        | package_statement
   34        | import_statements
   35        | declarations

   36 package_statement: PACKAGE qualified_name semicolons

   37 import_statements: import_statement
   38                  | import_statements import_statement

   39 import_statement: IMPORT qualified_name semicolons
   40                 | IMPORT qualified_name '.' '*' semicolons

   41 declarations: type_declaration
   42             | declarations type_declaration
   43             | expression_statement
   44             | declarations expression_statement

   45 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   46                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   47                 | TYPE ID type_name semicolons

   48 field_declarations: field_declaration
   49                   | field_declarations field_declaration

   50 field_declaration: ID type_name semicolons

   51 interface_function_declarations: interface_function_declaration
   52                                | interface_function_declarations interface_function_declaration

   53 interface_function_declaration: FUNC ID '(' ')' semicolons
   54                               | FUNC ID '(' ')' return_type_list semicolons
   55                               | FUNC ID '(' parameter_type_list ')' semicolons
   56                               | FUNC ID '(' parameter_type_list ')' return_type_list semicolons
   57                               | FUNC ID '(' parameter_list ')' semicolons
   58                               | FUNC ID '(' parameter_list ')' return_type_list semicolons

   59 return_type_list: type_name
   60                 | '(' type_name_list ')'

   61 parameter_type_list: type_name
   62                    | parameter_type_list ',' type_name

   63 parameter_list: ID type_name
   64               | parameter_list ',' ID type_name

   65 primary_expression: qualified_name
   66                   | just_not_name

   67 just_not_name: TOKEN_THIS
   68              | initializer_expression
   69              | complex_primary

   70 complex_primary: '(' expression ')'
   71                | complex_primary_no_parenthesis

   72 complex_primary_no_parenthesis: literal_name
   73                               | array_access
   74                               | field_access
   75                               | method_call

   76 literal_name: INTEGER
   77             | FLOAT
   78             | STRING_LITERAL
   79             | TOKEN_NULL
   80             | TOKEN_TRUE
   81             | TOKEN_FALSE

   82 array_complex_primary: '(' expression ')'
   83                      | array_access
   84                      | field_access
   85                      | method_call

   86 array_access: qualified_name '[' expression ']'
   87             | array_complex_primary '[' expression ']'

   88 field_access: just_not_name '.' ID

   89 method_call: method_access '(' argument_list ')'
   90            | method_access '(' ')'

   91 method_access: complex_primary_no_parenthesis
   92              | qualified_name

   93 initializer_expression: struct_initializer

   94 struct_initializer: '{' '}'
   95                   | '{' expression_list '}'
   96                   | '{' field_initializer_list '}'
   97                   | type_name '{' '}'
   98                   | type_name '{' expression_list '}'
   99                   | type_name '{' field_initializer_list '}'

  100 field_initializer_list: field_initializer
  101                       | field_initializer_list ',' field_initializer

  102 field_initializer: field_name ':' expression

  103 postfix_expression: primary_expression
  104                   | real_postfix_expression

  105 real_postfix_expression: postfix_expression INC
  106                        | postfix_expression DEC

  107 argument_list: expression_list

  108 unary_expression: postfix_expression
  109                 | INC unary_expression
  110                 | DEC unary_expression
  111                 | unary_operator unary_expression

  112 unary_operator: '+'
  113               | '-'
  114               | '~'
  115               | '!'

  116 multiplicative_expression: unary_expression
  117                          | multiplicative_expression '*' unary_expression
  118                          | multiplicative_expression '/' unary_expression
  119                          | multiplicative_expression '%' unary_expression

  120 additive_expression: multiplicative_expression
  121                    | additive_expression '+' multiplicative_expression
  122                    | additive_expression '-' multiplicative_expression

  123 shift_expression: additive_expression
  124                 | shift_expression SHIFT_LEFT additive_expression
  125                 | shift_expression SHIFT_RIGHT additive_expression

  126 relational_expression: shift_expression
  127                      | relational_expression '<' shift_expression
  128                      | relational_expression '>' shift_expression
  129                      | relational_expression LE shift_expression
  130                      | relational_expression GE shift_expression

  131 equality_expression: relational_expression
  132                    | equality_expression EQ relational_expression
  133                    | equality_expression NE relational_expression

  134 and_expression: equality_expression
  135               | and_expression '&' equality_expression

  136 exclusive_or_expression: and_expression
  137                        | exclusive_or_expression '^' and_expression

  138 inclusive_or_expression: exclusive_or_expression
  139                        | inclusive_or_expression '|' exclusive_or_expression

  140 logical_and_expression: inclusive_or_expression
  141                       | logical_and_expression AND inclusive_or_expression

  142 logical_or_expression: logical_and_expression
  143                      | logical_or_expression OR logical_and_expression

  144 expression: logical_or_expression

  145 expression_list: expression
  146                | expression_list ',' expression

  147 assignment_expression: assignment_variable_list '=' expression_list
  148                      | assignment_variable compound_assignment_operator expression

  149 assignment_variable_list: assignment_variable
  150                         | assignment_variable_list ',' assignment_variable

  151 assignment_variable: qualified_name
  152                    | array_access
  153                    | field_access

  154 compound_assignment_operator: ADD_ASSIGN
  155                             | SUB_ASSIGN
  156                             | MUL_ASSIGN
  157                             | DIV_ASSIGN
  158                             | MOD_ASSIGN
  159                             | AND_ASSIGN
  160                             | OR_ASSIGN
  161                             | XOR_ASSIGN
  162                             | RIGHT_ASSIGN
  163                             | LEFT_ASSIGN

  164 expression_statement: expression semicolons
  165                     | assignment_expression semicolons


Terminals, with rules where they appear

$end (0) 0
'!' (33) 115
'%' (37) 119
'&' (38) 135
'(' (40) 23 24 25 26 53 54 55 56 57 58 60 70 82 89 90
')' (41) 23 24 25 26 53 54 55 56 57 58 60 70 82 89 90
'*' (42) 40 117
'+' (43) 112 121
',' (44) 6 62 64 101 146 150
'-' (45) 113 122
'.' (46) 4 40 88
'/' (47) 118
':' (58) 102
';' (59) 1 2
'<' (60) 127
'=' (61) 147
'>' (62) 128
'[' (91) 86 87
']' (93) 86 87
'^' (94) 137
'{' (123) 27 45 46 94 95 96 97 98 99
'|' (124) 139
'}' (125) 27 45 46 94 95 96 97 98 99
'~' (126) 114
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 154
SUB_ASSIGN (260) 155
MUL_ASSIGN (261) 156
DIV_ASSIGN (262) 157
MOD_ASSIGN (263) 158
AND_ASSIGN (264) 159
OR_ASSIGN (265) 160
XOR_ASSIGN (266) 161
RIGHT_ASSIGN (267) 162
LEFT_ASSIGN (268) 163
EQ (269) 132
NE (270) 133
GE (271) 130
LE (272) 129
AND (273) 141
OR (274) 143
NOT (275)
SHIFT_LEFT (276) 124
SHIFT_RIGHT (277) 125
INC (278) 105 109
DEC (279) 106 110
TOKEN_THIS (280) 67
IF (281)
ELSE (282)
WHILE (283)
DO (284)
FOR (285)
IN (286)
SWITCH (287)
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292)
FUNC (293) 23 24 25 26 53 54 55 56 57 58
RETURN (294)
STRUCT (295) 45
INTERFACE (296) 27 46
TYPE (297) 45 46 47
CONST (298)
PACKAGE (299) 36
IMPORT (300) 39 40
INT8 (301) 15
INT16 (302) 16
INT32 (303) 17
INT64 (304) 18
UINT8 (305) 11
UINT16 (306) 12
UINT32 (307) 13
UINT64 (308) 14
FLOAT32 (309) 19
FLOAT64 (310) 20
BOOL (311) 21
STRING (312) 22
TOKEN_NULL (313) 79
TOKEN_TRUE (314) 80
TOKEN_FALSE (315) 81
INTEGER (316) 76
HEX (317)
OCT (318)
FLOAT (319) 77
STRING_LITERAL (320) 78
ID (321) 3 4 28 45 46 47 50 53 54 55 56 57 58 63 64 88
IFX (322)


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
semicolons (92)
    on left: 1 2, on right: 2 36 39 40 47 50 53 54 55 56 57 58 164
    165
qualified_name (93)
    on left: 3 4, on right: 4 8 36 39 40 65 86 92 151
type_name_list (94)
    on left: 5 6, on right: 6 60
type_name (95)
    on left: 7 8 9 10, on right: 5 6 47 50 59 61 62 63 64 97 98 99
primitive_type (96)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22, on right: 7
function_type (97)
    on left: 23 24 25 26, on right: 9
interface_root_type (98)
    on left: 27, on right: 10
field_name (99)
    on left: 28, on right: 102
program (100)
    on left: 29 30 31 32 33 34 35, on right: 0
package_statement (101)
    on left: 36, on right: 29 30 31 33
import_statements (102)
    on left: 37 38, on right: 29 30 32 34 38
import_statement (103)
    on left: 39 40, on right: 37 38
declarations (104)
    on left: 41 42 43 44, on right: 29 31 32 35 42 44
type_declaration (105)
    on left: 45 46 47, on right: 41 42
field_declarations (106)
    on left: 48 49, on right: 45 49
field_declaration (107)
    on left: 50, on right: 48 49
interface_function_declarations (108)
    on left: 51 52, on right: 46 52
interface_function_declaration (109)
    on left: 53 54 55 56 57 58, on right: 51 52
return_type_list (110)
    on left: 59 60, on right: 24 26 54 56 58
parameter_type_list (111)
    on left: 61 62, on right: 25 26 55 56 62
parameter_list (112)
    on left: 63 64, on right: 57 58 64
primary_expression (113)
    on left: 65 66, on right: 103
just_not_name (114)
    on left: 67 68 69, on right: 66 88
complex_primary (115)
    on left: 70 71, on right: 69
complex_primary_no_parenthesis (116)
    on left: 72 73 74 75, on right: 71 91
literal_name (117)
    on left: 76 77 78 79 80 81, on right: 72
array_complex_primary (118)
    on left: 82 83 84 85, on right: 87
array_access (119)
    on left: 86 87, on right: 73 83 152
field_access (120)
    on left: 88, on right: 74 84 153
method_call (121)
    on left: 89 90, on right: 75 85
method_access (122)
    on left: 91 92, on right: 89 90
initializer_expression (123)
    on left: 93, on right: 68
struct_initializer (124)
    on left: 94 95 96 97 98 99, on right: 93
field_initializer_list (125)
    on left: 100 101, on right: 96 99 101
field_initializer (126)
    on left: 102, on right: 100 101
postfix_expression (127)
    on left: 103 104, on right: 105 106 108
real_postfix_expression (128)
    on left: 105 106, on right: 104
argument_list (129)
    on left: 107, on right: 89
unary_expression (130)
    on left: 108 109 110 111, on right: 109 110 111 116 117 118 119
unary_operator (131)
    on left: 112 113 114 115, on right: 111
multiplicative_expression (132)
    on left: 116 117 118 119, on right: 117 118 119 120 121 122
additive_expression (133)
    on left: 120 121 122, on right: 121 122 123 124 125
shift_expression (134)
    on left: 123 124 125, on right: 124 125 126 127 128 129 130
relational_expression (135)
    on left: 126 127 128 129 130, on right: 127 128 129 130 131 132
    133
equality_expression (136)
    on left: 131 132 133, on right: 132 133 134 135
and_expression (137)
    on left: 134 135, on right: 135 136 137
exclusive_or_expression (138)
    on left: 136 137, on right: 137 138 139
inclusive_or_expression (139)
    on left: 138 139, on right: 139 140 141
logical_and_expression (140)
    on left: 140 141, on right: 141 142 143
logical_or_expression (141)
    on left: 142 143, on right: 143 144
expression (142)
    on left: 144, on right: 70 82 86 87 102 145 146 148 164
expression_list (143)
    on left: 145 146, on right: 95 98 107 146 147
assignment_expression (144)
    on left: 147 148, on right: 165
assignment_variable_list (145)
    on left: 149 150, on right: 147 150
assignment_variable (146)
    on left: 151 152 153, on right: 148 149 150
compound_assignment_operator (147)
    on left: 154 155 156 157 158 159 160 161 162 163, on right: 148
expression_statement (148)
    on left: 164 165, on right: 43 44


State 0

    0 $accept: . program $end

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    TYPE            shift, and go to state 6
    PACKAGE         shift, and go to state 7
    IMPORT          shift, and go to state 8
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 34
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    program                         go to state 39
    package_statement               go to state 40
    import_statements               go to state 41
    import_statement                go to state 42
    declarations                    go to state 43
    type_declaration                go to state 44
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 51
    field_access                    go to state 52
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 71
    assignment_expression           go to state 72
    assignment_variable_list        go to state 73
    assignment_variable             go to state 74
    expression_statement            go to state 75


State 1

  109 unary_expression: INC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 79
    unary_operator                  go to state 60


State 2

  110 unary_expression: DEC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 80
    unary_operator                  go to state 60


State 3

   67 just_not_name: TOKEN_THIS .

    $default  reduce using rule 67 (just_not_name)


State 4

   23 function_type: FUNC . '(' ')'
   24              | FUNC . '(' ')' return_type_list
   25              | FUNC . '(' parameter_type_list ')'
   26              | FUNC . '(' parameter_type_list ')' return_type_list

    '('  shift, and go to state 81


State 5

   27 interface_root_type: INTERFACE . '{' '}'

    '{'  shift, and go to state 82


State 6

   45 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   46                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   47                 | TYPE . ID type_name semicolons

    ID  shift, and go to state 83


State 7

   36 package_statement: PACKAGE . qualified_name semicolons

    ID  shift, and go to state 27

    qualified_name  go to state 84


State 8

   39 import_statement: IMPORT . qualified_name semicolons
   40                 | IMPORT . qualified_name '.' '*' semicolons

    ID  shift, and go to state 27

    qualified_name  go to state 85


State 9

   15 primitive_type: INT8 .

    $default  reduce using rule 15 (primitive_type)


State 10

   16 primitive_type: INT16 .

    $default  reduce using rule 16 (primitive_type)


State 11

   17 primitive_type: INT32 .

    $default  reduce using rule 17 (primitive_type)


State 12

   18 primitive_type: INT64 .

    $default  reduce using rule 18 (primitive_type)


State 13

   11 primitive_type: UINT8 .

    $default  reduce using rule 11 (primitive_type)


State 14

   12 primitive_type: UINT16 .

    $default  reduce using rule 12 (primitive_type)


State 15

   13 primitive_type: UINT32 .

    $default  reduce using rule 13 (primitive_type)


State 16

   14 primitive_type: UINT64 .

    $default  reduce using rule 14 (primitive_type)


State 17

   19 primitive_type: FLOAT32 .

    $default  reduce using rule 19 (primitive_type)


State 18

   20 primitive_type: FLOAT64 .

    $default  reduce using rule 20 (primitive_type)


State 19

   21 primitive_type: BOOL .

    $default  reduce using rule 21 (primitive_type)


State 20

   22 primitive_type: STRING .

    $default  reduce using rule 22 (primitive_type)


State 21

   79 literal_name: TOKEN_NULL .

    $default  reduce using rule 79 (literal_name)


State 22

   80 literal_name: TOKEN_TRUE .

    $default  reduce using rule 80 (literal_name)


State 23

   81 literal_name: TOKEN_FALSE .

    $default  reduce using rule 81 (literal_name)


State 24

   76 literal_name: INTEGER .

    $default  reduce using rule 76 (literal_name)


State 25

   77 literal_name: FLOAT .

    $default  reduce using rule 77 (literal_name)


State 26

   78 literal_name: STRING_LITERAL .

    $default  reduce using rule 78 (literal_name)


State 27

    3 qualified_name: ID .

    $default  reduce using rule 3 (qualified_name)


State 28

   70 complex_primary: '(' . expression ')'
   82 array_complex_primary: '(' . expression ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 86


State 29

   94 struct_initializer: '{' . '}'
   95                   | '{' . expression_list '}'
   96                   | '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 87
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '}'             shift, and go to state 88
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    field_name                      go to state 89
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    field_initializer_list          go to state 90
    field_initializer               go to state 91
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 92
    expression_list                 go to state 93


State 30

  112 unary_operator: '+' .

    $default  reduce using rule 112 (unary_operator)


State 31

  113 unary_operator: '-' .

    $default  reduce using rule 113 (unary_operator)


State 32

  114 unary_operator: '~' .

    $default  reduce using rule 114 (unary_operator)


State 33

  115 unary_operator: '!' .

    $default  reduce using rule 115 (unary_operator)


State 34

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   65 primary_expression: qualified_name .
   86 array_access: qualified_name . '[' expression ']'
   92 method_access: qualified_name .
  151 assignment_variable: qualified_name .

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    ADD_ASSIGN    reduce using rule 151 (assignment_variable)
    SUB_ASSIGN    reduce using rule 151 (assignment_variable)
    MUL_ASSIGN    reduce using rule 151 (assignment_variable)
    DIV_ASSIGN    reduce using rule 151 (assignment_variable)
    MOD_ASSIGN    reduce using rule 151 (assignment_variable)
    AND_ASSIGN    reduce using rule 151 (assignment_variable)
    OR_ASSIGN     reduce using rule 151 (assignment_variable)
    XOR_ASSIGN    reduce using rule 151 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 151 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 151 (assignment_variable)
    ','           reduce using rule 151 (assignment_variable)
    '('           reduce using rule 92 (method_access)
    '{'           reduce using rule 8 (type_name)
    '='           reduce using rule 151 (assignment_variable)
    $default      reduce using rule 65 (primary_expression)


State 35

   97 struct_initializer: type_name . '{' '}'
   98                   | type_name . '{' expression_list '}'
   99                   | type_name . '{' field_initializer_list '}'

    '{'  shift, and go to state 96


State 36

    7 type_name: primitive_type .

    $default  reduce using rule 7 (type_name)


State 37

    9 type_name: function_type .

    $default  reduce using rule 9 (type_name)


State 38

   10 type_name: interface_root_type .

    $default  reduce using rule 10 (type_name)


State 39

    0 $accept: program . $end

    $end  shift, and go to state 97


State 40

   29 program: package_statement . import_statements declarations
   30        | package_statement . import_statements
   31        | package_statement . declarations
   33        | package_statement .

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    TYPE            shift, and go to state 6
    IMPORT          shift, and go to state 8
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    $default  reduce using rule 33 (program)

    qualified_name                  go to state 34
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    import_statements               go to state 98
    import_statement                go to state 42
    declarations                    go to state 99
    type_declaration                go to state 44
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 51
    field_access                    go to state 52
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 71
    assignment_expression           go to state 72
    assignment_variable_list        go to state 73
    assignment_variable             go to state 74
    expression_statement            go to state 75


State 41

   32 program: import_statements . declarations
   34        | import_statements .
   38 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    TYPE            shift, and go to state 6
    IMPORT          shift, and go to state 8
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    $default  reduce using rule 34 (program)

    qualified_name                  go to state 34
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    import_statement                go to state 100
    declarations                    go to state 101
    type_declaration                go to state 44
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 51
    field_access                    go to state 52
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 71
    assignment_expression           go to state 72
    assignment_variable_list        go to state 73
    assignment_variable             go to state 74
    expression_statement            go to state 75


State 42

   37 import_statements: import_statement .

    $default  reduce using rule 37 (import_statements)


State 43

   35 program: declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    TYPE            shift, and go to state 6
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    $default  reduce using rule 35 (program)

    qualified_name                  go to state 34
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    type_declaration                go to state 102
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 51
    field_access                    go to state 52
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 71
    assignment_expression           go to state 72
    assignment_variable_list        go to state 73
    assignment_variable             go to state 74
    expression_statement            go to state 103


State 44

   41 declarations: type_declaration .

    $default  reduce using rule 41 (declarations)


State 45

  103 postfix_expression: primary_expression .

    $default  reduce using rule 103 (postfix_expression)


State 46

   66 primary_expression: just_not_name .
   88 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 104

    $default  reduce using rule 66 (primary_expression)


State 47

   69 just_not_name: complex_primary .

    $default  reduce using rule 69 (just_not_name)


State 48

   71 complex_primary: complex_primary_no_parenthesis .
   91 method_access: complex_primary_no_parenthesis .

    '('       reduce using rule 91 (method_access)
    $default  reduce using rule 71 (complex_primary)


State 49

   72 complex_primary_no_parenthesis: literal_name .

    $default  reduce using rule 72 (complex_primary_no_parenthesis)


State 50

   87 array_access: array_complex_primary . '[' expression ']'

    '['  shift, and go to state 105


State 51

   73 complex_primary_no_parenthesis: array_access .
   83 array_complex_primary: array_access .
  152 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 152 (assignment_variable)
    SUB_ASSIGN    reduce using rule 152 (assignment_variable)
    MUL_ASSIGN    reduce using rule 152 (assignment_variable)
    DIV_ASSIGN    reduce using rule 152 (assignment_variable)
    MOD_ASSIGN    reduce using rule 152 (assignment_variable)
    AND_ASSIGN    reduce using rule 152 (assignment_variable)
    OR_ASSIGN     reduce using rule 152 (assignment_variable)
    XOR_ASSIGN    reduce using rule 152 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 152 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 152 (assignment_variable)
    ','           reduce using rule 152 (assignment_variable)
    '['           reduce using rule 83 (array_complex_primary)
    '='           reduce using rule 152 (assignment_variable)
    $default      reduce using rule 73 (complex_primary_no_parenthesis)


State 52

   74 complex_primary_no_parenthesis: field_access .
   84 array_complex_primary: field_access .
  153 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 153 (assignment_variable)
    SUB_ASSIGN    reduce using rule 153 (assignment_variable)
    MUL_ASSIGN    reduce using rule 153 (assignment_variable)
    DIV_ASSIGN    reduce using rule 153 (assignment_variable)
    MOD_ASSIGN    reduce using rule 153 (assignment_variable)
    AND_ASSIGN    reduce using rule 153 (assignment_variable)
    OR_ASSIGN     reduce using rule 153 (assignment_variable)
    XOR_ASSIGN    reduce using rule 153 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 153 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 153 (assignment_variable)
    ','           reduce using rule 153 (assignment_variable)
    '['           reduce using rule 84 (array_complex_primary)
    '='           reduce using rule 153 (assignment_variable)
    $default      reduce using rule 74 (complex_primary_no_parenthesis)


State 53

   75 complex_primary_no_parenthesis: method_call .
   85 array_complex_primary: method_call .

    '['       reduce using rule 85 (array_complex_primary)
    $default  reduce using rule 75 (complex_primary_no_parenthesis)


State 54

   89 method_call: method_access . '(' argument_list ')'
   90            | method_access . '(' ')'

    '('  shift, and go to state 106


State 55

   68 just_not_name: initializer_expression .

    $default  reduce using rule 68 (just_not_name)


State 56

   93 initializer_expression: struct_initializer .

    $default  reduce using rule 93 (initializer_expression)


State 57

  105 real_postfix_expression: postfix_expression . INC
  106                        | postfix_expression . DEC
  108 unary_expression: postfix_expression .

    INC  shift, and go to state 107
    DEC  shift, and go to state 108

    $default  reduce using rule 108 (unary_expression)


State 58

  104 postfix_expression: real_postfix_expression .

    $default  reduce using rule 104 (postfix_expression)


State 59

  116 multiplicative_expression: unary_expression .

    $default  reduce using rule 116 (multiplicative_expression)


State 60

  111 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 109
    unary_operator                  go to state 60


State 61

  117 multiplicative_expression: multiplicative_expression . '*' unary_expression
  118                          | multiplicative_expression . '/' unary_expression
  119                          | multiplicative_expression . '%' unary_expression
  120 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 110
    '/'  shift, and go to state 111
    '%'  shift, and go to state 112

    $default  reduce using rule 120 (additive_expression)


State 62

  121 additive_expression: additive_expression . '+' multiplicative_expression
  122                    | additive_expression . '-' multiplicative_expression
  123 shift_expression: additive_expression .

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 123 (shift_expression)


State 63

  124 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  125                 | shift_expression . SHIFT_RIGHT additive_expression
  126 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 115
    SHIFT_RIGHT  shift, and go to state 116

    $default  reduce using rule 126 (relational_expression)


State 64

  127 relational_expression: relational_expression . '<' shift_expression
  128                      | relational_expression . '>' shift_expression
  129                      | relational_expression . LE shift_expression
  130                      | relational_expression . GE shift_expression
  131 equality_expression: relational_expression .

    GE   shift, and go to state 117
    LE   shift, and go to state 118
    '<'  shift, and go to state 119
    '>'  shift, and go to state 120

    $default  reduce using rule 131 (equality_expression)


State 65

  132 equality_expression: equality_expression . EQ relational_expression
  133                    | equality_expression . NE relational_expression
  134 and_expression: equality_expression .

    EQ  shift, and go to state 121
    NE  shift, and go to state 122

    $default  reduce using rule 134 (and_expression)


State 66

  135 and_expression: and_expression . '&' equality_expression
  136 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 123

    $default  reduce using rule 136 (exclusive_or_expression)


State 67

  137 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  138 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 124

    $default  reduce using rule 138 (inclusive_or_expression)


State 68

  139 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  140 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 125

    $default  reduce using rule 140 (logical_and_expression)


State 69

  141 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  142 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 126

    $default  reduce using rule 142 (logical_or_expression)


State 70

  143 logical_or_expression: logical_or_expression . OR logical_and_expression
  144 expression: logical_or_expression .

    OR  shift, and go to state 127

    $default  reduce using rule 144 (expression)


State 71

  164 expression_statement: expression . semicolons

    ';'  shift, and go to state 128

    semicolons  go to state 129


State 72

  165 expression_statement: assignment_expression . semicolons

    ';'  shift, and go to state 128

    semicolons  go to state 130


State 73

  147 assignment_expression: assignment_variable_list . '=' expression_list
  150 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 131
    '='  shift, and go to state 132


State 74

  148 assignment_expression: assignment_variable . compound_assignment_operator expression
  149 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 133
    SUB_ASSIGN    shift, and go to state 134
    MUL_ASSIGN    shift, and go to state 135
    DIV_ASSIGN    shift, and go to state 136
    MOD_ASSIGN    shift, and go to state 137
    AND_ASSIGN    shift, and go to state 138
    OR_ASSIGN     shift, and go to state 139
    XOR_ASSIGN    shift, and go to state 140
    RIGHT_ASSIGN  shift, and go to state 141
    LEFT_ASSIGN   shift, and go to state 142

    $default  reduce using rule 149 (assignment_variable_list)

    compound_assignment_operator  go to state 143


State 75

   43 declarations: expression_statement .

    $default  reduce using rule 43 (declarations)


State 76

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   65 primary_expression: qualified_name .
   86 array_access: qualified_name . '[' expression ']'
   92 method_access: qualified_name .

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    '('       reduce using rule 92 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 65 (primary_expression)


State 77

   73 complex_primary_no_parenthesis: array_access .
   83 array_complex_primary: array_access .

    '['       reduce using rule 83 (array_complex_primary)
    $default  reduce using rule 73 (complex_primary_no_parenthesis)


State 78

   74 complex_primary_no_parenthesis: field_access .
   84 array_complex_primary: field_access .

    '['       reduce using rule 84 (array_complex_primary)
    $default  reduce using rule 74 (complex_primary_no_parenthesis)


State 79

  109 unary_expression: INC unary_expression .

    $default  reduce using rule 109 (unary_expression)


State 80

  110 unary_expression: DEC unary_expression .

    $default  reduce using rule 110 (unary_expression)


State 81

   23 function_type: FUNC '(' . ')'
   24              | FUNC '(' . ')' return_type_list
   25              | FUNC '(' . parameter_type_list ')'
   26              | FUNC '(' . parameter_type_list ')' return_type_list

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27
    ')'        shift, and go to state 144

    qualified_name       go to state 145
    type_name            go to state 146
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38
    parameter_type_list  go to state 147


State 82

   27 interface_root_type: INTERFACE '{' . '}'

    '}'  shift, and go to state 148


State 83

   45 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   46                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   47                 | TYPE ID . type_name semicolons

    FUNC       shift, and go to state 4
    STRUCT     shift, and go to state 149
    INTERFACE  shift, and go to state 150
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27

    qualified_name       go to state 145
    type_name            go to state 151
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38


State 84

    4 qualified_name: qualified_name . '.' ID
   36 package_statement: PACKAGE qualified_name . semicolons

    ';'  shift, and go to state 128
    '.'  shift, and go to state 94

    semicolons  go to state 152


State 85

    4 qualified_name: qualified_name . '.' ID
   39 import_statement: IMPORT qualified_name . semicolons
   40                 | IMPORT qualified_name . '.' '*' semicolons

    ';'  shift, and go to state 128
    '.'  shift, and go to state 153

    semicolons  go to state 154


State 86

   70 complex_primary: '(' expression . ')'
   82 array_complex_primary: '(' expression . ')'

    ')'  shift, and go to state 155


State 87

    3 qualified_name: ID .
   28 field_name: ID .

    ':'       reduce using rule 28 (field_name)
    $default  reduce using rule 3 (qualified_name)


State 88

   94 struct_initializer: '{' '}' .

    $default  reduce using rule 94 (struct_initializer)


State 89

  102 field_initializer: field_name . ':' expression

    ':'  shift, and go to state 156


State 90

   96 struct_initializer: '{' field_initializer_list . '}'
  101 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 157
    '}'  shift, and go to state 158


State 91

  100 field_initializer_list: field_initializer .

    $default  reduce using rule 100 (field_initializer_list)


State 92

  145 expression_list: expression .

    $default  reduce using rule 145 (expression_list)


State 93

   95 struct_initializer: '{' expression_list . '}'
  146 expression_list: expression_list . ',' expression

    ','  shift, and go to state 159
    '}'  shift, and go to state 160


State 94

    4 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 161


State 95

   86 array_access: qualified_name '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 162


State 96

   97 struct_initializer: type_name '{' . '}'
   98                   | type_name '{' . expression_list '}'
   99                   | type_name '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 87
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '}'             shift, and go to state 163
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    field_name                      go to state 89
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    field_initializer_list          go to state 164
    field_initializer               go to state 91
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 92
    expression_list                 go to state 165


State 97

    0 $accept: program $end .

    $default  accept


State 98

   29 program: package_statement import_statements . declarations
   30        | package_statement import_statements .
   38 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    TYPE            shift, and go to state 6
    IMPORT          shift, and go to state 8
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    $default  reduce using rule 30 (program)

    qualified_name                  go to state 34
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    import_statement                go to state 100
    declarations                    go to state 166
    type_declaration                go to state 44
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 51
    field_access                    go to state 52
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 71
    assignment_expression           go to state 72
    assignment_variable_list        go to state 73
    assignment_variable             go to state 74
    expression_statement            go to state 75


State 99

   31 program: package_statement declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    TYPE            shift, and go to state 6
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    $default  reduce using rule 31 (program)

    qualified_name                  go to state 34
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    type_declaration                go to state 102
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 51
    field_access                    go to state 52
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 71
    assignment_expression           go to state 72
    assignment_variable_list        go to state 73
    assignment_variable             go to state 74
    expression_statement            go to state 103


State 100

   38 import_statements: import_statements import_statement .

    $default  reduce using rule 38 (import_statements)


State 101

   32 program: import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    TYPE            shift, and go to state 6
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    $default  reduce using rule 32 (program)

    qualified_name                  go to state 34
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    type_declaration                go to state 102
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 51
    field_access                    go to state 52
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 71
    assignment_expression           go to state 72
    assignment_variable_list        go to state 73
    assignment_variable             go to state 74
    expression_statement            go to state 103


State 102

   42 declarations: declarations type_declaration .

    $default  reduce using rule 42 (declarations)


State 103

   44 declarations: declarations expression_statement .

    $default  reduce using rule 44 (declarations)


State 104

   88 field_access: just_not_name '.' . ID

    ID  shift, and go to state 167


State 105

   87 array_access: array_complex_primary '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 168


State 106

   89 method_call: method_access '(' . argument_list ')'
   90            | method_access '(' . ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    ')'             shift, and go to state 169
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    argument_list                   go to state 170
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 92
    expression_list                 go to state 171


State 107

  105 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 105 (real_postfix_expression)


State 108

  106 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 106 (real_postfix_expression)


State 109

  111 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 111 (unary_expression)


State 110

  117 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 172
    unary_operator                  go to state 60


State 111

  118 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 173
    unary_operator                  go to state 60


State 112

  119 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 174
    unary_operator                  go to state 60


State 113

  121 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 175


State 114

  122 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 176


State 115

  124 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 177


State 116

  125 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 178


State 117

  130 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 179


State 118

  129 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 180


State 119

  127 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 181


State 120

  128 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 182


State 121

  132 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 183


State 122

  133 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 184


State 123

  135 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 185


State 124

  137 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 186


State 125

  139 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 187


State 126

  141 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 188


State 127

  143 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 189


State 128

    1 semicolons: ';' .

    $default  reduce using rule 1 (semicolons)


State 129

    2 semicolons: semicolons . ';'
  164 expression_statement: expression semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 164 (expression_statement)


State 130

    2 semicolons: semicolons . ';'
  165 expression_statement: assignment_expression semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 165 (expression_statement)


State 131

  150 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29

    qualified_name                  go to state 191
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    just_not_name                   go to state 192
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 51
    field_access                    go to state 52
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    assignment_variable             go to state 193


State 132

  147 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 92
    expression_list                 go to state 194


State 133

  154 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 154 (compound_assignment_operator)


State 134

  155 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 155 (compound_assignment_operator)


State 135

  156 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 156 (compound_assignment_operator)


State 136

  157 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 157 (compound_assignment_operator)


State 137

  158 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 158 (compound_assignment_operator)


State 138

  159 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 159 (compound_assignment_operator)


State 139

  160 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 160 (compound_assignment_operator)


State 140

  161 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 161 (compound_assignment_operator)


State 141

  162 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 162 (compound_assignment_operator)


State 142

  163 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 163 (compound_assignment_operator)


State 143

  148 assignment_expression: assignment_variable compound_assignment_operator . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 195


State 144

   23 function_type: FUNC '(' ')' .
   24              | FUNC '(' ')' . return_type_list

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27
    '('        shift, and go to state 196

    $default  reduce using rule 23 (function_type)

    qualified_name       go to state 145
    type_name            go to state 197
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38
    return_type_list     go to state 198


State 145

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .

    '.'  shift, and go to state 94

    $default  reduce using rule 8 (type_name)


State 146

   61 parameter_type_list: type_name .

    $default  reduce using rule 61 (parameter_type_list)


State 147

   25 function_type: FUNC '(' parameter_type_list . ')'
   26              | FUNC '(' parameter_type_list . ')' return_type_list
   62 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 199
    ')'  shift, and go to state 200


State 148

   27 interface_root_type: INTERFACE '{' '}' .

    $default  reduce using rule 27 (interface_root_type)


State 149

   45 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 201


State 150

   27 interface_root_type: INTERFACE . '{' '}'
   46 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 202


State 151

   47 type_declaration: TYPE ID type_name . semicolons

    ';'  shift, and go to state 128

    semicolons  go to state 203


State 152

    2 semicolons: semicolons . ';'
   36 package_statement: PACKAGE qualified_name semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 36 (package_statement)


State 153

    4 qualified_name: qualified_name '.' . ID
   40 import_statement: IMPORT qualified_name '.' . '*' semicolons

    ID   shift, and go to state 161
    '*'  shift, and go to state 204


State 154

    2 semicolons: semicolons . ';'
   39 import_statement: IMPORT qualified_name semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 39 (import_statement)


State 155

   70 complex_primary: '(' expression ')' .
   82 array_complex_primary: '(' expression ')' .

    '['       reduce using rule 82 (array_complex_primary)
    $default  reduce using rule 70 (complex_primary)


State 156

  102 field_initializer: field_name ':' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 205


State 157

  101 field_initializer_list: field_initializer_list ',' . field_initializer

    ID  shift, and go to state 206

    field_name         go to state 89
    field_initializer  go to state 207


State 158

   96 struct_initializer: '{' field_initializer_list '}' .

    $default  reduce using rule 96 (struct_initializer)


State 159

  146 expression_list: expression_list ',' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    qualified_name                  go to state 76
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 77
    field_access                    go to state 78
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 208


State 160

   95 struct_initializer: '{' expression_list '}' .

    $default  reduce using rule 95 (struct_initializer)


State 161

    4 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 4 (qualified_name)


State 162

   86 array_access: qualified_name '[' expression . ']'

    ']'  shift, and go to state 209


State 163

   97 struct_initializer: type_name '{' '}' .

    $default  reduce using rule 97 (struct_initializer)


State 164

   99 struct_initializer: type_name '{' field_initializer_list . '}'
  101 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 157
    '}'  shift, and go to state 210


State 165

   98 struct_initializer: type_name '{' expression_list . '}'
  146 expression_list: expression_list . ',' expression

    ','  shift, and go to state 159
    '}'  shift, and go to state 211


State 166

   29 program: package_statement import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 4
    INTERFACE       shift, and go to state 5
    TYPE            shift, and go to state 6
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    TOKEN_NULL      shift, and go to state 21
    TOKEN_TRUE      shift, and go to state 22
    TOKEN_FALSE     shift, and go to state 23
    INTEGER         shift, and go to state 24
    FLOAT           shift, and go to state 25
    STRING_LITERAL  shift, and go to state 26
    ID              shift, and go to state 27
    '('             shift, and go to state 28
    '{'             shift, and go to state 29
    '+'             shift, and go to state 30
    '-'             shift, and go to state 31
    '~'             shift, and go to state 32
    '!'             shift, and go to state 33

    $default  reduce using rule 29 (program)

    qualified_name                  go to state 34
    type_name                       go to state 35
    primitive_type                  go to state 36
    function_type                   go to state 37
    interface_root_type             go to state 38
    type_declaration                go to state 102
    primary_expression              go to state 45
    just_not_name                   go to state 46
    complex_primary                 go to state 47
    complex_primary_no_parenthesis  go to state 48
    literal_name                    go to state 49
    array_complex_primary           go to state 50
    array_access                    go to state 51
    field_access                    go to state 52
    method_call                     go to state 53
    method_access                   go to state 54
    initializer_expression          go to state 55
    struct_initializer              go to state 56
    postfix_expression              go to state 57
    real_postfix_expression         go to state 58
    unary_expression                go to state 59
    unary_operator                  go to state 60
    multiplicative_expression       go to state 61
    additive_expression             go to state 62
    shift_expression                go to state 63
    relational_expression           go to state 64
    equality_expression             go to state 65
    and_expression                  go to state 66
    exclusive_or_expression         go to state 67
    inclusive_or_expression         go to state 68
    logical_and_expression          go to state 69
    logical_or_expression           go to state 70
    expression                      go to state 71
    assignment_expression           go to state 72
    assignment_variable_list        go to state 73
    assignment_variable             go to state 74
    expression_statement            go to state 103


State 167

   88 field_access: just_not_name '.' ID .

    $default  reduce using rule 88 (field_access)


State 168

   87 array_access: array_complex_primary '[' expression . ']'

    ']'  shift, and go to state 212


State 169

   90 method_call: method_access '(' ')' .

    $default  reduce using rule 90 (method_call)


State 170

   89 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 213


State 171

  107 argument_list: expression_list .
  146 expression_list: expression_list . ',' expression

    ','  shift, and go to state 159

    $default  reduce using rule 107 (argument_list)


State 172

  117 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 117 (multiplicative_expression)


State 173

  118 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 118 (multiplicative_expression)


State 174

  119 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 119 (multiplicative_expression)


State 175

  117 multiplicative_expression: multiplicative_expression . '*' unary_expression
  118                          | multiplicative_expression . '/' unary_expression
  119                          | multiplicative_expression . '%' unary_expression
  121 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 110
    '/'  shift, and go to state 111
    '%'  shift, and go to state 112

    $default  reduce using rule 121 (additive_expression)


State 176

  117 multiplicative_expression: multiplicative_expression . '*' unary_expression
  118                          | multiplicative_expression . '/' unary_expression
  119                          | multiplicative_expression . '%' unary_expression
  122 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 110
    '/'  shift, and go to state 111
    '%'  shift, and go to state 112

    $default  reduce using rule 122 (additive_expression)


State 177

  121 additive_expression: additive_expression . '+' multiplicative_expression
  122                    | additive_expression . '-' multiplicative_expression
  124 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 124 (shift_expression)


State 178

  121 additive_expression: additive_expression . '+' multiplicative_expression
  122                    | additive_expression . '-' multiplicative_expression
  125 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 113
    '-'  shift, and go to state 114

    $default  reduce using rule 125 (shift_expression)


State 179

  124 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  125                 | shift_expression . SHIFT_RIGHT additive_expression
  130 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 115
    SHIFT_RIGHT  shift, and go to state 116

    $default  reduce using rule 130 (relational_expression)


State 180

  124 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  125                 | shift_expression . SHIFT_RIGHT additive_expression
  129 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 115
    SHIFT_RIGHT  shift, and go to state 116

    $default  reduce using rule 129 (relational_expression)


State 181

  124 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  125                 | shift_expression . SHIFT_RIGHT additive_expression
  127 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 115
    SHIFT_RIGHT  shift, and go to state 116

    $default  reduce using rule 127 (relational_expression)


State 182

  124 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  125                 | shift_expression . SHIFT_RIGHT additive_expression
  128 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 115
    SHIFT_RIGHT  shift, and go to state 116

    $default  reduce using rule 128 (relational_expression)


State 183

  127 relational_expression: relational_expression . '<' shift_expression
  128                      | relational_expression . '>' shift_expression
  129                      | relational_expression . LE shift_expression
  130                      | relational_expression . GE shift_expression
  132 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 117
    LE   shift, and go to state 118
    '<'  shift, and go to state 119
    '>'  shift, and go to state 120

    $default  reduce using rule 132 (equality_expression)


State 184

  127 relational_expression: relational_expression . '<' shift_expression
  128                      | relational_expression . '>' shift_expression
  129                      | relational_expression . LE shift_expression
  130                      | relational_expression . GE shift_expression
  133 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 117
    LE   shift, and go to state 118
    '<'  shift, and go to state 119
    '>'  shift, and go to state 120

    $default  reduce using rule 133 (equality_expression)


State 185

  132 equality_expression: equality_expression . EQ relational_expression
  133                    | equality_expression . NE relational_expression
  135 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 121
    NE  shift, and go to state 122

    $default  reduce using rule 135 (and_expression)


State 186

  135 and_expression: and_expression . '&' equality_expression
  137 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 123

    $default  reduce using rule 137 (exclusive_or_expression)


State 187

  137 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  139 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 124

    $default  reduce using rule 139 (inclusive_or_expression)


State 188

  139 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  141 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 125

    $default  reduce using rule 141 (logical_and_expression)


State 189

  141 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  143 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 126

    $default  reduce using rule 143 (logical_or_expression)


State 190

    2 semicolons: semicolons ';' .

    $default  reduce using rule 2 (semicolons)


State 191

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   86 array_access: qualified_name . '[' expression ']'
   92 method_access: qualified_name .
  151 assignment_variable: qualified_name .

    '.'  shift, and go to state 94
    '['  shift, and go to state 95

    '('       reduce using rule 92 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 151 (assignment_variable)


State 192

   88 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 104


State 193

  150 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 150 (assignment_variable_list)


State 194

  146 expression_list: expression_list . ',' expression
  147 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 159

    $default  reduce using rule 147 (assignment_expression)


State 195

  148 assignment_expression: assignment_variable compound_assignment_operator expression .

    $default  reduce using rule 148 (assignment_expression)


State 196

   60 return_type_list: '(' . type_name_list ')'

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27

    qualified_name       go to state 145
    type_name_list       go to state 214
    type_name            go to state 215
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38


State 197

   59 return_type_list: type_name .

    $default  reduce using rule 59 (return_type_list)


State 198

   24 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 24 (function_type)


State 199

   62 parameter_type_list: parameter_type_list ',' . type_name

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27

    qualified_name       go to state 145
    type_name            go to state 216
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38


State 200

   25 function_type: FUNC '(' parameter_type_list ')' .
   26              | FUNC '(' parameter_type_list ')' . return_type_list

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27
    '('        shift, and go to state 196

    $default  reduce using rule 25 (function_type)

    qualified_name       go to state 145
    type_name            go to state 197
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38
    return_type_list     go to state 217


State 201

   45 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 218

    field_declarations  go to state 219
    field_declaration   go to state 220


State 202

   27 interface_root_type: INTERFACE '{' . '}'
   46 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    FUNC  shift, and go to state 221
    '}'   shift, and go to state 148

    interface_function_declarations  go to state 222
    interface_function_declaration   go to state 223


State 203

    2 semicolons: semicolons . ';'
   47 type_declaration: TYPE ID type_name semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 47 (type_declaration)


State 204

   40 import_statement: IMPORT qualified_name '.' '*' . semicolons

    ';'  shift, and go to state 128

    semicolons  go to state 224


State 205

  102 field_initializer: field_name ':' expression .

    $default  reduce using rule 102 (field_initializer)


State 206

   28 field_name: ID .

    $default  reduce using rule 28 (field_name)


State 207

  101 field_initializer_list: field_initializer_list ',' field_initializer .

    $default  reduce using rule 101 (field_initializer_list)


State 208

  146 expression_list: expression_list ',' expression .

    $default  reduce using rule 146 (expression_list)


State 209

   86 array_access: qualified_name '[' expression ']' .

    $default  reduce using rule 86 (array_access)


State 210

   99 struct_initializer: type_name '{' field_initializer_list '}' .

    $default  reduce using rule 99 (struct_initializer)


State 211

   98 struct_initializer: type_name '{' expression_list '}' .

    $default  reduce using rule 98 (struct_initializer)


State 212

   87 array_access: array_complex_primary '[' expression ']' .

    $default  reduce using rule 87 (array_access)


State 213

   89 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 89 (method_call)


State 214

    6 type_name_list: type_name_list . ',' type_name
   60 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 225
    ')'  shift, and go to state 226


State 215

    5 type_name_list: type_name .

    $default  reduce using rule 5 (type_name_list)


State 216

   62 parameter_type_list: parameter_type_list ',' type_name .

    $default  reduce using rule 62 (parameter_type_list)


State 217

   26 function_type: FUNC '(' parameter_type_list ')' return_type_list .

    $default  reduce using rule 26 (function_type)


State 218

   50 field_declaration: ID . type_name semicolons

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27

    qualified_name       go to state 145
    type_name            go to state 227
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38


State 219

   45 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   49 field_declarations: field_declarations . field_declaration

    ID   shift, and go to state 218
    '}'  shift, and go to state 228

    field_declaration  go to state 229


State 220

   48 field_declarations: field_declaration .

    $default  reduce using rule 48 (field_declarations)


State 221

   53 interface_function_declaration: FUNC . ID '(' ')' semicolons
   54                               | FUNC . ID '(' ')' return_type_list semicolons
   55                               | FUNC . ID '(' parameter_type_list ')' semicolons
   56                               | FUNC . ID '(' parameter_type_list ')' return_type_list semicolons
   57                               | FUNC . ID '(' parameter_list ')' semicolons
   58                               | FUNC . ID '(' parameter_list ')' return_type_list semicolons

    ID  shift, and go to state 230


State 222

   46 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   52 interface_function_declarations: interface_function_declarations . interface_function_declaration

    FUNC  shift, and go to state 221
    '}'   shift, and go to state 231

    interface_function_declaration  go to state 232


State 223

   51 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 51 (interface_function_declarations)


State 224

    2 semicolons: semicolons . ';'
   40 import_statement: IMPORT qualified_name '.' '*' semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 40 (import_statement)


State 225

    6 type_name_list: type_name_list ',' . type_name

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27

    qualified_name       go to state 145
    type_name            go to state 233
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38


State 226

   60 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 60 (return_type_list)


State 227

   50 field_declaration: ID type_name . semicolons

    ';'  shift, and go to state 128

    semicolons  go to state 234


State 228

   45 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 45 (type_declaration)


State 229

   49 field_declarations: field_declarations field_declaration .

    $default  reduce using rule 49 (field_declarations)


State 230

   53 interface_function_declaration: FUNC ID . '(' ')' semicolons
   54                               | FUNC ID . '(' ')' return_type_list semicolons
   55                               | FUNC ID . '(' parameter_type_list ')' semicolons
   56                               | FUNC ID . '(' parameter_type_list ')' return_type_list semicolons
   57                               | FUNC ID . '(' parameter_list ')' semicolons
   58                               | FUNC ID . '(' parameter_list ')' return_type_list semicolons

    '('  shift, and go to state 235


State 231

   46 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 46 (type_declaration)


State 232

   52 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 52 (interface_function_declarations)


State 233

    6 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 6 (type_name_list)


State 234

    2 semicolons: semicolons . ';'
   50 field_declaration: ID type_name semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 50 (field_declaration)


State 235

   53 interface_function_declaration: FUNC ID '(' . ')' semicolons
   54                               | FUNC ID '(' . ')' return_type_list semicolons
   55                               | FUNC ID '(' . parameter_type_list ')' semicolons
   56                               | FUNC ID '(' . parameter_type_list ')' return_type_list semicolons
   57                               | FUNC ID '(' . parameter_list ')' semicolons
   58                               | FUNC ID '(' . parameter_list ')' return_type_list semicolons

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 236
    ')'        shift, and go to state 237

    qualified_name       go to state 145
    type_name            go to state 146
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38
    parameter_type_list  go to state 238
    parameter_list       go to state 239


State 236

    3 qualified_name: ID .
   63 parameter_list: ID . type_name

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27

    $default  reduce using rule 3 (qualified_name)

    qualified_name       go to state 145
    type_name            go to state 240
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38


State 237

   53 interface_function_declaration: FUNC ID '(' ')' . semicolons
   54                               | FUNC ID '(' ')' . return_type_list semicolons

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27
    ';'        shift, and go to state 128
    '('        shift, and go to state 196

    semicolons           go to state 241
    qualified_name       go to state 145
    type_name            go to state 197
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38
    return_type_list     go to state 242


State 238

   55 interface_function_declaration: FUNC ID '(' parameter_type_list . ')' semicolons
   56                               | FUNC ID '(' parameter_type_list . ')' return_type_list semicolons
   62 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 199
    ')'  shift, and go to state 243


State 239

   57 interface_function_declaration: FUNC ID '(' parameter_list . ')' semicolons
   58                               | FUNC ID '(' parameter_list . ')' return_type_list semicolons
   64 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 244
    ')'  shift, and go to state 245


State 240

   63 parameter_list: ID type_name .

    $default  reduce using rule 63 (parameter_list)


State 241

    2 semicolons: semicolons . ';'
   53 interface_function_declaration: FUNC ID '(' ')' semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 53 (interface_function_declaration)


State 242

   54 interface_function_declaration: FUNC ID '(' ')' return_type_list . semicolons

    ';'  shift, and go to state 128

    semicolons  go to state 246


State 243

   55 interface_function_declaration: FUNC ID '(' parameter_type_list ')' . semicolons
   56                               | FUNC ID '(' parameter_type_list ')' . return_type_list semicolons

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27
    ';'        shift, and go to state 128
    '('        shift, and go to state 196

    semicolons           go to state 247
    qualified_name       go to state 145
    type_name            go to state 197
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38
    return_type_list     go to state 248


State 244

   64 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 249


State 245

   57 interface_function_declaration: FUNC ID '(' parameter_list ')' . semicolons
   58                               | FUNC ID '(' parameter_list ')' . return_type_list semicolons

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27
    ';'        shift, and go to state 128
    '('        shift, and go to state 196

    semicolons           go to state 250
    qualified_name       go to state 145
    type_name            go to state 197
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38
    return_type_list     go to state 251


State 246

    2 semicolons: semicolons . ';'
   54 interface_function_declaration: FUNC ID '(' ')' return_type_list semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 54 (interface_function_declaration)


State 247

    2 semicolons: semicolons . ';'
   55 interface_function_declaration: FUNC ID '(' parameter_type_list ')' semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 55 (interface_function_declaration)


State 248

   56 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list . semicolons

    ';'  shift, and go to state 128

    semicolons  go to state 252


State 249

   64 parameter_list: parameter_list ',' ID . type_name

    FUNC       shift, and go to state 4
    INTERFACE  shift, and go to state 5
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ID         shift, and go to state 27

    qualified_name       go to state 145
    type_name            go to state 253
    primitive_type       go to state 36
    function_type        go to state 37
    interface_root_type  go to state 38


State 250

    2 semicolons: semicolons . ';'
   57 interface_function_declaration: FUNC ID '(' parameter_list ')' semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 57 (interface_function_declaration)


State 251

   58 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list . semicolons

    ';'  shift, and go to state 128

    semicolons  go to state 254


State 252

    2 semicolons: semicolons . ';'
   56 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 56 (interface_function_declaration)


State 253

   64 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 64 (parameter_list)


State 254

    2 semicolons: semicolons . ';'
   58 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list semicolons .

    ';'  shift, and go to state 190

    $default  reduce using rule 58 (interface_function_declaration)
