Terminals unused in grammar

   ELLIPSIS
   NOT
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   HEX
   OCT
   IFX
   NO_CODE_BLOCK


Grammar

    0 $accept: program $end

    1 semicolons: ';'
    2           | semicolons ';'

    3 qualified_name: ID
    4               | qualified_name '.' ID

    5 type_name_list: type_name
    6               | type_name_list ',' type_name

    7 type_name: primitive_type
    8          | qualified_name
    9          | array_type

   10 primitive_type: UINT8
   11               | UINT16
   12               | UINT32
   13               | UINT64
   14               | INT8
   15               | INT16
   16               | INT32
   17               | INT64
   18               | FLOAT32
   19               | FLOAT64
   20               | BOOL
   21               | STRING
   22               | ANY_TYPE

   23 function_type: FUNC '(' ')'
   24              | FUNC '(' ')' return_type_list
   25              | FUNC '(' parameter_type_list ')'
   26              | FUNC '(' parameter_type_list ')' return_type_list

   27 array_type: '[' INTEGER ']' type_name

   28 field_name: ID

   29 program: package_statement import_statements declarations
   30        | package_statement import_statements
   31        | package_statement declarations
   32        | import_statements declarations
   33        | package_statement
   34        | import_statements
   35        | declarations

   36 package_statement: PACKAGE qualified_name semicolons

   37 import_statements: import_statement
   38                  | import_statements import_statement

   39 import_statement: IMPORT qualified_name semicolons
   40                 | IMPORT qualified_name '.' '*' semicolons

   41 declarations: type_declaration
   42             | declarations type_declaration
   43             | variable_declaration
   44             | declarations variable_declaration
   45             | function_declaration
   46             | declarations function_declaration
   47             | method_declaration
   48             | declarations method_declaration

   49 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   50                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE ID type_name semicolons
   52                 | TYPE ID function_type semicolons

   53 field_declarations: field_declaration
   54                   | field_declarations field_declaration

   55 field_declaration: ID type_name semicolons

   56 interface_function_declarations: interface_function_declaration
   57                                | interface_function_declarations interface_function_declaration

   58 interface_function_declaration: FUNC ID '(' ')' semicolons
   59                               | FUNC ID '(' ')' return_type_list semicolons
   60                               | FUNC ID '(' parameter_type_list ')' semicolons
   61                               | FUNC ID '(' parameter_type_list ')' return_type_list semicolons
   62                               | FUNC ID '(' parameter_list ')' semicolons
   63                               | FUNC ID '(' parameter_list ')' return_type_list semicolons

   64 return_type_list: type_name
   65                 | '(' type_name_list ')'

   66 parameter_type_list: type_name
   67                    | parameter_type_list ',' type_name

   68 parameter_list: ID type_name
   69               | parameter_list ',' ID type_name

   70 function_declaration: FUNC ID '(' ')' code_block
   71                     | FUNC ID '(' ')' return_type_list code_block
   72                     | FUNC ID '(' parameter_list ')' code_block
   73                     | FUNC ID '(' parameter_list ')' return_type_list code_block

   74 anonymous_function_declaration: FUNC '(' ')' code_block
   75                               | FUNC '(' ')' return_type_list code_block
   76                               | FUNC '(' parameter_list ')' code_block
   77                               | FUNC '(' parameter_list ')' return_type_list code_block

   78 method_declaration: FUNC method_name '(' ')' code_block
   79                   | FUNC method_name '(' ')' return_type_list code_block
   80                   | FUNC method_name '(' parameter_list ')' code_block
   81                   | FUNC method_name '(' parameter_list ')' return_type_list code_block

   82 method_name: ID '.' ID

   83 code_block: '{' local_variable_declaration_statements '}'
   84           | '{' '}'

   85 local_variable_declaration_statements: local_variable_declaration_statement
   86                                      | local_variable_declaration_statements local_variable_declaration_statement

   87 local_variable_declaration_statement: variable_declaration
   88                                     | statemnet

   89 statemnet: expression_statement ';'
   90          | selection_statement
   91          | iteration_statemnet
   92          | jump_statement

   93 selection_statement: if_statement
   94                    | switch_statement

   95 if_statement: IF '(' expression ')' code_block
   96             | IF '(' expression ')' code_block ELSE else_statemnet

   97 else_statemnet: if_statement
   98               | code_block

   99 switch_statement: SWITCH '(' expression ')' code_block

  100 iteration_statemnet: WHILE '(' expression ')' code_block
  101                    | DO code_block WHILE '(' expression ')' ';'
  102                    | FOR '(' for_init for_expr for_incr ')' code_block

  103 for_init: expression_statement ';'
  104         | variable_declaration
  105         | ';'

  106 for_expr: expression ';'
  107         | ';'

  108 for_incr: expression_statement

  109 jump_statement: RETURN ';'
  110               | RETURN expression_list ';'

  111 variable_declaration: VAR variable_list variable_type ';'
  112                     | VAR variable_list '=' expression_list ';'
  113                     | VAR variable_list variable_type '=' expression_list ';'

  114 variable_list: ID
  115              | variable_list ',' ID

  116 variable_type: type_name
  117              | function_type

  118 primary_expression: qualified_name
  119                   | just_not_name

  120 just_not_name: TOKEN_THIS
  121              | initializer_expression
  122              | complex_primary

  123 complex_primary: '(' expression ')'
  124                | complex_primary_no_parenthesis

  125 complex_primary_no_parenthesis: literal_name
  126                               | array_access
  127                               | field_access
  128                               | method_call

  129 literal_name: INTEGER
  130             | FLOAT
  131             | STRING_LITERAL
  132             | TOKEN_NULL
  133             | TOKEN_TRUE
  134             | TOKEN_FALSE

  135 array_complex_primary: '(' expression ')'
  136                      | array_access
  137                      | field_access
  138                      | method_call

  139 array_access: qualified_name '[' expression ']'
  140             | array_complex_primary '[' expression ']'

  141 field_access: just_not_name '.' ID

  142 method_call: method_access '(' argument_list ')'
  143            | method_access '(' ')'

  144 method_access: complex_primary_no_parenthesis
  145              | qualified_name

  146 initializer_expression: struct_initializer
  147                       | anonymous_function_declaration

  148 struct_initializer: '{' '}'
  149                   | '{' expression_list '}'
  150                   | '{' field_initializer_list '}'
  151                   | type_name '{' '}'
  152                   | type_name '{' expression_list '}'
  153                   | type_name '{' field_initializer_list '}'

  154 field_initializer_list: field_initializer
  155                       | field_initializer_list ',' field_initializer

  156 field_initializer: field_name ':' expression

  157 postfix_expression: primary_expression
  158                   | real_postfix_expression

  159 real_postfix_expression: postfix_expression INC
  160                        | postfix_expression DEC

  161 argument_list: expression_list

  162 unary_expression: postfix_expression
  163                 | INC unary_expression
  164                 | DEC unary_expression
  165                 | unary_operator unary_expression

  166 unary_operator: '+'
  167               | '-'
  168               | '~'
  169               | '!'

  170 multiplicative_expression: unary_expression
  171                          | multiplicative_expression '*' unary_expression
  172                          | multiplicative_expression '/' unary_expression
  173                          | multiplicative_expression '%' unary_expression

  174 additive_expression: multiplicative_expression
  175                    | additive_expression '+' multiplicative_expression
  176                    | additive_expression '-' multiplicative_expression

  177 shift_expression: additive_expression
  178                 | shift_expression SHIFT_LEFT additive_expression
  179                 | shift_expression SHIFT_RIGHT additive_expression

  180 relational_expression: shift_expression
  181                      | relational_expression '<' shift_expression
  182                      | relational_expression '>' shift_expression
  183                      | relational_expression LE shift_expression
  184                      | relational_expression GE shift_expression

  185 equality_expression: relational_expression
  186                    | equality_expression EQ relational_expression
  187                    | equality_expression NE relational_expression

  188 and_expression: equality_expression
  189               | and_expression '&' equality_expression

  190 exclusive_or_expression: and_expression
  191                        | exclusive_or_expression '^' and_expression

  192 inclusive_or_expression: exclusive_or_expression
  193                        | inclusive_or_expression '|' exclusive_or_expression

  194 logical_and_expression: inclusive_or_expression
  195                       | logical_and_expression AND inclusive_or_expression

  196 logical_or_expression: logical_and_expression
  197                      | logical_or_expression OR logical_and_expression

  198 expression: logical_or_expression

  199 expression_list: expression
  200                | expression_list ',' expression

  201 assignment_expression: assignment_variable_list '=' expression_list
  202                      | assignment_variable compound_assignment_operator expression

  203 assignment_variable_list: assignment_variable
  204                         | assignment_variable_list ',' assignment_variable

  205 assignment_variable: qualified_name
  206                    | array_access
  207                    | field_access

  208 compound_assignment_operator: ADD_ASSIGN
  209                             | SUB_ASSIGN
  210                             | MUL_ASSIGN
  211                             | DIV_ASSIGN
  212                             | MOD_ASSIGN
  213                             | AND_ASSIGN
  214                             | OR_ASSIGN
  215                             | XOR_ASSIGN
  216                             | RIGHT_ASSIGN
  217                             | LEFT_ASSIGN

  218 expression_statement: expression
  219                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 169
'%' (37) 173
'&' (38) 189
'(' (40) 23 24 25 26 58 59 60 61 62 63 65 70 71 72 73 74 75 76 77 78
    79 80 81 95 96 99 100 101 102 123 135 142 143
')' (41) 23 24 25 26 58 59 60 61 62 63 65 70 71 72 73 74 75 76 77 78
    79 80 81 95 96 99 100 101 102 123 135 142 143
'*' (42) 40 171
'+' (43) 166 175
',' (44) 6 67 69 115 155 200 204
'-' (45) 167 176
'.' (46) 4 40 82 141
'/' (47) 172
':' (58) 156
';' (59) 1 2 89 101 103 105 106 107 109 110 111 112 113
'<' (60) 181
'=' (61) 112 113 201
'>' (62) 182
'[' (91) 27 139 140
']' (93) 27 139 140
'^' (94) 191
'{' (123) 49 50 83 84 148 149 150 151 152 153
'|' (124) 193
'}' (125) 49 50 83 84 148 149 150 151 152 153
'~' (126) 168
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 208
SUB_ASSIGN (260) 209
MUL_ASSIGN (261) 210
DIV_ASSIGN (262) 211
MOD_ASSIGN (263) 212
AND_ASSIGN (264) 213
OR_ASSIGN (265) 214
XOR_ASSIGN (266) 215
RIGHT_ASSIGN (267) 216
LEFT_ASSIGN (268) 217
EQ (269) 186
NE (270) 187
GE (271) 184
LE (272) 183
AND (273) 195
OR (274) 197
NOT (275)
SHIFT_LEFT (276) 178
SHIFT_RIGHT (277) 179
INC (278) 159 163
DEC (279) 160 164
TOKEN_THIS (280) 120
IF (281) 95 96
ELSE (282) 96
WHILE (283) 100 101
DO (284) 101
FOR (285) 102
IN (286)
SWITCH (287) 99
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 111 112 113
FUNC (293) 23 24 25 26 58 59 60 61 62 63 70 71 72 73 74 75 76 77 78
    79 80 81
RETURN (294) 109 110
STRUCT (295) 49
INTERFACE (296) 50
TYPE (297) 49 50 51 52
CONST (298)
PACKAGE (299) 36
IMPORT (300) 39 40
INT8 (301) 14
INT16 (302) 15
INT32 (303) 16
INT64 (304) 17
UINT8 (305) 10
UINT16 (306) 11
UINT32 (307) 12
UINT64 (308) 13
FLOAT32 (309) 18
FLOAT64 (310) 19
BOOL (311) 20
STRING (312) 21
ANY_TYPE (313) 22
TOKEN_NULL (314) 132
TOKEN_TRUE (315) 133
TOKEN_FALSE (316) 134
INTEGER (317) 27 129
HEX (318)
OCT (319)
FLOAT (320) 130
STRING_LITERAL (321) 131
ID (322) 3 4 28 49 50 51 52 55 58 59 60 61 62 63 68 69 70 71 72 73
    82 114 115 141
IFX (323)
NO_CODE_BLOCK (324)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
semicolons (94)
    on left: 1 2, on right: 2 36 39 40 51 52 55 58 59 60 61 62 63
qualified_name (95)
    on left: 3 4, on right: 4 8 36 39 40 118 139 145 205
type_name_list (96)
    on left: 5 6, on right: 6 65
type_name (97)
    on left: 7 8 9, on right: 5 6 27 51 55 64 66 67 68 69 116 151 152
    153
primitive_type (98)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22, on right: 7
function_type (99)
    on left: 23 24 25 26, on right: 52 117
array_type (100)
    on left: 27, on right: 9
field_name (101)
    on left: 28, on right: 156
program (102)
    on left: 29 30 31 32 33 34 35, on right: 0
package_statement (103)
    on left: 36, on right: 29 30 31 33
import_statements (104)
    on left: 37 38, on right: 29 30 32 34 38
import_statement (105)
    on left: 39 40, on right: 37 38
declarations (106)
    on left: 41 42 43 44 45 46 47 48, on right: 29 31 32 35 42 44 46
    48
type_declaration (107)
    on left: 49 50 51 52, on right: 41 42
field_declarations (108)
    on left: 53 54, on right: 49 54
field_declaration (109)
    on left: 55, on right: 53 54
interface_function_declarations (110)
    on left: 56 57, on right: 50 57
interface_function_declaration (111)
    on left: 58 59 60 61 62 63, on right: 56 57
return_type_list (112)
    on left: 64 65, on right: 24 26 59 61 63 71 73 75 77 79 81
parameter_type_list (113)
    on left: 66 67, on right: 25 26 60 61 67
parameter_list (114)
    on left: 68 69, on right: 62 63 69 72 73 76 77 80 81
function_declaration (115)
    on left: 70 71 72 73, on right: 45 46
anonymous_function_declaration (116)
    on left: 74 75 76 77, on right: 147
method_declaration (117)
    on left: 78 79 80 81, on right: 47 48
method_name (118)
    on left: 82, on right: 78 79 80 81
code_block (119)
    on left: 83 84, on right: 70 71 72 73 74 75 76 77 78 79 80 81 95
    96 98 99 100 101 102
local_variable_declaration_statements (120)
    on left: 85 86, on right: 83 86
local_variable_declaration_statement (121)
    on left: 87 88, on right: 85 86
statemnet (122)
    on left: 89 90 91 92, on right: 88
selection_statement (123)
    on left: 93 94, on right: 90
if_statement (124)
    on left: 95 96, on right: 93 97
else_statemnet (125)
    on left: 97 98, on right: 96
switch_statement (126)
    on left: 99, on right: 94
iteration_statemnet (127)
    on left: 100 101 102, on right: 91
for_init (128)
    on left: 103 104 105, on right: 102
for_expr (129)
    on left: 106 107, on right: 102
for_incr (130)
    on left: 108, on right: 102
jump_statement (131)
    on left: 109 110, on right: 92
variable_declaration (132)
    on left: 111 112 113, on right: 43 44 87 104
variable_list (133)
    on left: 114 115, on right: 111 112 113 115
variable_type (134)
    on left: 116 117, on right: 111 113
primary_expression (135)
    on left: 118 119, on right: 157
just_not_name (136)
    on left: 120 121 122, on right: 119 141
complex_primary (137)
    on left: 123 124, on right: 122
complex_primary_no_parenthesis (138)
    on left: 125 126 127 128, on right: 124 144
literal_name (139)
    on left: 129 130 131 132 133 134, on right: 125
array_complex_primary (140)
    on left: 135 136 137 138, on right: 140
array_access (141)
    on left: 139 140, on right: 126 136 206
field_access (142)
    on left: 141, on right: 127 137 207
method_call (143)
    on left: 142 143, on right: 128 138
method_access (144)
    on left: 144 145, on right: 142 143
initializer_expression (145)
    on left: 146 147, on right: 121
struct_initializer (146)
    on left: 148 149 150 151 152 153, on right: 146
field_initializer_list (147)
    on left: 154 155, on right: 150 153 155
field_initializer (148)
    on left: 156, on right: 154 155
postfix_expression (149)
    on left: 157 158, on right: 159 160 162
real_postfix_expression (150)
    on left: 159 160, on right: 158
argument_list (151)
    on left: 161, on right: 142
unary_expression (152)
    on left: 162 163 164 165, on right: 163 164 165 170 171 172 173
unary_operator (153)
    on left: 166 167 168 169, on right: 165
multiplicative_expression (154)
    on left: 170 171 172 173, on right: 171 172 173 174 175 176
additive_expression (155)
    on left: 174 175 176, on right: 175 176 177 178 179
shift_expression (156)
    on left: 177 178 179, on right: 178 179 180 181 182 183 184
relational_expression (157)
    on left: 180 181 182 183 184, on right: 181 182 183 184 185 186
    187
equality_expression (158)
    on left: 185 186 187, on right: 186 187 188 189
and_expression (159)
    on left: 188 189, on right: 189 190 191
exclusive_or_expression (160)
    on left: 190 191, on right: 191 192 193
inclusive_or_expression (161)
    on left: 192 193, on right: 193 194 195
logical_and_expression (162)
    on left: 194 195, on right: 195 196 197
logical_or_expression (163)
    on left: 196 197, on right: 197 198
expression (164)
    on left: 198, on right: 95 96 99 100 101 106 123 135 139 140 156
    199 200 202 218
expression_list (165)
    on left: 199 200, on right: 110 112 113 149 152 161 200 201
assignment_expression (166)
    on left: 201 202, on right: 219
assignment_variable_list (167)
    on left: 203 204, on right: 201 204
assignment_variable (168)
    on left: 205 206 207, on right: 202 203 204
compound_assignment_operator (169)
    on left: 208 209 210 211 212 213 214 215 216 217, on right: 202
expression_statement (170)
    on left: 218 219, on right: 89 103 108


State 0

    0 $accept: . program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    PACKAGE  shift, and go to state 4
    IMPORT   shift, and go to state 5

    program               go to state 6
    package_statement     go to state 7
    import_statements     go to state 8
    import_statement      go to state 9
    declarations          go to state 10
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 1

  111 variable_declaration: VAR . variable_list variable_type ';'
  112                     | VAR . variable_list '=' expression_list ';'
  113                     | VAR . variable_list variable_type '=' expression_list ';'

    ID  shift, and go to state 15

    variable_list  go to state 16


State 2

   70 function_declaration: FUNC . ID '(' ')' code_block
   71                     | FUNC . ID '(' ')' return_type_list code_block
   72                     | FUNC . ID '(' parameter_list ')' code_block
   73                     | FUNC . ID '(' parameter_list ')' return_type_list code_block
   78 method_declaration: FUNC . method_name '(' ')' code_block
   79                   | FUNC . method_name '(' ')' return_type_list code_block
   80                   | FUNC . method_name '(' parameter_list ')' code_block
   81                   | FUNC . method_name '(' parameter_list ')' return_type_list code_block

    ID  shift, and go to state 17

    method_name  go to state 18


State 3

   49 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   50                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE . ID type_name semicolons
   52                 | TYPE . ID function_type semicolons

    ID  shift, and go to state 19


State 4

   36 package_statement: PACKAGE . qualified_name semicolons

    ID  shift, and go to state 20

    qualified_name  go to state 21


State 5

   39 import_statement: IMPORT . qualified_name semicolons
   40                 | IMPORT . qualified_name '.' '*' semicolons

    ID  shift, and go to state 20

    qualified_name  go to state 22


State 6

    0 $accept: program . $end

    $end  shift, and go to state 23


State 7

   29 program: package_statement . import_statements declarations
   30        | package_statement . import_statements
   31        | package_statement . declarations
   33        | package_statement .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 33 (program)

    import_statements     go to state 24
    import_statement      go to state 9
    declarations          go to state 25
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 8

   32 program: import_statements . declarations
   34        | import_statements .
   38 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 34 (program)

    import_statement      go to state 26
    declarations          go to state 27
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 9

   37 import_statements: import_statement .

    $default  reduce using rule 37 (import_statements)


State 10

   35 program: declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 35 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 11

   41 declarations: type_declaration .

    $default  reduce using rule 41 (declarations)


State 12

   45 declarations: function_declaration .

    $default  reduce using rule 45 (declarations)


State 13

   47 declarations: method_declaration .

    $default  reduce using rule 47 (declarations)


State 14

   43 declarations: variable_declaration .

    $default  reduce using rule 43 (declarations)


State 15

  114 variable_list: ID .

    $default  reduce using rule 114 (variable_list)


State 16

  111 variable_declaration: VAR variable_list . variable_type ';'
  112                     | VAR variable_list . '=' expression_list ';'
  113                     | VAR variable_list . variable_type '=' expression_list ';'
  115 variable_list: variable_list . ',' ID

    FUNC      shift, and go to state 32
    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    ','       shift, and go to state 46
    '['       shift, and go to state 47
    '='       shift, and go to state 48

    qualified_name  go to state 49
    type_name       go to state 50
    primitive_type  go to state 51
    function_type   go to state 52
    array_type      go to state 53
    variable_type   go to state 54


State 17

   70 function_declaration: FUNC ID . '(' ')' code_block
   71                     | FUNC ID . '(' ')' return_type_list code_block
   72                     | FUNC ID . '(' parameter_list ')' code_block
   73                     | FUNC ID . '(' parameter_list ')' return_type_list code_block
   82 method_name: ID . '.' ID

    '.'  shift, and go to state 55
    '('  shift, and go to state 56


State 18

   78 method_declaration: FUNC method_name . '(' ')' code_block
   79                   | FUNC method_name . '(' ')' return_type_list code_block
   80                   | FUNC method_name . '(' parameter_list ')' code_block
   81                   | FUNC method_name . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 57


State 19

   49 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   50                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE ID . type_name semicolons
   52                 | TYPE ID . function_type semicolons

    FUNC       shift, and go to state 32
    STRUCT     shift, and go to state 58
    INTERFACE  shift, and go to state 59
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ANY_TYPE   shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 60
    primitive_type  go to state 51
    function_type   go to state 61
    array_type      go to state 53


State 20

    3 qualified_name: ID .

    $default  reduce using rule 3 (qualified_name)


State 21

    4 qualified_name: qualified_name . '.' ID
   36 package_statement: PACKAGE qualified_name . semicolons

    ';'  shift, and go to state 62
    '.'  shift, and go to state 63

    semicolons  go to state 64


State 22

    4 qualified_name: qualified_name . '.' ID
   39 import_statement: IMPORT qualified_name . semicolons
   40                 | IMPORT qualified_name . '.' '*' semicolons

    ';'  shift, and go to state 62
    '.'  shift, and go to state 65

    semicolons  go to state 66


State 23

    0 $accept: program $end .

    $default  accept


State 24

   29 program: package_statement import_statements . declarations
   30        | package_statement import_statements .
   38 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 30 (program)

    import_statement      go to state 26
    declarations          go to state 67
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 25

   31 program: package_statement declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 31 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 26

   38 import_statements: import_statements import_statement .

    $default  reduce using rule 38 (import_statements)


State 27

   32 program: import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 32 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 28

   42 declarations: declarations type_declaration .

    $default  reduce using rule 42 (declarations)


State 29

   46 declarations: declarations function_declaration .

    $default  reduce using rule 46 (declarations)


State 30

   48 declarations: declarations method_declaration .

    $default  reduce using rule 48 (declarations)


State 31

   44 declarations: declarations variable_declaration .

    $default  reduce using rule 44 (declarations)


State 32

   23 function_type: FUNC . '(' ')'
   24              | FUNC . '(' ')' return_type_list
   25              | FUNC . '(' parameter_type_list ')'
   26              | FUNC . '(' parameter_type_list ')' return_type_list

    '('  shift, and go to state 68


State 33

   14 primitive_type: INT8 .

    $default  reduce using rule 14 (primitive_type)


State 34

   15 primitive_type: INT16 .

    $default  reduce using rule 15 (primitive_type)


State 35

   16 primitive_type: INT32 .

    $default  reduce using rule 16 (primitive_type)


State 36

   17 primitive_type: INT64 .

    $default  reduce using rule 17 (primitive_type)


State 37

   10 primitive_type: UINT8 .

    $default  reduce using rule 10 (primitive_type)


State 38

   11 primitive_type: UINT16 .

    $default  reduce using rule 11 (primitive_type)


State 39

   12 primitive_type: UINT32 .

    $default  reduce using rule 12 (primitive_type)


State 40

   13 primitive_type: UINT64 .

    $default  reduce using rule 13 (primitive_type)


State 41

   18 primitive_type: FLOAT32 .

    $default  reduce using rule 18 (primitive_type)


State 42

   19 primitive_type: FLOAT64 .

    $default  reduce using rule 19 (primitive_type)


State 43

   20 primitive_type: BOOL .

    $default  reduce using rule 20 (primitive_type)


State 44

   21 primitive_type: STRING .

    $default  reduce using rule 21 (primitive_type)


State 45

   22 primitive_type: ANY_TYPE .

    $default  reduce using rule 22 (primitive_type)


State 46

  115 variable_list: variable_list ',' . ID

    ID  shift, and go to state 69


State 47

   27 array_type: '[' . INTEGER ']' type_name

    INTEGER  shift, and go to state 70


State 48

  112 variable_declaration: VAR variable_list '=' . expression_list ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 117


State 49

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .

    '.'  shift, and go to state 63

    $default  reduce using rule 8 (type_name)


State 50

  116 variable_type: type_name .

    $default  reduce using rule 116 (variable_type)


State 51

    7 type_name: primitive_type .

    $default  reduce using rule 7 (type_name)


State 52

  117 variable_type: function_type .

    $default  reduce using rule 117 (variable_type)


State 53

    9 type_name: array_type .

    $default  reduce using rule 9 (type_name)


State 54

  111 variable_declaration: VAR variable_list variable_type . ';'
  113                     | VAR variable_list variable_type . '=' expression_list ';'

    ';'  shift, and go to state 118
    '='  shift, and go to state 119


State 55

   82 method_name: ID '.' . ID

    ID  shift, and go to state 120


State 56

   70 function_declaration: FUNC ID '(' . ')' code_block
   71                     | FUNC ID '(' . ')' return_type_list code_block
   72                     | FUNC ID '(' . parameter_list ')' code_block
   73                     | FUNC ID '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 121
    ')'  shift, and go to state 122

    parameter_list  go to state 123


State 57

   78 method_declaration: FUNC method_name '(' . ')' code_block
   79                   | FUNC method_name '(' . ')' return_type_list code_block
   80                   | FUNC method_name '(' . parameter_list ')' code_block
   81                   | FUNC method_name '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 121
    ')'  shift, and go to state 124

    parameter_list  go to state 125


State 58

   49 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 126


State 59

   50 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 127


State 60

   51 type_declaration: TYPE ID type_name . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 128


State 61

   52 type_declaration: TYPE ID function_type . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 129


State 62

    1 semicolons: ';' .

    $default  reduce using rule 1 (semicolons)


State 63

    4 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 130


State 64

    2 semicolons: semicolons . ';'
   36 package_statement: PACKAGE qualified_name semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 36 (package_statement)


State 65

    4 qualified_name: qualified_name '.' . ID
   40 import_statement: IMPORT qualified_name '.' . '*' semicolons

    ID   shift, and go to state 130
    '*'  shift, and go to state 132


State 66

    2 semicolons: semicolons . ';'
   39 import_statement: IMPORT qualified_name semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 39 (import_statement)


State 67

   29 program: package_statement import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 29 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 68

   23 function_type: FUNC '(' . ')'
   24              | FUNC '(' . ')' return_type_list
   25              | FUNC '(' . parameter_type_list ')'
   26              | FUNC '(' . parameter_type_list ')' return_type_list

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    ')'       shift, and go to state 133
    '['       shift, and go to state 47

    qualified_name       go to state 49
    type_name            go to state 134
    primitive_type       go to state 51
    array_type           go to state 53
    parameter_type_list  go to state 135


State 69

  115 variable_list: variable_list ',' ID .

    $default  reduce using rule 115 (variable_list)


State 70

   27 array_type: '[' INTEGER . ']' type_name

    ']'  shift, and go to state 136


State 71

  163 unary_expression: INC . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 137
    unary_operator                  go to state 105


State 72

  164 unary_expression: DEC . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 138
    unary_operator                  go to state 105


State 73

  120 just_not_name: TOKEN_THIS .

    $default  reduce using rule 120 (just_not_name)


State 74

   74 anonymous_function_declaration: FUNC . '(' ')' code_block
   75                               | FUNC . '(' ')' return_type_list code_block
   76                               | FUNC . '(' parameter_list ')' code_block
   77                               | FUNC . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 139


State 75

  132 literal_name: TOKEN_NULL .

    $default  reduce using rule 132 (literal_name)


State 76

  133 literal_name: TOKEN_TRUE .

    $default  reduce using rule 133 (literal_name)


State 77

  134 literal_name: TOKEN_FALSE .

    $default  reduce using rule 134 (literal_name)


State 78

  129 literal_name: INTEGER .

    $default  reduce using rule 129 (literal_name)


State 79

  130 literal_name: FLOAT .

    $default  reduce using rule 130 (literal_name)


State 80

  131 literal_name: STRING_LITERAL .

    $default  reduce using rule 131 (literal_name)


State 81

  123 complex_primary: '(' . expression ')'
  135 array_complex_primary: '(' . expression ')'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 140


State 82

  148 struct_initializer: '{' . '}'
  149                   | '{' . expression_list '}'
  150                   | '{' . field_initializer_list '}'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 141
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '}'             shift, and go to state 142
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    field_name                      go to state 143
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    field_initializer_list          go to state 144
    field_initializer               go to state 145
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 146


State 83

  166 unary_operator: '+' .

    $default  reduce using rule 166 (unary_operator)


State 84

  167 unary_operator: '-' .

    $default  reduce using rule 167 (unary_operator)


State 85

  168 unary_operator: '~' .

    $default  reduce using rule 168 (unary_operator)


State 86

  169 unary_operator: '!' .

    $default  reduce using rule 169 (unary_operator)


State 87

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
  118 primary_expression: qualified_name .
  139 array_access: qualified_name . '[' expression ']'
  145 method_access: qualified_name .

    '.'  shift, and go to state 63
    '['  shift, and go to state 147

    '('       reduce using rule 145 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 118 (primary_expression)


State 88

  151 struct_initializer: type_name . '{' '}'
  152                   | type_name . '{' expression_list '}'
  153                   | type_name . '{' field_initializer_list '}'

    '{'  shift, and go to state 148


State 89

  147 initializer_expression: anonymous_function_declaration .

    $default  reduce using rule 147 (initializer_expression)


State 90

  157 postfix_expression: primary_expression .

    $default  reduce using rule 157 (postfix_expression)


State 91

  119 primary_expression: just_not_name .
  141 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 149

    $default  reduce using rule 119 (primary_expression)


State 92

  122 just_not_name: complex_primary .

    $default  reduce using rule 122 (just_not_name)


State 93

  124 complex_primary: complex_primary_no_parenthesis .
  144 method_access: complex_primary_no_parenthesis .

    '('       reduce using rule 144 (method_access)
    $default  reduce using rule 124 (complex_primary)


State 94

  125 complex_primary_no_parenthesis: literal_name .

    $default  reduce using rule 125 (complex_primary_no_parenthesis)


State 95

  140 array_access: array_complex_primary . '[' expression ']'

    '['  shift, and go to state 150


State 96

  126 complex_primary_no_parenthesis: array_access .
  136 array_complex_primary: array_access .

    '['       reduce using rule 136 (array_complex_primary)
    $default  reduce using rule 126 (complex_primary_no_parenthesis)


State 97

  127 complex_primary_no_parenthesis: field_access .
  137 array_complex_primary: field_access .

    '['       reduce using rule 137 (array_complex_primary)
    $default  reduce using rule 127 (complex_primary_no_parenthesis)


State 98

  128 complex_primary_no_parenthesis: method_call .
  138 array_complex_primary: method_call .

    '['       reduce using rule 138 (array_complex_primary)
    $default  reduce using rule 128 (complex_primary_no_parenthesis)


State 99

  142 method_call: method_access . '(' argument_list ')'
  143            | method_access . '(' ')'

    '('  shift, and go to state 151


State 100

  121 just_not_name: initializer_expression .

    $default  reduce using rule 121 (just_not_name)


State 101

  146 initializer_expression: struct_initializer .

    $default  reduce using rule 146 (initializer_expression)


State 102

  159 real_postfix_expression: postfix_expression . INC
  160                        | postfix_expression . DEC
  162 unary_expression: postfix_expression .

    INC  shift, and go to state 152
    DEC  shift, and go to state 153

    $default  reduce using rule 162 (unary_expression)


State 103

  158 postfix_expression: real_postfix_expression .

    $default  reduce using rule 158 (postfix_expression)


State 104

  170 multiplicative_expression: unary_expression .

    $default  reduce using rule 170 (multiplicative_expression)


State 105

  165 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 154
    unary_operator                  go to state 105


State 106

  171 multiplicative_expression: multiplicative_expression . '*' unary_expression
  172                          | multiplicative_expression . '/' unary_expression
  173                          | multiplicative_expression . '%' unary_expression
  174 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 174 (additive_expression)


State 107

  175 additive_expression: additive_expression . '+' multiplicative_expression
  176                    | additive_expression . '-' multiplicative_expression
  177 shift_expression: additive_expression .

    '+'  shift, and go to state 158
    '-'  shift, and go to state 159

    $default  reduce using rule 177 (shift_expression)


State 108

  178 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  179                 | shift_expression . SHIFT_RIGHT additive_expression
  180 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 160
    SHIFT_RIGHT  shift, and go to state 161

    $default  reduce using rule 180 (relational_expression)


State 109

  181 relational_expression: relational_expression . '<' shift_expression
  182                      | relational_expression . '>' shift_expression
  183                      | relational_expression . LE shift_expression
  184                      | relational_expression . GE shift_expression
  185 equality_expression: relational_expression .

    GE   shift, and go to state 162
    LE   shift, and go to state 163
    '<'  shift, and go to state 164
    '>'  shift, and go to state 165

    $default  reduce using rule 185 (equality_expression)


State 110

  186 equality_expression: equality_expression . EQ relational_expression
  187                    | equality_expression . NE relational_expression
  188 and_expression: equality_expression .

    EQ  shift, and go to state 166
    NE  shift, and go to state 167

    $default  reduce using rule 188 (and_expression)


State 111

  189 and_expression: and_expression . '&' equality_expression
  190 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 168

    $default  reduce using rule 190 (exclusive_or_expression)


State 112

  191 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  192 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 169

    $default  reduce using rule 192 (inclusive_or_expression)


State 113

  193 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  194 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 170

    $default  reduce using rule 194 (logical_and_expression)


State 114

  195 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  196 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 171

    $default  reduce using rule 196 (logical_or_expression)


State 115

  197 logical_or_expression: logical_or_expression . OR logical_and_expression
  198 expression: logical_or_expression .

    OR  shift, and go to state 172

    $default  reduce using rule 198 (expression)


State 116

  199 expression_list: expression .

    $default  reduce using rule 199 (expression_list)


State 117

  112 variable_declaration: VAR variable_list '=' expression_list . ';'
  200 expression_list: expression_list . ',' expression

    ';'  shift, and go to state 173
    ','  shift, and go to state 174


State 118

  111 variable_declaration: VAR variable_list variable_type ';' .

    $default  reduce using rule 111 (variable_declaration)


State 119

  113 variable_declaration: VAR variable_list variable_type '=' . expression_list ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 175


State 120

   82 method_name: ID '.' ID .

    $default  reduce using rule 82 (method_name)


State 121

   68 parameter_list: ID . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 176
    primitive_type  go to state 51
    array_type      go to state 53


State 122

   70 function_declaration: FUNC ID '(' ')' . code_block
   71                     | FUNC ID '(' ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 177
    '['       shift, and go to state 47
    '{'       shift, and go to state 178

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 180
    code_block        go to state 181


State 123

   69 parameter_list: parameter_list . ',' ID type_name
   72 function_declaration: FUNC ID '(' parameter_list . ')' code_block
   73                     | FUNC ID '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 182
    ')'  shift, and go to state 183


State 124

   78 method_declaration: FUNC method_name '(' ')' . code_block
   79                   | FUNC method_name '(' ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 177
    '['       shift, and go to state 47
    '{'       shift, and go to state 178

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 184
    code_block        go to state 185


State 125

   69 parameter_list: parameter_list . ',' ID type_name
   80 method_declaration: FUNC method_name '(' parameter_list . ')' code_block
   81                   | FUNC method_name '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 182
    ')'  shift, and go to state 186


State 126

   49 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 187

    field_declarations  go to state 188
    field_declaration   go to state 189


State 127

   50 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    FUNC  shift, and go to state 190

    interface_function_declarations  go to state 191
    interface_function_declaration   go to state 192


State 128

    2 semicolons: semicolons . ';'
   51 type_declaration: TYPE ID type_name semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 51 (type_declaration)


State 129

    2 semicolons: semicolons . ';'
   52 type_declaration: TYPE ID function_type semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 52 (type_declaration)


State 130

    4 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 4 (qualified_name)


State 131

    2 semicolons: semicolons ';' .

    $default  reduce using rule 2 (semicolons)


State 132

   40 import_statement: IMPORT qualified_name '.' '*' . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 193


State 133

   23 function_type: FUNC '(' ')' .
   24              | FUNC '(' ')' . return_type_list

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 177
    '['       shift, and go to state 47

    $default  reduce using rule 23 (function_type)

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 194


State 134

   66 parameter_type_list: type_name .

    $default  reduce using rule 66 (parameter_type_list)


State 135

   25 function_type: FUNC '(' parameter_type_list . ')'
   26              | FUNC '(' parameter_type_list . ')' return_type_list
   67 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 195
    ')'  shift, and go to state 196


State 136

   27 array_type: '[' INTEGER ']' . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 197
    primitive_type  go to state 51
    array_type      go to state 53


State 137

  163 unary_expression: INC unary_expression .

    $default  reduce using rule 163 (unary_expression)


State 138

  164 unary_expression: DEC unary_expression .

    $default  reduce using rule 164 (unary_expression)


State 139

   74 anonymous_function_declaration: FUNC '(' . ')' code_block
   75                               | FUNC '(' . ')' return_type_list code_block
   76                               | FUNC '(' . parameter_list ')' code_block
   77                               | FUNC '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 121
    ')'  shift, and go to state 198

    parameter_list  go to state 199


State 140

  123 complex_primary: '(' expression . ')'
  135 array_complex_primary: '(' expression . ')'

    ')'  shift, and go to state 200


State 141

    3 qualified_name: ID .
   28 field_name: ID .

    ':'       reduce using rule 28 (field_name)
    $default  reduce using rule 3 (qualified_name)


State 142

  148 struct_initializer: '{' '}' .

    $default  reduce using rule 148 (struct_initializer)


State 143

  156 field_initializer: field_name . ':' expression

    ':'  shift, and go to state 201


State 144

  150 struct_initializer: '{' field_initializer_list . '}'
  155 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 202
    '}'  shift, and go to state 203


State 145

  154 field_initializer_list: field_initializer .

    $default  reduce using rule 154 (field_initializer_list)


State 146

  149 struct_initializer: '{' expression_list . '}'
  200 expression_list: expression_list . ',' expression

    ','  shift, and go to state 174
    '}'  shift, and go to state 204


State 147

  139 array_access: qualified_name '[' . expression ']'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 205


State 148

  151 struct_initializer: type_name '{' . '}'
  152                   | type_name '{' . expression_list '}'
  153                   | type_name '{' . field_initializer_list '}'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 141
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '}'             shift, and go to state 206
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    field_name                      go to state 143
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    field_initializer_list          go to state 207
    field_initializer               go to state 145
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 208


State 149

  141 field_access: just_not_name '.' . ID

    ID  shift, and go to state 209


State 150

  140 array_access: array_complex_primary '[' . expression ']'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 210


State 151

  142 method_call: method_access '(' . argument_list ')'
  143            | method_access '(' . ')'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    ')'             shift, and go to state 211
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    argument_list                   go to state 212
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 213


State 152

  159 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 159 (real_postfix_expression)


State 153

  160 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 160 (real_postfix_expression)


State 154

  165 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 165 (unary_expression)


State 155

  171 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 214
    unary_operator                  go to state 105


State 156

  172 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 215
    unary_operator                  go to state 105


State 157

  173 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 216
    unary_operator                  go to state 105


State 158

  175 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 217


State 159

  176 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 218


State 160

  178 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 219


State 161

  179 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 220


State 162

  184 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 221


State 163

  183 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 222


State 164

  181 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 223


State 165

  182 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 224


State 166

  186 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 225


State 167

  187 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 226


State 168

  189 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 227


State 169

  191 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 228


State 170

  193 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 229


State 171

  195 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 230


State 172

  197 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 231


State 173

  112 variable_declaration: VAR variable_list '=' expression_list ';' .

    $default  reduce using rule 112 (variable_declaration)


State 174

  200 expression_list: expression_list ',' . expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 232


State 175

  113 variable_declaration: VAR variable_list variable_type '=' expression_list . ';'
  200 expression_list: expression_list . ',' expression

    ';'  shift, and go to state 233
    ','  shift, and go to state 174


State 176

   68 parameter_list: ID type_name .

    $default  reduce using rule 68 (parameter_list)


State 177

   65 return_type_list: '(' . type_name_list ')'

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name_list  go to state 234
    type_name       go to state 235
    primitive_type  go to state 51
    array_type      go to state 53


State 178

   83 code_block: '{' . local_variable_declaration_statements '}'
   84           | '{' . '}'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    IF              shift, and go to state 236
    WHILE           shift, and go to state 237
    DO              shift, and go to state 238
    FOR             shift, and go to state 239
    SWITCH          shift, and go to state 240
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 74
    RETURN          shift, and go to state 241
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '}'             shift, and go to state 242
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                         go to state 243
    type_name                              go to state 88
    primitive_type                         go to state 51
    array_type                             go to state 53
    anonymous_function_declaration         go to state 89
    local_variable_declaration_statements  go to state 244
    local_variable_declaration_statement   go to state 245
    statemnet                              go to state 246
    selection_statement                    go to state 247
    if_statement                           go to state 248
    switch_statement                       go to state 249
    iteration_statemnet                    go to state 250
    jump_statement                         go to state 251
    variable_declaration                   go to state 252
    primary_expression                     go to state 90
    just_not_name                          go to state 91
    complex_primary                        go to state 92
    complex_primary_no_parenthesis         go to state 93
    literal_name                           go to state 94
    array_complex_primary                  go to state 95
    array_access                           go to state 253
    field_access                           go to state 254
    method_call                            go to state 98
    method_access                          go to state 99
    initializer_expression                 go to state 100
    struct_initializer                     go to state 101
    postfix_expression                     go to state 102
    real_postfix_expression                go to state 103
    unary_expression                       go to state 104
    unary_operator                         go to state 105
    multiplicative_expression              go to state 106
    additive_expression                    go to state 107
    shift_expression                       go to state 108
    relational_expression                  go to state 109
    equality_expression                    go to state 110
    and_expression                         go to state 111
    exclusive_or_expression                go to state 112
    inclusive_or_expression                go to state 113
    logical_and_expression                 go to state 114
    logical_or_expression                  go to state 115
    expression                             go to state 255
    assignment_expression                  go to state 256
    assignment_variable_list               go to state 257
    assignment_variable                    go to state 258
    expression_statement                   go to state 259


State 179

   64 return_type_list: type_name .

    $default  reduce using rule 64 (return_type_list)


State 180

   71 function_declaration: FUNC ID '(' ')' return_type_list . code_block

    '{'  shift, and go to state 178

    code_block  go to state 260


State 181

   70 function_declaration: FUNC ID '(' ')' code_block .

    $default  reduce using rule 70 (function_declaration)


State 182

   69 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 261


State 183

   72 function_declaration: FUNC ID '(' parameter_list ')' . code_block
   73                     | FUNC ID '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 177
    '['       shift, and go to state 47
    '{'       shift, and go to state 178

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 262
    code_block        go to state 263


State 184

   79 method_declaration: FUNC method_name '(' ')' return_type_list . code_block

    '{'  shift, and go to state 178

    code_block  go to state 264


State 185

   78 method_declaration: FUNC method_name '(' ')' code_block .

    $default  reduce using rule 78 (method_declaration)


State 186

   80 method_declaration: FUNC method_name '(' parameter_list ')' . code_block
   81                   | FUNC method_name '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 177
    '['       shift, and go to state 47
    '{'       shift, and go to state 178

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 265
    code_block        go to state 266


State 187

   55 field_declaration: ID . type_name semicolons

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 267
    primitive_type  go to state 51
    array_type      go to state 53


State 188

   49 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   54 field_declarations: field_declarations . field_declaration

    ID   shift, and go to state 187
    '}'  shift, and go to state 268

    field_declaration  go to state 269


State 189

   53 field_declarations: field_declaration .

    $default  reduce using rule 53 (field_declarations)


State 190

   58 interface_function_declaration: FUNC . ID '(' ')' semicolons
   59                               | FUNC . ID '(' ')' return_type_list semicolons
   60                               | FUNC . ID '(' parameter_type_list ')' semicolons
   61                               | FUNC . ID '(' parameter_type_list ')' return_type_list semicolons
   62                               | FUNC . ID '(' parameter_list ')' semicolons
   63                               | FUNC . ID '(' parameter_list ')' return_type_list semicolons

    ID  shift, and go to state 270


State 191

   50 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   57 interface_function_declarations: interface_function_declarations . interface_function_declaration

    FUNC  shift, and go to state 190
    '}'   shift, and go to state 271

    interface_function_declaration  go to state 272


State 192

   56 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 56 (interface_function_declarations)


State 193

    2 semicolons: semicolons . ';'
   40 import_statement: IMPORT qualified_name '.' '*' semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 40 (import_statement)


State 194

   24 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 24 (function_type)


State 195

   67 parameter_type_list: parameter_type_list ',' . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 273
    primitive_type  go to state 51
    array_type      go to state 53


State 196

   25 function_type: FUNC '(' parameter_type_list ')' .
   26              | FUNC '(' parameter_type_list ')' . return_type_list

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 177
    '['       shift, and go to state 47

    $default  reduce using rule 25 (function_type)

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 274


State 197

   27 array_type: '[' INTEGER ']' type_name .

    $default  reduce using rule 27 (array_type)


State 198

   74 anonymous_function_declaration: FUNC '(' ')' . code_block
   75                               | FUNC '(' ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 177
    '['       shift, and go to state 47
    '{'       shift, and go to state 178

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 275
    code_block        go to state 276


State 199

   69 parameter_list: parameter_list . ',' ID type_name
   76 anonymous_function_declaration: FUNC '(' parameter_list . ')' code_block
   77                               | FUNC '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 182
    ')'  shift, and go to state 277


State 200

  123 complex_primary: '(' expression ')' .
  135 array_complex_primary: '(' expression ')' .

    '['       reduce using rule 135 (array_complex_primary)
    $default  reduce using rule 123 (complex_primary)


State 201

  156 field_initializer: field_name ':' . expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 278


State 202

  155 field_initializer_list: field_initializer_list ',' . field_initializer

    ID  shift, and go to state 279

    field_name         go to state 143
    field_initializer  go to state 280


State 203

  150 struct_initializer: '{' field_initializer_list '}' .

    $default  reduce using rule 150 (struct_initializer)


State 204

  149 struct_initializer: '{' expression_list '}' .

    $default  reduce using rule 149 (struct_initializer)


State 205

  139 array_access: qualified_name '[' expression . ']'

    ']'  shift, and go to state 281


State 206

  151 struct_initializer: type_name '{' '}' .

    $default  reduce using rule 151 (struct_initializer)


State 207

  153 struct_initializer: type_name '{' field_initializer_list . '}'
  155 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 202
    '}'  shift, and go to state 282


State 208

  152 struct_initializer: type_name '{' expression_list . '}'
  200 expression_list: expression_list . ',' expression

    ','  shift, and go to state 174
    '}'  shift, and go to state 283


State 209

  141 field_access: just_not_name '.' ID .

    $default  reduce using rule 141 (field_access)


State 210

  140 array_access: array_complex_primary '[' expression . ']'

    ']'  shift, and go to state 284


State 211

  143 method_call: method_access '(' ')' .

    $default  reduce using rule 143 (method_call)


State 212

  142 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 285


State 213

  161 argument_list: expression_list .
  200 expression_list: expression_list . ',' expression

    ','  shift, and go to state 174

    $default  reduce using rule 161 (argument_list)


State 214

  171 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 171 (multiplicative_expression)


State 215

  172 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 172 (multiplicative_expression)


State 216

  173 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 173 (multiplicative_expression)


State 217

  171 multiplicative_expression: multiplicative_expression . '*' unary_expression
  172                          | multiplicative_expression . '/' unary_expression
  173                          | multiplicative_expression . '%' unary_expression
  175 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 175 (additive_expression)


State 218

  171 multiplicative_expression: multiplicative_expression . '*' unary_expression
  172                          | multiplicative_expression . '/' unary_expression
  173                          | multiplicative_expression . '%' unary_expression
  176 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 155
    '/'  shift, and go to state 156
    '%'  shift, and go to state 157

    $default  reduce using rule 176 (additive_expression)


State 219

  175 additive_expression: additive_expression . '+' multiplicative_expression
  176                    | additive_expression . '-' multiplicative_expression
  178 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 158
    '-'  shift, and go to state 159

    $default  reduce using rule 178 (shift_expression)


State 220

  175 additive_expression: additive_expression . '+' multiplicative_expression
  176                    | additive_expression . '-' multiplicative_expression
  179 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 158
    '-'  shift, and go to state 159

    $default  reduce using rule 179 (shift_expression)


State 221

  178 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  179                 | shift_expression . SHIFT_RIGHT additive_expression
  184 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 160
    SHIFT_RIGHT  shift, and go to state 161

    $default  reduce using rule 184 (relational_expression)


State 222

  178 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  179                 | shift_expression . SHIFT_RIGHT additive_expression
  183 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 160
    SHIFT_RIGHT  shift, and go to state 161

    $default  reduce using rule 183 (relational_expression)


State 223

  178 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  179                 | shift_expression . SHIFT_RIGHT additive_expression
  181 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 160
    SHIFT_RIGHT  shift, and go to state 161

    $default  reduce using rule 181 (relational_expression)


State 224

  178 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  179                 | shift_expression . SHIFT_RIGHT additive_expression
  182 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 160
    SHIFT_RIGHT  shift, and go to state 161

    $default  reduce using rule 182 (relational_expression)


State 225

  181 relational_expression: relational_expression . '<' shift_expression
  182                      | relational_expression . '>' shift_expression
  183                      | relational_expression . LE shift_expression
  184                      | relational_expression . GE shift_expression
  186 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 162
    LE   shift, and go to state 163
    '<'  shift, and go to state 164
    '>'  shift, and go to state 165

    $default  reduce using rule 186 (equality_expression)


State 226

  181 relational_expression: relational_expression . '<' shift_expression
  182                      | relational_expression . '>' shift_expression
  183                      | relational_expression . LE shift_expression
  184                      | relational_expression . GE shift_expression
  187 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 162
    LE   shift, and go to state 163
    '<'  shift, and go to state 164
    '>'  shift, and go to state 165

    $default  reduce using rule 187 (equality_expression)


State 227

  186 equality_expression: equality_expression . EQ relational_expression
  187                    | equality_expression . NE relational_expression
  189 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 166
    NE  shift, and go to state 167

    $default  reduce using rule 189 (and_expression)


State 228

  189 and_expression: and_expression . '&' equality_expression
  191 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 168

    $default  reduce using rule 191 (exclusive_or_expression)


State 229

  191 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  193 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 169

    $default  reduce using rule 193 (inclusive_or_expression)


State 230

  193 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  195 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 170

    $default  reduce using rule 195 (logical_and_expression)


State 231

  195 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  197 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 171

    $default  reduce using rule 197 (logical_or_expression)


State 232

  200 expression_list: expression_list ',' expression .

    $default  reduce using rule 200 (expression_list)


State 233

  113 variable_declaration: VAR variable_list variable_type '=' expression_list ';' .

    $default  reduce using rule 113 (variable_declaration)


State 234

    6 type_name_list: type_name_list . ',' type_name
   65 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 286
    ')'  shift, and go to state 287


State 235

    5 type_name_list: type_name .

    $default  reduce using rule 5 (type_name_list)


State 236

   95 if_statement: IF . '(' expression ')' code_block
   96             | IF . '(' expression ')' code_block ELSE else_statemnet

    '('  shift, and go to state 288


State 237

  100 iteration_statemnet: WHILE . '(' expression ')' code_block

    '('  shift, and go to state 289


State 238

  101 iteration_statemnet: DO . code_block WHILE '(' expression ')' ';'

    '{'  shift, and go to state 178

    code_block  go to state 290


State 239

  102 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' code_block

    '('  shift, and go to state 291


State 240

   99 switch_statement: SWITCH . '(' expression ')' code_block

    '('  shift, and go to state 292


State 241

  109 jump_statement: RETURN . ';'
  110               | RETURN . expression_list ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    ';'             shift, and go to state 293
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 294


State 242

   84 code_block: '{' '}' .

    $default  reduce using rule 84 (code_block)


State 243

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
  118 primary_expression: qualified_name .
  139 array_access: qualified_name . '[' expression ']'
  145 method_access: qualified_name .
  205 assignment_variable: qualified_name .

    '.'  shift, and go to state 63
    '['  shift, and go to state 147

    ADD_ASSIGN    reduce using rule 205 (assignment_variable)
    SUB_ASSIGN    reduce using rule 205 (assignment_variable)
    MUL_ASSIGN    reduce using rule 205 (assignment_variable)
    DIV_ASSIGN    reduce using rule 205 (assignment_variable)
    MOD_ASSIGN    reduce using rule 205 (assignment_variable)
    AND_ASSIGN    reduce using rule 205 (assignment_variable)
    OR_ASSIGN     reduce using rule 205 (assignment_variable)
    XOR_ASSIGN    reduce using rule 205 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 205 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 205 (assignment_variable)
    ','           reduce using rule 205 (assignment_variable)
    '('           reduce using rule 145 (method_access)
    '{'           reduce using rule 8 (type_name)
    '='           reduce using rule 205 (assignment_variable)
    $default      reduce using rule 118 (primary_expression)


State 244

   83 code_block: '{' local_variable_declaration_statements . '}'
   86 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    IF              shift, and go to state 236
    WHILE           shift, and go to state 237
    DO              shift, and go to state 238
    FOR             shift, and go to state 239
    SWITCH          shift, and go to state 240
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 74
    RETURN          shift, and go to state 241
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '}'             shift, and go to state 295
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                        go to state 243
    type_name                             go to state 88
    primitive_type                        go to state 51
    array_type                            go to state 53
    anonymous_function_declaration        go to state 89
    local_variable_declaration_statement  go to state 296
    statemnet                             go to state 246
    selection_statement                   go to state 247
    if_statement                          go to state 248
    switch_statement                      go to state 249
    iteration_statemnet                   go to state 250
    jump_statement                        go to state 251
    variable_declaration                  go to state 252
    primary_expression                    go to state 90
    just_not_name                         go to state 91
    complex_primary                       go to state 92
    complex_primary_no_parenthesis        go to state 93
    literal_name                          go to state 94
    array_complex_primary                 go to state 95
    array_access                          go to state 253
    field_access                          go to state 254
    method_call                           go to state 98
    method_access                         go to state 99
    initializer_expression                go to state 100
    struct_initializer                    go to state 101
    postfix_expression                    go to state 102
    real_postfix_expression               go to state 103
    unary_expression                      go to state 104
    unary_operator                        go to state 105
    multiplicative_expression             go to state 106
    additive_expression                   go to state 107
    shift_expression                      go to state 108
    relational_expression                 go to state 109
    equality_expression                   go to state 110
    and_expression                        go to state 111
    exclusive_or_expression               go to state 112
    inclusive_or_expression               go to state 113
    logical_and_expression                go to state 114
    logical_or_expression                 go to state 115
    expression                            go to state 255
    assignment_expression                 go to state 256
    assignment_variable_list              go to state 257
    assignment_variable                   go to state 258
    expression_statement                  go to state 259


State 245

   85 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 85 (local_variable_declaration_statements)


State 246

   88 local_variable_declaration_statement: statemnet .

    $default  reduce using rule 88 (local_variable_declaration_statement)


State 247

   90 statemnet: selection_statement .

    $default  reduce using rule 90 (statemnet)


State 248

   93 selection_statement: if_statement .

    $default  reduce using rule 93 (selection_statement)


State 249

   94 selection_statement: switch_statement .

    $default  reduce using rule 94 (selection_statement)


State 250

   91 statemnet: iteration_statemnet .

    $default  reduce using rule 91 (statemnet)


State 251

   92 statemnet: jump_statement .

    $default  reduce using rule 92 (statemnet)


State 252

   87 local_variable_declaration_statement: variable_declaration .

    $default  reduce using rule 87 (local_variable_declaration_statement)


State 253

  126 complex_primary_no_parenthesis: array_access .
  136 array_complex_primary: array_access .
  206 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 206 (assignment_variable)
    SUB_ASSIGN    reduce using rule 206 (assignment_variable)
    MUL_ASSIGN    reduce using rule 206 (assignment_variable)
    DIV_ASSIGN    reduce using rule 206 (assignment_variable)
    MOD_ASSIGN    reduce using rule 206 (assignment_variable)
    AND_ASSIGN    reduce using rule 206 (assignment_variable)
    OR_ASSIGN     reduce using rule 206 (assignment_variable)
    XOR_ASSIGN    reduce using rule 206 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 206 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 206 (assignment_variable)
    ','           reduce using rule 206 (assignment_variable)
    '['           reduce using rule 136 (array_complex_primary)
    '='           reduce using rule 206 (assignment_variable)
    $default      reduce using rule 126 (complex_primary_no_parenthesis)


State 254

  127 complex_primary_no_parenthesis: field_access .
  137 array_complex_primary: field_access .
  207 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 207 (assignment_variable)
    SUB_ASSIGN    reduce using rule 207 (assignment_variable)
    MUL_ASSIGN    reduce using rule 207 (assignment_variable)
    DIV_ASSIGN    reduce using rule 207 (assignment_variable)
    MOD_ASSIGN    reduce using rule 207 (assignment_variable)
    AND_ASSIGN    reduce using rule 207 (assignment_variable)
    OR_ASSIGN     reduce using rule 207 (assignment_variable)
    XOR_ASSIGN    reduce using rule 207 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 207 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 207 (assignment_variable)
    ','           reduce using rule 207 (assignment_variable)
    '['           reduce using rule 137 (array_complex_primary)
    '='           reduce using rule 207 (assignment_variable)
    $default      reduce using rule 127 (complex_primary_no_parenthesis)


State 255

  218 expression_statement: expression .

    $default  reduce using rule 218 (expression_statement)


State 256

  219 expression_statement: assignment_expression .

    $default  reduce using rule 219 (expression_statement)


State 257

  201 assignment_expression: assignment_variable_list . '=' expression_list
  204 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 297
    '='  shift, and go to state 298


State 258

  202 assignment_expression: assignment_variable . compound_assignment_operator expression
  203 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 299
    SUB_ASSIGN    shift, and go to state 300
    MUL_ASSIGN    shift, and go to state 301
    DIV_ASSIGN    shift, and go to state 302
    MOD_ASSIGN    shift, and go to state 303
    AND_ASSIGN    shift, and go to state 304
    OR_ASSIGN     shift, and go to state 305
    XOR_ASSIGN    shift, and go to state 306
    RIGHT_ASSIGN  shift, and go to state 307
    LEFT_ASSIGN   shift, and go to state 308

    $default  reduce using rule 203 (assignment_variable_list)

    compound_assignment_operator  go to state 309


State 259

   89 statemnet: expression_statement . ';'

    ';'  shift, and go to state 310


State 260

   71 function_declaration: FUNC ID '(' ')' return_type_list code_block .

    $default  reduce using rule 71 (function_declaration)


State 261

   69 parameter_list: parameter_list ',' ID . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 311
    primitive_type  go to state 51
    array_type      go to state 53


State 262

   73 function_declaration: FUNC ID '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 178

    code_block  go to state 312


State 263

   72 function_declaration: FUNC ID '(' parameter_list ')' code_block .

    $default  reduce using rule 72 (function_declaration)


State 264

   79 method_declaration: FUNC method_name '(' ')' return_type_list code_block .

    $default  reduce using rule 79 (method_declaration)


State 265

   81 method_declaration: FUNC method_name '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 178

    code_block  go to state 313


State 266

   80 method_declaration: FUNC method_name '(' parameter_list ')' code_block .

    $default  reduce using rule 80 (method_declaration)


State 267

   55 field_declaration: ID type_name . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 314


State 268

   49 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 49 (type_declaration)


State 269

   54 field_declarations: field_declarations field_declaration .

    $default  reduce using rule 54 (field_declarations)


State 270

   58 interface_function_declaration: FUNC ID . '(' ')' semicolons
   59                               | FUNC ID . '(' ')' return_type_list semicolons
   60                               | FUNC ID . '(' parameter_type_list ')' semicolons
   61                               | FUNC ID . '(' parameter_type_list ')' return_type_list semicolons
   62                               | FUNC ID . '(' parameter_list ')' semicolons
   63                               | FUNC ID . '(' parameter_list ')' return_type_list semicolons

    '('  shift, and go to state 315


State 271

   50 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 50 (type_declaration)


State 272

   57 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 57 (interface_function_declarations)


State 273

   67 parameter_type_list: parameter_type_list ',' type_name .

    $default  reduce using rule 67 (parameter_type_list)


State 274

   26 function_type: FUNC '(' parameter_type_list ')' return_type_list .

    $default  reduce using rule 26 (function_type)


State 275

   75 anonymous_function_declaration: FUNC '(' ')' return_type_list . code_block

    '{'  shift, and go to state 178

    code_block  go to state 316


State 276

   74 anonymous_function_declaration: FUNC '(' ')' code_block .

    $default  reduce using rule 74 (anonymous_function_declaration)


State 277

   76 anonymous_function_declaration: FUNC '(' parameter_list ')' . code_block
   77                               | FUNC '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 177
    '['       shift, and go to state 47
    '{'       shift, and go to state 178

    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 317
    code_block        go to state 318


State 278

  156 field_initializer: field_name ':' expression .

    $default  reduce using rule 156 (field_initializer)


State 279

   28 field_name: ID .

    $default  reduce using rule 28 (field_name)


State 280

  155 field_initializer_list: field_initializer_list ',' field_initializer .

    $default  reduce using rule 155 (field_initializer_list)


State 281

  139 array_access: qualified_name '[' expression ']' .

    $default  reduce using rule 139 (array_access)


State 282

  153 struct_initializer: type_name '{' field_initializer_list '}' .

    $default  reduce using rule 153 (struct_initializer)


State 283

  152 struct_initializer: type_name '{' expression_list '}' .

    $default  reduce using rule 152 (struct_initializer)


State 284

  140 array_access: array_complex_primary '[' expression ']' .

    $default  reduce using rule 140 (array_access)


State 285

  142 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 142 (method_call)


State 286

    6 type_name_list: type_name_list ',' . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 319
    primitive_type  go to state 51
    array_type      go to state 53


State 287

   65 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 65 (return_type_list)


State 288

   95 if_statement: IF '(' . expression ')' code_block
   96             | IF '(' . expression ')' code_block ELSE else_statemnet

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 320


State 289

  100 iteration_statemnet: WHILE '(' . expression ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 321


State 290

  101 iteration_statemnet: DO code_block . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 322


State 291

  102 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    ';'             shift, and go to state 323
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 243
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    for_init                        go to state 324
    variable_declaration            go to state 325
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 253
    field_access                    go to state 254
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 255
    assignment_expression           go to state 256
    assignment_variable_list        go to state 257
    assignment_variable             go to state 258
    expression_statement            go to state 326


State 292

   99 switch_statement: SWITCH '(' . expression ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 327


State 293

  109 jump_statement: RETURN ';' .

    $default  reduce using rule 109 (jump_statement)


State 294

  110 jump_statement: RETURN expression_list . ';'
  200 expression_list: expression_list . ',' expression

    ';'  shift, and go to state 328
    ','  shift, and go to state 174


State 295

   83 code_block: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 83 (code_block)


State 296

   86 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 86 (local_variable_declaration_statements)


State 297

  204 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82

    qualified_name                  go to state 329
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    just_not_name                   go to state 330
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 253
    field_access                    go to state 254
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    assignment_variable             go to state 331


State 298

  201 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 332


State 299

  208 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 208 (compound_assignment_operator)


State 300

  209 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 209 (compound_assignment_operator)


State 301

  210 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 210 (compound_assignment_operator)


State 302

  211 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 211 (compound_assignment_operator)


State 303

  212 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 212 (compound_assignment_operator)


State 304

  213 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 213 (compound_assignment_operator)


State 305

  214 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 214 (compound_assignment_operator)


State 306

  215 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 215 (compound_assignment_operator)


State 307

  216 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 216 (compound_assignment_operator)


State 308

  217 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 217 (compound_assignment_operator)


State 309

  202 assignment_expression: assignment_variable compound_assignment_operator . expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 333


State 310

   89 statemnet: expression_statement ';' .

    $default  reduce using rule 89 (statemnet)


State 311

   69 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 69 (parameter_list)


State 312

   73 function_declaration: FUNC ID '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 73 (function_declaration)


State 313

   81 method_declaration: FUNC method_name '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 81 (method_declaration)


State 314

    2 semicolons: semicolons . ';'
   55 field_declaration: ID type_name semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 55 (field_declaration)


State 315

   58 interface_function_declaration: FUNC ID '(' . ')' semicolons
   59                               | FUNC ID '(' . ')' return_type_list semicolons
   60                               | FUNC ID '(' . parameter_type_list ')' semicolons
   61                               | FUNC ID '(' . parameter_type_list ')' return_type_list semicolons
   62                               | FUNC ID '(' . parameter_list ')' semicolons
   63                               | FUNC ID '(' . parameter_list ')' return_type_list semicolons

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 334
    ')'       shift, and go to state 335
    '['       shift, and go to state 47

    qualified_name       go to state 49
    type_name            go to state 134
    primitive_type       go to state 51
    array_type           go to state 53
    parameter_type_list  go to state 336
    parameter_list       go to state 337


State 316

   75 anonymous_function_declaration: FUNC '(' ')' return_type_list code_block .

    $default  reduce using rule 75 (anonymous_function_declaration)


State 317

   77 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 178

    code_block  go to state 338


State 318

   76 anonymous_function_declaration: FUNC '(' parameter_list ')' code_block .

    $default  reduce using rule 76 (anonymous_function_declaration)


State 319

    6 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 6 (type_name_list)


State 320

   95 if_statement: IF '(' expression . ')' code_block
   96             | IF '(' expression . ')' code_block ELSE else_statemnet

    ')'  shift, and go to state 339


State 321

  100 iteration_statemnet: WHILE '(' expression . ')' code_block

    ')'  shift, and go to state 340


State 322

  101 iteration_statemnet: DO code_block WHILE . '(' expression ')' ';'

    '('  shift, and go to state 341


State 323

  105 for_init: ';' .

    $default  reduce using rule 105 (for_init)


State 324

  102 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    ';'             shift, and go to state 342
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    for_expr                        go to state 343
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 344


State 325

  104 for_init: variable_declaration .

    $default  reduce using rule 104 (for_init)


State 326

  103 for_init: expression_statement . ';'

    ';'  shift, and go to state 345


State 327

   99 switch_statement: SWITCH '(' expression . ')' code_block

    ')'  shift, and go to state 346


State 328

  110 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 110 (jump_statement)


State 329

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
  139 array_access: qualified_name . '[' expression ']'
  145 method_access: qualified_name .
  205 assignment_variable: qualified_name .

    '.'  shift, and go to state 63
    '['  shift, and go to state 147

    '('       reduce using rule 145 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 205 (assignment_variable)


State 330

  141 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 149


State 331

  204 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 204 (assignment_variable_list)


State 332

  200 expression_list: expression_list . ',' expression
  201 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 174

    $default  reduce using rule 201 (assignment_expression)


State 333

  202 assignment_expression: assignment_variable compound_assignment_operator expression .

    $default  reduce using rule 202 (assignment_expression)


State 334

    3 qualified_name: ID .
   68 parameter_list: ID . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    $default  reduce using rule 3 (qualified_name)

    qualified_name  go to state 49
    type_name       go to state 176
    primitive_type  go to state 51
    array_type      go to state 53


State 335

   58 interface_function_declaration: FUNC ID '(' ')' . semicolons
   59                               | FUNC ID '(' ')' . return_type_list semicolons

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    ';'       shift, and go to state 62
    '('       shift, and go to state 177
    '['       shift, and go to state 47

    semicolons        go to state 347
    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 348


State 336

   60 interface_function_declaration: FUNC ID '(' parameter_type_list . ')' semicolons
   61                               | FUNC ID '(' parameter_type_list . ')' return_type_list semicolons
   67 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 195
    ')'  shift, and go to state 349


State 337

   62 interface_function_declaration: FUNC ID '(' parameter_list . ')' semicolons
   63                               | FUNC ID '(' parameter_list . ')' return_type_list semicolons
   69 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 182
    ')'  shift, and go to state 350


State 338

   77 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 77 (anonymous_function_declaration)


State 339

   95 if_statement: IF '(' expression ')' . code_block
   96             | IF '(' expression ')' . code_block ELSE else_statemnet

    '{'  shift, and go to state 178

    code_block  go to state 351


State 340

  100 iteration_statemnet: WHILE '(' expression ')' . code_block

    '{'  shift, and go to state 178

    code_block  go to state 352


State 341

  101 iteration_statemnet: DO code_block WHILE '(' . expression ')' ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 353


State 342

  107 for_expr: ';' .

    $default  reduce using rule 107 (for_expr)


State 343

  102 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 243
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    for_incr                        go to state 354
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 253
    field_access                    go to state 254
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 255
    assignment_expression           go to state 256
    assignment_variable_list        go to state 257
    assignment_variable             go to state 258
    expression_statement            go to state 355


State 344

  106 for_expr: expression . ';'

    ';'  shift, and go to state 356


State 345

  103 for_init: expression_statement ';' .

    $default  reduce using rule 103 (for_init)


State 346

   99 switch_statement: SWITCH '(' expression ')' . code_block

    '{'  shift, and go to state 178

    code_block  go to state 357


State 347

    2 semicolons: semicolons . ';'
   58 interface_function_declaration: FUNC ID '(' ')' semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 58 (interface_function_declaration)


State 348

   59 interface_function_declaration: FUNC ID '(' ')' return_type_list . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 358


State 349

   60 interface_function_declaration: FUNC ID '(' parameter_type_list ')' . semicolons
   61                               | FUNC ID '(' parameter_type_list ')' . return_type_list semicolons

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    ';'       shift, and go to state 62
    '('       shift, and go to state 177
    '['       shift, and go to state 47

    semicolons        go to state 359
    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 360


State 350

   62 interface_function_declaration: FUNC ID '(' parameter_list ')' . semicolons
   63                               | FUNC ID '(' parameter_list ')' . return_type_list semicolons

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    ';'       shift, and go to state 62
    '('       shift, and go to state 177
    '['       shift, and go to state 47

    semicolons        go to state 361
    qualified_name    go to state 49
    type_name         go to state 179
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 362


State 351

   95 if_statement: IF '(' expression ')' code_block .
   96             | IF '(' expression ')' code_block . ELSE else_statemnet

    ELSE  shift, and go to state 363

    $default  reduce using rule 95 (if_statement)


State 352

  100 iteration_statemnet: WHILE '(' expression ')' code_block .

    $default  reduce using rule 100 (iteration_statemnet)


State 353

  101 iteration_statemnet: DO code_block WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 364


State 354

  102 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' code_block

    ')'  shift, and go to state 365


State 355

  108 for_incr: expression_statement .

    $default  reduce using rule 108 (for_incr)


State 356

  106 for_expr: expression ';' .

    $default  reduce using rule 106 (for_expr)


State 357

   99 switch_statement: SWITCH '(' expression ')' code_block .

    $default  reduce using rule 99 (switch_statement)


State 358

    2 semicolons: semicolons . ';'
   59 interface_function_declaration: FUNC ID '(' ')' return_type_list semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 59 (interface_function_declaration)


State 359

    2 semicolons: semicolons . ';'
   60 interface_function_declaration: FUNC ID '(' parameter_type_list ')' semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 60 (interface_function_declaration)


State 360

   61 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 366


State 361

    2 semicolons: semicolons . ';'
   62 interface_function_declaration: FUNC ID '(' parameter_list ')' semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 62 (interface_function_declaration)


State 362

   63 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 367


State 363

   96 if_statement: IF '(' expression ')' code_block ELSE . else_statemnet

    IF   shift, and go to state 236
    '{'  shift, and go to state 178

    code_block      go to state 368
    if_statement    go to state 369
    else_statemnet  go to state 370


State 364

  101 iteration_statemnet: DO code_block WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 371


State 365

  102 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . code_block

    '{'  shift, and go to state 178

    code_block  go to state 372


State 366

    2 semicolons: semicolons . ';'
   61 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 61 (interface_function_declaration)


State 367

    2 semicolons: semicolons . ';'
   63 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list semicolons .

    ';'  shift, and go to state 131

    $default  reduce using rule 63 (interface_function_declaration)


State 368

   98 else_statemnet: code_block .

    $default  reduce using rule 98 (else_statemnet)


State 369

   97 else_statemnet: if_statement .

    $default  reduce using rule 97 (else_statemnet)


State 370

   96 if_statement: IF '(' expression ')' code_block ELSE else_statemnet .

    $default  reduce using rule 96 (if_statement)


State 371

  101 iteration_statemnet: DO code_block WHILE '(' expression ')' ';' .

    $default  reduce using rule 101 (iteration_statemnet)


State 372

  102 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' code_block .

    $default  reduce using rule 102 (iteration_statemnet)
