Terminals unused in grammar

   ELLIPSIS
   NOT
   IF
   ELSE
   WHILE
   DO
   FOR
   IN
   SWITCH
   CASE
   BREAK
   CONTINUE
   DEFAULT
   RETURN
   CONST
   HEX
   OCT
   IFX
   NO_CODE_BLOCK


Grammar

    0 $accept: program $end

    1 semicolons: ';'
    2           | semicolons ';'

    3 qualified_name: ID
    4               | qualified_name '.' ID

    5 type_name_list: type_name
    6               | type_name_list ',' type_name

    7 type_name: primitive_type
    8          | qualified_name
    9          | array_type

   10 primitive_type: UINT8
   11               | UINT16
   12               | UINT32
   13               | UINT64
   14               | INT8
   15               | INT16
   16               | INT32
   17               | INT64
   18               | FLOAT32
   19               | FLOAT64
   20               | BOOL
   21               | STRING
   22               | ANY_TYPE

   23 function_type: FUNC '(' ')'
   24              | FUNC '(' ')' return_type_list
   25              | FUNC '(' parameter_type_list ')'
   26              | FUNC '(' parameter_type_list ')' return_type_list

   27 array_type: '[' INTEGER ']' type_name
   28           | '[' INTEGER ']' function_type

   29 field_name: ID

   30 program: package_statement import_statements declarations
   31        | package_statement import_statements
   32        | package_statement declarations
   33        | import_statements declarations
   34        | package_statement
   35        | import_statements
   36        | declarations

   37 package_statement: PACKAGE qualified_name semicolons

   38 import_statements: import_statement
   39                  | import_statements import_statement

   40 import_statement: IMPORT qualified_name semicolons
   41                 | IMPORT qualified_name '.' '*' semicolons

   42 declarations: type_declaration
   43             | declarations type_declaration
   44             | variable_declaration
   45             | declarations variable_declaration
   46             | function_declaration
   47             | declarations function_declaration
   48             | method_declaration
   49             | declarations method_declaration
   50             | expression_statement
   51             | declarations expression_statement

   52 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   53                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   54                 | TYPE ID type_name semicolons
   55                 | TYPE ID function_type semicolons

   56 field_declarations: field_declaration
   57                   | field_declarations field_declaration

   58 field_declaration: ID type_name semicolons

   59 interface_function_declarations: interface_function_declaration
   60                                | interface_function_declarations interface_function_declaration

   61 interface_function_declaration: FUNC ID '(' ')' semicolons
   62                               | FUNC ID '(' ')' return_type_list semicolons
   63                               | FUNC ID '(' parameter_type_list ')' semicolons
   64                               | FUNC ID '(' parameter_type_list ')' return_type_list semicolons
   65                               | FUNC ID '(' parameter_list ')' semicolons
   66                               | FUNC ID '(' parameter_list ')' return_type_list semicolons

   67 return_type_list: type_name
   68                 | '(' type_name_list ')'

   69 parameter_type_list: type_name
   70                    | parameter_type_list ',' type_name

   71 parameter_list: ID type_name
   72               | parameter_list ',' ID type_name

   73 function_declaration: FUNC ID '(' ')' code_block
   74                     | FUNC ID '(' ')' return_type_list code_block
   75                     | FUNC ID '(' parameter_list ')' code_block
   76                     | FUNC ID '(' parameter_list ')' return_type_list code_block

   77 anonymous_function_declaration: FUNC '(' ')' code_block
   78                               | FUNC '(' ')' return_type_list code_block
   79                               | FUNC '(' parameter_list ')' code_block
   80                               | FUNC '(' parameter_list ')' return_type_list code_block

   81 method_declaration: FUNC method_name '(' ')' code_block
   82                   | FUNC method_name '(' ')' return_type_list code_block
   83                   | FUNC method_name '(' parameter_list ')' code_block
   84                   | FUNC method_name '(' parameter_list ')' return_type_list code_block

   85 method_name: ID '.' ID

   86 code_block: '{' '}'

   87 variable_declaration: VAR variable_list variable_type semicolons
   88                     | VAR variable_list '=' expression_list semicolons
   89                     | VAR variable_list variable_type '=' expression_list semicolons

   90 variable_list: ID
   91              | variable_list ',' ID

   92 variable_type: type_name
   93              | function_type

   94 primary_expression: qualified_name
   95                   | just_not_name

   96 just_not_name: TOKEN_THIS
   97              | initializer_expression
   98              | complex_primary

   99 complex_primary: '(' expression ')'
  100                | complex_primary_no_parenthesis

  101 complex_primary_no_parenthesis: literal_name
  102                               | array_access
  103                               | field_access
  104                               | method_call

  105 literal_name: INTEGER
  106             | FLOAT
  107             | STRING_LITERAL
  108             | TOKEN_NULL
  109             | TOKEN_TRUE
  110             | TOKEN_FALSE

  111 array_complex_primary: '(' expression ')'
  112                      | array_access
  113                      | field_access
  114                      | method_call

  115 array_access: qualified_name '[' expression ']'
  116             | array_complex_primary '[' expression ']'

  117 field_access: just_not_name '.' ID

  118 method_call: method_access '(' argument_list ')'
  119            | method_access '(' ')'

  120 method_access: complex_primary_no_parenthesis
  121              | qualified_name

  122 initializer_expression: struct_initializer
  123                       | anonymous_function_declaration

  124 struct_initializer: '{' '}'
  125                   | '{' expression_list '}'
  126                   | '{' field_initializer_list '}'
  127                   | type_name '{' '}'
  128                   | type_name '{' expression_list '}'
  129                   | type_name '{' field_initializer_list '}'

  130 field_initializer_list: field_initializer
  131                       | field_initializer_list ',' field_initializer

  132 field_initializer: field_name ':' expression

  133 postfix_expression: primary_expression
  134                   | real_postfix_expression

  135 real_postfix_expression: postfix_expression INC
  136                        | postfix_expression DEC

  137 argument_list: expression_list

  138 unary_expression: postfix_expression
  139                 | INC unary_expression
  140                 | DEC unary_expression
  141                 | unary_operator unary_expression

  142 unary_operator: '+'
  143               | '-'
  144               | '~'
  145               | '!'

  146 multiplicative_expression: unary_expression
  147                          | multiplicative_expression '*' unary_expression
  148                          | multiplicative_expression '/' unary_expression
  149                          | multiplicative_expression '%' unary_expression

  150 additive_expression: multiplicative_expression
  151                    | additive_expression '+' multiplicative_expression
  152                    | additive_expression '-' multiplicative_expression

  153 shift_expression: additive_expression
  154                 | shift_expression SHIFT_LEFT additive_expression
  155                 | shift_expression SHIFT_RIGHT additive_expression

  156 relational_expression: shift_expression
  157                      | relational_expression '<' shift_expression
  158                      | relational_expression '>' shift_expression
  159                      | relational_expression LE shift_expression
  160                      | relational_expression GE shift_expression

  161 equality_expression: relational_expression
  162                    | equality_expression EQ relational_expression
  163                    | equality_expression NE relational_expression

  164 and_expression: equality_expression
  165               | and_expression '&' equality_expression

  166 exclusive_or_expression: and_expression
  167                        | exclusive_or_expression '^' and_expression

  168 inclusive_or_expression: exclusive_or_expression
  169                        | inclusive_or_expression '|' exclusive_or_expression

  170 logical_and_expression: inclusive_or_expression
  171                       | logical_and_expression AND inclusive_or_expression

  172 logical_or_expression: logical_and_expression
  173                      | logical_or_expression OR logical_and_expression

  174 expression: logical_or_expression

  175 expression_list: expression
  176                | expression_list ',' expression

  177 assignment_expression: assignment_variable_list '=' expression_list
  178                      | assignment_variable compound_assignment_operator expression

  179 assignment_variable_list: assignment_variable
  180                         | assignment_variable_list ',' assignment_variable

  181 assignment_variable: qualified_name
  182                    | array_access
  183                    | field_access

  184 compound_assignment_operator: ADD_ASSIGN
  185                             | SUB_ASSIGN
  186                             | MUL_ASSIGN
  187                             | DIV_ASSIGN
  188                             | MOD_ASSIGN
  189                             | AND_ASSIGN
  190                             | OR_ASSIGN
  191                             | XOR_ASSIGN
  192                             | RIGHT_ASSIGN
  193                             | LEFT_ASSIGN

  194 expression_statement: expression semicolons
  195                     | assignment_expression semicolons


Terminals, with rules where they appear

$end (0) 0
'!' (33) 145
'%' (37) 149
'&' (38) 165
'(' (40) 23 24 25 26 61 62 63 64 65 66 68 73 74 75 76 77 78 79 80 81
    82 83 84 99 111 118 119
')' (41) 23 24 25 26 61 62 63 64 65 66 68 73 74 75 76 77 78 79 80 81
    82 83 84 99 111 118 119
'*' (42) 41 147
'+' (43) 142 151
',' (44) 6 70 72 91 131 176 180
'-' (45) 143 152
'.' (46) 4 41 85 117
'/' (47) 148
':' (58) 132
';' (59) 1 2
'<' (60) 157
'=' (61) 88 89 177
'>' (62) 158
'[' (91) 27 28 115 116
']' (93) 27 28 115 116
'^' (94) 167
'{' (123) 52 53 86 124 125 126 127 128 129
'|' (124) 169
'}' (125) 52 53 86 124 125 126 127 128 129
'~' (126) 144
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 184
SUB_ASSIGN (260) 185
MUL_ASSIGN (261) 186
DIV_ASSIGN (262) 187
MOD_ASSIGN (263) 188
AND_ASSIGN (264) 189
OR_ASSIGN (265) 190
XOR_ASSIGN (266) 191
RIGHT_ASSIGN (267) 192
LEFT_ASSIGN (268) 193
EQ (269) 162
NE (270) 163
GE (271) 160
LE (272) 159
AND (273) 171
OR (274) 173
NOT (275)
SHIFT_LEFT (276) 154
SHIFT_RIGHT (277) 155
INC (278) 135 139
DEC (279) 136 140
TOKEN_THIS (280) 96
IF (281)
ELSE (282)
WHILE (283)
DO (284)
FOR (285)
IN (286)
SWITCH (287)
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 87 88 89
FUNC (293) 23 24 25 26 61 62 63 64 65 66 73 74 75 76 77 78 79 80 81
    82 83 84
RETURN (294)
STRUCT (295) 52
INTERFACE (296) 53
TYPE (297) 52 53 54 55
CONST (298)
PACKAGE (299) 37
IMPORT (300) 40 41
INT8 (301) 14
INT16 (302) 15
INT32 (303) 16
INT64 (304) 17
UINT8 (305) 10
UINT16 (306) 11
UINT32 (307) 12
UINT64 (308) 13
FLOAT32 (309) 18
FLOAT64 (310) 19
BOOL (311) 20
STRING (312) 21
ANY_TYPE (313) 22
TOKEN_NULL (314) 108
TOKEN_TRUE (315) 109
TOKEN_FALSE (316) 110
INTEGER (317) 27 28 105
HEX (318)
OCT (319)
FLOAT (320) 106
STRING_LITERAL (321) 107
ID (322) 3 4 29 52 53 54 55 58 61 62 63 64 65 66 71 72 73 74 75 76
    85 90 91 117
IFX (323)
NO_CODE_BLOCK (324)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
semicolons (94)
    on left: 1 2, on right: 2 37 40 41 54 55 58 61 62 63 64 65 66 87
    88 89 194 195
qualified_name (95)
    on left: 3 4, on right: 4 8 37 40 41 94 115 121 181
type_name_list (96)
    on left: 5 6, on right: 6 68
type_name (97)
    on left: 7 8 9, on right: 5 6 27 54 58 67 69 70 71 72 92 127 128
    129
primitive_type (98)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21 22, on right: 7
function_type (99)
    on left: 23 24 25 26, on right: 28 55 93
array_type (100)
    on left: 27 28, on right: 9
field_name (101)
    on left: 29, on right: 132
program (102)
    on left: 30 31 32 33 34 35 36, on right: 0
package_statement (103)
    on left: 37, on right: 30 31 32 34
import_statements (104)
    on left: 38 39, on right: 30 31 33 35 39
import_statement (105)
    on left: 40 41, on right: 38 39
declarations (106)
    on left: 42 43 44 45 46 47 48 49 50 51, on right: 30 32 33 36 43
    45 47 49 51
type_declaration (107)
    on left: 52 53 54 55, on right: 42 43
field_declarations (108)
    on left: 56 57, on right: 52 57
field_declaration (109)
    on left: 58, on right: 56 57
interface_function_declarations (110)
    on left: 59 60, on right: 53 60
interface_function_declaration (111)
    on left: 61 62 63 64 65 66, on right: 59 60
return_type_list (112)
    on left: 67 68, on right: 24 26 62 64 66 74 76 78 80 82 84
parameter_type_list (113)
    on left: 69 70, on right: 25 26 63 64 70
parameter_list (114)
    on left: 71 72, on right: 65 66 72 75 76 79 80 83 84
function_declaration (115)
    on left: 73 74 75 76, on right: 46 47
anonymous_function_declaration (116)
    on left: 77 78 79 80, on right: 123
method_declaration (117)
    on left: 81 82 83 84, on right: 48 49
method_name (118)
    on left: 85, on right: 81 82 83 84
code_block (119)
    on left: 86, on right: 73 74 75 76 77 78 79 80 81 82 83 84
variable_declaration (120)
    on left: 87 88 89, on right: 44 45
variable_list (121)
    on left: 90 91, on right: 87 88 89 91
variable_type (122)
    on left: 92 93, on right: 87 89
primary_expression (123)
    on left: 94 95, on right: 133
just_not_name (124)
    on left: 96 97 98, on right: 95 117
complex_primary (125)
    on left: 99 100, on right: 98
complex_primary_no_parenthesis (126)
    on left: 101 102 103 104, on right: 100 120
literal_name (127)
    on left: 105 106 107 108 109 110, on right: 101
array_complex_primary (128)
    on left: 111 112 113 114, on right: 116
array_access (129)
    on left: 115 116, on right: 102 112 182
field_access (130)
    on left: 117, on right: 103 113 183
method_call (131)
    on left: 118 119, on right: 104 114
method_access (132)
    on left: 120 121, on right: 118 119
initializer_expression (133)
    on left: 122 123, on right: 97
struct_initializer (134)
    on left: 124 125 126 127 128 129, on right: 122
field_initializer_list (135)
    on left: 130 131, on right: 126 129 131
field_initializer (136)
    on left: 132, on right: 130 131
postfix_expression (137)
    on left: 133 134, on right: 135 136 138
real_postfix_expression (138)
    on left: 135 136, on right: 134
argument_list (139)
    on left: 137, on right: 118
unary_expression (140)
    on left: 138 139 140 141, on right: 139 140 141 146 147 148 149
unary_operator (141)
    on left: 142 143 144 145, on right: 141
multiplicative_expression (142)
    on left: 146 147 148 149, on right: 147 148 149 150 151 152
additive_expression (143)
    on left: 150 151 152, on right: 151 152 153 154 155
shift_expression (144)
    on left: 153 154 155, on right: 154 155 156 157 158 159 160
relational_expression (145)
    on left: 156 157 158 159 160, on right: 157 158 159 160 161 162
    163
equality_expression (146)
    on left: 161 162 163, on right: 162 163 164 165
and_expression (147)
    on left: 164 165, on right: 165 166 167
exclusive_or_expression (148)
    on left: 166 167, on right: 167 168 169
inclusive_or_expression (149)
    on left: 168 169, on right: 169 170 171
logical_and_expression (150)
    on left: 170 171, on right: 171 172 173
logical_or_expression (151)
    on left: 172 173, on right: 173 174
expression (152)
    on left: 174, on right: 99 111 115 116 132 175 176 178 194
expression_list (153)
    on left: 175 176, on right: 88 89 125 128 137 176 177
assignment_expression (154)
    on left: 177 178, on right: 195
assignment_variable_list (155)
    on left: 179 180, on right: 177 180
assignment_variable (156)
    on left: 181 182 183, on right: 178 179 180
compound_assignment_operator (157)
    on left: 184 185 186 187 188 189 190 191 192 193, on right: 178
expression_statement (158)
    on left: 194 195, on right: 50 51


State 0

    0 $accept: . program $end

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    VAR             shift, and go to state 4
    FUNC            shift, and go to state 5
    TYPE            shift, and go to state 6
    PACKAGE         shift, and go to state 7
    IMPORT          shift, and go to state 8
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 36
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    program                         go to state 40
    package_statement               go to state 41
    import_statements               go to state 42
    import_statement                go to state 43
    declarations                    go to state 44
    type_declaration                go to state 45
    function_declaration            go to state 46
    anonymous_function_declaration  go to state 47
    method_declaration              go to state 48
    variable_declaration            go to state 49
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 56
    field_access                    go to state 57
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 76
    assignment_expression           go to state 77
    assignment_variable_list        go to state 78
    assignment_variable             go to state 79
    expression_statement            go to state 80


State 1

  139 unary_expression: INC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 85
    unary_operator                  go to state 65


State 2

  140 unary_expression: DEC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 86
    unary_operator                  go to state 65


State 3

   96 just_not_name: TOKEN_THIS .

    $default  reduce using rule 96 (just_not_name)


State 4

   87 variable_declaration: VAR . variable_list variable_type semicolons
   88                     | VAR . variable_list '=' expression_list semicolons
   89                     | VAR . variable_list variable_type '=' expression_list semicolons

    ID  shift, and go to state 87

    variable_list  go to state 88


State 5

   73 function_declaration: FUNC . ID '(' ')' code_block
   74                     | FUNC . ID '(' ')' return_type_list code_block
   75                     | FUNC . ID '(' parameter_list ')' code_block
   76                     | FUNC . ID '(' parameter_list ')' return_type_list code_block
   77 anonymous_function_declaration: FUNC . '(' ')' code_block
   78                               | FUNC . '(' ')' return_type_list code_block
   79                               | FUNC . '(' parameter_list ')' code_block
   80                               | FUNC . '(' parameter_list ')' return_type_list code_block
   81 method_declaration: FUNC . method_name '(' ')' code_block
   82                   | FUNC . method_name '(' ')' return_type_list code_block
   83                   | FUNC . method_name '(' parameter_list ')' code_block
   84                   | FUNC . method_name '(' parameter_list ')' return_type_list code_block

    ID   shift, and go to state 89
    '('  shift, and go to state 90

    method_name  go to state 91


State 6

   52 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   53                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   54                 | TYPE . ID type_name semicolons
   55                 | TYPE . ID function_type semicolons

    ID  shift, and go to state 92


State 7

   37 package_statement: PACKAGE . qualified_name semicolons

    ID  shift, and go to state 28

    qualified_name  go to state 93


State 8

   40 import_statement: IMPORT . qualified_name semicolons
   41                 | IMPORT . qualified_name '.' '*' semicolons

    ID  shift, and go to state 28

    qualified_name  go to state 94


State 9

   14 primitive_type: INT8 .

    $default  reduce using rule 14 (primitive_type)


State 10

   15 primitive_type: INT16 .

    $default  reduce using rule 15 (primitive_type)


State 11

   16 primitive_type: INT32 .

    $default  reduce using rule 16 (primitive_type)


State 12

   17 primitive_type: INT64 .

    $default  reduce using rule 17 (primitive_type)


State 13

   10 primitive_type: UINT8 .

    $default  reduce using rule 10 (primitive_type)


State 14

   11 primitive_type: UINT16 .

    $default  reduce using rule 11 (primitive_type)


State 15

   12 primitive_type: UINT32 .

    $default  reduce using rule 12 (primitive_type)


State 16

   13 primitive_type: UINT64 .

    $default  reduce using rule 13 (primitive_type)


State 17

   18 primitive_type: FLOAT32 .

    $default  reduce using rule 18 (primitive_type)


State 18

   19 primitive_type: FLOAT64 .

    $default  reduce using rule 19 (primitive_type)


State 19

   20 primitive_type: BOOL .

    $default  reduce using rule 20 (primitive_type)


State 20

   21 primitive_type: STRING .

    $default  reduce using rule 21 (primitive_type)


State 21

   22 primitive_type: ANY_TYPE .

    $default  reduce using rule 22 (primitive_type)


State 22

  108 literal_name: TOKEN_NULL .

    $default  reduce using rule 108 (literal_name)


State 23

  109 literal_name: TOKEN_TRUE .

    $default  reduce using rule 109 (literal_name)


State 24

  110 literal_name: TOKEN_FALSE .

    $default  reduce using rule 110 (literal_name)


State 25

  105 literal_name: INTEGER .

    $default  reduce using rule 105 (literal_name)


State 26

  106 literal_name: FLOAT .

    $default  reduce using rule 106 (literal_name)


State 27

  107 literal_name: STRING_LITERAL .

    $default  reduce using rule 107 (literal_name)


State 28

    3 qualified_name: ID .

    $default  reduce using rule 3 (qualified_name)


State 29

   99 complex_primary: '(' . expression ')'
  111 array_complex_primary: '(' . expression ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 95


State 30

   27 array_type: '[' . INTEGER ']' type_name
   28           | '[' . INTEGER ']' function_type

    INTEGER  shift, and go to state 96


State 31

  124 struct_initializer: '{' . '}'
  125                   | '{' . expression_list '}'
  126                   | '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 97
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '}'             shift, and go to state 98
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    field_name                      go to state 99
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    field_initializer_list          go to state 100
    field_initializer               go to state 101
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 102
    expression_list                 go to state 103


State 32

  142 unary_operator: '+' .

    $default  reduce using rule 142 (unary_operator)


State 33

  143 unary_operator: '-' .

    $default  reduce using rule 143 (unary_operator)


State 34

  144 unary_operator: '~' .

    $default  reduce using rule 144 (unary_operator)


State 35

  145 unary_operator: '!' .

    $default  reduce using rule 145 (unary_operator)


State 36

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   94 primary_expression: qualified_name .
  115 array_access: qualified_name . '[' expression ']'
  121 method_access: qualified_name .
  181 assignment_variable: qualified_name .

    '.'  shift, and go to state 104
    '['  shift, and go to state 105

    ADD_ASSIGN    reduce using rule 181 (assignment_variable)
    SUB_ASSIGN    reduce using rule 181 (assignment_variable)
    MUL_ASSIGN    reduce using rule 181 (assignment_variable)
    DIV_ASSIGN    reduce using rule 181 (assignment_variable)
    MOD_ASSIGN    reduce using rule 181 (assignment_variable)
    AND_ASSIGN    reduce using rule 181 (assignment_variable)
    OR_ASSIGN     reduce using rule 181 (assignment_variable)
    XOR_ASSIGN    reduce using rule 181 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 181 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 181 (assignment_variable)
    ','           reduce using rule 181 (assignment_variable)
    '('           reduce using rule 121 (method_access)
    '{'           reduce using rule 8 (type_name)
    '='           reduce using rule 181 (assignment_variable)
    $default      reduce using rule 94 (primary_expression)


State 37

  127 struct_initializer: type_name . '{' '}'
  128                   | type_name . '{' expression_list '}'
  129                   | type_name . '{' field_initializer_list '}'

    '{'  shift, and go to state 106


State 38

    7 type_name: primitive_type .

    $default  reduce using rule 7 (type_name)


State 39

    9 type_name: array_type .

    $default  reduce using rule 9 (type_name)


State 40

    0 $accept: program . $end

    $end  shift, and go to state 107


State 41

   30 program: package_statement . import_statements declarations
   31        | package_statement . import_statements
   32        | package_statement . declarations
   34        | package_statement .

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    VAR             shift, and go to state 4
    FUNC            shift, and go to state 5
    TYPE            shift, and go to state 6
    IMPORT          shift, and go to state 8
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    $default  reduce using rule 34 (program)

    qualified_name                  go to state 36
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    import_statements               go to state 108
    import_statement                go to state 43
    declarations                    go to state 109
    type_declaration                go to state 45
    function_declaration            go to state 46
    anonymous_function_declaration  go to state 47
    method_declaration              go to state 48
    variable_declaration            go to state 49
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 56
    field_access                    go to state 57
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 76
    assignment_expression           go to state 77
    assignment_variable_list        go to state 78
    assignment_variable             go to state 79
    expression_statement            go to state 80


State 42

   33 program: import_statements . declarations
   35        | import_statements .
   39 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    VAR             shift, and go to state 4
    FUNC            shift, and go to state 5
    TYPE            shift, and go to state 6
    IMPORT          shift, and go to state 8
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    $default  reduce using rule 35 (program)

    qualified_name                  go to state 36
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    import_statement                go to state 110
    declarations                    go to state 111
    type_declaration                go to state 45
    function_declaration            go to state 46
    anonymous_function_declaration  go to state 47
    method_declaration              go to state 48
    variable_declaration            go to state 49
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 56
    field_access                    go to state 57
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 76
    assignment_expression           go to state 77
    assignment_variable_list        go to state 78
    assignment_variable             go to state 79
    expression_statement            go to state 80


State 43

   38 import_statements: import_statement .

    $default  reduce using rule 38 (import_statements)


State 44

   36 program: declarations .
   43 declarations: declarations . type_declaration
   45             | declarations . variable_declaration
   47             | declarations . function_declaration
   49             | declarations . method_declaration
   51             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    VAR             shift, and go to state 4
    FUNC            shift, and go to state 5
    TYPE            shift, and go to state 6
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    $default  reduce using rule 36 (program)

    qualified_name                  go to state 36
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    type_declaration                go to state 112
    function_declaration            go to state 113
    anonymous_function_declaration  go to state 47
    method_declaration              go to state 114
    variable_declaration            go to state 115
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 56
    field_access                    go to state 57
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 76
    assignment_expression           go to state 77
    assignment_variable_list        go to state 78
    assignment_variable             go to state 79
    expression_statement            go to state 116


State 45

   42 declarations: type_declaration .

    $default  reduce using rule 42 (declarations)


State 46

   46 declarations: function_declaration .

    $default  reduce using rule 46 (declarations)


State 47

  123 initializer_expression: anonymous_function_declaration .

    $default  reduce using rule 123 (initializer_expression)


State 48

   48 declarations: method_declaration .

    $default  reduce using rule 48 (declarations)


State 49

   44 declarations: variable_declaration .

    $default  reduce using rule 44 (declarations)


State 50

  133 postfix_expression: primary_expression .

    $default  reduce using rule 133 (postfix_expression)


State 51

   95 primary_expression: just_not_name .
  117 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 117

    $default  reduce using rule 95 (primary_expression)


State 52

   98 just_not_name: complex_primary .

    $default  reduce using rule 98 (just_not_name)


State 53

  100 complex_primary: complex_primary_no_parenthesis .
  120 method_access: complex_primary_no_parenthesis .

    '('       reduce using rule 120 (method_access)
    $default  reduce using rule 100 (complex_primary)


State 54

  101 complex_primary_no_parenthesis: literal_name .

    $default  reduce using rule 101 (complex_primary_no_parenthesis)


State 55

  116 array_access: array_complex_primary . '[' expression ']'

    '['  shift, and go to state 118


State 56

  102 complex_primary_no_parenthesis: array_access .
  112 array_complex_primary: array_access .
  182 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 182 (assignment_variable)
    SUB_ASSIGN    reduce using rule 182 (assignment_variable)
    MUL_ASSIGN    reduce using rule 182 (assignment_variable)
    DIV_ASSIGN    reduce using rule 182 (assignment_variable)
    MOD_ASSIGN    reduce using rule 182 (assignment_variable)
    AND_ASSIGN    reduce using rule 182 (assignment_variable)
    OR_ASSIGN     reduce using rule 182 (assignment_variable)
    XOR_ASSIGN    reduce using rule 182 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 182 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 182 (assignment_variable)
    ','           reduce using rule 182 (assignment_variable)
    '['           reduce using rule 112 (array_complex_primary)
    '='           reduce using rule 182 (assignment_variable)
    $default      reduce using rule 102 (complex_primary_no_parenthesis)


State 57

  103 complex_primary_no_parenthesis: field_access .
  113 array_complex_primary: field_access .
  183 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 183 (assignment_variable)
    SUB_ASSIGN    reduce using rule 183 (assignment_variable)
    MUL_ASSIGN    reduce using rule 183 (assignment_variable)
    DIV_ASSIGN    reduce using rule 183 (assignment_variable)
    MOD_ASSIGN    reduce using rule 183 (assignment_variable)
    AND_ASSIGN    reduce using rule 183 (assignment_variable)
    OR_ASSIGN     reduce using rule 183 (assignment_variable)
    XOR_ASSIGN    reduce using rule 183 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 183 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 183 (assignment_variable)
    ','           reduce using rule 183 (assignment_variable)
    '['           reduce using rule 113 (array_complex_primary)
    '='           reduce using rule 183 (assignment_variable)
    $default      reduce using rule 103 (complex_primary_no_parenthesis)


State 58

  104 complex_primary_no_parenthesis: method_call .
  114 array_complex_primary: method_call .

    '['       reduce using rule 114 (array_complex_primary)
    $default  reduce using rule 104 (complex_primary_no_parenthesis)


State 59

  118 method_call: method_access . '(' argument_list ')'
  119            | method_access . '(' ')'

    '('  shift, and go to state 119


State 60

   97 just_not_name: initializer_expression .

    $default  reduce using rule 97 (just_not_name)


State 61

  122 initializer_expression: struct_initializer .

    $default  reduce using rule 122 (initializer_expression)


State 62

  135 real_postfix_expression: postfix_expression . INC
  136                        | postfix_expression . DEC
  138 unary_expression: postfix_expression .

    INC  shift, and go to state 120
    DEC  shift, and go to state 121

    $default  reduce using rule 138 (unary_expression)


State 63

  134 postfix_expression: real_postfix_expression .

    $default  reduce using rule 134 (postfix_expression)


State 64

  146 multiplicative_expression: unary_expression .

    $default  reduce using rule 146 (multiplicative_expression)


State 65

  141 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 122
    unary_operator                  go to state 65


State 66

  147 multiplicative_expression: multiplicative_expression . '*' unary_expression
  148                          | multiplicative_expression . '/' unary_expression
  149                          | multiplicative_expression . '%' unary_expression
  150 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 150 (additive_expression)


State 67

  151 additive_expression: additive_expression . '+' multiplicative_expression
  152                    | additive_expression . '-' multiplicative_expression
  153 shift_expression: additive_expression .

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 153 (shift_expression)


State 68

  154 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  155                 | shift_expression . SHIFT_RIGHT additive_expression
  156 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 128
    SHIFT_RIGHT  shift, and go to state 129

    $default  reduce using rule 156 (relational_expression)


State 69

  157 relational_expression: relational_expression . '<' shift_expression
  158                      | relational_expression . '>' shift_expression
  159                      | relational_expression . LE shift_expression
  160                      | relational_expression . GE shift_expression
  161 equality_expression: relational_expression .

    GE   shift, and go to state 130
    LE   shift, and go to state 131
    '<'  shift, and go to state 132
    '>'  shift, and go to state 133

    $default  reduce using rule 161 (equality_expression)


State 70

  162 equality_expression: equality_expression . EQ relational_expression
  163                    | equality_expression . NE relational_expression
  164 and_expression: equality_expression .

    EQ  shift, and go to state 134
    NE  shift, and go to state 135

    $default  reduce using rule 164 (and_expression)


State 71

  165 and_expression: and_expression . '&' equality_expression
  166 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 136

    $default  reduce using rule 166 (exclusive_or_expression)


State 72

  167 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  168 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 137

    $default  reduce using rule 168 (inclusive_or_expression)


State 73

  169 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  170 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 138

    $default  reduce using rule 170 (logical_and_expression)


State 74

  171 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  172 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 139

    $default  reduce using rule 172 (logical_or_expression)


State 75

  173 logical_or_expression: logical_or_expression . OR logical_and_expression
  174 expression: logical_or_expression .

    OR  shift, and go to state 140

    $default  reduce using rule 174 (expression)


State 76

  194 expression_statement: expression . semicolons

    ';'  shift, and go to state 141

    semicolons  go to state 142


State 77

  195 expression_statement: assignment_expression . semicolons

    ';'  shift, and go to state 141

    semicolons  go to state 143


State 78

  177 assignment_expression: assignment_variable_list . '=' expression_list
  180 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 144
    '='  shift, and go to state 145


State 79

  178 assignment_expression: assignment_variable . compound_assignment_operator expression
  179 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 146
    SUB_ASSIGN    shift, and go to state 147
    MUL_ASSIGN    shift, and go to state 148
    DIV_ASSIGN    shift, and go to state 149
    MOD_ASSIGN    shift, and go to state 150
    AND_ASSIGN    shift, and go to state 151
    OR_ASSIGN     shift, and go to state 152
    XOR_ASSIGN    shift, and go to state 153
    RIGHT_ASSIGN  shift, and go to state 154
    LEFT_ASSIGN   shift, and go to state 155

    $default  reduce using rule 179 (assignment_variable_list)

    compound_assignment_operator  go to state 156


State 80

   50 declarations: expression_statement .

    $default  reduce using rule 50 (declarations)


State 81

   77 anonymous_function_declaration: FUNC . '(' ')' code_block
   78                               | FUNC . '(' ')' return_type_list code_block
   79                               | FUNC . '(' parameter_list ')' code_block
   80                               | FUNC . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 90


State 82

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
   94 primary_expression: qualified_name .
  115 array_access: qualified_name . '[' expression ']'
  121 method_access: qualified_name .

    '.'  shift, and go to state 104
    '['  shift, and go to state 105

    '('       reduce using rule 121 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 94 (primary_expression)


State 83

  102 complex_primary_no_parenthesis: array_access .
  112 array_complex_primary: array_access .

    '['       reduce using rule 112 (array_complex_primary)
    $default  reduce using rule 102 (complex_primary_no_parenthesis)


State 84

  103 complex_primary_no_parenthesis: field_access .
  113 array_complex_primary: field_access .

    '['       reduce using rule 113 (array_complex_primary)
    $default  reduce using rule 103 (complex_primary_no_parenthesis)


State 85

  139 unary_expression: INC unary_expression .

    $default  reduce using rule 139 (unary_expression)


State 86

  140 unary_expression: DEC unary_expression .

    $default  reduce using rule 140 (unary_expression)


State 87

   90 variable_list: ID .

    $default  reduce using rule 90 (variable_list)


State 88

   87 variable_declaration: VAR variable_list . variable_type semicolons
   88                     | VAR variable_list . '=' expression_list semicolons
   89                     | VAR variable_list . variable_type '=' expression_list semicolons
   91 variable_list: variable_list . ',' ID

    FUNC      shift, and go to state 157
    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    ','       shift, and go to state 158
    '['       shift, and go to state 30
    '='       shift, and go to state 159

    qualified_name  go to state 160
    type_name       go to state 161
    primitive_type  go to state 38
    function_type   go to state 162
    array_type      go to state 39
    variable_type   go to state 163


State 89

   73 function_declaration: FUNC ID . '(' ')' code_block
   74                     | FUNC ID . '(' ')' return_type_list code_block
   75                     | FUNC ID . '(' parameter_list ')' code_block
   76                     | FUNC ID . '(' parameter_list ')' return_type_list code_block
   85 method_name: ID . '.' ID

    '.'  shift, and go to state 164
    '('  shift, and go to state 165


State 90

   77 anonymous_function_declaration: FUNC '(' . ')' code_block
   78                               | FUNC '(' . ')' return_type_list code_block
   79                               | FUNC '(' . parameter_list ')' code_block
   80                               | FUNC '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 166
    ')'  shift, and go to state 167

    parameter_list  go to state 168


State 91

   81 method_declaration: FUNC method_name . '(' ')' code_block
   82                   | FUNC method_name . '(' ')' return_type_list code_block
   83                   | FUNC method_name . '(' parameter_list ')' code_block
   84                   | FUNC method_name . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 169


State 92

   52 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   53                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   54                 | TYPE ID . type_name semicolons
   55                 | TYPE ID . function_type semicolons

    FUNC       shift, and go to state 157
    STRUCT     shift, and go to state 170
    INTERFACE  shift, and go to state 171
    INT8       shift, and go to state 9
    INT16      shift, and go to state 10
    INT32      shift, and go to state 11
    INT64      shift, and go to state 12
    UINT8      shift, and go to state 13
    UINT16     shift, and go to state 14
    UINT32     shift, and go to state 15
    UINT64     shift, and go to state 16
    FLOAT32    shift, and go to state 17
    FLOAT64    shift, and go to state 18
    BOOL       shift, and go to state 19
    STRING     shift, and go to state 20
    ANY_TYPE   shift, and go to state 21
    ID         shift, and go to state 28
    '['        shift, and go to state 30

    qualified_name  go to state 160
    type_name       go to state 172
    primitive_type  go to state 38
    function_type   go to state 173
    array_type      go to state 39


State 93

    4 qualified_name: qualified_name . '.' ID
   37 package_statement: PACKAGE qualified_name . semicolons

    ';'  shift, and go to state 141
    '.'  shift, and go to state 104

    semicolons  go to state 174


State 94

    4 qualified_name: qualified_name . '.' ID
   40 import_statement: IMPORT qualified_name . semicolons
   41                 | IMPORT qualified_name . '.' '*' semicolons

    ';'  shift, and go to state 141
    '.'  shift, and go to state 175

    semicolons  go to state 176


State 95

   99 complex_primary: '(' expression . ')'
  111 array_complex_primary: '(' expression . ')'

    ')'  shift, and go to state 177


State 96

   27 array_type: '[' INTEGER . ']' type_name
   28           | '[' INTEGER . ']' function_type

    ']'  shift, and go to state 178


State 97

    3 qualified_name: ID .
   29 field_name: ID .

    ':'       reduce using rule 29 (field_name)
    $default  reduce using rule 3 (qualified_name)


State 98

  124 struct_initializer: '{' '}' .

    $default  reduce using rule 124 (struct_initializer)


State 99

  132 field_initializer: field_name . ':' expression

    ':'  shift, and go to state 179


State 100

  126 struct_initializer: '{' field_initializer_list . '}'
  131 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 180
    '}'  shift, and go to state 181


State 101

  130 field_initializer_list: field_initializer .

    $default  reduce using rule 130 (field_initializer_list)


State 102

  175 expression_list: expression .

    $default  reduce using rule 175 (expression_list)


State 103

  125 struct_initializer: '{' expression_list . '}'
  176 expression_list: expression_list . ',' expression

    ','  shift, and go to state 182
    '}'  shift, and go to state 183


State 104

    4 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 184


State 105

  115 array_access: qualified_name '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 185


State 106

  127 struct_initializer: type_name '{' . '}'
  128                   | type_name '{' . expression_list '}'
  129                   | type_name '{' . field_initializer_list '}'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 97
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '}'             shift, and go to state 186
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    field_name                      go to state 99
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    field_initializer_list          go to state 187
    field_initializer               go to state 101
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 102
    expression_list                 go to state 188


State 107

    0 $accept: program $end .

    $default  accept


State 108

   30 program: package_statement import_statements . declarations
   31        | package_statement import_statements .
   39 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    VAR             shift, and go to state 4
    FUNC            shift, and go to state 5
    TYPE            shift, and go to state 6
    IMPORT          shift, and go to state 8
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    $default  reduce using rule 31 (program)

    qualified_name                  go to state 36
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    import_statement                go to state 110
    declarations                    go to state 189
    type_declaration                go to state 45
    function_declaration            go to state 46
    anonymous_function_declaration  go to state 47
    method_declaration              go to state 48
    variable_declaration            go to state 49
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 56
    field_access                    go to state 57
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 76
    assignment_expression           go to state 77
    assignment_variable_list        go to state 78
    assignment_variable             go to state 79
    expression_statement            go to state 80


State 109

   32 program: package_statement declarations .
   43 declarations: declarations . type_declaration
   45             | declarations . variable_declaration
   47             | declarations . function_declaration
   49             | declarations . method_declaration
   51             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    VAR             shift, and go to state 4
    FUNC            shift, and go to state 5
    TYPE            shift, and go to state 6
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    $default  reduce using rule 32 (program)

    qualified_name                  go to state 36
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    type_declaration                go to state 112
    function_declaration            go to state 113
    anonymous_function_declaration  go to state 47
    method_declaration              go to state 114
    variable_declaration            go to state 115
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 56
    field_access                    go to state 57
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 76
    assignment_expression           go to state 77
    assignment_variable_list        go to state 78
    assignment_variable             go to state 79
    expression_statement            go to state 116


State 110

   39 import_statements: import_statements import_statement .

    $default  reduce using rule 39 (import_statements)


State 111

   33 program: import_statements declarations .
   43 declarations: declarations . type_declaration
   45             | declarations . variable_declaration
   47             | declarations . function_declaration
   49             | declarations . method_declaration
   51             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    VAR             shift, and go to state 4
    FUNC            shift, and go to state 5
    TYPE            shift, and go to state 6
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    $default  reduce using rule 33 (program)

    qualified_name                  go to state 36
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    type_declaration                go to state 112
    function_declaration            go to state 113
    anonymous_function_declaration  go to state 47
    method_declaration              go to state 114
    variable_declaration            go to state 115
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 56
    field_access                    go to state 57
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 76
    assignment_expression           go to state 77
    assignment_variable_list        go to state 78
    assignment_variable             go to state 79
    expression_statement            go to state 116


State 112

   43 declarations: declarations type_declaration .

    $default  reduce using rule 43 (declarations)


State 113

   47 declarations: declarations function_declaration .

    $default  reduce using rule 47 (declarations)


State 114

   49 declarations: declarations method_declaration .

    $default  reduce using rule 49 (declarations)


State 115

   45 declarations: declarations variable_declaration .

    $default  reduce using rule 45 (declarations)


State 116

   51 declarations: declarations expression_statement .

    $default  reduce using rule 51 (declarations)


State 117

  117 field_access: just_not_name '.' . ID

    ID  shift, and go to state 190


State 118

  116 array_access: array_complex_primary '[' . expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 191


State 119

  118 method_call: method_access '(' . argument_list ')'
  119            | method_access '(' . ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    ')'             shift, and go to state 192
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    argument_list                   go to state 193
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 102
    expression_list                 go to state 194


State 120

  135 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 135 (real_postfix_expression)


State 121

  136 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 136 (real_postfix_expression)


State 122

  141 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 141 (unary_expression)


State 123

  147 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 195
    unary_operator                  go to state 65


State 124

  148 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 196
    unary_operator                  go to state 65


State 125

  149 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 197
    unary_operator                  go to state 65


State 126

  151 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 198


State 127

  152 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 199


State 128

  154 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 200


State 129

  155 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 201


State 130

  160 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 202


State 131

  159 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 203


State 132

  157 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 204


State 133

  158 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 205


State 134

  162 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 206


State 135

  163 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 207


State 136

  165 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 208


State 137

  167 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 209


State 138

  169 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 210


State 139

  171 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 211


State 140

  173 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 212


State 141

    1 semicolons: ';' .

    $default  reduce using rule 1 (semicolons)


State 142

    2 semicolons: semicolons . ';'
  194 expression_statement: expression semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 194 (expression_statement)


State 143

    2 semicolons: semicolons . ';'
  195 expression_statement: assignment_expression semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 195 (expression_statement)


State 144

  180 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31

    qualified_name                  go to state 214
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    just_not_name                   go to state 215
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 56
    field_access                    go to state 57
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    assignment_variable             go to state 216


State 145

  177 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 102
    expression_list                 go to state 217


State 146

  184 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 184 (compound_assignment_operator)


State 147

  185 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 185 (compound_assignment_operator)


State 148

  186 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 186 (compound_assignment_operator)


State 149

  187 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 187 (compound_assignment_operator)


State 150

  188 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 188 (compound_assignment_operator)


State 151

  189 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 189 (compound_assignment_operator)


State 152

  190 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 190 (compound_assignment_operator)


State 153

  191 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 191 (compound_assignment_operator)


State 154

  192 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 192 (compound_assignment_operator)


State 155

  193 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 193 (compound_assignment_operator)


State 156

  178 assignment_expression: assignment_variable compound_assignment_operator . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 218


State 157

   23 function_type: FUNC . '(' ')'
   24              | FUNC . '(' ')' return_type_list
   25              | FUNC . '(' parameter_type_list ')'
   26              | FUNC . '(' parameter_type_list ')' return_type_list

    '('  shift, and go to state 219


State 158

   91 variable_list: variable_list ',' . ID

    ID  shift, and go to state 220


State 159

   88 variable_declaration: VAR variable_list '=' . expression_list semicolons

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 102
    expression_list                 go to state 221


State 160

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .

    '.'  shift, and go to state 104

    $default  reduce using rule 8 (type_name)


State 161

   92 variable_type: type_name .

    $default  reduce using rule 92 (variable_type)


State 162

   93 variable_type: function_type .

    $default  reduce using rule 93 (variable_type)


State 163

   87 variable_declaration: VAR variable_list variable_type . semicolons
   89                     | VAR variable_list variable_type . '=' expression_list semicolons

    ';'  shift, and go to state 141
    '='  shift, and go to state 222

    semicolons  go to state 223


State 164

   85 method_name: ID '.' . ID

    ID  shift, and go to state 224


State 165

   73 function_declaration: FUNC ID '(' . ')' code_block
   74                     | FUNC ID '(' . ')' return_type_list code_block
   75                     | FUNC ID '(' . parameter_list ')' code_block
   76                     | FUNC ID '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 166
    ')'  shift, and go to state 225

    parameter_list  go to state 226


State 166

   71 parameter_list: ID . type_name

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '['       shift, and go to state 30

    qualified_name  go to state 160
    type_name       go to state 227
    primitive_type  go to state 38
    array_type      go to state 39


State 167

   77 anonymous_function_declaration: FUNC '(' ')' . code_block
   78                               | FUNC '(' ')' . return_type_list code_block

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '('       shift, and go to state 228
    '['       shift, and go to state 30
    '{'       shift, and go to state 229

    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 231
    code_block        go to state 232


State 168

   72 parameter_list: parameter_list . ',' ID type_name
   79 anonymous_function_declaration: FUNC '(' parameter_list . ')' code_block
   80                               | FUNC '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 233
    ')'  shift, and go to state 234


State 169

   81 method_declaration: FUNC method_name '(' . ')' code_block
   82                   | FUNC method_name '(' . ')' return_type_list code_block
   83                   | FUNC method_name '(' . parameter_list ')' code_block
   84                   | FUNC method_name '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 166
    ')'  shift, and go to state 235

    parameter_list  go to state 236


State 170

   52 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 237


State 171

   53 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 238


State 172

   54 type_declaration: TYPE ID type_name . semicolons

    ';'  shift, and go to state 141

    semicolons  go to state 239


State 173

   55 type_declaration: TYPE ID function_type . semicolons

    ';'  shift, and go to state 141

    semicolons  go to state 240


State 174

    2 semicolons: semicolons . ';'
   37 package_statement: PACKAGE qualified_name semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 37 (package_statement)


State 175

    4 qualified_name: qualified_name '.' . ID
   41 import_statement: IMPORT qualified_name '.' . '*' semicolons

    ID   shift, and go to state 184
    '*'  shift, and go to state 241


State 176

    2 semicolons: semicolons . ';'
   40 import_statement: IMPORT qualified_name semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 40 (import_statement)


State 177

   99 complex_primary: '(' expression ')' .
  111 array_complex_primary: '(' expression ')' .

    '['       reduce using rule 111 (array_complex_primary)
    $default  reduce using rule 99 (complex_primary)


State 178

   27 array_type: '[' INTEGER ']' . type_name
   28           | '[' INTEGER ']' . function_type

    FUNC      shift, and go to state 157
    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '['       shift, and go to state 30

    qualified_name  go to state 160
    type_name       go to state 242
    primitive_type  go to state 38
    function_type   go to state 243
    array_type      go to state 39


State 179

  132 field_initializer: field_name ':' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 244


State 180

  131 field_initializer_list: field_initializer_list ',' . field_initializer

    ID  shift, and go to state 245

    field_name         go to state 99
    field_initializer  go to state 246


State 181

  126 struct_initializer: '{' field_initializer_list '}' .

    $default  reduce using rule 126 (struct_initializer)


State 182

  176 expression_list: expression_list ',' . expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 247


State 183

  125 struct_initializer: '{' expression_list '}' .

    $default  reduce using rule 125 (struct_initializer)


State 184

    4 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 4 (qualified_name)


State 185

  115 array_access: qualified_name '[' expression . ']'

    ']'  shift, and go to state 248


State 186

  127 struct_initializer: type_name '{' '}' .

    $default  reduce using rule 127 (struct_initializer)


State 187

  129 struct_initializer: type_name '{' field_initializer_list . '}'
  131 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 180
    '}'  shift, and go to state 249


State 188

  128 struct_initializer: type_name '{' expression_list . '}'
  176 expression_list: expression_list . ',' expression

    ','  shift, and go to state 182
    '}'  shift, and go to state 250


State 189

   30 program: package_statement import_statements declarations .
   43 declarations: declarations . type_declaration
   45             | declarations . variable_declaration
   47             | declarations . function_declaration
   49             | declarations . method_declaration
   51             | declarations . expression_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    VAR             shift, and go to state 4
    FUNC            shift, and go to state 5
    TYPE            shift, and go to state 6
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    $default  reduce using rule 30 (program)

    qualified_name                  go to state 36
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    type_declaration                go to state 112
    function_declaration            go to state 113
    anonymous_function_declaration  go to state 47
    method_declaration              go to state 114
    variable_declaration            go to state 115
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 56
    field_access                    go to state 57
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 76
    assignment_expression           go to state 77
    assignment_variable_list        go to state 78
    assignment_variable             go to state 79
    expression_statement            go to state 116


State 190

  117 field_access: just_not_name '.' ID .

    $default  reduce using rule 117 (field_access)


State 191

  116 array_access: array_complex_primary '[' expression . ']'

    ']'  shift, and go to state 251


State 192

  119 method_call: method_access '(' ')' .

    $default  reduce using rule 119 (method_call)


State 193

  118 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 252


State 194

  137 argument_list: expression_list .
  176 expression_list: expression_list . ',' expression

    ','  shift, and go to state 182

    $default  reduce using rule 137 (argument_list)


State 195

  147 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 147 (multiplicative_expression)


State 196

  148 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 148 (multiplicative_expression)


State 197

  149 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 149 (multiplicative_expression)


State 198

  147 multiplicative_expression: multiplicative_expression . '*' unary_expression
  148                          | multiplicative_expression . '/' unary_expression
  149                          | multiplicative_expression . '%' unary_expression
  151 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 151 (additive_expression)


State 199

  147 multiplicative_expression: multiplicative_expression . '*' unary_expression
  148                          | multiplicative_expression . '/' unary_expression
  149                          | multiplicative_expression . '%' unary_expression
  152 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 123
    '/'  shift, and go to state 124
    '%'  shift, and go to state 125

    $default  reduce using rule 152 (additive_expression)


State 200

  151 additive_expression: additive_expression . '+' multiplicative_expression
  152                    | additive_expression . '-' multiplicative_expression
  154 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 154 (shift_expression)


State 201

  151 additive_expression: additive_expression . '+' multiplicative_expression
  152                    | additive_expression . '-' multiplicative_expression
  155 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 126
    '-'  shift, and go to state 127

    $default  reduce using rule 155 (shift_expression)


State 202

  154 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  155                 | shift_expression . SHIFT_RIGHT additive_expression
  160 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 128
    SHIFT_RIGHT  shift, and go to state 129

    $default  reduce using rule 160 (relational_expression)


State 203

  154 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  155                 | shift_expression . SHIFT_RIGHT additive_expression
  159 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 128
    SHIFT_RIGHT  shift, and go to state 129

    $default  reduce using rule 159 (relational_expression)


State 204

  154 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  155                 | shift_expression . SHIFT_RIGHT additive_expression
  157 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 128
    SHIFT_RIGHT  shift, and go to state 129

    $default  reduce using rule 157 (relational_expression)


State 205

  154 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  155                 | shift_expression . SHIFT_RIGHT additive_expression
  158 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 128
    SHIFT_RIGHT  shift, and go to state 129

    $default  reduce using rule 158 (relational_expression)


State 206

  157 relational_expression: relational_expression . '<' shift_expression
  158                      | relational_expression . '>' shift_expression
  159                      | relational_expression . LE shift_expression
  160                      | relational_expression . GE shift_expression
  162 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 130
    LE   shift, and go to state 131
    '<'  shift, and go to state 132
    '>'  shift, and go to state 133

    $default  reduce using rule 162 (equality_expression)


State 207

  157 relational_expression: relational_expression . '<' shift_expression
  158                      | relational_expression . '>' shift_expression
  159                      | relational_expression . LE shift_expression
  160                      | relational_expression . GE shift_expression
  163 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 130
    LE   shift, and go to state 131
    '<'  shift, and go to state 132
    '>'  shift, and go to state 133

    $default  reduce using rule 163 (equality_expression)


State 208

  162 equality_expression: equality_expression . EQ relational_expression
  163                    | equality_expression . NE relational_expression
  165 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 134
    NE  shift, and go to state 135

    $default  reduce using rule 165 (and_expression)


State 209

  165 and_expression: and_expression . '&' equality_expression
  167 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 136

    $default  reduce using rule 167 (exclusive_or_expression)


State 210

  167 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  169 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 137

    $default  reduce using rule 169 (inclusive_or_expression)


State 211

  169 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  171 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 138

    $default  reduce using rule 171 (logical_and_expression)


State 212

  171 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  173 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 139

    $default  reduce using rule 173 (logical_or_expression)


State 213

    2 semicolons: semicolons ';' .

    $default  reduce using rule 2 (semicolons)


State 214

    4 qualified_name: qualified_name . '.' ID
    8 type_name: qualified_name .
  115 array_access: qualified_name . '[' expression ']'
  121 method_access: qualified_name .
  181 assignment_variable: qualified_name .

    '.'  shift, and go to state 104
    '['  shift, and go to state 105

    '('       reduce using rule 121 (method_access)
    '{'       reduce using rule 8 (type_name)
    $default  reduce using rule 181 (assignment_variable)


State 215

  117 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 117


State 216

  180 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 180 (assignment_variable_list)


State 217

  176 expression_list: expression_list . ',' expression
  177 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 182

    $default  reduce using rule 177 (assignment_expression)


State 218

  178 assignment_expression: assignment_variable compound_assignment_operator expression .

    $default  reduce using rule 178 (assignment_expression)


State 219

   23 function_type: FUNC '(' . ')'
   24              | FUNC '(' . ')' return_type_list
   25              | FUNC '(' . parameter_type_list ')'
   26              | FUNC '(' . parameter_type_list ')' return_type_list

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    ')'       shift, and go to state 253
    '['       shift, and go to state 30

    qualified_name       go to state 160
    type_name            go to state 254
    primitive_type       go to state 38
    array_type           go to state 39
    parameter_type_list  go to state 255


State 220

   91 variable_list: variable_list ',' ID .

    $default  reduce using rule 91 (variable_list)


State 221

   88 variable_declaration: VAR variable_list '=' expression_list . semicolons
  176 expression_list: expression_list . ',' expression

    ';'  shift, and go to state 141
    ','  shift, and go to state 182

    semicolons  go to state 256


State 222

   89 variable_declaration: VAR variable_list variable_type '=' . expression_list semicolons

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    FUNC            shift, and go to state 81
    INT8            shift, and go to state 9
    INT16           shift, and go to state 10
    INT32           shift, and go to state 11
    INT64           shift, and go to state 12
    UINT8           shift, and go to state 13
    UINT16          shift, and go to state 14
    UINT32          shift, and go to state 15
    UINT64          shift, and go to state 16
    FLOAT32         shift, and go to state 17
    FLOAT64         shift, and go to state 18
    BOOL            shift, and go to state 19
    STRING          shift, and go to state 20
    ANY_TYPE        shift, and go to state 21
    TOKEN_NULL      shift, and go to state 22
    TOKEN_TRUE      shift, and go to state 23
    TOKEN_FALSE     shift, and go to state 24
    INTEGER         shift, and go to state 25
    FLOAT           shift, and go to state 26
    STRING_LITERAL  shift, and go to state 27
    ID              shift, and go to state 28
    '('             shift, and go to state 29
    '['             shift, and go to state 30
    '{'             shift, and go to state 31
    '+'             shift, and go to state 32
    '-'             shift, and go to state 33
    '~'             shift, and go to state 34
    '!'             shift, and go to state 35

    qualified_name                  go to state 82
    type_name                       go to state 37
    primitive_type                  go to state 38
    array_type                      go to state 39
    anonymous_function_declaration  go to state 47
    primary_expression              go to state 50
    just_not_name                   go to state 51
    complex_primary                 go to state 52
    complex_primary_no_parenthesis  go to state 53
    literal_name                    go to state 54
    array_complex_primary           go to state 55
    array_access                    go to state 83
    field_access                    go to state 84
    method_call                     go to state 58
    method_access                   go to state 59
    initializer_expression          go to state 60
    struct_initializer              go to state 61
    postfix_expression              go to state 62
    real_postfix_expression         go to state 63
    unary_expression                go to state 64
    unary_operator                  go to state 65
    multiplicative_expression       go to state 66
    additive_expression             go to state 67
    shift_expression                go to state 68
    relational_expression           go to state 69
    equality_expression             go to state 70
    and_expression                  go to state 71
    exclusive_or_expression         go to state 72
    inclusive_or_expression         go to state 73
    logical_and_expression          go to state 74
    logical_or_expression           go to state 75
    expression                      go to state 102
    expression_list                 go to state 257


State 223

    2 semicolons: semicolons . ';'
   87 variable_declaration: VAR variable_list variable_type semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 87 (variable_declaration)


State 224

   85 method_name: ID '.' ID .

    $default  reduce using rule 85 (method_name)


State 225

   73 function_declaration: FUNC ID '(' ')' . code_block
   74                     | FUNC ID '(' ')' . return_type_list code_block

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '('       shift, and go to state 228
    '['       shift, and go to state 30
    '{'       shift, and go to state 229

    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 258
    code_block        go to state 259


State 226

   72 parameter_list: parameter_list . ',' ID type_name
   75 function_declaration: FUNC ID '(' parameter_list . ')' code_block
   76                     | FUNC ID '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 233
    ')'  shift, and go to state 260


State 227

   71 parameter_list: ID type_name .

    $default  reduce using rule 71 (parameter_list)


State 228

   68 return_type_list: '(' . type_name_list ')'

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '['       shift, and go to state 30

    qualified_name  go to state 160
    type_name_list  go to state 261
    type_name       go to state 262
    primitive_type  go to state 38
    array_type      go to state 39


State 229

   86 code_block: '{' . '}'

    '}'  shift, and go to state 263


State 230

   67 return_type_list: type_name .

    $default  reduce using rule 67 (return_type_list)


State 231

   78 anonymous_function_declaration: FUNC '(' ')' return_type_list . code_block

    '{'  shift, and go to state 229

    code_block  go to state 264


State 232

   77 anonymous_function_declaration: FUNC '(' ')' code_block .

    $default  reduce using rule 77 (anonymous_function_declaration)


State 233

   72 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 265


State 234

   79 anonymous_function_declaration: FUNC '(' parameter_list ')' . code_block
   80                               | FUNC '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '('       shift, and go to state 228
    '['       shift, and go to state 30
    '{'       shift, and go to state 229

    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 266
    code_block        go to state 267


State 235

   81 method_declaration: FUNC method_name '(' ')' . code_block
   82                   | FUNC method_name '(' ')' . return_type_list code_block

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '('       shift, and go to state 228
    '['       shift, and go to state 30
    '{'       shift, and go to state 229

    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 268
    code_block        go to state 269


State 236

   72 parameter_list: parameter_list . ',' ID type_name
   83 method_declaration: FUNC method_name '(' parameter_list . ')' code_block
   84                   | FUNC method_name '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 233
    ')'  shift, and go to state 270


State 237

   52 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 271

    field_declarations  go to state 272
    field_declaration   go to state 273


State 238

   53 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    FUNC  shift, and go to state 274

    interface_function_declarations  go to state 275
    interface_function_declaration   go to state 276


State 239

    2 semicolons: semicolons . ';'
   54 type_declaration: TYPE ID type_name semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 54 (type_declaration)


State 240

    2 semicolons: semicolons . ';'
   55 type_declaration: TYPE ID function_type semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 55 (type_declaration)


State 241

   41 import_statement: IMPORT qualified_name '.' '*' . semicolons

    ';'  shift, and go to state 141

    semicolons  go to state 277


State 242

   27 array_type: '[' INTEGER ']' type_name .

    $default  reduce using rule 27 (array_type)


State 243

   28 array_type: '[' INTEGER ']' function_type .

    $default  reduce using rule 28 (array_type)


State 244

  132 field_initializer: field_name ':' expression .

    $default  reduce using rule 132 (field_initializer)


State 245

   29 field_name: ID .

    $default  reduce using rule 29 (field_name)


State 246

  131 field_initializer_list: field_initializer_list ',' field_initializer .

    $default  reduce using rule 131 (field_initializer_list)


State 247

  176 expression_list: expression_list ',' expression .

    $default  reduce using rule 176 (expression_list)


State 248

  115 array_access: qualified_name '[' expression ']' .

    $default  reduce using rule 115 (array_access)


State 249

  129 struct_initializer: type_name '{' field_initializer_list '}' .

    $default  reduce using rule 129 (struct_initializer)


State 250

  128 struct_initializer: type_name '{' expression_list '}' .

    $default  reduce using rule 128 (struct_initializer)


State 251

  116 array_access: array_complex_primary '[' expression ']' .

    $default  reduce using rule 116 (array_access)


State 252

  118 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 118 (method_call)


State 253

   23 function_type: FUNC '(' ')' .
   24              | FUNC '(' ')' . return_type_list

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '('       shift, and go to state 228
    '['       shift, and go to state 30

    $default  reduce using rule 23 (function_type)

    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 278


State 254

   69 parameter_type_list: type_name .

    $default  reduce using rule 69 (parameter_type_list)


State 255

   25 function_type: FUNC '(' parameter_type_list . ')'
   26              | FUNC '(' parameter_type_list . ')' return_type_list
   70 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 279
    ')'  shift, and go to state 280


State 256

    2 semicolons: semicolons . ';'
   88 variable_declaration: VAR variable_list '=' expression_list semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 88 (variable_declaration)


State 257

   89 variable_declaration: VAR variable_list variable_type '=' expression_list . semicolons
  176 expression_list: expression_list . ',' expression

    ';'  shift, and go to state 141
    ','  shift, and go to state 182

    semicolons  go to state 281


State 258

   74 function_declaration: FUNC ID '(' ')' return_type_list . code_block

    '{'  shift, and go to state 229

    code_block  go to state 282


State 259

   73 function_declaration: FUNC ID '(' ')' code_block .

    $default  reduce using rule 73 (function_declaration)


State 260

   75 function_declaration: FUNC ID '(' parameter_list ')' . code_block
   76                     | FUNC ID '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '('       shift, and go to state 228
    '['       shift, and go to state 30
    '{'       shift, and go to state 229

    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 283
    code_block        go to state 284


State 261

    6 type_name_list: type_name_list . ',' type_name
   68 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 285
    ')'  shift, and go to state 286


State 262

    5 type_name_list: type_name .

    $default  reduce using rule 5 (type_name_list)


State 263

   86 code_block: '{' '}' .

    $default  reduce using rule 86 (code_block)


State 264

   78 anonymous_function_declaration: FUNC '(' ')' return_type_list code_block .

    $default  reduce using rule 78 (anonymous_function_declaration)


State 265

   72 parameter_list: parameter_list ',' ID . type_name

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '['       shift, and go to state 30

    qualified_name  go to state 160
    type_name       go to state 287
    primitive_type  go to state 38
    array_type      go to state 39


State 266

   80 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 229

    code_block  go to state 288


State 267

   79 anonymous_function_declaration: FUNC '(' parameter_list ')' code_block .

    $default  reduce using rule 79 (anonymous_function_declaration)


State 268

   82 method_declaration: FUNC method_name '(' ')' return_type_list . code_block

    '{'  shift, and go to state 229

    code_block  go to state 289


State 269

   81 method_declaration: FUNC method_name '(' ')' code_block .

    $default  reduce using rule 81 (method_declaration)


State 270

   83 method_declaration: FUNC method_name '(' parameter_list ')' . code_block
   84                   | FUNC method_name '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '('       shift, and go to state 228
    '['       shift, and go to state 30
    '{'       shift, and go to state 229

    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 290
    code_block        go to state 291


State 271

   58 field_declaration: ID . type_name semicolons

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '['       shift, and go to state 30

    qualified_name  go to state 160
    type_name       go to state 292
    primitive_type  go to state 38
    array_type      go to state 39


State 272

   52 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   57 field_declarations: field_declarations . field_declaration

    ID   shift, and go to state 271
    '}'  shift, and go to state 293

    field_declaration  go to state 294


State 273

   56 field_declarations: field_declaration .

    $default  reduce using rule 56 (field_declarations)


State 274

   61 interface_function_declaration: FUNC . ID '(' ')' semicolons
   62                               | FUNC . ID '(' ')' return_type_list semicolons
   63                               | FUNC . ID '(' parameter_type_list ')' semicolons
   64                               | FUNC . ID '(' parameter_type_list ')' return_type_list semicolons
   65                               | FUNC . ID '(' parameter_list ')' semicolons
   66                               | FUNC . ID '(' parameter_list ')' return_type_list semicolons

    ID  shift, and go to state 295


State 275

   53 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   60 interface_function_declarations: interface_function_declarations . interface_function_declaration

    FUNC  shift, and go to state 274
    '}'   shift, and go to state 296

    interface_function_declaration  go to state 297


State 276

   59 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 59 (interface_function_declarations)


State 277

    2 semicolons: semicolons . ';'
   41 import_statement: IMPORT qualified_name '.' '*' semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 41 (import_statement)


State 278

   24 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 24 (function_type)


State 279

   70 parameter_type_list: parameter_type_list ',' . type_name

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '['       shift, and go to state 30

    qualified_name  go to state 160
    type_name       go to state 298
    primitive_type  go to state 38
    array_type      go to state 39


State 280

   25 function_type: FUNC '(' parameter_type_list ')' .
   26              | FUNC '(' parameter_type_list ')' . return_type_list

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '('       shift, and go to state 228
    '['       shift, and go to state 30

    $default  reduce using rule 25 (function_type)

    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 299


State 281

    2 semicolons: semicolons . ';'
   89 variable_declaration: VAR variable_list variable_type '=' expression_list semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 89 (variable_declaration)


State 282

   74 function_declaration: FUNC ID '(' ')' return_type_list code_block .

    $default  reduce using rule 74 (function_declaration)


State 283

   76 function_declaration: FUNC ID '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 229

    code_block  go to state 300


State 284

   75 function_declaration: FUNC ID '(' parameter_list ')' code_block .

    $default  reduce using rule 75 (function_declaration)


State 285

    6 type_name_list: type_name_list ',' . type_name

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '['       shift, and go to state 30

    qualified_name  go to state 160
    type_name       go to state 301
    primitive_type  go to state 38
    array_type      go to state 39


State 286

   68 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 68 (return_type_list)


State 287

   72 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 72 (parameter_list)


State 288

   80 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 80 (anonymous_function_declaration)


State 289

   82 method_declaration: FUNC method_name '(' ')' return_type_list code_block .

    $default  reduce using rule 82 (method_declaration)


State 290

   84 method_declaration: FUNC method_name '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 229

    code_block  go to state 302


State 291

   83 method_declaration: FUNC method_name '(' parameter_list ')' code_block .

    $default  reduce using rule 83 (method_declaration)


State 292

   58 field_declaration: ID type_name . semicolons

    ';'  shift, and go to state 141

    semicolons  go to state 303


State 293

   52 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 52 (type_declaration)


State 294

   57 field_declarations: field_declarations field_declaration .

    $default  reduce using rule 57 (field_declarations)


State 295

   61 interface_function_declaration: FUNC ID . '(' ')' semicolons
   62                               | FUNC ID . '(' ')' return_type_list semicolons
   63                               | FUNC ID . '(' parameter_type_list ')' semicolons
   64                               | FUNC ID . '(' parameter_type_list ')' return_type_list semicolons
   65                               | FUNC ID . '(' parameter_list ')' semicolons
   66                               | FUNC ID . '(' parameter_list ')' return_type_list semicolons

    '('  shift, and go to state 304


State 296

   53 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 53 (type_declaration)


State 297

   60 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 60 (interface_function_declarations)


State 298

   70 parameter_type_list: parameter_type_list ',' type_name .

    $default  reduce using rule 70 (parameter_type_list)


State 299

   26 function_type: FUNC '(' parameter_type_list ')' return_type_list .

    $default  reduce using rule 26 (function_type)


State 300

   76 function_declaration: FUNC ID '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 76 (function_declaration)


State 301

    6 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 6 (type_name_list)


State 302

   84 method_declaration: FUNC method_name '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 84 (method_declaration)


State 303

    2 semicolons: semicolons . ';'
   58 field_declaration: ID type_name semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 58 (field_declaration)


State 304

   61 interface_function_declaration: FUNC ID '(' . ')' semicolons
   62                               | FUNC ID '(' . ')' return_type_list semicolons
   63                               | FUNC ID '(' . parameter_type_list ')' semicolons
   64                               | FUNC ID '(' . parameter_type_list ')' return_type_list semicolons
   65                               | FUNC ID '(' . parameter_list ')' semicolons
   66                               | FUNC ID '(' . parameter_list ')' return_type_list semicolons

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 305
    ')'       shift, and go to state 306
    '['       shift, and go to state 30

    qualified_name       go to state 160
    type_name            go to state 254
    primitive_type       go to state 38
    array_type           go to state 39
    parameter_type_list  go to state 307
    parameter_list       go to state 308


State 305

    3 qualified_name: ID .
   71 parameter_list: ID . type_name

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    '['       shift, and go to state 30

    $default  reduce using rule 3 (qualified_name)

    qualified_name  go to state 160
    type_name       go to state 227
    primitive_type  go to state 38
    array_type      go to state 39


State 306

   61 interface_function_declaration: FUNC ID '(' ')' . semicolons
   62                               | FUNC ID '(' ')' . return_type_list semicolons

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    ';'       shift, and go to state 141
    '('       shift, and go to state 228
    '['       shift, and go to state 30

    semicolons        go to state 309
    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 310


State 307

   63 interface_function_declaration: FUNC ID '(' parameter_type_list . ')' semicolons
   64                               | FUNC ID '(' parameter_type_list . ')' return_type_list semicolons
   70 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 279
    ')'  shift, and go to state 311


State 308

   65 interface_function_declaration: FUNC ID '(' parameter_list . ')' semicolons
   66                               | FUNC ID '(' parameter_list . ')' return_type_list semicolons
   72 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 233
    ')'  shift, and go to state 312


State 309

    2 semicolons: semicolons . ';'
   61 interface_function_declaration: FUNC ID '(' ')' semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 61 (interface_function_declaration)


State 310

   62 interface_function_declaration: FUNC ID '(' ')' return_type_list . semicolons

    ';'  shift, and go to state 141

    semicolons  go to state 313


State 311

   63 interface_function_declaration: FUNC ID '(' parameter_type_list ')' . semicolons
   64                               | FUNC ID '(' parameter_type_list ')' . return_type_list semicolons

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    ';'       shift, and go to state 141
    '('       shift, and go to state 228
    '['       shift, and go to state 30

    semicolons        go to state 314
    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 315


State 312

   65 interface_function_declaration: FUNC ID '(' parameter_list ')' . semicolons
   66                               | FUNC ID '(' parameter_list ')' . return_type_list semicolons

    INT8      shift, and go to state 9
    INT16     shift, and go to state 10
    INT32     shift, and go to state 11
    INT64     shift, and go to state 12
    UINT8     shift, and go to state 13
    UINT16    shift, and go to state 14
    UINT32    shift, and go to state 15
    UINT64    shift, and go to state 16
    FLOAT32   shift, and go to state 17
    FLOAT64   shift, and go to state 18
    BOOL      shift, and go to state 19
    STRING    shift, and go to state 20
    ANY_TYPE  shift, and go to state 21
    ID        shift, and go to state 28
    ';'       shift, and go to state 141
    '('       shift, and go to state 228
    '['       shift, and go to state 30

    semicolons        go to state 316
    qualified_name    go to state 160
    type_name         go to state 230
    primitive_type    go to state 38
    array_type        go to state 39
    return_type_list  go to state 317


State 313

    2 semicolons: semicolons . ';'
   62 interface_function_declaration: FUNC ID '(' ')' return_type_list semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 62 (interface_function_declaration)


State 314

    2 semicolons: semicolons . ';'
   63 interface_function_declaration: FUNC ID '(' parameter_type_list ')' semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 63 (interface_function_declaration)


State 315

   64 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list . semicolons

    ';'  shift, and go to state 141

    semicolons  go to state 318


State 316

    2 semicolons: semicolons . ';'
   65 interface_function_declaration: FUNC ID '(' parameter_list ')' semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 65 (interface_function_declaration)


State 317

   66 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list . semicolons

    ';'  shift, and go to state 141

    semicolons  go to state 319


State 318

    2 semicolons: semicolons . ';'
   64 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 64 (interface_function_declaration)


State 319

    2 semicolons: semicolons . ';'
   66 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list semicolons .

    ';'  shift, and go to state 213

    $default  reduce using rule 66 (interface_function_declaration)
