Terminals unused in grammar

   ELLIPSIS
   NOT
   IF
   ELSE
   WHILE
   DO
   FOR
   IN
   SWITCH
   CASE
   BREAK
   CONTINUE
   DEFAULT
   VAR
   FUNC
   RETURN
   STRUCT
   INTERFACE
   TYPE
   CONST
   INT8
   INT16
   INT32
   INT64
   UINT8
   UINT16
   UINT32
   UINT64
   FLOAT32
   FLOAT64
   BOOL
   STRING
   HEX
   OCT
   IFX


Grammar

    0 $accept: program $end

    1 semicolons: ';'
    2           | semicolons ';'

    3 program: package_statement import_statements declarations
    4        | package_statement import_statements
    5        | package_statement declarations
    6        | import_statements declarations
    7        | package_statement
    8        | import_statements
    9        | declarations

   10 package_statement: PACKAGE qualified_name semicolons

   11 import_statements: import_statement
   12                  | import_statements import_statement

   13 import_statement: IMPORT qualified_name semicolons
   14                 | IMPORT qualified_name '.' '*' semicolons

   15 qualified_name: ID
   16               | qualified_name '.' ID

   17 declarations: base_expression ';'
   18             | declarations base_expression ';'
   19             | assignment_expression ';'
   20             | declarations assignment_expression ';'

   21 primary_expression: qualified_name
   22                   | just_not_name

   23 just_not_name: TOKEN_THIS
   24              | complex_primary

   25 complex_primary: '(' base_expression ')'
   26                | complex_primary_no_parenthesis

   27 complex_primary_no_parenthesis: literal_name
   28                               | array_access
   29                               | field_access
   30                               | method_call

   31 literal_name: INTEGER
   32             | FLOAT
   33             | STRING_LITERAL
   34             | TOKEN_NULL
   35             | TOKEN_TRUE
   36             | TOKEN_FALSE

   37 array_complex_primary: '(' base_expression ')'
   38                      | array_access
   39                      | field_access
   40                      | method_call

   41 array_access: qualified_name '[' base_expression ']'
   42             | array_complex_primary '[' base_expression ']'

   43 field_access: just_not_name '.' ID

   44 method_call: method_access '(' argument_list ')'
   45            | method_access '(' ')'

   46 method_access: complex_primary_no_parenthesis
   47              | qualified_name

   48 postfix_expression: primary_expression
   49                   | real_postfix_expression

   50 real_postfix_expression: postfix_expression INC
   51                        | postfix_expression DEC

   52 argument_list: base_expression_list

   53 unary_expression: postfix_expression
   54                 | INC unary_expression
   55                 | DEC unary_expression
   56                 | unary_operator unary_expression

   57 unary_operator: '+'
   58               | '-'
   59               | '~'
   60               | '!'

   61 multiplicative_expression: unary_expression
   62                          | multiplicative_expression '*' unary_expression
   63                          | multiplicative_expression '/' unary_expression
   64                          | multiplicative_expression '%' unary_expression

   65 additive_expression: multiplicative_expression
   66                    | additive_expression '+' multiplicative_expression
   67                    | additive_expression '-' multiplicative_expression

   68 shift_expression: additive_expression
   69                 | shift_expression SHIFT_LEFT additive_expression
   70                 | shift_expression SHIFT_RIGHT additive_expression

   71 relational_expression: shift_expression
   72                      | relational_expression '<' shift_expression
   73                      | relational_expression '>' shift_expression
   74                      | relational_expression LE shift_expression
   75                      | relational_expression GE shift_expression

   76 equality_expression: relational_expression
   77                    | equality_expression EQ relational_expression
   78                    | equality_expression NE relational_expression

   79 and_expression: equality_expression
   80               | and_expression '&' equality_expression

   81 exclusive_or_expression: and_expression
   82                        | exclusive_or_expression '^' and_expression

   83 inclusive_or_expression: exclusive_or_expression
   84                        | inclusive_or_expression '|' exclusive_or_expression

   85 logical_and_expression: inclusive_or_expression
   86                       | logical_and_expression AND inclusive_or_expression

   87 logical_or_expression: logical_and_expression
   88                      | logical_or_expression OR logical_and_expression

   89 base_expression: logical_or_expression

   90 base_expression_list: base_expression
   91                     | base_expression_list ',' base_expression

   92 assignment_expression: assign_var_list '=' base_expression_list
   93                      | assign_var compound_assign_operator base_expression

   94 assign_var_list: assign_var
   95                | assign_var_list ',' assign_var

   96 assign_var: qualified_name
   97           | array_access
   98           | field_access

   99 compound_assign_operator: ADD_ASSIGN
  100                         | SUB_ASSIGN
  101                         | MUL_ASSIGN
  102                         | DIV_ASSIGN
  103                         | MOD_ASSIGN
  104                         | AND_ASSIGN
  105                         | OR_ASSIGN
  106                         | XOR_ASSIGN
  107                         | RIGHT_ASSIGN
  108                         | LEFT_ASSIGN


Terminals, with rules where they appear

$end (0) 0
'!' (33) 60
'%' (37) 64
'&' (38) 80
'(' (40) 25 37 44 45
')' (41) 25 37 44 45
'*' (42) 14 62
'+' (43) 57 66
',' (44) 91 95
'-' (45) 58 67
'.' (46) 14 16 43
'/' (47) 63
';' (59) 1 2 17 18 19 20
'<' (60) 72
'=' (61) 92
'>' (62) 73
'[' (91) 41 42
']' (93) 41 42
'^' (94) 82
'|' (124) 84
'~' (126) 59
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 99
SUB_ASSIGN (260) 100
MUL_ASSIGN (261) 101
DIV_ASSIGN (262) 102
MOD_ASSIGN (263) 103
AND_ASSIGN (264) 104
OR_ASSIGN (265) 105
XOR_ASSIGN (266) 106
RIGHT_ASSIGN (267) 107
LEFT_ASSIGN (268) 108
EQ (269) 77
NE (270) 78
GE (271) 75
LE (272) 74
AND (273) 86
OR (274) 88
NOT (275)
SHIFT_LEFT (276) 69
SHIFT_RIGHT (277) 70
INC (278) 50 54
DEC (279) 51 55
TOKEN_THIS (280) 23
IF (281)
ELSE (282)
WHILE (283)
DO (284)
FOR (285)
IN (286)
SWITCH (287)
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292)
FUNC (293)
RETURN (294)
STRUCT (295)
INTERFACE (296)
TYPE (297)
CONST (298)
PACKAGE (299) 10
IMPORT (300) 13 14
INT8 (301)
INT16 (302)
INT32 (303)
INT64 (304)
UINT8 (305)
UINT16 (306)
UINT32 (307)
UINT64 (308)
FLOAT32 (309)
FLOAT64 (310)
BOOL (311)
STRING (312)
TOKEN_NULL (313) 34
TOKEN_TRUE (314) 35
TOKEN_FALSE (315) 36
INTEGER (316) 31
HEX (317)
OCT (318)
FLOAT (319) 32
STRING_LITERAL (320) 33
ID (321) 15 16 43
IFX (322)


Nonterminals, with rules where they appear

$accept (88)
    on left: 0
semicolons (89)
    on left: 1 2, on right: 2 10 13 14
program (90)
    on left: 3 4 5 6 7 8 9, on right: 0
package_statement (91)
    on left: 10, on right: 3 4 5 7
import_statements (92)
    on left: 11 12, on right: 3 4 6 8 12
import_statement (93)
    on left: 13 14, on right: 11 12
qualified_name (94)
    on left: 15 16, on right: 10 13 14 16 21 41 47 96
declarations (95)
    on left: 17 18 19 20, on right: 3 5 6 9 18 20
primary_expression (96)
    on left: 21 22, on right: 48
just_not_name (97)
    on left: 23 24, on right: 22 43
complex_primary (98)
    on left: 25 26, on right: 24
complex_primary_no_parenthesis (99)
    on left: 27 28 29 30, on right: 26 46
literal_name (100)
    on left: 31 32 33 34 35 36, on right: 27
array_complex_primary (101)
    on left: 37 38 39 40, on right: 42
array_access (102)
    on left: 41 42, on right: 28 38 97
field_access (103)
    on left: 43, on right: 29 39 98
method_call (104)
    on left: 44 45, on right: 30 40
method_access (105)
    on left: 46 47, on right: 44 45
postfix_expression (106)
    on left: 48 49, on right: 50 51 53
real_postfix_expression (107)
    on left: 50 51, on right: 49
argument_list (108)
    on left: 52, on right: 44
unary_expression (109)
    on left: 53 54 55 56, on right: 54 55 56 61 62 63 64
unary_operator (110)
    on left: 57 58 59 60, on right: 56
multiplicative_expression (111)
    on left: 61 62 63 64, on right: 62 63 64 65 66 67
additive_expression (112)
    on left: 65 66 67, on right: 66 67 68 69 70
shift_expression (113)
    on left: 68 69 70, on right: 69 70 71 72 73 74 75
relational_expression (114)
    on left: 71 72 73 74 75, on right: 72 73 74 75 76 77 78
equality_expression (115)
    on left: 76 77 78, on right: 77 78 79 80
and_expression (116)
    on left: 79 80, on right: 80 81 82
exclusive_or_expression (117)
    on left: 81 82, on right: 82 83 84
inclusive_or_expression (118)
    on left: 83 84, on right: 84 85 86
logical_and_expression (119)
    on left: 85 86, on right: 86 87 88
logical_or_expression (120)
    on left: 87 88, on right: 88 89
base_expression (121)
    on left: 89, on right: 17 18 25 37 41 42 90 91 93
base_expression_list (122)
    on left: 90 91, on right: 52 91 92
assignment_expression (123)
    on left: 92 93, on right: 19 20
assign_var_list (124)
    on left: 94 95, on right: 92 95
assign_var (125)
    on left: 96 97 98, on right: 93 94 95
compound_assign_operator (126)
    on left: 99 100 101 102 103 104 105 106 107 108, on right: 93


State 0

    0 $accept: . program $end

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    PACKAGE         shift, and go to state 4
    IMPORT          shift, and go to state 5
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    program                         go to state 18
    package_statement               go to state 19
    import_statements               go to state 20
    import_statement                go to state 21
    qualified_name                  go to state 22
    declarations                    go to state 23
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 30
    field_access                    go to state 31
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 48
    assignment_expression           go to state 49
    assign_var_list                 go to state 50
    assign_var                      go to state 51


State 1

   54 unary_expression: INC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 55
    unary_operator                  go to state 37


State 2

   55 unary_expression: DEC . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 56
    unary_operator                  go to state 37


State 3

   23 just_not_name: TOKEN_THIS .

    $default  reduce using rule 23 (just_not_name)


State 4

   10 package_statement: PACKAGE . qualified_name semicolons

    ID  shift, and go to state 12

    qualified_name  go to state 57


State 5

   13 import_statement: IMPORT . qualified_name semicolons
   14                 | IMPORT . qualified_name '.' '*' semicolons

    ID  shift, and go to state 12

    qualified_name  go to state 58


State 6

   34 literal_name: TOKEN_NULL .

    $default  reduce using rule 34 (literal_name)


State 7

   35 literal_name: TOKEN_TRUE .

    $default  reduce using rule 35 (literal_name)


State 8

   36 literal_name: TOKEN_FALSE .

    $default  reduce using rule 36 (literal_name)


State 9

   31 literal_name: INTEGER .

    $default  reduce using rule 31 (literal_name)


State 10

   32 literal_name: FLOAT .

    $default  reduce using rule 32 (literal_name)


State 11

   33 literal_name: STRING_LITERAL .

    $default  reduce using rule 33 (literal_name)


State 12

   15 qualified_name: ID .

    $default  reduce using rule 15 (qualified_name)


State 13

   25 complex_primary: '(' . base_expression ')'
   37 array_complex_primary: '(' . base_expression ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 59


State 14

   57 unary_operator: '+' .

    $default  reduce using rule 57 (unary_operator)


State 15

   58 unary_operator: '-' .

    $default  reduce using rule 58 (unary_operator)


State 16

   59 unary_operator: '~' .

    $default  reduce using rule 59 (unary_operator)


State 17

   60 unary_operator: '!' .

    $default  reduce using rule 60 (unary_operator)


State 18

    0 $accept: program . $end

    $end  shift, and go to state 60


State 19

    3 program: package_statement . import_statements declarations
    4        | package_statement . import_statements
    5        | package_statement . declarations
    7        | package_statement .

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    IMPORT          shift, and go to state 5
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    $default  reduce using rule 7 (program)

    import_statements               go to state 61
    import_statement                go to state 21
    qualified_name                  go to state 22
    declarations                    go to state 62
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 30
    field_access                    go to state 31
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 48
    assignment_expression           go to state 49
    assign_var_list                 go to state 50
    assign_var                      go to state 51


State 20

    6 program: import_statements . declarations
    8        | import_statements .
   12 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    IMPORT          shift, and go to state 5
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    $default  reduce using rule 8 (program)

    import_statement                go to state 63
    qualified_name                  go to state 22
    declarations                    go to state 64
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 30
    field_access                    go to state 31
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 48
    assignment_expression           go to state 49
    assign_var_list                 go to state 50
    assign_var                      go to state 51


State 21

   11 import_statements: import_statement .

    $default  reduce using rule 11 (import_statements)


State 22

   16 qualified_name: qualified_name . '.' ID
   21 primary_expression: qualified_name .
   41 array_access: qualified_name . '[' base_expression ']'
   47 method_access: qualified_name .
   96 assign_var: qualified_name .

    '.'  shift, and go to state 65
    '['  shift, and go to state 66

    ADD_ASSIGN    reduce using rule 96 (assign_var)
    SUB_ASSIGN    reduce using rule 96 (assign_var)
    MUL_ASSIGN    reduce using rule 96 (assign_var)
    DIV_ASSIGN    reduce using rule 96 (assign_var)
    MOD_ASSIGN    reduce using rule 96 (assign_var)
    AND_ASSIGN    reduce using rule 96 (assign_var)
    OR_ASSIGN     reduce using rule 96 (assign_var)
    XOR_ASSIGN    reduce using rule 96 (assign_var)
    RIGHT_ASSIGN  reduce using rule 96 (assign_var)
    LEFT_ASSIGN   reduce using rule 96 (assign_var)
    '('           reduce using rule 47 (method_access)
    ','           reduce using rule 96 (assign_var)
    '='           reduce using rule 96 (assign_var)
    $default      reduce using rule 21 (primary_expression)


State 23

    9 program: declarations .
   18 declarations: declarations . base_expression ';'
   20             | declarations . assignment_expression ';'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    $default  reduce using rule 9 (program)

    qualified_name                  go to state 22
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 30
    field_access                    go to state 31
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 67
    assignment_expression           go to state 68
    assign_var_list                 go to state 50
    assign_var                      go to state 51


State 24

   48 postfix_expression: primary_expression .

    $default  reduce using rule 48 (postfix_expression)


State 25

   22 primary_expression: just_not_name .
   43 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 69

    $default  reduce using rule 22 (primary_expression)


State 26

   24 just_not_name: complex_primary .

    $default  reduce using rule 24 (just_not_name)


State 27

   26 complex_primary: complex_primary_no_parenthesis .
   46 method_access: complex_primary_no_parenthesis .

    '('       reduce using rule 46 (method_access)
    $default  reduce using rule 26 (complex_primary)


State 28

   27 complex_primary_no_parenthesis: literal_name .

    $default  reduce using rule 27 (complex_primary_no_parenthesis)


State 29

   42 array_access: array_complex_primary . '[' base_expression ']'

    '['  shift, and go to state 70


State 30

   28 complex_primary_no_parenthesis: array_access .
   38 array_complex_primary: array_access .
   97 assign_var: array_access .

    ADD_ASSIGN    reduce using rule 97 (assign_var)
    SUB_ASSIGN    reduce using rule 97 (assign_var)
    MUL_ASSIGN    reduce using rule 97 (assign_var)
    DIV_ASSIGN    reduce using rule 97 (assign_var)
    MOD_ASSIGN    reduce using rule 97 (assign_var)
    AND_ASSIGN    reduce using rule 97 (assign_var)
    OR_ASSIGN     reduce using rule 97 (assign_var)
    XOR_ASSIGN    reduce using rule 97 (assign_var)
    RIGHT_ASSIGN  reduce using rule 97 (assign_var)
    LEFT_ASSIGN   reduce using rule 97 (assign_var)
    '['           reduce using rule 38 (array_complex_primary)
    ','           reduce using rule 97 (assign_var)
    '='           reduce using rule 97 (assign_var)
    $default      reduce using rule 28 (complex_primary_no_parenthesis)


State 31

   29 complex_primary_no_parenthesis: field_access .
   39 array_complex_primary: field_access .
   98 assign_var: field_access .

    ADD_ASSIGN    reduce using rule 98 (assign_var)
    SUB_ASSIGN    reduce using rule 98 (assign_var)
    MUL_ASSIGN    reduce using rule 98 (assign_var)
    DIV_ASSIGN    reduce using rule 98 (assign_var)
    MOD_ASSIGN    reduce using rule 98 (assign_var)
    AND_ASSIGN    reduce using rule 98 (assign_var)
    OR_ASSIGN     reduce using rule 98 (assign_var)
    XOR_ASSIGN    reduce using rule 98 (assign_var)
    RIGHT_ASSIGN  reduce using rule 98 (assign_var)
    LEFT_ASSIGN   reduce using rule 98 (assign_var)
    '['           reduce using rule 39 (array_complex_primary)
    ','           reduce using rule 98 (assign_var)
    '='           reduce using rule 98 (assign_var)
    $default      reduce using rule 29 (complex_primary_no_parenthesis)


State 32

   30 complex_primary_no_parenthesis: method_call .
   40 array_complex_primary: method_call .

    '['       reduce using rule 40 (array_complex_primary)
    $default  reduce using rule 30 (complex_primary_no_parenthesis)


State 33

   44 method_call: method_access . '(' argument_list ')'
   45            | method_access . '(' ')'

    '('  shift, and go to state 71


State 34

   50 real_postfix_expression: postfix_expression . INC
   51                        | postfix_expression . DEC
   53 unary_expression: postfix_expression .

    INC  shift, and go to state 72
    DEC  shift, and go to state 73

    $default  reduce using rule 53 (unary_expression)


State 35

   49 postfix_expression: real_postfix_expression .

    $default  reduce using rule 49 (postfix_expression)


State 36

   61 multiplicative_expression: unary_expression .

    $default  reduce using rule 61 (multiplicative_expression)


State 37

   56 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 74
    unary_operator                  go to state 37


State 38

   62 multiplicative_expression: multiplicative_expression . '*' unary_expression
   63                          | multiplicative_expression . '/' unary_expression
   64                          | multiplicative_expression . '%' unary_expression
   65 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77

    $default  reduce using rule 65 (additive_expression)


State 39

   66 additive_expression: additive_expression . '+' multiplicative_expression
   67                    | additive_expression . '-' multiplicative_expression
   68 shift_expression: additive_expression .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 68 (shift_expression)


State 40

   69 shift_expression: shift_expression . SHIFT_LEFT additive_expression
   70                 | shift_expression . SHIFT_RIGHT additive_expression
   71 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81

    $default  reduce using rule 71 (relational_expression)


State 41

   72 relational_expression: relational_expression . '<' shift_expression
   73                      | relational_expression . '>' shift_expression
   74                      | relational_expression . LE shift_expression
   75                      | relational_expression . GE shift_expression
   76 equality_expression: relational_expression .

    GE   shift, and go to state 82
    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '>'  shift, and go to state 85

    $default  reduce using rule 76 (equality_expression)


State 42

   77 equality_expression: equality_expression . EQ relational_expression
   78                    | equality_expression . NE relational_expression
   79 and_expression: equality_expression .

    EQ  shift, and go to state 86
    NE  shift, and go to state 87

    $default  reduce using rule 79 (and_expression)


State 43

   80 and_expression: and_expression . '&' equality_expression
   81 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 88

    $default  reduce using rule 81 (exclusive_or_expression)


State 44

   82 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   83 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 89

    $default  reduce using rule 83 (inclusive_or_expression)


State 45

   84 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   85 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 90

    $default  reduce using rule 85 (logical_and_expression)


State 46

   86 logical_and_expression: logical_and_expression . AND inclusive_or_expression
   87 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 91

    $default  reduce using rule 87 (logical_or_expression)


State 47

   88 logical_or_expression: logical_or_expression . OR logical_and_expression
   89 base_expression: logical_or_expression .

    OR  shift, and go to state 92

    $default  reduce using rule 89 (base_expression)


State 48

   17 declarations: base_expression . ';'

    ';'  shift, and go to state 93


State 49

   19 declarations: assignment_expression . ';'

    ';'  shift, and go to state 94


State 50

   92 assignment_expression: assign_var_list . '=' base_expression_list
   95 assign_var_list: assign_var_list . ',' assign_var

    ','  shift, and go to state 95
    '='  shift, and go to state 96


State 51

   93 assignment_expression: assign_var . compound_assign_operator base_expression
   94 assign_var_list: assign_var .

    ADD_ASSIGN    shift, and go to state 97
    SUB_ASSIGN    shift, and go to state 98
    MUL_ASSIGN    shift, and go to state 99
    DIV_ASSIGN    shift, and go to state 100
    MOD_ASSIGN    shift, and go to state 101
    AND_ASSIGN    shift, and go to state 102
    OR_ASSIGN     shift, and go to state 103
    XOR_ASSIGN    shift, and go to state 104
    RIGHT_ASSIGN  shift, and go to state 105
    LEFT_ASSIGN   shift, and go to state 106

    $default  reduce using rule 94 (assign_var_list)

    compound_assign_operator  go to state 107


State 52

   16 qualified_name: qualified_name . '.' ID
   21 primary_expression: qualified_name .
   41 array_access: qualified_name . '[' base_expression ']'
   47 method_access: qualified_name .

    '.'  shift, and go to state 65
    '['  shift, and go to state 66

    '('       reduce using rule 47 (method_access)
    $default  reduce using rule 21 (primary_expression)


State 53

   28 complex_primary_no_parenthesis: array_access .
   38 array_complex_primary: array_access .

    '['       reduce using rule 38 (array_complex_primary)
    $default  reduce using rule 28 (complex_primary_no_parenthesis)


State 54

   29 complex_primary_no_parenthesis: field_access .
   39 array_complex_primary: field_access .

    '['       reduce using rule 39 (array_complex_primary)
    $default  reduce using rule 29 (complex_primary_no_parenthesis)


State 55

   54 unary_expression: INC unary_expression .

    $default  reduce using rule 54 (unary_expression)


State 56

   55 unary_expression: DEC unary_expression .

    $default  reduce using rule 55 (unary_expression)


State 57

   10 package_statement: PACKAGE qualified_name . semicolons
   16 qualified_name: qualified_name . '.' ID

    ';'  shift, and go to state 108
    '.'  shift, and go to state 65

    semicolons  go to state 109


State 58

   13 import_statement: IMPORT qualified_name . semicolons
   14                 | IMPORT qualified_name . '.' '*' semicolons
   16 qualified_name: qualified_name . '.' ID

    ';'  shift, and go to state 108
    '.'  shift, and go to state 110

    semicolons  go to state 111


State 59

   25 complex_primary: '(' base_expression . ')'
   37 array_complex_primary: '(' base_expression . ')'

    ')'  shift, and go to state 112


State 60

    0 $accept: program $end .

    $default  accept


State 61

    3 program: package_statement import_statements . declarations
    4        | package_statement import_statements .
   12 import_statements: import_statements . import_statement

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    IMPORT          shift, and go to state 5
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    $default  reduce using rule 4 (program)

    import_statement                go to state 63
    qualified_name                  go to state 22
    declarations                    go to state 113
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 30
    field_access                    go to state 31
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 48
    assignment_expression           go to state 49
    assign_var_list                 go to state 50
    assign_var                      go to state 51


State 62

    5 program: package_statement declarations .
   18 declarations: declarations . base_expression ';'
   20             | declarations . assignment_expression ';'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    $default  reduce using rule 5 (program)

    qualified_name                  go to state 22
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 30
    field_access                    go to state 31
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 67
    assignment_expression           go to state 68
    assign_var_list                 go to state 50
    assign_var                      go to state 51


State 63

   12 import_statements: import_statements import_statement .

    $default  reduce using rule 12 (import_statements)


State 64

    6 program: import_statements declarations .
   18 declarations: declarations . base_expression ';'
   20             | declarations . assignment_expression ';'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    $default  reduce using rule 6 (program)

    qualified_name                  go to state 22
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 30
    field_access                    go to state 31
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 67
    assignment_expression           go to state 68
    assign_var_list                 go to state 50
    assign_var                      go to state 51


State 65

   16 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 114


State 66

   41 array_access: qualified_name '[' . base_expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 115


State 67

   18 declarations: declarations base_expression . ';'

    ';'  shift, and go to state 116


State 68

   20 declarations: declarations assignment_expression . ';'

    ';'  shift, and go to state 117


State 69

   43 field_access: just_not_name '.' . ID

    ID  shift, and go to state 118


State 70

   42 array_access: array_complex_primary '[' . base_expression ']'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 119


State 71

   44 method_call: method_access '(' . argument_list ')'
   45            | method_access '(' . ')'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    ')'             shift, and go to state 120
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    argument_list                   go to state 121
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 122
    base_expression_list            go to state 123


State 72

   50 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 50 (real_postfix_expression)


State 73

   51 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 51 (real_postfix_expression)


State 74

   56 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 56 (unary_expression)


State 75

   62 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 124
    unary_operator                  go to state 37


State 76

   63 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 125
    unary_operator                  go to state 37


State 77

   64 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 126
    unary_operator                  go to state 37


State 78

   66 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 127


State 79

   67 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 128


State 80

   69 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 129


State 81

   70 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 130


State 82

   75 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 131


State 83

   74 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 132


State 84

   72 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 133


State 85

   73 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 134


State 86

   77 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 135


State 87

   78 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 136


State 88

   80 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 137


State 89

   82 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 138


State 90

   84 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 139


State 91

   86 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 140


State 92

   88 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 141


State 93

   17 declarations: base_expression ';' .

    $default  reduce using rule 17 (declarations)


State 94

   19 declarations: assignment_expression ';' .

    $default  reduce using rule 19 (declarations)


State 95

   95 assign_var_list: assign_var_list ',' . assign_var

    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13

    qualified_name                  go to state 142
    just_not_name                   go to state 143
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 30
    field_access                    go to state 31
    method_call                     go to state 32
    method_access                   go to state 33
    assign_var                      go to state 144


State 96

   92 assignment_expression: assign_var_list '=' . base_expression_list

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 122
    base_expression_list            go to state 145


State 97

   99 compound_assign_operator: ADD_ASSIGN .

    $default  reduce using rule 99 (compound_assign_operator)


State 98

  100 compound_assign_operator: SUB_ASSIGN .

    $default  reduce using rule 100 (compound_assign_operator)


State 99

  101 compound_assign_operator: MUL_ASSIGN .

    $default  reduce using rule 101 (compound_assign_operator)


State 100

  102 compound_assign_operator: DIV_ASSIGN .

    $default  reduce using rule 102 (compound_assign_operator)


State 101

  103 compound_assign_operator: MOD_ASSIGN .

    $default  reduce using rule 103 (compound_assign_operator)


State 102

  104 compound_assign_operator: AND_ASSIGN .

    $default  reduce using rule 104 (compound_assign_operator)


State 103

  105 compound_assign_operator: OR_ASSIGN .

    $default  reduce using rule 105 (compound_assign_operator)


State 104

  106 compound_assign_operator: XOR_ASSIGN .

    $default  reduce using rule 106 (compound_assign_operator)


State 105

  107 compound_assign_operator: RIGHT_ASSIGN .

    $default  reduce using rule 107 (compound_assign_operator)


State 106

  108 compound_assign_operator: LEFT_ASSIGN .

    $default  reduce using rule 108 (compound_assign_operator)


State 107

   93 assignment_expression: assign_var compound_assign_operator . base_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 146


State 108

    1 semicolons: ';' .

    $default  reduce using rule 1 (semicolons)


State 109

    2 semicolons: semicolons . ';'
   10 package_statement: PACKAGE qualified_name semicolons .

    ';'  shift, and go to state 147

    $default  reduce using rule 10 (package_statement)


State 110

   14 import_statement: IMPORT qualified_name '.' . '*' semicolons
   16 qualified_name: qualified_name '.' . ID

    ID   shift, and go to state 114
    '*'  shift, and go to state 148


State 111

    2 semicolons: semicolons . ';'
   13 import_statement: IMPORT qualified_name semicolons .

    ';'  shift, and go to state 147

    $default  reduce using rule 13 (import_statement)


State 112

   25 complex_primary: '(' base_expression ')' .
   37 array_complex_primary: '(' base_expression ')' .

    '['       reduce using rule 37 (array_complex_primary)
    $default  reduce using rule 25 (complex_primary)


State 113

    3 program: package_statement import_statements declarations .
   18 declarations: declarations . base_expression ';'
   20             | declarations . assignment_expression ';'

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    $default  reduce using rule 3 (program)

    qualified_name                  go to state 22
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 30
    field_access                    go to state 31
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 67
    assignment_expression           go to state 68
    assign_var_list                 go to state 50
    assign_var                      go to state 51


State 114

   16 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 16 (qualified_name)


State 115

   41 array_access: qualified_name '[' base_expression . ']'

    ']'  shift, and go to state 149


State 116

   18 declarations: declarations base_expression ';' .

    $default  reduce using rule 18 (declarations)


State 117

   20 declarations: declarations assignment_expression ';' .

    $default  reduce using rule 20 (declarations)


State 118

   43 field_access: just_not_name '.' ID .

    $default  reduce using rule 43 (field_access)


State 119

   42 array_access: array_complex_primary '[' base_expression . ']'

    ']'  shift, and go to state 150


State 120

   45 method_call: method_access '(' ')' .

    $default  reduce using rule 45 (method_call)


State 121

   44 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 151


State 122

   90 base_expression_list: base_expression .

    $default  reduce using rule 90 (base_expression_list)


State 123

   52 argument_list: base_expression_list .
   91 base_expression_list: base_expression_list . ',' base_expression

    ','  shift, and go to state 152

    $default  reduce using rule 52 (argument_list)


State 124

   62 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 62 (multiplicative_expression)


State 125

   63 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 63 (multiplicative_expression)


State 126

   64 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 64 (multiplicative_expression)


State 127

   62 multiplicative_expression: multiplicative_expression . '*' unary_expression
   63                          | multiplicative_expression . '/' unary_expression
   64                          | multiplicative_expression . '%' unary_expression
   66 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77

    $default  reduce using rule 66 (additive_expression)


State 128

   62 multiplicative_expression: multiplicative_expression . '*' unary_expression
   63                          | multiplicative_expression . '/' unary_expression
   64                          | multiplicative_expression . '%' unary_expression
   67 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77

    $default  reduce using rule 67 (additive_expression)


State 129

   66 additive_expression: additive_expression . '+' multiplicative_expression
   67                    | additive_expression . '-' multiplicative_expression
   69 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 69 (shift_expression)


State 130

   66 additive_expression: additive_expression . '+' multiplicative_expression
   67                    | additive_expression . '-' multiplicative_expression
   70 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 78
    '-'  shift, and go to state 79

    $default  reduce using rule 70 (shift_expression)


State 131

   69 shift_expression: shift_expression . SHIFT_LEFT additive_expression
   70                 | shift_expression . SHIFT_RIGHT additive_expression
   75 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81

    $default  reduce using rule 75 (relational_expression)


State 132

   69 shift_expression: shift_expression . SHIFT_LEFT additive_expression
   70                 | shift_expression . SHIFT_RIGHT additive_expression
   74 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81

    $default  reduce using rule 74 (relational_expression)


State 133

   69 shift_expression: shift_expression . SHIFT_LEFT additive_expression
   70                 | shift_expression . SHIFT_RIGHT additive_expression
   72 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81

    $default  reduce using rule 72 (relational_expression)


State 134

   69 shift_expression: shift_expression . SHIFT_LEFT additive_expression
   70                 | shift_expression . SHIFT_RIGHT additive_expression
   73 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81

    $default  reduce using rule 73 (relational_expression)


State 135

   72 relational_expression: relational_expression . '<' shift_expression
   73                      | relational_expression . '>' shift_expression
   74                      | relational_expression . LE shift_expression
   75                      | relational_expression . GE shift_expression
   77 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 82
    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '>'  shift, and go to state 85

    $default  reduce using rule 77 (equality_expression)


State 136

   72 relational_expression: relational_expression . '<' shift_expression
   73                      | relational_expression . '>' shift_expression
   74                      | relational_expression . LE shift_expression
   75                      | relational_expression . GE shift_expression
   78 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 82
    LE   shift, and go to state 83
    '<'  shift, and go to state 84
    '>'  shift, and go to state 85

    $default  reduce using rule 78 (equality_expression)


State 137

   77 equality_expression: equality_expression . EQ relational_expression
   78                    | equality_expression . NE relational_expression
   80 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 86
    NE  shift, and go to state 87

    $default  reduce using rule 80 (and_expression)


State 138

   80 and_expression: and_expression . '&' equality_expression
   82 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 88

    $default  reduce using rule 82 (exclusive_or_expression)


State 139

   82 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   84 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 89

    $default  reduce using rule 84 (inclusive_or_expression)


State 140

   84 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   86 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 90

    $default  reduce using rule 86 (logical_and_expression)


State 141

   86 logical_and_expression: logical_and_expression . AND inclusive_or_expression
   88 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 91

    $default  reduce using rule 88 (logical_or_expression)


State 142

   16 qualified_name: qualified_name . '.' ID
   41 array_access: qualified_name . '[' base_expression ']'
   47 method_access: qualified_name .
   96 assign_var: qualified_name .

    '.'  shift, and go to state 65
    '['  shift, and go to state 66

    '('       reduce using rule 47 (method_access)
    $default  reduce using rule 96 (assign_var)


State 143

   43 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 69


State 144

   95 assign_var_list: assign_var_list ',' assign_var .

    $default  reduce using rule 95 (assign_var_list)


State 145

   91 base_expression_list: base_expression_list . ',' base_expression
   92 assignment_expression: assign_var_list '=' base_expression_list .

    ','  shift, and go to state 152

    $default  reduce using rule 92 (assignment_expression)


State 146

   93 assignment_expression: assign_var compound_assign_operator base_expression .

    $default  reduce using rule 93 (assignment_expression)


State 147

    2 semicolons: semicolons ';' .

    $default  reduce using rule 2 (semicolons)


State 148

   14 import_statement: IMPORT qualified_name '.' '*' . semicolons

    ';'  shift, and go to state 108

    semicolons  go to state 153


State 149

   41 array_access: qualified_name '[' base_expression ']' .

    $default  reduce using rule 41 (array_access)


State 150

   42 array_access: array_complex_primary '[' base_expression ']' .

    $default  reduce using rule 42 (array_access)


State 151

   44 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 44 (method_call)


State 152

   91 base_expression_list: base_expression_list ',' . base_expression

    INC             shift, and go to state 1
    DEC             shift, and go to state 2
    TOKEN_THIS      shift, and go to state 3
    TOKEN_NULL      shift, and go to state 6
    TOKEN_TRUE      shift, and go to state 7
    TOKEN_FALSE     shift, and go to state 8
    INTEGER         shift, and go to state 9
    FLOAT           shift, and go to state 10
    STRING_LITERAL  shift, and go to state 11
    ID              shift, and go to state 12
    '('             shift, and go to state 13
    '+'             shift, and go to state 14
    '-'             shift, and go to state 15
    '~'             shift, and go to state 16
    '!'             shift, and go to state 17

    qualified_name                  go to state 52
    primary_expression              go to state 24
    just_not_name                   go to state 25
    complex_primary                 go to state 26
    complex_primary_no_parenthesis  go to state 27
    literal_name                    go to state 28
    array_complex_primary           go to state 29
    array_access                    go to state 53
    field_access                    go to state 54
    method_call                     go to state 32
    method_access                   go to state 33
    postfix_expression              go to state 34
    real_postfix_expression         go to state 35
    unary_expression                go to state 36
    unary_operator                  go to state 37
    multiplicative_expression       go to state 38
    additive_expression             go to state 39
    shift_expression                go to state 40
    relational_expression           go to state 41
    equality_expression             go to state 42
    and_expression                  go to state 43
    exclusive_or_expression         go to state 44
    inclusive_or_expression         go to state 45
    logical_and_expression          go to state 46
    logical_or_expression           go to state 47
    base_expression                 go to state 154


State 153

    2 semicolons: semicolons . ';'
   14 import_statement: IMPORT qualified_name '.' '*' semicolons .

    ';'  shift, and go to state 147

    $default  reduce using rule 14 (import_statement)


State 154

   91 base_expression_list: base_expression_list ',' base_expression .

    $default  reduce using rule 91 (base_expression_list)
