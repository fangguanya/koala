Terminals unused in grammar

   ELLIPSIS
   NOT
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   NEW
   HEX
   OCT


Grammar

    0 $accept: Program $end

    1 ModuleFilePathName: IDENTIFIER
    2                   | ModuleFilePathName '.' IDENTIFIER

    3 TypeList: Type
    4         | TypeList ',' Type

    5 Type: PrimitiveType
    6     | ModuleType
    7     | FunctionType
    8     | DIMS PrimitiveType
    9     | DIMS ModuleType
   10     | DIMS FunctionType

   11 PrimitiveType: UINT8
   12              | UINT16
   13              | UINT32
   14              | UINT64
   15              | INT8
   16              | INT16
   17              | INT32
   18              | INT64
   19              | FLOAT32
   20              | FLOAT64
   21              | BOOL
   22              | STRING
   23              | ROOT_OBJECT

   24 ModuleType: IDENTIFIER
   25           | IDENTIFIER '.' IDENTIFIER

   26 FunctionType: FUNC '(' ')'
   27             | FUNC '(' ')' ReturnTypeList
   28             | FUNC '(' TypeList ')'
   29             | FUNC '(' TypeList ')' ReturnTypeList

   30 ReturnTypeList: Type
   31               | '(' Type ')'
   32               | '(' ReturnTypeList ',' Type ')'

   33 Program: PackageDeclaration ImportDeclarations Declarations
   34        | PackageDeclaration ImportDeclarations
   35        | PackageDeclaration Declarations
   36        | ImportDeclarations Declarations
   37        | PackageDeclaration
   38        | ImportDeclarations
   39        | Declarations

   40 PackageDeclaration: PACKAGE ModuleFilePathName SemiOrEmpty

   41 ImportDeclarations: ImportDeclaration
   42                   | ImportDeclarations ImportDeclaration

   43 ImportDeclaration: IMPORT ModuleFilePathName SemiOrEmpty
   44                  | IMPORT ModuleFilePathName AS IDENTIFIER SemiOrEmpty
   45                  | IMPORT ModuleFilePathName '.' '*' SemiOrEmpty

   46 Declarations: Declaration
   47             | Declarations Declaration

   48 Declaration: VariableDeclaration
   49            | TypeDeclaration
   50            | FunctionDeclaration

   51 VariableDeclaration: VAR VariableList Type ';'
   52                    | VAR VariableList '=' VariableInitializerList ';'
   53                    | VAR VariableList Type '=' VariableInitializerList ';'

   54 VariableList: IDENTIFIER
   55             | VariableList ',' IDENTIFIER

   56 VariableInitializerList: ComplexVariableInitializer
   57                        | VariableInitializerList ',' ComplexVariableInitializer

   58 ComplexVariableInitializer: basic_expression
   59                           | PrimitiveType '(' basic_expression ')'
   60                           | AnonymousFunctionDeclaration
   61                           | '{' ArrayInitializerList '}'
   62                           | DimExprs Type
   63                           | DimExprs Type '{' ArrayInitializerList '}'
   64                           | DimExprs Type '{' '}'

   65 ArrayInitializerList: ArrayInitializer
   66                     | ArrayInitializerList ',' ArrayInitializer

   67 DimExprs: DimExpr
   68         | DimExprs DimExpr

   69 DimExpr: '[' basic_expression ']'

   70 ArrayInitializer: basic_expression
   71                 | PrimitiveType '(' basic_expression ')'
   72                 | AnonymousFunctionDeclaration
   73                 | ArrayPositionInitializer
   74                 | '{' ArrayInitializerList '}'

   75 ArrayPositionInitializer: INTEGER ':' ArrayInitializer

   76 SemiOrEmpty: %empty
   77            | ';'

   78 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' SemiOrEmpty
   79                | TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty
   80                | TYPE IDENTIFIER Type ';'

   81 MemberDeclarations: MemberDeclaration
   82                   | MemberDeclarations MemberDeclaration

   83 MemberDeclaration: FieldDeclaration
   84                  | MethodDeclaration

   85 FieldDeclaration: VAR IDENTIFIER Type ';'
   86                 | IDENTIFIER Type ';'

   87 MethodDeclaration: MethodDeclarationHeader1 CodeBlock

   88 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')'
   89                         | FUNC IDENTIFIER '(' ')' ReturnTypeList
   90                         | FUNC IDENTIFIER '(' ParameterList ')'
   91                         | FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList
   92                         | IDENTIFIER '(' ')'
   93                         | IDENTIFIER '(' ')' ReturnTypeList
   94                         | IDENTIFIER '(' ParameterList ')'
   95                         | IDENTIFIER '(' ParameterList ')' ReturnTypeList

   96 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')'
   97                         | FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList
   98                         | IDENTIFIER '(' TypeList ')'
   99                         | IDENTIFIER '(' TypeList ')' ReturnTypeList

  100 ParameterList: IDENTIFIER Type
  101              | ParameterList ',' IDENTIFIER Type

  102 CodeBlock: '{' local_variable_declaration_statements '}'
  103          | '{' '}'

  104 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration
  105                              | InterfaceFunctionDeclarations InterfaceFunctionDeclaration

  106 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';'
  107                             | MethodDeclarationHeader2 ';'

  108 FunctionDeclaration: FUNC IDENTIFIER '(' ')' CodeBlock
  109                    | FUNC IDENTIFIER '(' ')' ReturnTypeList CodeBlock
  110                    | FUNC IDENTIFIER '(' ParameterList ')' CodeBlock
  111                    | FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock

  112 AnonymousFunctionDeclaration: FUNC '(' ')' CodeBlock
  113                             | FUNC '(' ')' ReturnTypeList CodeBlock
  114                             | FUNC '(' ParameterList ')' CodeBlock
  115                             | FUNC '(' ParameterList ')' ReturnTypeList CodeBlock

  116 local_variable_declaration_statements: local_variable_declaration_statement
  117                                      | local_variable_declaration_statements local_variable_declaration_statement

  118 local_variable_declaration_statement: VariableDeclaration
  119                                     | statement

  120 statement: expression_statement ';'
  121          | selection_statement
  122          | iteration_statemnet
  123          | jump_statement

  124 selection_statement: if_statement
  125                    | switch_statement

  126 if_statement: IF '(' basic_expression ')' CodeBlock
  127             | IF '(' basic_expression ')' CodeBlock ELSE else_statemnet

  128 else_statemnet: if_statement
  129               | CodeBlock

  130 switch_statement: SWITCH '(' basic_expression ')' CodeBlock

  131 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock
  132                    | DO CodeBlock WHILE '(' basic_expression ')' ';'
  133                    | FOR '(' for_init for_expr for_incr ')' CodeBlock

  134 for_init: expression_statement ';'
  135         | VariableDeclaration
  136         | ';'

  137 for_expr: basic_expression ';'
  138         | ';'

  139 for_incr: expression_statement

  140 jump_statement: RETURN ';'
  141               | RETURN expression_list ';'

  142 primary_expression: IDENTIFIER
  143                   | constant
  144                   | TOKEN_THIS
  145                   | '(' basic_expression ')'

  146 constant: INTEGER
  147         | FLOAT
  148         | STRING_LITERAL
  149         | TOKEN_NIL
  150         | TOKEN_TRUE
  151         | TOKEN_FALSE

  152 postfix_expression: primary_expression
  153                   | postfix_expression INC
  154                   | postfix_expression DEC
  155                   | postfix_expression '.' IDENTIFIER
  156                   | postfix_expression '[' basic_expression ']'
  157                   | postfix_expression '(' expression_list ')'
  158                   | postfix_expression '(' ')'
  159                   | postfix_expression '(' ')' CodeBlock

  160 unary_expression: postfix_expression
  161                 | INC unary_expression
  162                 | DEC unary_expression
  163                 | '+' unary_expression
  164                 | '-' unary_expression
  165                 | '~' unary_expression
  166                 | '!' unary_expression

  167 multiplicative_expression: unary_expression
  168                          | multiplicative_expression '*' unary_expression
  169                          | multiplicative_expression '/' unary_expression
  170                          | multiplicative_expression '%' unary_expression

  171 additive_expression: multiplicative_expression
  172                    | additive_expression '+' multiplicative_expression
  173                    | additive_expression '-' multiplicative_expression

  174 shift_expression: additive_expression
  175                 | shift_expression SHIFT_LEFT additive_expression
  176                 | shift_expression SHIFT_RIGHT additive_expression

  177 relational_expression: shift_expression
  178                      | relational_expression '<' shift_expression
  179                      | relational_expression '>' shift_expression
  180                      | relational_expression LE shift_expression
  181                      | relational_expression GE shift_expression

  182 equality_expression: relational_expression
  183                    | equality_expression EQ relational_expression
  184                    | equality_expression NE relational_expression

  185 and_expression: equality_expression
  186               | and_expression '&' equality_expression

  187 exclusive_or_expression: and_expression
  188                        | exclusive_or_expression '^' and_expression

  189 inclusive_or_expression: exclusive_or_expression
  190                        | inclusive_or_expression '|' exclusive_or_expression

  191 logical_and_expression: inclusive_or_expression
  192                       | logical_and_expression AND inclusive_or_expression

  193 logical_or_expression: logical_and_expression
  194                      | logical_or_expression OR logical_and_expression

  195 basic_expression: logical_or_expression

  196 expression: basic_expression

  197 expression_list: expression
  198                | expression_list ',' expression

  199 postfix_expression_list: postfix_expression
  200                        | postfix_expression_list ',' postfix_expression

  201 assignment_expression: postfix_expression_list '=' VariableInitializerList
  202                      | postfix_expression compound_assignment_operator ComplexVariableInitializer
  203                      | postfix_expression VAR_ASSIGN ComplexVariableInitializer

  204 compound_assignment_operator: ADD_ASSIGN
  205                             | SUB_ASSIGN
  206                             | MUL_ASSIGN
  207                             | DIV_ASSIGN
  208                             | MOD_ASSIGN
  209                             | AND_ASSIGN
  210                             | OR_ASSIGN
  211                             | XOR_ASSIGN
  212                             | RIGHT_ASSIGN
  213                             | LEFT_ASSIGN

  214 expression_statement: basic_expression
  215                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 166
'%' (37) 170
'&' (38) 186
'(' (40) 26 27 28 29 31 32 59 71 88 89 90 91 92 93 94 95 96 97 98 99
    108 109 110 111 112 113 114 115 126 127 130 131 132 133 145 157
    158 159
')' (41) 26 27 28 29 31 32 59 71 88 89 90 91 92 93 94 95 96 97 98 99
    108 109 110 111 112 113 114 115 126 127 130 131 132 133 145 157
    158 159
'*' (42) 45 168
'+' (43) 163 172
',' (44) 4 32 55 57 66 101 198 200
'-' (45) 164 173
'.' (46) 2 25 45 155
'/' (47) 169
':' (58) 75
';' (59) 51 52 53 77 80 85 86 106 107 120 132 134 136 137 138 140 141
'<' (60) 178
'=' (61) 52 53 201
'>' (62) 179
'[' (91) 69 156
']' (93) 69 156
'^' (94) 188
'{' (123) 61 63 64 74 78 79 102 103
'|' (124) 190
'}' (125) 61 63 64 74 78 79 102 103
'~' (126) 165
error (256)
ELLIPSIS (258)
VAR_ASSIGN (259) 203
ADD_ASSIGN (260) 204
SUB_ASSIGN (261) 205
MUL_ASSIGN (262) 206
DIV_ASSIGN (263) 207
MOD_ASSIGN (264) 208
AND_ASSIGN (265) 209
OR_ASSIGN (266) 210
XOR_ASSIGN (267) 211
RIGHT_ASSIGN (268) 212
LEFT_ASSIGN (269) 213
EQ (270) 183
NE (271) 184
GE (272) 181
LE (273) 180
AND (274) 192
OR (275) 194
NOT (276)
SHIFT_LEFT (277) 175
SHIFT_RIGHT (278) 176
INC (279) 153 161
DEC (280) 154 162
IF (281) 126 127
ELSE (282) 127
WHILE (283) 131 132
DO (284) 132
FOR (285) 133
IN (286)
SWITCH (287) 130
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 51 52 53 85
FUNC (293) 26 27 28 29 88 89 90 91 96 97 108 109 110 111 112 113 114
    115
RETURN (294) 140 141
STRUCT (295) 78
INTERFACE (296) 79
TYPE (297) 78 79 80
CONST (298)
PACKAGE (299) 40
IMPORT (300) 43 44 45
AS (301) 44
NEW (302)
INT8 (303) 15
INT16 (304) 16
INT32 (305) 17
INT64 (306) 18
UINT8 (307) 11
UINT16 (308) 12
UINT32 (309) 13
UINT64 (310) 14
FLOAT32 (311) 19
FLOAT64 (312) 20
BOOL (313) 21
STRING (314) 22
ROOT_OBJECT (315) 23
DIMS (316) 8 9 10
TOKEN_THIS (317) 144
TOKEN_NIL (318) 149
TOKEN_TRUE (319) 150
TOKEN_FALSE (320) 151
INTEGER (321) 75 146
HEX (322)
OCT (323)
FLOAT (324) 147
STRING_LITERAL (325) 148
IDENTIFIER (326) 1 2 24 25 44 54 55 78 79 80 85 86 88 89 90 91 92 93
    94 95 96 97 98 99 100 101 108 109 110 111 142 155


Nonterminals, with rules where they appear

$accept (95)
    on left: 0
ModuleFilePathName (96)
    on left: 1 2, on right: 2 40 43 44 45
TypeList (97)
    on left: 3 4, on right: 4 28 29 96 97 98 99
Type (98)
    on left: 5 6 7 8 9 10, on right: 3 4 30 31 32 51 53 62 63 64 80
    85 86 100 101
PrimitiveType (99)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23, on right: 5 8
    59 71
ModuleType (100)
    on left: 24 25, on right: 6 9
FunctionType (101)
    on left: 26 27 28 29, on right: 7 10
ReturnTypeList (102)
    on left: 30 31 32, on right: 27 29 32 89 91 93 95 97 99 109 111
    113 115
Program (103)
    on left: 33 34 35 36 37 38 39, on right: 0
PackageDeclaration (104)
    on left: 40, on right: 33 34 35 37
ImportDeclarations (105)
    on left: 41 42, on right: 33 34 36 38 42
ImportDeclaration (106)
    on left: 43 44 45, on right: 41 42
Declarations (107)
    on left: 46 47, on right: 33 35 36 39 47
Declaration (108)
    on left: 48 49 50, on right: 46 47
VariableDeclaration (109)
    on left: 51 52 53, on right: 48 118 135
VariableList (110)
    on left: 54 55, on right: 51 52 53 55
VariableInitializerList (111)
    on left: 56 57, on right: 52 53 57 201
ComplexVariableInitializer (112)
    on left: 58 59 60 61 62 63 64, on right: 56 57 202 203
ArrayInitializerList (113)
    on left: 65 66, on right: 61 63 66 74
DimExprs (114)
    on left: 67 68, on right: 62 63 64 68
DimExpr (115)
    on left: 69, on right: 67 68
ArrayInitializer (116)
    on left: 70 71 72 73 74, on right: 65 66 75
ArrayPositionInitializer (117)
    on left: 75, on right: 73
SemiOrEmpty (118)
    on left: 76 77, on right: 40 43 44 45 78 79
TypeDeclaration (119)
    on left: 78 79 80, on right: 49
MemberDeclarations (120)
    on left: 81 82, on right: 78 82
MemberDeclaration (121)
    on left: 83 84, on right: 81 82
FieldDeclaration (122)
    on left: 85 86, on right: 83
MethodDeclaration (123)
    on left: 87, on right: 84
MethodDeclarationHeader1 (124)
    on left: 88 89 90 91 92 93 94 95, on right: 87 106
MethodDeclarationHeader2 (125)
    on left: 96 97 98 99, on right: 107
ParameterList (126)
    on left: 100 101, on right: 90 91 94 95 101 110 111 114 115
CodeBlock (127)
    on left: 102 103, on right: 87 108 109 110 111 112 113 114 115
    126 127 129 130 131 132 133 159
InterfaceFunctionDeclarations (128)
    on left: 104 105, on right: 79 105
InterfaceFunctionDeclaration (129)
    on left: 106 107, on right: 104 105
FunctionDeclaration (130)
    on left: 108 109 110 111, on right: 50
AnonymousFunctionDeclaration (131)
    on left: 112 113 114 115, on right: 60 72
local_variable_declaration_statements (132)
    on left: 116 117, on right: 102 117
local_variable_declaration_statement (133)
    on left: 118 119, on right: 116 117
statement (134)
    on left: 120 121 122 123, on right: 119
selection_statement (135)
    on left: 124 125, on right: 121
if_statement (136)
    on left: 126 127, on right: 124 128
else_statemnet (137)
    on left: 128 129, on right: 127
switch_statement (138)
    on left: 130, on right: 125
iteration_statemnet (139)
    on left: 131 132 133, on right: 122
for_init (140)
    on left: 134 135 136, on right: 133
for_expr (141)
    on left: 137 138, on right: 133
for_incr (142)
    on left: 139, on right: 133
jump_statement (143)
    on left: 140 141, on right: 123
primary_expression (144)
    on left: 142 143 144 145, on right: 152
constant (145)
    on left: 146 147 148 149 150 151, on right: 143
postfix_expression (146)
    on left: 152 153 154 155 156 157 158 159, on right: 153 154 155
    156 157 158 159 160 199 200 202 203
unary_expression (147)
    on left: 160 161 162 163 164 165 166, on right: 161 162 163 164
    165 166 167 168 169 170
multiplicative_expression (148)
    on left: 167 168 169 170, on right: 168 169 170 171 172 173
additive_expression (149)
    on left: 171 172 173, on right: 172 173 174 175 176
shift_expression (150)
    on left: 174 175 176, on right: 175 176 177 178 179 180 181
relational_expression (151)
    on left: 177 178 179 180 181, on right: 178 179 180 181 182 183
    184
equality_expression (152)
    on left: 182 183 184, on right: 183 184 185 186
and_expression (153)
    on left: 185 186, on right: 186 187 188
exclusive_or_expression (154)
    on left: 187 188, on right: 188 189 190
inclusive_or_expression (155)
    on left: 189 190, on right: 190 191 192
logical_and_expression (156)
    on left: 191 192, on right: 192 193 194
logical_or_expression (157)
    on left: 193 194, on right: 194 195
basic_expression (158)
    on left: 195, on right: 58 59 69 70 71 126 127 130 131 132 137
    145 156 196 214
expression (159)
    on left: 196, on right: 197 198
expression_list (160)
    on left: 197 198, on right: 141 157 198
postfix_expression_list (161)
    on left: 199 200, on right: 200 201
assignment_expression (162)
    on left: 201 202 203, on right: 215
compound_assignment_operator (163)
    on left: 204 205 206 207 208 209 210 211 212 213, on right: 202
expression_statement (164)
    on left: 214 215, on right: 120 134 139


State 0

    0 $accept: . Program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    PACKAGE  shift, and go to state 4
    IMPORT   shift, and go to state 5

    Program              go to state 6
    PackageDeclaration   go to state 7
    ImportDeclarations   go to state 8
    ImportDeclaration    go to state 9
    Declarations         go to state 10
    Declaration          go to state 11
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 1

   51 VariableDeclaration: VAR . VariableList Type ';'
   52                    | VAR . VariableList '=' VariableInitializerList ';'
   53                    | VAR . VariableList Type '=' VariableInitializerList ';'

    IDENTIFIER  shift, and go to state 15

    VariableList  go to state 16


State 2

  108 FunctionDeclaration: FUNC . IDENTIFIER '(' ')' CodeBlock
  109                    | FUNC . IDENTIFIER '(' ')' ReturnTypeList CodeBlock
  110                    | FUNC . IDENTIFIER '(' ParameterList ')' CodeBlock
  111                    | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock

    IDENTIFIER  shift, and go to state 17


State 3

   78 TypeDeclaration: TYPE . IDENTIFIER STRUCT '{' MemberDeclarations '}' SemiOrEmpty
   79                | TYPE . IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty
   80                | TYPE . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 18


State 4

   40 PackageDeclaration: PACKAGE . ModuleFilePathName SemiOrEmpty

    IDENTIFIER  shift, and go to state 19

    ModuleFilePathName  go to state 20


State 5

   43 ImportDeclaration: IMPORT . ModuleFilePathName SemiOrEmpty
   44                  | IMPORT . ModuleFilePathName AS IDENTIFIER SemiOrEmpty
   45                  | IMPORT . ModuleFilePathName '.' '*' SemiOrEmpty

    IDENTIFIER  shift, and go to state 19

    ModuleFilePathName  go to state 21


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 22


State 7

   33 Program: PackageDeclaration . ImportDeclarations Declarations
   34        | PackageDeclaration . ImportDeclarations
   35        | PackageDeclaration . Declarations
   37        | PackageDeclaration .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 37 (Program)

    ImportDeclarations   go to state 23
    ImportDeclaration    go to state 9
    Declarations         go to state 24
    Declaration          go to state 11
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 8

   36 Program: ImportDeclarations . Declarations
   38        | ImportDeclarations .
   42 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 38 (Program)

    ImportDeclaration    go to state 25
    Declarations         go to state 26
    Declaration          go to state 11
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 9

   41 ImportDeclarations: ImportDeclaration .

    $default  reduce using rule 41 (ImportDeclarations)


State 10

   39 Program: Declarations .
   47 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 39 (Program)

    Declaration          go to state 27
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 11

   46 Declarations: Declaration .

    $default  reduce using rule 46 (Declarations)


State 12

   48 Declaration: VariableDeclaration .

    $default  reduce using rule 48 (Declaration)


State 13

   49 Declaration: TypeDeclaration .

    $default  reduce using rule 49 (Declaration)


State 14

   50 Declaration: FunctionDeclaration .

    $default  reduce using rule 50 (Declaration)


State 15

   54 VariableList: IDENTIFIER .

    $default  reduce using rule 54 (VariableList)


State 16

   51 VariableDeclaration: VAR VariableList . Type ';'
   52                    | VAR VariableList . '=' VariableInitializerList ';'
   53                    | VAR VariableList . Type '=' VariableInitializerList ';'
   55 VariableList: VariableList . ',' IDENTIFIER

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    ','          shift, and go to state 44
    '='          shift, and go to state 45

    Type           go to state 46
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 17

  108 FunctionDeclaration: FUNC IDENTIFIER . '(' ')' CodeBlock
  109                    | FUNC IDENTIFIER . '(' ')' ReturnTypeList CodeBlock
  110                    | FUNC IDENTIFIER . '(' ParameterList ')' CodeBlock
  111                    | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList CodeBlock

    '('  shift, and go to state 50


State 18

   78 TypeDeclaration: TYPE IDENTIFIER . STRUCT '{' MemberDeclarations '}' SemiOrEmpty
   79                | TYPE IDENTIFIER . INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty
   80                | TYPE IDENTIFIER . Type ';'

    FUNC         shift, and go to state 28
    STRUCT       shift, and go to state 51
    INTERFACE    shift, and go to state 52
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 53
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 19

    1 ModuleFilePathName: IDENTIFIER .

    $default  reduce using rule 1 (ModuleFilePathName)


State 20

    2 ModuleFilePathName: ModuleFilePathName . '.' IDENTIFIER
   40 PackageDeclaration: PACKAGE ModuleFilePathName . SemiOrEmpty

    '.'  shift, and go to state 54
    ';'  shift, and go to state 55

    $default  reduce using rule 76 (SemiOrEmpty)

    SemiOrEmpty  go to state 56


State 21

    2 ModuleFilePathName: ModuleFilePathName . '.' IDENTIFIER
   43 ImportDeclaration: IMPORT ModuleFilePathName . SemiOrEmpty
   44                  | IMPORT ModuleFilePathName . AS IDENTIFIER SemiOrEmpty
   45                  | IMPORT ModuleFilePathName . '.' '*' SemiOrEmpty

    AS   shift, and go to state 57
    '.'  shift, and go to state 58
    ';'  shift, and go to state 55

    $default  reduce using rule 76 (SemiOrEmpty)

    SemiOrEmpty  go to state 59


State 22

    0 $accept: Program $end .

    $default  accept


State 23

   33 Program: PackageDeclaration ImportDeclarations . Declarations
   34        | PackageDeclaration ImportDeclarations .
   42 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 34 (Program)

    ImportDeclaration    go to state 25
    Declarations         go to state 60
    Declaration          go to state 11
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 24

   35 Program: PackageDeclaration Declarations .
   47 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 35 (Program)

    Declaration          go to state 27
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 25

   42 ImportDeclarations: ImportDeclarations ImportDeclaration .

    $default  reduce using rule 42 (ImportDeclarations)


State 26

   36 Program: ImportDeclarations Declarations .
   47 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 36 (Program)

    Declaration          go to state 27
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 27

   47 Declarations: Declarations Declaration .

    $default  reduce using rule 47 (Declarations)


State 28

   26 FunctionType: FUNC . '(' ')'
   27             | FUNC . '(' ')' ReturnTypeList
   28             | FUNC . '(' TypeList ')'
   29             | FUNC . '(' TypeList ')' ReturnTypeList

    '('  shift, and go to state 61


State 29

   15 PrimitiveType: INT8 .

    $default  reduce using rule 15 (PrimitiveType)


State 30

   16 PrimitiveType: INT16 .

    $default  reduce using rule 16 (PrimitiveType)


State 31

   17 PrimitiveType: INT32 .

    $default  reduce using rule 17 (PrimitiveType)


State 32

   18 PrimitiveType: INT64 .

    $default  reduce using rule 18 (PrimitiveType)


State 33

   11 PrimitiveType: UINT8 .

    $default  reduce using rule 11 (PrimitiveType)


State 34

   12 PrimitiveType: UINT16 .

    $default  reduce using rule 12 (PrimitiveType)


State 35

   13 PrimitiveType: UINT32 .

    $default  reduce using rule 13 (PrimitiveType)


State 36

   14 PrimitiveType: UINT64 .

    $default  reduce using rule 14 (PrimitiveType)


State 37

   19 PrimitiveType: FLOAT32 .

    $default  reduce using rule 19 (PrimitiveType)


State 38

   20 PrimitiveType: FLOAT64 .

    $default  reduce using rule 20 (PrimitiveType)


State 39

   21 PrimitiveType: BOOL .

    $default  reduce using rule 21 (PrimitiveType)


State 40

   22 PrimitiveType: STRING .

    $default  reduce using rule 22 (PrimitiveType)


State 41

   23 PrimitiveType: ROOT_OBJECT .

    $default  reduce using rule 23 (PrimitiveType)


State 42

    8 Type: DIMS . PrimitiveType
    9     | DIMS . ModuleType
   10     | DIMS . FunctionType

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    IDENTIFIER   shift, and go to state 43

    PrimitiveType  go to state 62
    ModuleType     go to state 63
    FunctionType   go to state 64


State 43

   24 ModuleType: IDENTIFIER .
   25           | IDENTIFIER . '.' IDENTIFIER

    '.'  shift, and go to state 65

    $default  reduce using rule 24 (ModuleType)


State 44

   55 VariableList: VariableList ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 66


State 45

   52 VariableDeclaration: VAR VariableList '=' . VariableInitializerList ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 79
    '['             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    VariableInitializerList       go to state 86
    ComplexVariableInitializer    go to state 87
    DimExprs                      go to state 88
    DimExpr                       go to state 89
    AnonymousFunctionDeclaration  go to state 90
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 105


State 46

   51 VariableDeclaration: VAR VariableList Type . ';'
   53                    | VAR VariableList Type . '=' VariableInitializerList ';'

    ';'  shift, and go to state 106
    '='  shift, and go to state 107


State 47

    5 Type: PrimitiveType .

    $default  reduce using rule 5 (Type)


State 48

    6 Type: ModuleType .

    $default  reduce using rule 6 (Type)


State 49

    7 Type: FunctionType .

    $default  reduce using rule 7 (Type)


State 50

  108 FunctionDeclaration: FUNC IDENTIFIER '(' . ')' CodeBlock
  109                    | FUNC IDENTIFIER '(' . ')' ReturnTypeList CodeBlock
  110                    | FUNC IDENTIFIER '(' . ParameterList ')' CodeBlock
  111                    | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList CodeBlock

    IDENTIFIER  shift, and go to state 108
    ')'         shift, and go to state 109

    ParameterList  go to state 110


State 51

   78 TypeDeclaration: TYPE IDENTIFIER STRUCT . '{' MemberDeclarations '}' SemiOrEmpty

    '{'  shift, and go to state 111


State 52

   79 TypeDeclaration: TYPE IDENTIFIER INTERFACE . '{' InterfaceFunctionDeclarations '}' SemiOrEmpty

    '{'  shift, and go to state 112


State 53

   80 TypeDeclaration: TYPE IDENTIFIER Type . ';'

    ';'  shift, and go to state 113


State 54

    2 ModuleFilePathName: ModuleFilePathName '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 114


State 55

   77 SemiOrEmpty: ';' .

    $default  reduce using rule 77 (SemiOrEmpty)


State 56

   40 PackageDeclaration: PACKAGE ModuleFilePathName SemiOrEmpty .

    $default  reduce using rule 40 (PackageDeclaration)


State 57

   44 ImportDeclaration: IMPORT ModuleFilePathName AS . IDENTIFIER SemiOrEmpty

    IDENTIFIER  shift, and go to state 115


State 58

    2 ModuleFilePathName: ModuleFilePathName '.' . IDENTIFIER
   45 ImportDeclaration: IMPORT ModuleFilePathName '.' . '*' SemiOrEmpty

    IDENTIFIER  shift, and go to state 114
    '*'         shift, and go to state 116


State 59

   43 ImportDeclaration: IMPORT ModuleFilePathName SemiOrEmpty .

    $default  reduce using rule 43 (ImportDeclaration)


State 60

   33 Program: PackageDeclaration ImportDeclarations Declarations .
   47 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 33 (Program)

    Declaration          go to state 27
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 61

   26 FunctionType: FUNC '(' . ')'
   27             | FUNC '(' . ')' ReturnTypeList
   28             | FUNC '(' . TypeList ')'
   29             | FUNC '(' . TypeList ')' ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    ')'          shift, and go to state 117

    TypeList       go to state 118
    Type           go to state 119
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 62

    8 Type: DIMS PrimitiveType .

    $default  reduce using rule 8 (Type)


State 63

    9 Type: DIMS ModuleType .

    $default  reduce using rule 9 (Type)


State 64

   10 Type: DIMS FunctionType .

    $default  reduce using rule 10 (Type)


State 65

   25 ModuleType: IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 120


State 66

   55 VariableList: VariableList ',' IDENTIFIER .

    $default  reduce using rule 55 (VariableList)


State 67

  161 unary_expression: INC . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 91
    constant            go to state 92
    postfix_expression  go to state 93
    unary_expression    go to state 121


State 68

  162 unary_expression: DEC . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 91
    constant            go to state 92
    postfix_expression  go to state 93
    unary_expression    go to state 122


State 69

  112 AnonymousFunctionDeclaration: FUNC . '(' ')' CodeBlock
  113                             | FUNC . '(' ')' ReturnTypeList CodeBlock
  114                             | FUNC . '(' ParameterList ')' CodeBlock
  115                             | FUNC . '(' ParameterList ')' ReturnTypeList CodeBlock

    '('  shift, and go to state 123


State 70

  144 primary_expression: TOKEN_THIS .

    $default  reduce using rule 144 (primary_expression)


State 71

  149 constant: TOKEN_NIL .

    $default  reduce using rule 149 (constant)


State 72

  150 constant: TOKEN_TRUE .

    $default  reduce using rule 150 (constant)


State 73

  151 constant: TOKEN_FALSE .

    $default  reduce using rule 151 (constant)


State 74

  146 constant: INTEGER .

    $default  reduce using rule 146 (constant)


State 75

  147 constant: FLOAT .

    $default  reduce using rule 147 (constant)


State 76

  148 constant: STRING_LITERAL .

    $default  reduce using rule 148 (constant)


State 77

  142 primary_expression: IDENTIFIER .

    $default  reduce using rule 142 (primary_expression)


State 78

  145 primary_expression: '(' . basic_expression ')'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 124


State 79

   61 ComplexVariableInitializer: '{' . ArrayInitializerList '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 125
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 126
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 127
    ArrayInitializerList          go to state 128
    ArrayInitializer              go to state 129
    ArrayPositionInitializer      go to state 130
    AnonymousFunctionDeclaration  go to state 131
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 132


State 80

   69 DimExpr: '[' . basic_expression ']'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 133


State 81

  163 unary_expression: '+' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 91
    constant            go to state 92
    postfix_expression  go to state 93
    unary_expression    go to state 134


State 82

  164 unary_expression: '-' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 91
    constant            go to state 92
    postfix_expression  go to state 93
    unary_expression    go to state 135


State 83

  165 unary_expression: '~' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 91
    constant            go to state 92
    postfix_expression  go to state 93
    unary_expression    go to state 136


State 84

  166 unary_expression: '!' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 91
    constant            go to state 92
    postfix_expression  go to state 93
    unary_expression    go to state 137


State 85

   59 ComplexVariableInitializer: PrimitiveType . '(' basic_expression ')'

    '('  shift, and go to state 138


State 86

   52 VariableDeclaration: VAR VariableList '=' VariableInitializerList . ';'
   57 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer

    ','  shift, and go to state 139
    ';'  shift, and go to state 140


State 87

   56 VariableInitializerList: ComplexVariableInitializer .

    $default  reduce using rule 56 (VariableInitializerList)


State 88

   62 ComplexVariableInitializer: DimExprs . Type
   63                           | DimExprs . Type '{' ArrayInitializerList '}'
   64                           | DimExprs . Type '{' '}'
   68 DimExprs: DimExprs . DimExpr

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '['          shift, and go to state 80

    Type           go to state 141
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49
    DimExpr        go to state 142


State 89

   67 DimExprs: DimExpr .

    $default  reduce using rule 67 (DimExprs)


State 90

   60 ComplexVariableInitializer: AnonymousFunctionDeclaration .

    $default  reduce using rule 60 (ComplexVariableInitializer)


State 91

  152 postfix_expression: primary_expression .

    $default  reduce using rule 152 (postfix_expression)


State 92

  143 primary_expression: constant .

    $default  reduce using rule 143 (primary_expression)


State 93

  153 postfix_expression: postfix_expression . INC
  154                   | postfix_expression . DEC
  155                   | postfix_expression . '.' IDENTIFIER
  156                   | postfix_expression . '[' basic_expression ']'
  157                   | postfix_expression . '(' expression_list ')'
  158                   | postfix_expression . '(' ')'
  159                   | postfix_expression . '(' ')' CodeBlock
  160 unary_expression: postfix_expression .

    INC  shift, and go to state 143
    DEC  shift, and go to state 144
    '.'  shift, and go to state 145
    '('  shift, and go to state 146
    '['  shift, and go to state 147

    $default  reduce using rule 160 (unary_expression)


State 94

  167 multiplicative_expression: unary_expression .

    $default  reduce using rule 167 (multiplicative_expression)


State 95

  168 multiplicative_expression: multiplicative_expression . '*' unary_expression
  169                          | multiplicative_expression . '/' unary_expression
  170                          | multiplicative_expression . '%' unary_expression
  171 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 148
    '/'  shift, and go to state 149
    '%'  shift, and go to state 150

    $default  reduce using rule 171 (additive_expression)


State 96

  172 additive_expression: additive_expression . '+' multiplicative_expression
  173                    | additive_expression . '-' multiplicative_expression
  174 shift_expression: additive_expression .

    '+'  shift, and go to state 151
    '-'  shift, and go to state 152

    $default  reduce using rule 174 (shift_expression)


State 97

  175 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  176                 | shift_expression . SHIFT_RIGHT additive_expression
  177 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 153
    SHIFT_RIGHT  shift, and go to state 154

    $default  reduce using rule 177 (relational_expression)


State 98

  178 relational_expression: relational_expression . '<' shift_expression
  179                      | relational_expression . '>' shift_expression
  180                      | relational_expression . LE shift_expression
  181                      | relational_expression . GE shift_expression
  182 equality_expression: relational_expression .

    GE   shift, and go to state 155
    LE   shift, and go to state 156
    '<'  shift, and go to state 157
    '>'  shift, and go to state 158

    $default  reduce using rule 182 (equality_expression)


State 99

  183 equality_expression: equality_expression . EQ relational_expression
  184                    | equality_expression . NE relational_expression
  185 and_expression: equality_expression .

    EQ  shift, and go to state 159
    NE  shift, and go to state 160

    $default  reduce using rule 185 (and_expression)


State 100

  186 and_expression: and_expression . '&' equality_expression
  187 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 161

    $default  reduce using rule 187 (exclusive_or_expression)


State 101

  188 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  189 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 162

    $default  reduce using rule 189 (inclusive_or_expression)


State 102

  190 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  191 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 163

    $default  reduce using rule 191 (logical_and_expression)


State 103

  192 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  193 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 164

    $default  reduce using rule 193 (logical_or_expression)


State 104

  194 logical_or_expression: logical_or_expression . OR logical_and_expression
  195 basic_expression: logical_or_expression .

    OR  shift, and go to state 165

    $default  reduce using rule 195 (basic_expression)


State 105

   58 ComplexVariableInitializer: basic_expression .

    $default  reduce using rule 58 (ComplexVariableInitializer)


State 106

   51 VariableDeclaration: VAR VariableList Type ';' .

    $default  reduce using rule 51 (VariableDeclaration)


State 107

   53 VariableDeclaration: VAR VariableList Type '=' . VariableInitializerList ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 79
    '['             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    VariableInitializerList       go to state 166
    ComplexVariableInitializer    go to state 87
    DimExprs                      go to state 88
    DimExpr                       go to state 89
    AnonymousFunctionDeclaration  go to state 90
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 105


State 108

  100 ParameterList: IDENTIFIER . Type

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 167
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 109

  108 FunctionDeclaration: FUNC IDENTIFIER '(' ')' . CodeBlock
  109                    | FUNC IDENTIFIER '(' ')' . ReturnTypeList CodeBlock

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168
    '{'          shift, and go to state 169

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 171
    CodeBlock       go to state 172


State 110

  101 ParameterList: ParameterList . ',' IDENTIFIER Type
  110 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList . ')' CodeBlock
  111                    | FUNC IDENTIFIER '(' ParameterList . ')' ReturnTypeList CodeBlock

    ','  shift, and go to state 173
    ')'  shift, and go to state 174


State 111

   78 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' . MemberDeclarations '}' SemiOrEmpty

    VAR         shift, and go to state 175
    FUNC        shift, and go to state 176
    IDENTIFIER  shift, and go to state 177

    MemberDeclarations        go to state 178
    MemberDeclaration         go to state 179
    FieldDeclaration          go to state 180
    MethodDeclaration         go to state 181
    MethodDeclarationHeader1  go to state 182


State 112

   79 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' . InterfaceFunctionDeclarations '}' SemiOrEmpty

    FUNC        shift, and go to state 183
    IDENTIFIER  shift, and go to state 184

    MethodDeclarationHeader1       go to state 185
    MethodDeclarationHeader2       go to state 186
    InterfaceFunctionDeclarations  go to state 187
    InterfaceFunctionDeclaration   go to state 188


State 113

   80 TypeDeclaration: TYPE IDENTIFIER Type ';' .

    $default  reduce using rule 80 (TypeDeclaration)


State 114

    2 ModuleFilePathName: ModuleFilePathName '.' IDENTIFIER .

    $default  reduce using rule 2 (ModuleFilePathName)


State 115

   44 ImportDeclaration: IMPORT ModuleFilePathName AS IDENTIFIER . SemiOrEmpty

    ';'  shift, and go to state 55

    $default  reduce using rule 76 (SemiOrEmpty)

    SemiOrEmpty  go to state 189


State 116

   45 ImportDeclaration: IMPORT ModuleFilePathName '.' '*' . SemiOrEmpty

    ';'  shift, and go to state 55

    $default  reduce using rule 76 (SemiOrEmpty)

    SemiOrEmpty  go to state 190


State 117

   26 FunctionType: FUNC '(' ')' .
   27             | FUNC '(' ')' . ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168

    $default  reduce using rule 26 (FunctionType)

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 191


State 118

    4 TypeList: TypeList . ',' Type
   28 FunctionType: FUNC '(' TypeList . ')'
   29             | FUNC '(' TypeList . ')' ReturnTypeList

    ','  shift, and go to state 192
    ')'  shift, and go to state 193


State 119

    3 TypeList: Type .

    $default  reduce using rule 3 (TypeList)


State 120

   25 ModuleType: IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 25 (ModuleType)


State 121

  161 unary_expression: INC unary_expression .

    $default  reduce using rule 161 (unary_expression)


State 122

  162 unary_expression: DEC unary_expression .

    $default  reduce using rule 162 (unary_expression)


State 123

  112 AnonymousFunctionDeclaration: FUNC '(' . ')' CodeBlock
  113                             | FUNC '(' . ')' ReturnTypeList CodeBlock
  114                             | FUNC '(' . ParameterList ')' CodeBlock
  115                             | FUNC '(' . ParameterList ')' ReturnTypeList CodeBlock

    IDENTIFIER  shift, and go to state 108
    ')'         shift, and go to state 194

    ParameterList  go to state 195


State 124

  145 primary_expression: '(' basic_expression . ')'

    ')'  shift, and go to state 196


State 125

   75 ArrayPositionInitializer: INTEGER . ':' ArrayInitializer
  146 constant: INTEGER .

    ':'  shift, and go to state 197

    $default  reduce using rule 146 (constant)


State 126

   74 ArrayInitializer: '{' . ArrayInitializerList '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 125
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 126
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 127
    ArrayInitializerList          go to state 198
    ArrayInitializer              go to state 129
    ArrayPositionInitializer      go to state 130
    AnonymousFunctionDeclaration  go to state 131
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 132


State 127

   71 ArrayInitializer: PrimitiveType . '(' basic_expression ')'

    '('  shift, and go to state 199


State 128

   61 ComplexVariableInitializer: '{' ArrayInitializerList . '}'
   66 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 200
    '}'  shift, and go to state 201


State 129

   65 ArrayInitializerList: ArrayInitializer .

    $default  reduce using rule 65 (ArrayInitializerList)


State 130

   73 ArrayInitializer: ArrayPositionInitializer .

    $default  reduce using rule 73 (ArrayInitializer)


State 131

   72 ArrayInitializer: AnonymousFunctionDeclaration .

    $default  reduce using rule 72 (ArrayInitializer)


State 132

   70 ArrayInitializer: basic_expression .

    $default  reduce using rule 70 (ArrayInitializer)


State 133

   69 DimExpr: '[' basic_expression . ']'

    ']'  shift, and go to state 202


State 134

  163 unary_expression: '+' unary_expression .

    $default  reduce using rule 163 (unary_expression)


State 135

  164 unary_expression: '-' unary_expression .

    $default  reduce using rule 164 (unary_expression)


State 136

  165 unary_expression: '~' unary_expression .

    $default  reduce using rule 165 (unary_expression)


State 137

  166 unary_expression: '!' unary_expression .

    $default  reduce using rule 166 (unary_expression)


State 138

   59 ComplexVariableInitializer: PrimitiveType '(' . basic_expression ')'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 203


State 139

   57 VariableInitializerList: VariableInitializerList ',' . ComplexVariableInitializer

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 79
    '['             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    ComplexVariableInitializer    go to state 204
    DimExprs                      go to state 88
    DimExpr                       go to state 89
    AnonymousFunctionDeclaration  go to state 90
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 105


State 140

   52 VariableDeclaration: VAR VariableList '=' VariableInitializerList ';' .

    $default  reduce using rule 52 (VariableDeclaration)


State 141

   62 ComplexVariableInitializer: DimExprs Type .
   63                           | DimExprs Type . '{' ArrayInitializerList '}'
   64                           | DimExprs Type . '{' '}'

    '{'  shift, and go to state 205

    $default  reduce using rule 62 (ComplexVariableInitializer)


State 142

   68 DimExprs: DimExprs DimExpr .

    $default  reduce using rule 68 (DimExprs)


State 143

  153 postfix_expression: postfix_expression INC .

    $default  reduce using rule 153 (postfix_expression)


State 144

  154 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 154 (postfix_expression)


State 145

  155 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 206


State 146

  157 postfix_expression: postfix_expression '(' . expression_list ')'
  158                   | postfix_expression '(' . ')'
  159                   | postfix_expression '(' . ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    ')'             shift, and go to state 207
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 208
    expression                 go to state 209
    expression_list            go to state 210


State 147

  156 postfix_expression: postfix_expression '[' . basic_expression ']'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 211


State 148

  168 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 91
    constant            go to state 92
    postfix_expression  go to state 93
    unary_expression    go to state 212


State 149

  169 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 91
    constant            go to state 92
    postfix_expression  go to state 93
    unary_expression    go to state 213


State 150

  170 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 91
    constant            go to state 92
    postfix_expression  go to state 93
    unary_expression    go to state 214


State 151

  172 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 215


State 152

  173 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 216


State 153

  175 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 217


State 154

  176 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 218


State 155

  181 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 219


State 156

  180 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 220


State 157

  178 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 221


State 158

  179 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 222


State 159

  183 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 223


State 160

  184 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 224


State 161

  186 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 225


State 162

  188 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 226


State 163

  190 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 227


State 164

  192 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 228


State 165

  194 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 229


State 166

   53 VariableDeclaration: VAR VariableList Type '=' VariableInitializerList . ';'
   57 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer

    ','  shift, and go to state 139
    ';'  shift, and go to state 230


State 167

  100 ParameterList: IDENTIFIER Type .

    $default  reduce using rule 100 (ParameterList)


State 168

   31 ReturnTypeList: '(' . Type ')'
   32               | '(' . ReturnTypeList ',' Type ')'

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168

    Type            go to state 231
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 232


State 169

  102 CodeBlock: '{' . local_variable_declaration_statements '}'
  103          | '{' . '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    IF              shift, and go to state 233
    WHILE           shift, and go to state 234
    DO              shift, and go to state 235
    FOR             shift, and go to state 236
    SWITCH          shift, and go to state 237
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 238
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '}'             shift, and go to state 239
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    VariableDeclaration                    go to state 240
    local_variable_declaration_statements  go to state 241
    local_variable_declaration_statement   go to state 242
    statement                              go to state 243
    selection_statement                    go to state 244
    if_statement                           go to state 245
    switch_statement                       go to state 246
    iteration_statemnet                    go to state 247
    jump_statement                         go to state 248
    primary_expression                     go to state 91
    constant                               go to state 92
    postfix_expression                     go to state 249
    unary_expression                       go to state 94
    multiplicative_expression              go to state 95
    additive_expression                    go to state 96
    shift_expression                       go to state 97
    relational_expression                  go to state 98
    equality_expression                    go to state 99
    and_expression                         go to state 100
    exclusive_or_expression                go to state 101
    inclusive_or_expression                go to state 102
    logical_and_expression                 go to state 103
    logical_or_expression                  go to state 104
    basic_expression                       go to state 250
    postfix_expression_list                go to state 251
    assignment_expression                  go to state 252
    expression_statement                   go to state 253


State 170

   30 ReturnTypeList: Type .

    $default  reduce using rule 30 (ReturnTypeList)


State 171

  109 FunctionDeclaration: FUNC IDENTIFIER '(' ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 169

    CodeBlock  go to state 254


State 172

  108 FunctionDeclaration: FUNC IDENTIFIER '(' ')' CodeBlock .

    $default  reduce using rule 108 (FunctionDeclaration)


State 173

  101 ParameterList: ParameterList ',' . IDENTIFIER Type

    IDENTIFIER  shift, and go to state 255


State 174

  110 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' . CodeBlock
  111                    | FUNC IDENTIFIER '(' ParameterList ')' . ReturnTypeList CodeBlock

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168
    '{'          shift, and go to state 169

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 256
    CodeBlock       go to state 257


State 175

   85 FieldDeclaration: VAR . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 258


State 176

   88 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')'
   89                         | FUNC . IDENTIFIER '(' ')' ReturnTypeList
   90                         | FUNC . IDENTIFIER '(' ParameterList ')'
   91                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 259


State 177

   86 FieldDeclaration: IDENTIFIER . Type ';'
   92 MethodDeclarationHeader1: IDENTIFIER . '(' ')'
   93                         | IDENTIFIER . '(' ')' ReturnTypeList
   94                         | IDENTIFIER . '(' ParameterList ')'
   95                         | IDENTIFIER . '(' ParameterList ')' ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 260

    Type           go to state 261
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 178

   78 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations . '}' SemiOrEmpty
   82 MemberDeclarations: MemberDeclarations . MemberDeclaration

    VAR         shift, and go to state 175
    FUNC        shift, and go to state 176
    IDENTIFIER  shift, and go to state 177
    '}'         shift, and go to state 262

    MemberDeclaration         go to state 263
    FieldDeclaration          go to state 180
    MethodDeclaration         go to state 181
    MethodDeclarationHeader1  go to state 182


State 179

   81 MemberDeclarations: MemberDeclaration .

    $default  reduce using rule 81 (MemberDeclarations)


State 180

   83 MemberDeclaration: FieldDeclaration .

    $default  reduce using rule 83 (MemberDeclaration)


State 181

   84 MemberDeclaration: MethodDeclaration .

    $default  reduce using rule 84 (MemberDeclaration)


State 182

   87 MethodDeclaration: MethodDeclarationHeader1 . CodeBlock

    '{'  shift, and go to state 169

    CodeBlock  go to state 264


State 183

   88 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')'
   89                         | FUNC . IDENTIFIER '(' ')' ReturnTypeList
   90                         | FUNC . IDENTIFIER '(' ParameterList ')'
   91                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList
   96 MethodDeclarationHeader2: FUNC . IDENTIFIER '(' TypeList ')'
   97                         | FUNC . IDENTIFIER '(' TypeList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 265


State 184

   92 MethodDeclarationHeader1: IDENTIFIER . '(' ')'
   93                         | IDENTIFIER . '(' ')' ReturnTypeList
   94                         | IDENTIFIER . '(' ParameterList ')'
   95                         | IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   98 MethodDeclarationHeader2: IDENTIFIER . '(' TypeList ')'
   99                         | IDENTIFIER . '(' TypeList ')' ReturnTypeList

    '('  shift, and go to state 266


State 185

  106 InterfaceFunctionDeclaration: MethodDeclarationHeader1 . ';'

    ';'  shift, and go to state 267


State 186

  107 InterfaceFunctionDeclaration: MethodDeclarationHeader2 . ';'

    ';'  shift, and go to state 268


State 187

   79 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations . '}' SemiOrEmpty
  105 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations . InterfaceFunctionDeclaration

    FUNC        shift, and go to state 183
    IDENTIFIER  shift, and go to state 184
    '}'         shift, and go to state 269

    MethodDeclarationHeader1      go to state 185
    MethodDeclarationHeader2      go to state 186
    InterfaceFunctionDeclaration  go to state 270


State 188

  104 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration .

    $default  reduce using rule 104 (InterfaceFunctionDeclarations)


State 189

   44 ImportDeclaration: IMPORT ModuleFilePathName AS IDENTIFIER SemiOrEmpty .

    $default  reduce using rule 44 (ImportDeclaration)


State 190

   45 ImportDeclaration: IMPORT ModuleFilePathName '.' '*' SemiOrEmpty .

    $default  reduce using rule 45 (ImportDeclaration)


State 191

   27 FunctionType: FUNC '(' ')' ReturnTypeList .

    $default  reduce using rule 27 (FunctionType)


State 192

    4 TypeList: TypeList ',' . Type

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 271
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 193

   28 FunctionType: FUNC '(' TypeList ')' .
   29             | FUNC '(' TypeList ')' . ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168

    $default  reduce using rule 28 (FunctionType)

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 272


State 194

  112 AnonymousFunctionDeclaration: FUNC '(' ')' . CodeBlock
  113                             | FUNC '(' ')' . ReturnTypeList CodeBlock

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168
    '{'          shift, and go to state 169

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 273
    CodeBlock       go to state 274


State 195

  101 ParameterList: ParameterList . ',' IDENTIFIER Type
  114 AnonymousFunctionDeclaration: FUNC '(' ParameterList . ')' CodeBlock
  115                             | FUNC '(' ParameterList . ')' ReturnTypeList CodeBlock

    ','  shift, and go to state 173
    ')'  shift, and go to state 275


State 196

  145 primary_expression: '(' basic_expression ')' .

    $default  reduce using rule 145 (primary_expression)


State 197

   75 ArrayPositionInitializer: INTEGER ':' . ArrayInitializer

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 125
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 126
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 127
    ArrayInitializer              go to state 276
    ArrayPositionInitializer      go to state 130
    AnonymousFunctionDeclaration  go to state 131
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 132


State 198

   66 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
   74 ArrayInitializer: '{' ArrayInitializerList . '}'

    ','  shift, and go to state 200
    '}'  shift, and go to state 277


State 199

   71 ArrayInitializer: PrimitiveType '(' . basic_expression ')'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 278


State 200

   66 ArrayInitializerList: ArrayInitializerList ',' . ArrayInitializer

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 125
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 126
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 127
    ArrayInitializer              go to state 279
    ArrayPositionInitializer      go to state 130
    AnonymousFunctionDeclaration  go to state 131
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 132


State 201

   61 ComplexVariableInitializer: '{' ArrayInitializerList '}' .

    $default  reduce using rule 61 (ComplexVariableInitializer)


State 202

   69 DimExpr: '[' basic_expression ']' .

    $default  reduce using rule 69 (DimExpr)


State 203

   59 ComplexVariableInitializer: PrimitiveType '(' basic_expression . ')'

    ')'  shift, and go to state 280


State 204

   57 VariableInitializerList: VariableInitializerList ',' ComplexVariableInitializer .

    $default  reduce using rule 57 (VariableInitializerList)


State 205

   63 ComplexVariableInitializer: DimExprs Type '{' . ArrayInitializerList '}'
   64                           | DimExprs Type '{' . '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 125
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 126
    '}'             shift, and go to state 281
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 127
    ArrayInitializerList          go to state 282
    ArrayInitializer              go to state 129
    ArrayPositionInitializer      go to state 130
    AnonymousFunctionDeclaration  go to state 131
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 132


State 206

  155 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 155 (postfix_expression)


State 207

  158 postfix_expression: postfix_expression '(' ')' .
  159                   | postfix_expression '(' ')' . CodeBlock

    '{'  shift, and go to state 169

    $default  reduce using rule 158 (postfix_expression)

    CodeBlock  go to state 283


State 208

  196 expression: basic_expression .

    $default  reduce using rule 196 (expression)


State 209

  197 expression_list: expression .

    $default  reduce using rule 197 (expression_list)


State 210

  157 postfix_expression: postfix_expression '(' expression_list . ')'
  198 expression_list: expression_list . ',' expression

    ','  shift, and go to state 284
    ')'  shift, and go to state 285


State 211

  156 postfix_expression: postfix_expression '[' basic_expression . ']'

    ']'  shift, and go to state 286


State 212

  168 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 168 (multiplicative_expression)


State 213

  169 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 169 (multiplicative_expression)


State 214

  170 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 170 (multiplicative_expression)


State 215

  168 multiplicative_expression: multiplicative_expression . '*' unary_expression
  169                          | multiplicative_expression . '/' unary_expression
  170                          | multiplicative_expression . '%' unary_expression
  172 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 148
    '/'  shift, and go to state 149
    '%'  shift, and go to state 150

    $default  reduce using rule 172 (additive_expression)


State 216

  168 multiplicative_expression: multiplicative_expression . '*' unary_expression
  169                          | multiplicative_expression . '/' unary_expression
  170                          | multiplicative_expression . '%' unary_expression
  173 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 148
    '/'  shift, and go to state 149
    '%'  shift, and go to state 150

    $default  reduce using rule 173 (additive_expression)


State 217

  172 additive_expression: additive_expression . '+' multiplicative_expression
  173                    | additive_expression . '-' multiplicative_expression
  175 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 151
    '-'  shift, and go to state 152

    $default  reduce using rule 175 (shift_expression)


State 218

  172 additive_expression: additive_expression . '+' multiplicative_expression
  173                    | additive_expression . '-' multiplicative_expression
  176 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 151
    '-'  shift, and go to state 152

    $default  reduce using rule 176 (shift_expression)


State 219

  175 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  176                 | shift_expression . SHIFT_RIGHT additive_expression
  181 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 153
    SHIFT_RIGHT  shift, and go to state 154

    $default  reduce using rule 181 (relational_expression)


State 220

  175 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  176                 | shift_expression . SHIFT_RIGHT additive_expression
  180 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 153
    SHIFT_RIGHT  shift, and go to state 154

    $default  reduce using rule 180 (relational_expression)


State 221

  175 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  176                 | shift_expression . SHIFT_RIGHT additive_expression
  178 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 153
    SHIFT_RIGHT  shift, and go to state 154

    $default  reduce using rule 178 (relational_expression)


State 222

  175 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  176                 | shift_expression . SHIFT_RIGHT additive_expression
  179 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 153
    SHIFT_RIGHT  shift, and go to state 154

    $default  reduce using rule 179 (relational_expression)


State 223

  178 relational_expression: relational_expression . '<' shift_expression
  179                      | relational_expression . '>' shift_expression
  180                      | relational_expression . LE shift_expression
  181                      | relational_expression . GE shift_expression
  183 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 155
    LE   shift, and go to state 156
    '<'  shift, and go to state 157
    '>'  shift, and go to state 158

    $default  reduce using rule 183 (equality_expression)


State 224

  178 relational_expression: relational_expression . '<' shift_expression
  179                      | relational_expression . '>' shift_expression
  180                      | relational_expression . LE shift_expression
  181                      | relational_expression . GE shift_expression
  184 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 155
    LE   shift, and go to state 156
    '<'  shift, and go to state 157
    '>'  shift, and go to state 158

    $default  reduce using rule 184 (equality_expression)


State 225

  183 equality_expression: equality_expression . EQ relational_expression
  184                    | equality_expression . NE relational_expression
  186 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 159
    NE  shift, and go to state 160

    $default  reduce using rule 186 (and_expression)


State 226

  186 and_expression: and_expression . '&' equality_expression
  188 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 161

    $default  reduce using rule 188 (exclusive_or_expression)


State 227

  188 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  190 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 162

    $default  reduce using rule 190 (inclusive_or_expression)


State 228

  190 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  192 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 163

    $default  reduce using rule 192 (logical_and_expression)


State 229

  192 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  194 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 164

    $default  reduce using rule 194 (logical_or_expression)


State 230

   53 VariableDeclaration: VAR VariableList Type '=' VariableInitializerList ';' .

    $default  reduce using rule 53 (VariableDeclaration)


State 231

   30 ReturnTypeList: Type .
   31               | '(' Type . ')'

    ')'  shift, and go to state 287

    $default  reduce using rule 30 (ReturnTypeList)


State 232

   32 ReturnTypeList: '(' ReturnTypeList . ',' Type ')'

    ','  shift, and go to state 288


State 233

  126 if_statement: IF . '(' basic_expression ')' CodeBlock
  127             | IF . '(' basic_expression ')' CodeBlock ELSE else_statemnet

    '('  shift, and go to state 289


State 234

  131 iteration_statemnet: WHILE . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 290


State 235

  132 iteration_statemnet: DO . CodeBlock WHILE '(' basic_expression ')' ';'

    '{'  shift, and go to state 169

    CodeBlock  go to state 291


State 236

  133 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' CodeBlock

    '('  shift, and go to state 292


State 237

  130 switch_statement: SWITCH . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 293


State 238

  140 jump_statement: RETURN . ';'
  141               | RETURN . expression_list ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    ';'             shift, and go to state 294
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 208
    expression                 go to state 209
    expression_list            go to state 295


State 239

  103 CodeBlock: '{' '}' .

    $default  reduce using rule 103 (CodeBlock)


State 240

  118 local_variable_declaration_statement: VariableDeclaration .

    $default  reduce using rule 118 (local_variable_declaration_statement)


State 241

  102 CodeBlock: '{' local_variable_declaration_statements . '}'
  117 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    IF              shift, and go to state 233
    WHILE           shift, and go to state 234
    DO              shift, and go to state 235
    FOR             shift, and go to state 236
    SWITCH          shift, and go to state 237
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 238
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '}'             shift, and go to state 296
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    VariableDeclaration                   go to state 240
    local_variable_declaration_statement  go to state 297
    statement                             go to state 243
    selection_statement                   go to state 244
    if_statement                          go to state 245
    switch_statement                      go to state 246
    iteration_statemnet                   go to state 247
    jump_statement                        go to state 248
    primary_expression                    go to state 91
    constant                              go to state 92
    postfix_expression                    go to state 249
    unary_expression                      go to state 94
    multiplicative_expression             go to state 95
    additive_expression                   go to state 96
    shift_expression                      go to state 97
    relational_expression                 go to state 98
    equality_expression                   go to state 99
    and_expression                        go to state 100
    exclusive_or_expression               go to state 101
    inclusive_or_expression               go to state 102
    logical_and_expression                go to state 103
    logical_or_expression                 go to state 104
    basic_expression                      go to state 250
    postfix_expression_list               go to state 251
    assignment_expression                 go to state 252
    expression_statement                  go to state 253


State 242

  116 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 116 (local_variable_declaration_statements)


State 243

  119 local_variable_declaration_statement: statement .

    $default  reduce using rule 119 (local_variable_declaration_statement)


State 244

  121 statement: selection_statement .

    $default  reduce using rule 121 (statement)


State 245

  124 selection_statement: if_statement .

    $default  reduce using rule 124 (selection_statement)


State 246

  125 selection_statement: switch_statement .

    $default  reduce using rule 125 (selection_statement)


State 247

  122 statement: iteration_statemnet .

    $default  reduce using rule 122 (statement)


State 248

  123 statement: jump_statement .

    $default  reduce using rule 123 (statement)


State 249

  153 postfix_expression: postfix_expression . INC
  154                   | postfix_expression . DEC
  155                   | postfix_expression . '.' IDENTIFIER
  156                   | postfix_expression . '[' basic_expression ']'
  157                   | postfix_expression . '(' expression_list ')'
  158                   | postfix_expression . '(' ')'
  159                   | postfix_expression . '(' ')' CodeBlock
  160 unary_expression: postfix_expression .
  199 postfix_expression_list: postfix_expression .
  202 assignment_expression: postfix_expression . compound_assignment_operator ComplexVariableInitializer
  203                      | postfix_expression . VAR_ASSIGN ComplexVariableInitializer

    VAR_ASSIGN    shift, and go to state 298
    ADD_ASSIGN    shift, and go to state 299
    SUB_ASSIGN    shift, and go to state 300
    MUL_ASSIGN    shift, and go to state 301
    DIV_ASSIGN    shift, and go to state 302
    MOD_ASSIGN    shift, and go to state 303
    AND_ASSIGN    shift, and go to state 304
    OR_ASSIGN     shift, and go to state 305
    XOR_ASSIGN    shift, and go to state 306
    RIGHT_ASSIGN  shift, and go to state 307
    LEFT_ASSIGN   shift, and go to state 308
    INC           shift, and go to state 143
    DEC           shift, and go to state 144
    '.'           shift, and go to state 145
    '('           shift, and go to state 146
    '['           shift, and go to state 147

    ','       reduce using rule 199 (postfix_expression_list)
    '='       reduce using rule 199 (postfix_expression_list)
    $default  reduce using rule 160 (unary_expression)

    compound_assignment_operator  go to state 309


State 250

  214 expression_statement: basic_expression .

    $default  reduce using rule 214 (expression_statement)


State 251

  200 postfix_expression_list: postfix_expression_list . ',' postfix_expression
  201 assignment_expression: postfix_expression_list . '=' VariableInitializerList

    ','  shift, and go to state 310
    '='  shift, and go to state 311


State 252

  215 expression_statement: assignment_expression .

    $default  reduce using rule 215 (expression_statement)


State 253

  120 statement: expression_statement . ';'

    ';'  shift, and go to state 312


State 254

  109 FunctionDeclaration: FUNC IDENTIFIER '(' ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 109 (FunctionDeclaration)


State 255

  101 ParameterList: ParameterList ',' IDENTIFIER . Type

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 313
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 256

  111 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 169

    CodeBlock  go to state 314


State 257

  110 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' CodeBlock .

    $default  reduce using rule 110 (FunctionDeclaration)


State 258

   85 FieldDeclaration: VAR IDENTIFIER . Type ';'

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 315
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 259

   88 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')'
   89                         | FUNC IDENTIFIER . '(' ')' ReturnTypeList
   90                         | FUNC IDENTIFIER . '(' ParameterList ')'
   91                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList

    '('  shift, and go to state 316


State 260

   92 MethodDeclarationHeader1: IDENTIFIER '(' . ')'
   93                         | IDENTIFIER '(' . ')' ReturnTypeList
   94                         | IDENTIFIER '(' . ParameterList ')'
   95                         | IDENTIFIER '(' . ParameterList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 108
    ')'         shift, and go to state 317

    ParameterList  go to state 318


State 261

   86 FieldDeclaration: IDENTIFIER Type . ';'

    ';'  shift, and go to state 319


State 262

   78 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' . SemiOrEmpty

    ';'  shift, and go to state 55

    $default  reduce using rule 76 (SemiOrEmpty)

    SemiOrEmpty  go to state 320


State 263

   82 MemberDeclarations: MemberDeclarations MemberDeclaration .

    $default  reduce using rule 82 (MemberDeclarations)


State 264

   87 MethodDeclaration: MethodDeclarationHeader1 CodeBlock .

    $default  reduce using rule 87 (MethodDeclaration)


State 265

   88 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')'
   89                         | FUNC IDENTIFIER . '(' ')' ReturnTypeList
   90                         | FUNC IDENTIFIER . '(' ParameterList ')'
   91                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   96 MethodDeclarationHeader2: FUNC IDENTIFIER . '(' TypeList ')'
   97                         | FUNC IDENTIFIER . '(' TypeList ')' ReturnTypeList

    '('  shift, and go to state 321


State 266

   92 MethodDeclarationHeader1: IDENTIFIER '(' . ')'
   93                         | IDENTIFIER '(' . ')' ReturnTypeList
   94                         | IDENTIFIER '(' . ParameterList ')'
   95                         | IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   98 MethodDeclarationHeader2: IDENTIFIER '(' . TypeList ')'
   99                         | IDENTIFIER '(' . TypeList ')' ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 322
    ')'          shift, and go to state 317

    TypeList       go to state 323
    Type           go to state 119
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49
    ParameterList  go to state 318


State 267

  106 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';' .

    $default  reduce using rule 106 (InterfaceFunctionDeclaration)


State 268

  107 InterfaceFunctionDeclaration: MethodDeclarationHeader2 ';' .

    $default  reduce using rule 107 (InterfaceFunctionDeclaration)


State 269

   79 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' . SemiOrEmpty

    ';'  shift, and go to state 55

    $default  reduce using rule 76 (SemiOrEmpty)

    SemiOrEmpty  go to state 324


State 270

  105 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations InterfaceFunctionDeclaration .

    $default  reduce using rule 105 (InterfaceFunctionDeclarations)


State 271

    4 TypeList: TypeList ',' Type .

    $default  reduce using rule 4 (TypeList)


State 272

   29 FunctionType: FUNC '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 29 (FunctionType)


State 273

  113 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 169

    CodeBlock  go to state 325


State 274

  112 AnonymousFunctionDeclaration: FUNC '(' ')' CodeBlock .

    $default  reduce using rule 112 (AnonymousFunctionDeclaration)


State 275

  114 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' . CodeBlock
  115                             | FUNC '(' ParameterList ')' . ReturnTypeList CodeBlock

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168
    '{'          shift, and go to state 169

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 326
    CodeBlock       go to state 327


State 276

   75 ArrayPositionInitializer: INTEGER ':' ArrayInitializer .

    $default  reduce using rule 75 (ArrayPositionInitializer)


State 277

   74 ArrayInitializer: '{' ArrayInitializerList '}' .

    $default  reduce using rule 74 (ArrayInitializer)


State 278

   71 ArrayInitializer: PrimitiveType '(' basic_expression . ')'

    ')'  shift, and go to state 328


State 279

   66 ArrayInitializerList: ArrayInitializerList ',' ArrayInitializer .

    $default  reduce using rule 66 (ArrayInitializerList)


State 280

   59 ComplexVariableInitializer: PrimitiveType '(' basic_expression ')' .

    $default  reduce using rule 59 (ComplexVariableInitializer)


State 281

   64 ComplexVariableInitializer: DimExprs Type '{' '}' .

    $default  reduce using rule 64 (ComplexVariableInitializer)


State 282

   63 ComplexVariableInitializer: DimExprs Type '{' ArrayInitializerList . '}'
   66 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 200
    '}'  shift, and go to state 329


State 283

  159 postfix_expression: postfix_expression '(' ')' CodeBlock .

    $default  reduce using rule 159 (postfix_expression)


State 284

  198 expression_list: expression_list ',' . expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 208
    expression                 go to state 330


State 285

  157 postfix_expression: postfix_expression '(' expression_list ')' .

    $default  reduce using rule 157 (postfix_expression)


State 286

  156 postfix_expression: postfix_expression '[' basic_expression ']' .

    $default  reduce using rule 156 (postfix_expression)


State 287

   31 ReturnTypeList: '(' Type ')' .

    $default  reduce using rule 31 (ReturnTypeList)


State 288

   32 ReturnTypeList: '(' ReturnTypeList ',' . Type ')'

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 331
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 289

  126 if_statement: IF '(' . basic_expression ')' CodeBlock
  127             | IF '(' . basic_expression ')' CodeBlock ELSE else_statemnet

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 332


State 290

  131 iteration_statemnet: WHILE '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 333


State 291

  132 iteration_statemnet: DO CodeBlock . WHILE '(' basic_expression ')' ';'

    WHILE  shift, and go to state 334


State 292

  133 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    VAR             shift, and go to state 1
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    ';'             shift, and go to state 335
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    VariableDeclaration        go to state 336
    for_init                   go to state 337
    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 249
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 250
    postfix_expression_list    go to state 251
    assignment_expression      go to state 252
    expression_statement       go to state 338


State 293

  130 switch_statement: SWITCH '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 339


State 294

  140 jump_statement: RETURN ';' .

    $default  reduce using rule 140 (jump_statement)


State 295

  141 jump_statement: RETURN expression_list . ';'
  198 expression_list: expression_list . ',' expression

    ','  shift, and go to state 284
    ';'  shift, and go to state 340


State 296

  102 CodeBlock: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 102 (CodeBlock)


State 297

  117 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 117 (local_variable_declaration_statements)


State 298

  203 assignment_expression: postfix_expression VAR_ASSIGN . ComplexVariableInitializer

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 79
    '['             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    ComplexVariableInitializer    go to state 341
    DimExprs                      go to state 88
    DimExpr                       go to state 89
    AnonymousFunctionDeclaration  go to state 90
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 105


State 299

  204 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 204 (compound_assignment_operator)


State 300

  205 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 205 (compound_assignment_operator)


State 301

  206 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 206 (compound_assignment_operator)


State 302

  207 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 207 (compound_assignment_operator)


State 303

  208 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 208 (compound_assignment_operator)


State 304

  209 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 209 (compound_assignment_operator)


State 305

  210 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 210 (compound_assignment_operator)


State 306

  211 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 211 (compound_assignment_operator)


State 307

  212 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 212 (compound_assignment_operator)


State 308

  213 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 213 (compound_assignment_operator)


State 309

  202 assignment_expression: postfix_expression compound_assignment_operator . ComplexVariableInitializer

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 79
    '['             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    ComplexVariableInitializer    go to state 342
    DimExprs                      go to state 88
    DimExpr                       go to state 89
    AnonymousFunctionDeclaration  go to state 90
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 105


State 310

  200 postfix_expression_list: postfix_expression_list ',' . postfix_expression

    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78

    primary_expression  go to state 91
    constant            go to state 92
    postfix_expression  go to state 343


State 311

  201 assignment_expression: postfix_expression_list '=' . VariableInitializerList

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '{'             shift, and go to state 79
    '['             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    VariableInitializerList       go to state 344
    ComplexVariableInitializer    go to state 87
    DimExprs                      go to state 88
    DimExpr                       go to state 89
    AnonymousFunctionDeclaration  go to state 90
    primary_expression            go to state 91
    constant                      go to state 92
    postfix_expression            go to state 93
    unary_expression              go to state 94
    multiplicative_expression     go to state 95
    additive_expression           go to state 96
    shift_expression              go to state 97
    relational_expression         go to state 98
    equality_expression           go to state 99
    and_expression                go to state 100
    exclusive_or_expression       go to state 101
    inclusive_or_expression       go to state 102
    logical_and_expression        go to state 103
    logical_or_expression         go to state 104
    basic_expression              go to state 105


State 312

  120 statement: expression_statement ';' .

    $default  reduce using rule 120 (statement)


State 313

  101 ParameterList: ParameterList ',' IDENTIFIER Type .

    $default  reduce using rule 101 (ParameterList)


State 314

  111 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 111 (FunctionDeclaration)


State 315

   85 FieldDeclaration: VAR IDENTIFIER Type . ';'

    ';'  shift, and go to state 345


State 316

   88 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')'
   89                         | FUNC IDENTIFIER '(' . ')' ReturnTypeList
   90                         | FUNC IDENTIFIER '(' . ParameterList ')'
   91                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 108
    ')'         shift, and go to state 346

    ParameterList  go to state 347


State 317

   92 MethodDeclarationHeader1: IDENTIFIER '(' ')' .
   93                         | IDENTIFIER '(' ')' . ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168

    $default  reduce using rule 92 (MethodDeclarationHeader1)

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 348


State 318

   94 MethodDeclarationHeader1: IDENTIFIER '(' ParameterList . ')'
   95                         | IDENTIFIER '(' ParameterList . ')' ReturnTypeList
  101 ParameterList: ParameterList . ',' IDENTIFIER Type

    ','  shift, and go to state 173
    ')'  shift, and go to state 349


State 319

   86 FieldDeclaration: IDENTIFIER Type ';' .

    $default  reduce using rule 86 (FieldDeclaration)


State 320

   78 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' SemiOrEmpty .

    $default  reduce using rule 78 (TypeDeclaration)


State 321

   88 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')'
   89                         | FUNC IDENTIFIER '(' . ')' ReturnTypeList
   90                         | FUNC IDENTIFIER '(' . ParameterList ')'
   91                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   96 MethodDeclarationHeader2: FUNC IDENTIFIER '(' . TypeList ')'
   97                         | FUNC IDENTIFIER '(' . TypeList ')' ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 322
    ')'          shift, and go to state 346

    TypeList       go to state 350
    Type           go to state 119
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49
    ParameterList  go to state 347


State 322

   24 ModuleType: IDENTIFIER .
   25           | IDENTIFIER . '.' IDENTIFIER
  100 ParameterList: IDENTIFIER . Type

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '.'          shift, and go to state 65

    $default  reduce using rule 24 (ModuleType)

    Type           go to state 167
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 323

    4 TypeList: TypeList . ',' Type
   98 MethodDeclarationHeader2: IDENTIFIER '(' TypeList . ')'
   99                         | IDENTIFIER '(' TypeList . ')' ReturnTypeList

    ','  shift, and go to state 192
    ')'  shift, and go to state 351


State 324

   79 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty .

    $default  reduce using rule 79 (TypeDeclaration)


State 325

  113 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 113 (AnonymousFunctionDeclaration)


State 326

  115 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 169

    CodeBlock  go to state 352


State 327

  114 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' CodeBlock .

    $default  reduce using rule 114 (AnonymousFunctionDeclaration)


State 328

   71 ArrayInitializer: PrimitiveType '(' basic_expression ')' .

    $default  reduce using rule 71 (ArrayInitializer)


State 329

   63 ComplexVariableInitializer: DimExprs Type '{' ArrayInitializerList '}' .

    $default  reduce using rule 63 (ComplexVariableInitializer)


State 330

  198 expression_list: expression_list ',' expression .

    $default  reduce using rule 198 (expression_list)


State 331

   32 ReturnTypeList: '(' ReturnTypeList ',' Type . ')'

    ')'  shift, and go to state 353


State 332

  126 if_statement: IF '(' basic_expression . ')' CodeBlock
  127             | IF '(' basic_expression . ')' CodeBlock ELSE else_statemnet

    ')'  shift, and go to state 354


State 333

  131 iteration_statemnet: WHILE '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 355


State 334

  132 iteration_statemnet: DO CodeBlock WHILE . '(' basic_expression ')' ';'

    '('  shift, and go to state 356


State 335

  136 for_init: ';' .

    $default  reduce using rule 136 (for_init)


State 336

  135 for_init: VariableDeclaration .

    $default  reduce using rule 135 (for_init)


State 337

  133 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    ';'             shift, and go to state 357
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    for_expr                   go to state 358
    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 359


State 338

  134 for_init: expression_statement . ';'

    ';'  shift, and go to state 360


State 339

  130 switch_statement: SWITCH '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 361


State 340

  141 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 141 (jump_statement)


State 341

  203 assignment_expression: postfix_expression VAR_ASSIGN ComplexVariableInitializer .

    $default  reduce using rule 203 (assignment_expression)


State 342

  202 assignment_expression: postfix_expression compound_assignment_operator ComplexVariableInitializer .

    $default  reduce using rule 202 (assignment_expression)


State 343

  153 postfix_expression: postfix_expression . INC
  154                   | postfix_expression . DEC
  155                   | postfix_expression . '.' IDENTIFIER
  156                   | postfix_expression . '[' basic_expression ']'
  157                   | postfix_expression . '(' expression_list ')'
  158                   | postfix_expression . '(' ')'
  159                   | postfix_expression . '(' ')' CodeBlock
  200 postfix_expression_list: postfix_expression_list ',' postfix_expression .

    INC  shift, and go to state 143
    DEC  shift, and go to state 144
    '.'  shift, and go to state 145
    '('  shift, and go to state 146
    '['  shift, and go to state 147

    $default  reduce using rule 200 (postfix_expression_list)


State 344

   57 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer
  201 assignment_expression: postfix_expression_list '=' VariableInitializerList .

    ','  shift, and go to state 139

    $default  reduce using rule 201 (assignment_expression)


State 345

   85 FieldDeclaration: VAR IDENTIFIER Type ';' .

    $default  reduce using rule 85 (FieldDeclaration)


State 346

   88 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' .
   89                         | FUNC IDENTIFIER '(' ')' . ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168

    $default  reduce using rule 88 (MethodDeclarationHeader1)

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 362


State 347

   90 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList . ')'
   91                         | FUNC IDENTIFIER '(' ParameterList . ')' ReturnTypeList
  101 ParameterList: ParameterList . ',' IDENTIFIER Type

    ','  shift, and go to state 173
    ')'  shift, and go to state 363


State 348

   93 MethodDeclarationHeader1: IDENTIFIER '(' ')' ReturnTypeList .

    $default  reduce using rule 93 (MethodDeclarationHeader1)


State 349

   94 MethodDeclarationHeader1: IDENTIFIER '(' ParameterList ')' .
   95                         | IDENTIFIER '(' ParameterList ')' . ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168

    $default  reduce using rule 94 (MethodDeclarationHeader1)

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 364


State 350

    4 TypeList: TypeList . ',' Type
   96 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList . ')'
   97                         | FUNC IDENTIFIER '(' TypeList . ')' ReturnTypeList

    ','  shift, and go to state 192
    ')'  shift, and go to state 365


State 351

   98 MethodDeclarationHeader2: IDENTIFIER '(' TypeList ')' .
   99                         | IDENTIFIER '(' TypeList ')' . ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168

    $default  reduce using rule 98 (MethodDeclarationHeader2)

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 366


State 352

  115 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 115 (AnonymousFunctionDeclaration)


State 353

   32 ReturnTypeList: '(' ReturnTypeList ',' Type ')' .

    $default  reduce using rule 32 (ReturnTypeList)


State 354

  126 if_statement: IF '(' basic_expression ')' . CodeBlock
  127             | IF '(' basic_expression ')' . CodeBlock ELSE else_statemnet

    '{'  shift, and go to state 169

    CodeBlock  go to state 367


State 355

  131 iteration_statemnet: WHILE '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 169

    CodeBlock  go to state 368


State 356

  132 iteration_statemnet: DO CodeBlock WHILE '(' . basic_expression ')' ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 93
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 369


State 357

  138 for_expr: ';' .

    $default  reduce using rule 138 (for_expr)


State 358

  133 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    for_incr                   go to state 370
    primary_expression         go to state 91
    constant                   go to state 92
    postfix_expression         go to state 249
    unary_expression           go to state 94
    multiplicative_expression  go to state 95
    additive_expression        go to state 96
    shift_expression           go to state 97
    relational_expression      go to state 98
    equality_expression        go to state 99
    and_expression             go to state 100
    exclusive_or_expression    go to state 101
    inclusive_or_expression    go to state 102
    logical_and_expression     go to state 103
    logical_or_expression      go to state 104
    basic_expression           go to state 250
    postfix_expression_list    go to state 251
    assignment_expression      go to state 252
    expression_statement       go to state 371


State 359

  137 for_expr: basic_expression . ';'

    ';'  shift, and go to state 372


State 360

  134 for_init: expression_statement ';' .

    $default  reduce using rule 134 (for_init)


State 361

  130 switch_statement: SWITCH '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 169

    CodeBlock  go to state 373


State 362

   89 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' ReturnTypeList .

    $default  reduce using rule 89 (MethodDeclarationHeader1)


State 363

   90 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' .
   91                         | FUNC IDENTIFIER '(' ParameterList ')' . ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168

    $default  reduce using rule 90 (MethodDeclarationHeader1)

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 374


State 364

   95 MethodDeclarationHeader1: IDENTIFIER '(' ParameterList ')' ReturnTypeList .

    $default  reduce using rule 95 (MethodDeclarationHeader1)


State 365

   96 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' .
   97                         | FUNC IDENTIFIER '(' TypeList ')' . ReturnTypeList

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 168

    $default  reduce using rule 96 (MethodDeclarationHeader2)

    Type            go to state 170
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 375


State 366

   99 MethodDeclarationHeader2: IDENTIFIER '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 99 (MethodDeclarationHeader2)


State 367

  126 if_statement: IF '(' basic_expression ')' CodeBlock .
  127             | IF '(' basic_expression ')' CodeBlock . ELSE else_statemnet

    ELSE  shift, and go to state 376

    $default  reduce using rule 126 (if_statement)


State 368

  131 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 131 (iteration_statemnet)


State 369

  132 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression . ')' ';'

    ')'  shift, and go to state 377


State 370

  133 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' CodeBlock

    ')'  shift, and go to state 378


State 371

  139 for_incr: expression_statement .

    $default  reduce using rule 139 (for_incr)


State 372

  137 for_expr: basic_expression ';' .

    $default  reduce using rule 137 (for_expr)


State 373

  130 switch_statement: SWITCH '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 130 (switch_statement)


State 374

   91 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList .

    $default  reduce using rule 91 (MethodDeclarationHeader1)


State 375

   97 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 97 (MethodDeclarationHeader2)


State 376

  127 if_statement: IF '(' basic_expression ')' CodeBlock ELSE . else_statemnet

    IF   shift, and go to state 233
    '{'  shift, and go to state 169

    CodeBlock       go to state 379
    if_statement    go to state 380
    else_statemnet  go to state 381


State 377

  132 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' . ';'

    ';'  shift, and go to state 382


State 378

  133 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . CodeBlock

    '{'  shift, and go to state 169

    CodeBlock  go to state 383


State 379

  129 else_statemnet: CodeBlock .

    $default  reduce using rule 129 (else_statemnet)


State 380

  128 else_statemnet: if_statement .

    $default  reduce using rule 128 (else_statemnet)


State 381

  127 if_statement: IF '(' basic_expression ')' CodeBlock ELSE else_statemnet .

    $default  reduce using rule 127 (if_statement)


State 382

  132 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' ';' .

    $default  reduce using rule 132 (iteration_statemnet)


State 383

  133 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' CodeBlock .

    $default  reduce using rule 133 (iteration_statemnet)
