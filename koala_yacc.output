Terminals unused in grammar

   ELLIPSIS
   NOT
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   HEX
   OCT
   OP
   IFX
   NO_CODE_BLOCK


Grammar

    0 $accept: program $end

    1 qualified_name: ID
    2               | qualified_name '.' ID

    3 type_name_list: type_name
    4               | type_name_list ',' type_name

    5 type_name: primitive_type
    6          | qualified_name
    7          | array_type
    8          | function_type
    9          | INTERFACE '{' '}'

   10 primitive_type: UINT8
   11               | UINT16
   12               | UINT32
   13               | UINT64
   14               | INT8
   15               | INT16
   16               | INT32
   17               | INT64
   18               | FLOAT32
   19               | FLOAT64
   20               | BOOL
   21               | STRING

   22 function_type: FUNC '(' ')'
   23              | FUNC '(' ')' return_type_list
   24              | FUNC '(' type_name_list ')'
   25              | FUNC '(' type_name_list ')' return_type_list

   26 array_type: '[' INTEGER ']' type_name

   27 return_type_list: type_name
   28                 | '(' type_name_list ')'

   29 program: package_statement import_statements declarations
   30        | package_statement import_statements
   31        | package_statement declarations
   32        | import_statements declarations
   33        | package_statement
   34        | import_statements
   35        | declarations

   36 package_statement: PACKAGE qualified_name ';'

   37 import_statements: import_statement
   38                  | import_statements import_statement

   39 import_statement: IMPORT qualified_name ';'
   40                 | IMPORT qualified_name '.' '*' ';'

   41 declarations: type_declaration
   42             | declarations type_declaration
   43             | variable_declaration
   44             | declarations variable_declaration
   45             | function_declaration
   46             | declarations function_declaration
   47             | method_declaration
   48             | declarations method_declaration

   49 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   50                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE ID type_name ';'

   52 field_declarations: field_declaration
   53                   | field_declarations field_declaration

   54 field_declaration: ID type_name ';'

   55 interface_function_declarations: interface_function_declaration
   56                                | interface_function_declarations interface_function_declaration

   57 interface_function_declaration: ID '(' ')' ';'
   58                               | ID '(' ')' return_type_list ';'
   59                               | ID '(' type_name_list ')' ';'
   60                               | ID '(' type_name_list ')' return_type_list ';'
   61                               | ID '(' parameter_list ')' ';'
   62                               | ID '(' parameter_list ')' return_type_list ';'

   63 parameter_list: ID type_name
   64               | parameter_list ',' ID type_name

   65 function_declaration: FUNC ID '(' ')' code_block
   66                     | FUNC ID '(' ')' return_type_list code_block
   67                     | FUNC ID '(' parameter_list ')' code_block
   68                     | FUNC ID '(' parameter_list ')' return_type_list code_block

   69 anonymous_function_declaration: FUNC '(' ')' code_block
   70                               | FUNC '(' ')' return_type_list code_block
   71                               | FUNC '(' parameter_list ')' code_block
   72                               | FUNC '(' parameter_list ')' return_type_list code_block

   73 method_declaration: FUNC ID '.' ID '(' ')' code_block
   74                   | FUNC ID '.' ID '(' ')' return_type_list code_block
   75                   | FUNC ID '.' ID '(' parameter_list ')' code_block
   76                   | FUNC ID '.' ID '(' parameter_list ')' return_type_list code_block

   77 code_block: '{' local_variable_declaration_statements '}'
   78           | '{' '}'

   79 local_variable_declaration_statements: local_variable_declaration_statement
   80                                      | local_variable_declaration_statements local_variable_declaration_statement

   81 local_variable_declaration_statement: variable_declaration
   82                                     | statemnet

   83 statemnet: expression_statement ';'
   84          | selection_statement
   85          | iteration_statemnet
   86          | jump_statement

   87 selection_statement: if_statement
   88                    | switch_statement

   89 if_statement: IF '(' base_expression ')' code_block
   90             | IF '(' base_expression ')' code_block ELSE else_statemnet

   91 else_statemnet: if_statement
   92               | code_block

   93 switch_statement: SWITCH '(' base_expression ')' code_block

   94 iteration_statemnet: WHILE '(' base_expression ')' code_block
   95                    | DO code_block WHILE '(' base_expression ')' ';'
   96                    | FOR '(' for_init for_expr for_incr ')' code_block

   97 for_init: expression_statement ';'
   98         | variable_declaration
   99         | ';'

  100 for_expr: base_expression ';'
  101         | ';'

  102 for_incr: expression_statement

  103 jump_statement: RETURN ';'
  104               | RETURN expression_list ';'

  105 variable_declaration: VAR var_list type_name ';'
  106                     | VAR var_list '=' expression_list ';'
  107                     | VAR var_list type_name '=' expression_list ';'

  108 var_list: ID
  109         | var_list ',' ID

  110 primary_expression: qualified_name
  111                   | const_name
  112                   | just_not_name

  113 just_not_name: TOKEN_THIS
  114              | '(' base_expression ')'
  115              | complex_primary

  116 complex_primary: array_access
  117                | field_access
  118                | method_call

  119 const_name: INTEGER
  120           | FLOAT
  121           | STRING_LITERAL
  122           | TOKEN_NIL
  123           | TOKEN_TRUE
  124           | TOKEN_FALSE

  125 array_complex_primary: '(' base_expression ')'
  126                      | array_access
  127                      | field_access
  128                      | method_call

  129 array_access: qualified_name '[' base_expression ']'
  130             | array_complex_primary '[' base_expression ']'

  131 field_access: just_not_name '.' ID

  132 method_call: method_access '(' argument_list ')'
  133            | method_access '(' ')'

  134 method_access: complex_primary
  135              | qualified_name

  136 initializer_expression: '{' '}'
  137                       | '{' expression_list '}'
  138                       | '{' field_initial_list '}'
  139                       | '{' array_initial_list '}'
  140                       | qualified_name '{' '}'
  141                       | qualified_name '{' expression_list '}'
  142                       | qualified_name '{' field_initial_list '}'
  143                       | array_type '{' '}'
  144                       | array_type '{' expression_list '}'
  145                       | array_type '{' array_initial_list '}'
  146                       | anonymous_function_declaration
  147                       | primitive_type '(' base_expression ')'

  148 field_initial_list: ID ':' base_expression
  149                   | field_initial_list ',' ID ':' base_expression

  150 array_initial_list: INTEGER ':' base_expression
  151                   | array_initial_list ',' INTEGER ':' base_expression

  152 postfix_expression: primary_expression
  153                   | real_postfix_expression

  154 real_postfix_expression: postfix_expression INC
  155                        | postfix_expression DEC

  156 argument_list: expression_list

  157 unary_expression: postfix_expression
  158                 | INC unary_expression
  159                 | DEC unary_expression
  160                 | unary_operator unary_expression

  161 unary_operator: '+'
  162               | '-'
  163               | '~'
  164               | '!'

  165 multiplicative_expression: unary_expression
  166                          | multiplicative_expression '*' unary_expression
  167                          | multiplicative_expression '/' unary_expression
  168                          | multiplicative_expression '%' unary_expression

  169 additive_expression: multiplicative_expression
  170                    | additive_expression '+' multiplicative_expression
  171                    | additive_expression '-' multiplicative_expression

  172 shift_expression: additive_expression
  173                 | shift_expression SHIFT_LEFT additive_expression
  174                 | shift_expression SHIFT_RIGHT additive_expression

  175 relational_expression: shift_expression
  176                      | relational_expression '<' shift_expression
  177                      | relational_expression '>' shift_expression
  178                      | relational_expression LE shift_expression
  179                      | relational_expression GE shift_expression

  180 equality_expression: relational_expression
  181                    | equality_expression EQ relational_expression
  182                    | equality_expression NE relational_expression

  183 and_expression: equality_expression
  184               | and_expression '&' equality_expression

  185 exclusive_or_expression: and_expression
  186                        | exclusive_or_expression '^' and_expression

  187 inclusive_or_expression: exclusive_or_expression
  188                        | inclusive_or_expression '|' exclusive_or_expression

  189 logical_and_expression: inclusive_or_expression
  190                       | logical_and_expression AND inclusive_or_expression

  191 logical_or_expression: logical_and_expression
  192                      | logical_or_expression OR logical_and_expression

  193 base_expression: logical_or_expression

  194 expression: base_expression
  195           | initializer_expression

  196 expression_list: expression
  197                | expression_list ',' expression

  198 assignment_expression: assignment_variable_list '=' expression_list
  199                      | assignment_variable compound_assignment_operator base_expression

  200 assignment_variable_list: assignment_variable
  201                         | assignment_variable_list ',' assignment_variable

  202 assignment_variable: qualified_name
  203                    | array_access
  204                    | field_access

  205 compound_assignment_operator: ADD_ASSIGN
  206                             | SUB_ASSIGN
  207                             | MUL_ASSIGN
  208                             | DIV_ASSIGN
  209                             | MOD_ASSIGN
  210                             | AND_ASSIGN
  211                             | OR_ASSIGN
  212                             | XOR_ASSIGN
  213                             | RIGHT_ASSIGN
  214                             | LEFT_ASSIGN

  215 expression_statement: base_expression
  216                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 164
'%' (37) 168
'&' (38) 184
'(' (40) 22 23 24 25 28 57 58 59 60 61 62 65 66 67 68 69 70 71 72 73
    74 75 76 89 90 93 94 95 96 114 125 132 133 147
')' (41) 22 23 24 25 28 57 58 59 60 61 62 65 66 67 68 69 70 71 72 73
    74 75 76 89 90 93 94 95 96 114 125 132 133 147
'*' (42) 40 166
'+' (43) 161 170
',' (44) 4 64 109 149 151 197 201
'-' (45) 162 171
'.' (46) 2 40 73 74 75 76 131
'/' (47) 167
':' (58) 148 149 150 151
';' (59) 36 39 40 51 54 57 58 59 60 61 62 83 95 97 99 100 101 103 104
    105 106 107
'<' (60) 176
'=' (61) 106 107 198
'>' (62) 177
'[' (91) 26 129 130
']' (93) 26 129 130
'^' (94) 186
'{' (123) 9 49 50 77 78 136 137 138 139 140 141 142 143 144 145
'|' (124) 188
'}' (125) 9 49 50 77 78 136 137 138 139 140 141 142 143 144 145
'~' (126) 163
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 205
SUB_ASSIGN (260) 206
MUL_ASSIGN (261) 207
DIV_ASSIGN (262) 208
MOD_ASSIGN (263) 209
AND_ASSIGN (264) 210
OR_ASSIGN (265) 211
XOR_ASSIGN (266) 212
RIGHT_ASSIGN (267) 213
LEFT_ASSIGN (268) 214
EQ (269) 181
NE (270) 182
GE (271) 179
LE (272) 178
AND (273) 190
OR (274) 192
NOT (275)
SHIFT_LEFT (276) 173
SHIFT_RIGHT (277) 174
INC (278) 154 158
DEC (279) 155 159
TOKEN_THIS (280) 113
IF (281) 89 90
ELSE (282) 90
WHILE (283) 94 95
DO (284) 95
FOR (285) 96
IN (286)
SWITCH (287) 93
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 105 106 107
FUNC (293) 22 23 24 25 65 66 67 68 69 70 71 72 73 74 75 76
RETURN (294) 103 104
STRUCT (295) 49
INTERFACE (296) 9 50
TYPE (297) 49 50 51
CONST (298)
PACKAGE (299) 36
IMPORT (300) 39 40
INT8 (301) 14
INT16 (302) 15
INT32 (303) 16
INT64 (304) 17
UINT8 (305) 10
UINT16 (306) 11
UINT32 (307) 12
UINT64 (308) 13
FLOAT32 (309) 18
FLOAT64 (310) 19
BOOL (311) 20
STRING (312) 21
TOKEN_NIL (313) 122
TOKEN_TRUE (314) 123
TOKEN_FALSE (315) 124
INTEGER (316) 26 119 150 151
HEX (317)
OCT (318)
FLOAT (319) 120
STRING_LITERAL (320) 121
ID (321) 1 2 49 50 51 54 57 58 59 60 61 62 63 64 65 66 67 68 73 74
    75 76 108 109 131 148 149
OP (322)
IFX (323)
NO_CODE_BLOCK (324)


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
qualified_name (94)
    on left: 1 2, on right: 2 6 36 39 40 110 129 135 140 141 142 202
type_name_list (95)
    on left: 3 4, on right: 4 24 25 28 59 60
type_name (96)
    on left: 5 6 7 8 9, on right: 3 4 26 27 51 54 63 64 105 107
primitive_type (97)
    on left: 10 11 12 13 14 15 16 17 18 19 20 21, on right: 5 147
function_type (98)
    on left: 22 23 24 25, on right: 8
array_type (99)
    on left: 26, on right: 7 143 144 145
return_type_list (100)
    on left: 27 28, on right: 23 25 58 60 62 66 68 70 72 74 76
program (101)
    on left: 29 30 31 32 33 34 35, on right: 0
package_statement (102)
    on left: 36, on right: 29 30 31 33
import_statements (103)
    on left: 37 38, on right: 29 30 32 34 38
import_statement (104)
    on left: 39 40, on right: 37 38
declarations (105)
    on left: 41 42 43 44 45 46 47 48, on right: 29 31 32 35 42 44 46
    48
type_declaration (106)
    on left: 49 50 51, on right: 41 42
field_declarations (107)
    on left: 52 53, on right: 49 53
field_declaration (108)
    on left: 54, on right: 52 53
interface_function_declarations (109)
    on left: 55 56, on right: 50 56
interface_function_declaration (110)
    on left: 57 58 59 60 61 62, on right: 55 56
parameter_list (111)
    on left: 63 64, on right: 61 62 64 67 68 71 72 75 76
function_declaration (112)
    on left: 65 66 67 68, on right: 45 46
anonymous_function_declaration (113)
    on left: 69 70 71 72, on right: 146
method_declaration (114)
    on left: 73 74 75 76, on right: 47 48
code_block (115)
    on left: 77 78, on right: 65 66 67 68 69 70 71 72 73 74 75 76 89
    90 92 93 94 95 96
local_variable_declaration_statements (116)
    on left: 79 80, on right: 77 80
local_variable_declaration_statement (117)
    on left: 81 82, on right: 79 80
statemnet (118)
    on left: 83 84 85 86, on right: 82
selection_statement (119)
    on left: 87 88, on right: 84
if_statement (120)
    on left: 89 90, on right: 87 91
else_statemnet (121)
    on left: 91 92, on right: 90
switch_statement (122)
    on left: 93, on right: 88
iteration_statemnet (123)
    on left: 94 95 96, on right: 85
for_init (124)
    on left: 97 98 99, on right: 96
for_expr (125)
    on left: 100 101, on right: 96
for_incr (126)
    on left: 102, on right: 96
jump_statement (127)
    on left: 103 104, on right: 86
variable_declaration (128)
    on left: 105 106 107, on right: 43 44 81 98
var_list (129)
    on left: 108 109, on right: 105 106 107 109
primary_expression (130)
    on left: 110 111 112, on right: 152
just_not_name (131)
    on left: 113 114 115, on right: 112 131
complex_primary (132)
    on left: 116 117 118, on right: 115 134
const_name (133)
    on left: 119 120 121 122 123 124, on right: 111
array_complex_primary (134)
    on left: 125 126 127 128, on right: 130
array_access (135)
    on left: 129 130, on right: 116 126 203
field_access (136)
    on left: 131, on right: 117 127 204
method_call (137)
    on left: 132 133, on right: 118 128
method_access (138)
    on left: 134 135, on right: 132 133
initializer_expression (139)
    on left: 136 137 138 139 140 141 142 143 144 145 146 147, on right:
    195
field_initial_list (140)
    on left: 148 149, on right: 138 142 149
array_initial_list (141)
    on left: 150 151, on right: 139 145 151
postfix_expression (142)
    on left: 152 153, on right: 154 155 157
real_postfix_expression (143)
    on left: 154 155, on right: 153
argument_list (144)
    on left: 156, on right: 132
unary_expression (145)
    on left: 157 158 159 160, on right: 158 159 160 165 166 167 168
unary_operator (146)
    on left: 161 162 163 164, on right: 160
multiplicative_expression (147)
    on left: 165 166 167 168, on right: 166 167 168 169 170 171
additive_expression (148)
    on left: 169 170 171, on right: 170 171 172 173 174
shift_expression (149)
    on left: 172 173 174, on right: 173 174 175 176 177 178 179
relational_expression (150)
    on left: 175 176 177 178 179, on right: 176 177 178 179 180 181
    182
equality_expression (151)
    on left: 180 181 182, on right: 181 182 183 184
and_expression (152)
    on left: 183 184, on right: 184 185 186
exclusive_or_expression (153)
    on left: 185 186, on right: 186 187 188
inclusive_or_expression (154)
    on left: 187 188, on right: 188 189 190
logical_and_expression (155)
    on left: 189 190, on right: 190 191 192
logical_or_expression (156)
    on left: 191 192, on right: 192 193
base_expression (157)
    on left: 193, on right: 89 90 93 94 95 100 114 125 129 130 147
    148 149 150 151 194 199 215
expression (158)
    on left: 194 195, on right: 196 197
expression_list (159)
    on left: 196 197, on right: 104 106 107 137 141 144 156 197 198
assignment_expression (160)
    on left: 198 199, on right: 216
assignment_variable_list (161)
    on left: 200 201, on right: 198 201
assignment_variable (162)
    on left: 202 203 204, on right: 199 200 201
compound_assignment_operator (163)
    on left: 205 206 207 208 209 210 211 212 213 214, on right: 199
expression_statement (164)
    on left: 215 216, on right: 83 97 102


State 0

    0 $accept: . program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    PACKAGE  shift, and go to state 4
    IMPORT   shift, and go to state 5

    program               go to state 6
    package_statement     go to state 7
    import_statements     go to state 8
    import_statement      go to state 9
    declarations          go to state 10
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 1

  105 variable_declaration: VAR . var_list type_name ';'
  106                     | VAR . var_list '=' expression_list ';'
  107                     | VAR . var_list type_name '=' expression_list ';'

    ID  shift, and go to state 15

    var_list  go to state 16


State 2

   65 function_declaration: FUNC . ID '(' ')' code_block
   66                     | FUNC . ID '(' ')' return_type_list code_block
   67                     | FUNC . ID '(' parameter_list ')' code_block
   68                     | FUNC . ID '(' parameter_list ')' return_type_list code_block
   73 method_declaration: FUNC . ID '.' ID '(' ')' code_block
   74                   | FUNC . ID '.' ID '(' ')' return_type_list code_block
   75                   | FUNC . ID '.' ID '(' parameter_list ')' code_block
   76                   | FUNC . ID '.' ID '(' parameter_list ')' return_type_list code_block

    ID  shift, and go to state 17


State 3

   49 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   50                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE . ID type_name ';'

    ID  shift, and go to state 18


State 4

   36 package_statement: PACKAGE . qualified_name ';'

    ID  shift, and go to state 19

    qualified_name  go to state 20


State 5

   39 import_statement: IMPORT . qualified_name ';'
   40                 | IMPORT . qualified_name '.' '*' ';'

    ID  shift, and go to state 19

    qualified_name  go to state 21


State 6

    0 $accept: program . $end

    $end  shift, and go to state 22


State 7

   29 program: package_statement . import_statements declarations
   30        | package_statement . import_statements
   31        | package_statement . declarations
   33        | package_statement .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 33 (program)

    import_statements     go to state 23
    import_statement      go to state 9
    declarations          go to state 24
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 8

   32 program: import_statements . declarations
   34        | import_statements .
   38 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 34 (program)

    import_statement      go to state 25
    declarations          go to state 26
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 9

   37 import_statements: import_statement .

    $default  reduce using rule 37 (import_statements)


State 10

   35 program: declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 35 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 11

   41 declarations: type_declaration .

    $default  reduce using rule 41 (declarations)


State 12

   45 declarations: function_declaration .

    $default  reduce using rule 45 (declarations)


State 13

   47 declarations: method_declaration .

    $default  reduce using rule 47 (declarations)


State 14

   43 declarations: variable_declaration .

    $default  reduce using rule 43 (declarations)


State 15

  108 var_list: ID .

    $default  reduce using rule 108 (var_list)


State 16

  105 variable_declaration: VAR var_list . type_name ';'
  106                     | VAR var_list . '=' expression_list ';'
  107                     | VAR var_list . type_name '=' expression_list ';'
  109 var_list: var_list . ',' ID

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    ','        shift, and go to state 45
    '['        shift, and go to state 46
    '='        shift, and go to state 47

    qualified_name  go to state 48
    type_name       go to state 49
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 17

   65 function_declaration: FUNC ID . '(' ')' code_block
   66                     | FUNC ID . '(' ')' return_type_list code_block
   67                     | FUNC ID . '(' parameter_list ')' code_block
   68                     | FUNC ID . '(' parameter_list ')' return_type_list code_block
   73 method_declaration: FUNC ID . '.' ID '(' ')' code_block
   74                   | FUNC ID . '.' ID '(' ')' return_type_list code_block
   75                   | FUNC ID . '.' ID '(' parameter_list ')' code_block
   76                   | FUNC ID . '.' ID '(' parameter_list ')' return_type_list code_block

    '.'  shift, and go to state 53
    '('  shift, and go to state 54


State 18

   49 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   50                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   51                 | TYPE ID . type_name ';'

    FUNC       shift, and go to state 31
    STRUCT     shift, and go to state 55
    INTERFACE  shift, and go to state 56
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 57
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 19

    1 qualified_name: ID .

    $default  reduce using rule 1 (qualified_name)


State 20

    2 qualified_name: qualified_name . '.' ID
   36 package_statement: PACKAGE qualified_name . ';'

    '.'  shift, and go to state 58
    ';'  shift, and go to state 59


State 21

    2 qualified_name: qualified_name . '.' ID
   39 import_statement: IMPORT qualified_name . ';'
   40                 | IMPORT qualified_name . '.' '*' ';'

    '.'  shift, and go to state 60
    ';'  shift, and go to state 61


State 22

    0 $accept: program $end .

    $default  accept


State 23

   29 program: package_statement import_statements . declarations
   30        | package_statement import_statements .
   38 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 30 (program)

    import_statement      go to state 25
    declarations          go to state 62
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 24

   31 program: package_statement declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 31 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 25

   38 import_statements: import_statements import_statement .

    $default  reduce using rule 38 (import_statements)


State 26

   32 program: import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 32 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 27

   42 declarations: declarations type_declaration .

    $default  reduce using rule 42 (declarations)


State 28

   46 declarations: declarations function_declaration .

    $default  reduce using rule 46 (declarations)


State 29

   48 declarations: declarations method_declaration .

    $default  reduce using rule 48 (declarations)


State 30

   44 declarations: declarations variable_declaration .

    $default  reduce using rule 44 (declarations)


State 31

   22 function_type: FUNC . '(' ')'
   23              | FUNC . '(' ')' return_type_list
   24              | FUNC . '(' type_name_list ')'
   25              | FUNC . '(' type_name_list ')' return_type_list

    '('  shift, and go to state 63


State 32

    9 type_name: INTERFACE . '{' '}'

    '{'  shift, and go to state 64


State 33

   14 primitive_type: INT8 .

    $default  reduce using rule 14 (primitive_type)


State 34

   15 primitive_type: INT16 .

    $default  reduce using rule 15 (primitive_type)


State 35

   16 primitive_type: INT32 .

    $default  reduce using rule 16 (primitive_type)


State 36

   17 primitive_type: INT64 .

    $default  reduce using rule 17 (primitive_type)


State 37

   10 primitive_type: UINT8 .

    $default  reduce using rule 10 (primitive_type)


State 38

   11 primitive_type: UINT16 .

    $default  reduce using rule 11 (primitive_type)


State 39

   12 primitive_type: UINT32 .

    $default  reduce using rule 12 (primitive_type)


State 40

   13 primitive_type: UINT64 .

    $default  reduce using rule 13 (primitive_type)


State 41

   18 primitive_type: FLOAT32 .

    $default  reduce using rule 18 (primitive_type)


State 42

   19 primitive_type: FLOAT64 .

    $default  reduce using rule 19 (primitive_type)


State 43

   20 primitive_type: BOOL .

    $default  reduce using rule 20 (primitive_type)


State 44

   21 primitive_type: STRING .

    $default  reduce using rule 21 (primitive_type)


State 45

  109 var_list: var_list ',' . ID

    ID  shift, and go to state 65


State 46

   26 array_type: '[' . INTEGER ']' type_name

    INTEGER  shift, and go to state 66


State 47

  106 variable_declaration: VAR var_list '=' . expression_list ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    FUNC            shift, and go to state 70
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '{'             shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 46
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                  go to state 83
    primitive_type                  go to state 84
    array_type                      go to state 85
    anonymous_function_declaration  go to state 86
    primary_expression              go to state 87
    just_not_name                   go to state 88
    complex_primary                 go to state 89
    const_name                      go to state 90
    array_complex_primary           go to state 91
    array_access                    go to state 92
    field_access                    go to state 93
    method_call                     go to state 94
    method_access                   go to state 95
    initializer_expression          go to state 96
    postfix_expression              go to state 97
    real_postfix_expression         go to state 98
    unary_expression                go to state 99
    unary_operator                  go to state 100
    multiplicative_expression       go to state 101
    additive_expression             go to state 102
    shift_expression                go to state 103
    relational_expression           go to state 104
    equality_expression             go to state 105
    and_expression                  go to state 106
    exclusive_or_expression         go to state 107
    inclusive_or_expression         go to state 108
    logical_and_expression          go to state 109
    logical_or_expression           go to state 110
    base_expression                 go to state 111
    expression                      go to state 112
    expression_list                 go to state 113


State 48

    2 qualified_name: qualified_name . '.' ID
    6 type_name: qualified_name .

    '.'  shift, and go to state 58

    $default  reduce using rule 6 (type_name)


State 49

  105 variable_declaration: VAR var_list type_name . ';'
  107                     | VAR var_list type_name . '=' expression_list ';'

    ';'  shift, and go to state 114
    '='  shift, and go to state 115


State 50

    5 type_name: primitive_type .

    $default  reduce using rule 5 (type_name)


State 51

    8 type_name: function_type .

    $default  reduce using rule 8 (type_name)


State 52

    7 type_name: array_type .

    $default  reduce using rule 7 (type_name)


State 53

   73 method_declaration: FUNC ID '.' . ID '(' ')' code_block
   74                   | FUNC ID '.' . ID '(' ')' return_type_list code_block
   75                   | FUNC ID '.' . ID '(' parameter_list ')' code_block
   76                   | FUNC ID '.' . ID '(' parameter_list ')' return_type_list code_block

    ID  shift, and go to state 116


State 54

   65 function_declaration: FUNC ID '(' . ')' code_block
   66                     | FUNC ID '(' . ')' return_type_list code_block
   67                     | FUNC ID '(' . parameter_list ')' code_block
   68                     | FUNC ID '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 117
    ')'  shift, and go to state 118

    parameter_list  go to state 119


State 55

   49 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 120


State 56

    9 type_name: INTERFACE . '{' '}'
   50 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 121


State 57

   51 type_declaration: TYPE ID type_name . ';'

    ';'  shift, and go to state 122


State 58

    2 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 123


State 59

   36 package_statement: PACKAGE qualified_name ';' .

    $default  reduce using rule 36 (package_statement)


State 60

    2 qualified_name: qualified_name '.' . ID
   40 import_statement: IMPORT qualified_name '.' . '*' ';'

    ID   shift, and go to state 123
    '*'  shift, and go to state 124


State 61

   39 import_statement: IMPORT qualified_name ';' .

    $default  reduce using rule 39 (import_statement)


State 62

   29 program: package_statement import_statements declarations .
   42 declarations: declarations . type_declaration
   44             | declarations . variable_declaration
   46             | declarations . function_declaration
   48             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 29 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 63

   22 function_type: FUNC '(' . ')'
   23              | FUNC '(' . ')' return_type_list
   24              | FUNC '(' . type_name_list ')'
   25              | FUNC '(' . type_name_list ')' return_type_list

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    ')'        shift, and go to state 125
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name_list  go to state 126
    type_name       go to state 127
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 64

    9 type_name: INTERFACE '{' . '}'

    '}'  shift, and go to state 128


State 65

  109 var_list: var_list ',' ID .

    $default  reduce using rule 109 (var_list)


State 66

   26 array_type: '[' INTEGER . ']' type_name

    ']'  shift, and go to state 129


State 67

  158 unary_expression: INC . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name           go to state 130
    primary_expression       go to state 87
    just_not_name            go to state 88
    complex_primary          go to state 89
    const_name               go to state 90
    array_complex_primary    go to state 91
    array_access             go to state 92
    field_access             go to state 93
    method_call              go to state 94
    method_access            go to state 95
    postfix_expression       go to state 97
    real_postfix_expression  go to state 98
    unary_expression         go to state 131
    unary_operator           go to state 100


State 68

  159 unary_expression: DEC . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name           go to state 130
    primary_expression       go to state 87
    just_not_name            go to state 88
    complex_primary          go to state 89
    const_name               go to state 90
    array_complex_primary    go to state 91
    array_access             go to state 92
    field_access             go to state 93
    method_call              go to state 94
    method_access            go to state 95
    postfix_expression       go to state 97
    real_postfix_expression  go to state 98
    unary_expression         go to state 132
    unary_operator           go to state 100


State 69

  113 just_not_name: TOKEN_THIS .

    $default  reduce using rule 113 (just_not_name)


State 70

   69 anonymous_function_declaration: FUNC . '(' ')' code_block
   70                               | FUNC . '(' ')' return_type_list code_block
   71                               | FUNC . '(' parameter_list ')' code_block
   72                               | FUNC . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 133


State 71

  122 const_name: TOKEN_NIL .

    $default  reduce using rule 122 (const_name)


State 72

  123 const_name: TOKEN_TRUE .

    $default  reduce using rule 123 (const_name)


State 73

  124 const_name: TOKEN_FALSE .

    $default  reduce using rule 124 (const_name)


State 74

  119 const_name: INTEGER .

    $default  reduce using rule 119 (const_name)


State 75

  120 const_name: FLOAT .

    $default  reduce using rule 120 (const_name)


State 76

  121 const_name: STRING_LITERAL .

    $default  reduce using rule 121 (const_name)


State 77

  136 initializer_expression: '{' . '}'
  137                       | '{' . expression_list '}'
  138                       | '{' . field_initial_list '}'
  139                       | '{' . array_initial_list '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    FUNC            shift, and go to state 70
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 134
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 135
    '{'             shift, and go to state 77
    '}'             shift, and go to state 136
    '('             shift, and go to state 78
    '['             shift, and go to state 46
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                  go to state 83
    primitive_type                  go to state 84
    array_type                      go to state 85
    anonymous_function_declaration  go to state 86
    primary_expression              go to state 87
    just_not_name                   go to state 88
    complex_primary                 go to state 89
    const_name                      go to state 90
    array_complex_primary           go to state 91
    array_access                    go to state 92
    field_access                    go to state 93
    method_call                     go to state 94
    method_access                   go to state 95
    initializer_expression          go to state 96
    field_initial_list              go to state 137
    array_initial_list              go to state 138
    postfix_expression              go to state 97
    real_postfix_expression         go to state 98
    unary_expression                go to state 99
    unary_operator                  go to state 100
    multiplicative_expression       go to state 101
    additive_expression             go to state 102
    shift_expression                go to state 103
    relational_expression           go to state 104
    equality_expression             go to state 105
    and_expression                  go to state 106
    exclusive_or_expression         go to state 107
    inclusive_or_expression         go to state 108
    logical_and_expression          go to state 109
    logical_or_expression           go to state 110
    base_expression                 go to state 111
    expression                      go to state 112
    expression_list                 go to state 139


State 78

  114 just_not_name: '(' . base_expression ')'
  125 array_complex_primary: '(' . base_expression ')'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 140


State 79

  161 unary_operator: '+' .

    $default  reduce using rule 161 (unary_operator)


State 80

  162 unary_operator: '-' .

    $default  reduce using rule 162 (unary_operator)


State 81

  163 unary_operator: '~' .

    $default  reduce using rule 163 (unary_operator)


State 82

  164 unary_operator: '!' .

    $default  reduce using rule 164 (unary_operator)


State 83

    2 qualified_name: qualified_name . '.' ID
  110 primary_expression: qualified_name .
  129 array_access: qualified_name . '[' base_expression ']'
  135 method_access: qualified_name .
  140 initializer_expression: qualified_name . '{' '}'
  141                       | qualified_name . '{' expression_list '}'
  142                       | qualified_name . '{' field_initial_list '}'

    '.'  shift, and go to state 58
    '{'  shift, and go to state 141
    '['  shift, and go to state 142

    '('       reduce using rule 135 (method_access)
    $default  reduce using rule 110 (primary_expression)


State 84

  147 initializer_expression: primitive_type . '(' base_expression ')'

    '('  shift, and go to state 143


State 85

  143 initializer_expression: array_type . '{' '}'
  144                       | array_type . '{' expression_list '}'
  145                       | array_type . '{' array_initial_list '}'

    '{'  shift, and go to state 144


State 86

  146 initializer_expression: anonymous_function_declaration .

    $default  reduce using rule 146 (initializer_expression)


State 87

  152 postfix_expression: primary_expression .

    $default  reduce using rule 152 (postfix_expression)


State 88

  112 primary_expression: just_not_name .
  131 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 145

    $default  reduce using rule 112 (primary_expression)


State 89

  115 just_not_name: complex_primary .
  134 method_access: complex_primary .

    '('       reduce using rule 134 (method_access)
    $default  reduce using rule 115 (just_not_name)


State 90

  111 primary_expression: const_name .

    $default  reduce using rule 111 (primary_expression)


State 91

  130 array_access: array_complex_primary . '[' base_expression ']'

    '['  shift, and go to state 146


State 92

  116 complex_primary: array_access .
  126 array_complex_primary: array_access .

    '['       reduce using rule 126 (array_complex_primary)
    $default  reduce using rule 116 (complex_primary)


State 93

  117 complex_primary: field_access .
  127 array_complex_primary: field_access .

    '['       reduce using rule 127 (array_complex_primary)
    $default  reduce using rule 117 (complex_primary)


State 94

  118 complex_primary: method_call .
  128 array_complex_primary: method_call .

    '['       reduce using rule 128 (array_complex_primary)
    $default  reduce using rule 118 (complex_primary)


State 95

  132 method_call: method_access . '(' argument_list ')'
  133            | method_access . '(' ')'

    '('  shift, and go to state 147


State 96

  195 expression: initializer_expression .

    $default  reduce using rule 195 (expression)


State 97

  154 real_postfix_expression: postfix_expression . INC
  155                        | postfix_expression . DEC
  157 unary_expression: postfix_expression .

    INC  shift, and go to state 148
    DEC  shift, and go to state 149

    $default  reduce using rule 157 (unary_expression)


State 98

  153 postfix_expression: real_postfix_expression .

    $default  reduce using rule 153 (postfix_expression)


State 99

  165 multiplicative_expression: unary_expression .

    $default  reduce using rule 165 (multiplicative_expression)


State 100

  160 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name           go to state 130
    primary_expression       go to state 87
    just_not_name            go to state 88
    complex_primary          go to state 89
    const_name               go to state 90
    array_complex_primary    go to state 91
    array_access             go to state 92
    field_access             go to state 93
    method_call              go to state 94
    method_access            go to state 95
    postfix_expression       go to state 97
    real_postfix_expression  go to state 98
    unary_expression         go to state 150
    unary_operator           go to state 100


State 101

  166 multiplicative_expression: multiplicative_expression . '*' unary_expression
  167                          | multiplicative_expression . '/' unary_expression
  168                          | multiplicative_expression . '%' unary_expression
  169 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 151
    '/'  shift, and go to state 152
    '%'  shift, and go to state 153

    $default  reduce using rule 169 (additive_expression)


State 102

  170 additive_expression: additive_expression . '+' multiplicative_expression
  171                    | additive_expression . '-' multiplicative_expression
  172 shift_expression: additive_expression .

    '+'  shift, and go to state 154
    '-'  shift, and go to state 155

    $default  reduce using rule 172 (shift_expression)


State 103

  173 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  174                 | shift_expression . SHIFT_RIGHT additive_expression
  175 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 156
    SHIFT_RIGHT  shift, and go to state 157

    $default  reduce using rule 175 (relational_expression)


State 104

  176 relational_expression: relational_expression . '<' shift_expression
  177                      | relational_expression . '>' shift_expression
  178                      | relational_expression . LE shift_expression
  179                      | relational_expression . GE shift_expression
  180 equality_expression: relational_expression .

    GE   shift, and go to state 158
    LE   shift, and go to state 159
    '<'  shift, and go to state 160
    '>'  shift, and go to state 161

    $default  reduce using rule 180 (equality_expression)


State 105

  181 equality_expression: equality_expression . EQ relational_expression
  182                    | equality_expression . NE relational_expression
  183 and_expression: equality_expression .

    EQ  shift, and go to state 162
    NE  shift, and go to state 163

    $default  reduce using rule 183 (and_expression)


State 106

  184 and_expression: and_expression . '&' equality_expression
  185 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 164

    $default  reduce using rule 185 (exclusive_or_expression)


State 107

  186 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  187 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 165

    $default  reduce using rule 187 (inclusive_or_expression)


State 108

  188 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  189 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 166

    $default  reduce using rule 189 (logical_and_expression)


State 109

  190 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  191 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 167

    $default  reduce using rule 191 (logical_or_expression)


State 110

  192 logical_or_expression: logical_or_expression . OR logical_and_expression
  193 base_expression: logical_or_expression .

    OR  shift, and go to state 168

    $default  reduce using rule 193 (base_expression)


State 111

  194 expression: base_expression .

    $default  reduce using rule 194 (expression)


State 112

  196 expression_list: expression .

    $default  reduce using rule 196 (expression_list)


State 113

  106 variable_declaration: VAR var_list '=' expression_list . ';'
  197 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    ';'  shift, and go to state 170


State 114

  105 variable_declaration: VAR var_list type_name ';' .

    $default  reduce using rule 105 (variable_declaration)


State 115

  107 variable_declaration: VAR var_list type_name '=' . expression_list ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    FUNC            shift, and go to state 70
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '{'             shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 46
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                  go to state 83
    primitive_type                  go to state 84
    array_type                      go to state 85
    anonymous_function_declaration  go to state 86
    primary_expression              go to state 87
    just_not_name                   go to state 88
    complex_primary                 go to state 89
    const_name                      go to state 90
    array_complex_primary           go to state 91
    array_access                    go to state 92
    field_access                    go to state 93
    method_call                     go to state 94
    method_access                   go to state 95
    initializer_expression          go to state 96
    postfix_expression              go to state 97
    real_postfix_expression         go to state 98
    unary_expression                go to state 99
    unary_operator                  go to state 100
    multiplicative_expression       go to state 101
    additive_expression             go to state 102
    shift_expression                go to state 103
    relational_expression           go to state 104
    equality_expression             go to state 105
    and_expression                  go to state 106
    exclusive_or_expression         go to state 107
    inclusive_or_expression         go to state 108
    logical_and_expression          go to state 109
    logical_or_expression           go to state 110
    base_expression                 go to state 111
    expression                      go to state 112
    expression_list                 go to state 171


State 116

   73 method_declaration: FUNC ID '.' ID . '(' ')' code_block
   74                   | FUNC ID '.' ID . '(' ')' return_type_list code_block
   75                   | FUNC ID '.' ID . '(' parameter_list ')' code_block
   76                   | FUNC ID '.' ID . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 172


State 117

   63 parameter_list: ID . type_name

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 173
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 118

   65 function_declaration: FUNC ID '(' ')' . code_block
   66                     | FUNC ID '(' ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 177
    code_block        go to state 178


State 119

   64 parameter_list: parameter_list . ',' ID type_name
   67 function_declaration: FUNC ID '(' parameter_list . ')' code_block
   68                     | FUNC ID '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 179
    ')'  shift, and go to state 180


State 120

   49 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 181

    field_declarations  go to state 182
    field_declaration   go to state 183


State 121

    9 type_name: INTERFACE '{' . '}'
   50 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    ID   shift, and go to state 184
    '}'  shift, and go to state 128

    interface_function_declarations  go to state 185
    interface_function_declaration   go to state 186


State 122

   51 type_declaration: TYPE ID type_name ';' .

    $default  reduce using rule 51 (type_declaration)


State 123

    2 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 2 (qualified_name)


State 124

   40 import_statement: IMPORT qualified_name '.' '*' . ';'

    ';'  shift, and go to state 187


State 125

   22 function_type: FUNC '(' ')' .
   23              | FUNC '(' ')' . return_type_list

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    $default  reduce using rule 22 (function_type)

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 188


State 126

    4 type_name_list: type_name_list . ',' type_name
   24 function_type: FUNC '(' type_name_list . ')'
   25              | FUNC '(' type_name_list . ')' return_type_list

    ','  shift, and go to state 189
    ')'  shift, and go to state 190


State 127

    3 type_name_list: type_name .

    $default  reduce using rule 3 (type_name_list)


State 128

    9 type_name: INTERFACE '{' '}' .

    $default  reduce using rule 9 (type_name)


State 129

   26 array_type: '[' INTEGER ']' . type_name

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 191
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 130

    2 qualified_name: qualified_name . '.' ID
  110 primary_expression: qualified_name .
  129 array_access: qualified_name . '[' base_expression ']'
  135 method_access: qualified_name .

    '.'  shift, and go to state 58
    '['  shift, and go to state 142

    '('       reduce using rule 135 (method_access)
    $default  reduce using rule 110 (primary_expression)


State 131

  158 unary_expression: INC unary_expression .

    $default  reduce using rule 158 (unary_expression)


State 132

  159 unary_expression: DEC unary_expression .

    $default  reduce using rule 159 (unary_expression)


State 133

   69 anonymous_function_declaration: FUNC '(' . ')' code_block
   70                               | FUNC '(' . ')' return_type_list code_block
   71                               | FUNC '(' . parameter_list ')' code_block
   72                               | FUNC '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 117
    ')'  shift, and go to state 192

    parameter_list  go to state 193


State 134

  119 const_name: INTEGER .
  150 array_initial_list: INTEGER . ':' base_expression

    ':'  shift, and go to state 194

    $default  reduce using rule 119 (const_name)


State 135

    1 qualified_name: ID .
  148 field_initial_list: ID . ':' base_expression

    ':'  shift, and go to state 195

    $default  reduce using rule 1 (qualified_name)


State 136

  136 initializer_expression: '{' '}' .

    $default  reduce using rule 136 (initializer_expression)


State 137

  138 initializer_expression: '{' field_initial_list . '}'
  149 field_initial_list: field_initial_list . ',' ID ':' base_expression

    ','  shift, and go to state 196
    '}'  shift, and go to state 197


State 138

  139 initializer_expression: '{' array_initial_list . '}'
  151 array_initial_list: array_initial_list . ',' INTEGER ':' base_expression

    ','  shift, and go to state 198
    '}'  shift, and go to state 199


State 139

  137 initializer_expression: '{' expression_list . '}'
  197 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    '}'  shift, and go to state 200


State 140

  114 just_not_name: '(' base_expression . ')'
  125 array_complex_primary: '(' base_expression . ')'

    ')'  shift, and go to state 201


State 141

  140 initializer_expression: qualified_name '{' . '}'
  141                       | qualified_name '{' . expression_list '}'
  142                       | qualified_name '{' . field_initial_list '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    FUNC            shift, and go to state 70
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 135
    '{'             shift, and go to state 77
    '}'             shift, and go to state 202
    '('             shift, and go to state 78
    '['             shift, and go to state 46
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                  go to state 83
    primitive_type                  go to state 84
    array_type                      go to state 85
    anonymous_function_declaration  go to state 86
    primary_expression              go to state 87
    just_not_name                   go to state 88
    complex_primary                 go to state 89
    const_name                      go to state 90
    array_complex_primary           go to state 91
    array_access                    go to state 92
    field_access                    go to state 93
    method_call                     go to state 94
    method_access                   go to state 95
    initializer_expression          go to state 96
    field_initial_list              go to state 203
    postfix_expression              go to state 97
    real_postfix_expression         go to state 98
    unary_expression                go to state 99
    unary_operator                  go to state 100
    multiplicative_expression       go to state 101
    additive_expression             go to state 102
    shift_expression                go to state 103
    relational_expression           go to state 104
    equality_expression             go to state 105
    and_expression                  go to state 106
    exclusive_or_expression         go to state 107
    inclusive_or_expression         go to state 108
    logical_and_expression          go to state 109
    logical_or_expression           go to state 110
    base_expression                 go to state 111
    expression                      go to state 112
    expression_list                 go to state 204


State 142

  129 array_access: qualified_name '[' . base_expression ']'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 205


State 143

  147 initializer_expression: primitive_type '(' . base_expression ')'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 206


State 144

  143 initializer_expression: array_type '{' . '}'
  144                       | array_type '{' . expression_list '}'
  145                       | array_type '{' . array_initial_list '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    FUNC            shift, and go to state 70
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 134
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '{'             shift, and go to state 77
    '}'             shift, and go to state 207
    '('             shift, and go to state 78
    '['             shift, and go to state 46
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                  go to state 83
    primitive_type                  go to state 84
    array_type                      go to state 85
    anonymous_function_declaration  go to state 86
    primary_expression              go to state 87
    just_not_name                   go to state 88
    complex_primary                 go to state 89
    const_name                      go to state 90
    array_complex_primary           go to state 91
    array_access                    go to state 92
    field_access                    go to state 93
    method_call                     go to state 94
    method_access                   go to state 95
    initializer_expression          go to state 96
    array_initial_list              go to state 208
    postfix_expression              go to state 97
    real_postfix_expression         go to state 98
    unary_expression                go to state 99
    unary_operator                  go to state 100
    multiplicative_expression       go to state 101
    additive_expression             go to state 102
    shift_expression                go to state 103
    relational_expression           go to state 104
    equality_expression             go to state 105
    and_expression                  go to state 106
    exclusive_or_expression         go to state 107
    inclusive_or_expression         go to state 108
    logical_and_expression          go to state 109
    logical_or_expression           go to state 110
    base_expression                 go to state 111
    expression                      go to state 112
    expression_list                 go to state 209


State 145

  131 field_access: just_not_name '.' . ID

    ID  shift, and go to state 210


State 146

  130 array_access: array_complex_primary '[' . base_expression ']'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 211


State 147

  132 method_call: method_access '(' . argument_list ')'
  133            | method_access '(' . ')'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    FUNC            shift, and go to state 70
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '{'             shift, and go to state 77
    '('             shift, and go to state 78
    ')'             shift, and go to state 212
    '['             shift, and go to state 46
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                  go to state 83
    primitive_type                  go to state 84
    array_type                      go to state 85
    anonymous_function_declaration  go to state 86
    primary_expression              go to state 87
    just_not_name                   go to state 88
    complex_primary                 go to state 89
    const_name                      go to state 90
    array_complex_primary           go to state 91
    array_access                    go to state 92
    field_access                    go to state 93
    method_call                     go to state 94
    method_access                   go to state 95
    initializer_expression          go to state 96
    postfix_expression              go to state 97
    real_postfix_expression         go to state 98
    argument_list                   go to state 213
    unary_expression                go to state 99
    unary_operator                  go to state 100
    multiplicative_expression       go to state 101
    additive_expression             go to state 102
    shift_expression                go to state 103
    relational_expression           go to state 104
    equality_expression             go to state 105
    and_expression                  go to state 106
    exclusive_or_expression         go to state 107
    inclusive_or_expression         go to state 108
    logical_and_expression          go to state 109
    logical_or_expression           go to state 110
    base_expression                 go to state 111
    expression                      go to state 112
    expression_list                 go to state 214


State 148

  154 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 154 (real_postfix_expression)


State 149

  155 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 155 (real_postfix_expression)


State 150

  160 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 160 (unary_expression)


State 151

  166 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name           go to state 130
    primary_expression       go to state 87
    just_not_name            go to state 88
    complex_primary          go to state 89
    const_name               go to state 90
    array_complex_primary    go to state 91
    array_access             go to state 92
    field_access             go to state 93
    method_call              go to state 94
    method_access            go to state 95
    postfix_expression       go to state 97
    real_postfix_expression  go to state 98
    unary_expression         go to state 215
    unary_operator           go to state 100


State 152

  167 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name           go to state 130
    primary_expression       go to state 87
    just_not_name            go to state 88
    complex_primary          go to state 89
    const_name               go to state 90
    array_complex_primary    go to state 91
    array_access             go to state 92
    field_access             go to state 93
    method_call              go to state 94
    method_access            go to state 95
    postfix_expression       go to state 97
    real_postfix_expression  go to state 98
    unary_expression         go to state 216
    unary_operator           go to state 100


State 153

  168 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name           go to state 130
    primary_expression       go to state 87
    just_not_name            go to state 88
    complex_primary          go to state 89
    const_name               go to state 90
    array_complex_primary    go to state 91
    array_access             go to state 92
    field_access             go to state 93
    method_call              go to state 94
    method_access            go to state 95
    postfix_expression       go to state 97
    real_postfix_expression  go to state 98
    unary_expression         go to state 217
    unary_operator           go to state 100


State 154

  170 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 218


State 155

  171 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 219


State 156

  173 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 220


State 157

  174 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 221


State 158

  179 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 222


State 159

  178 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 223


State 160

  176 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 224


State 161

  177 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 225


State 162

  181 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 226


State 163

  182 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 227


State 164

  184 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 228


State 165

  186 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 229


State 166

  188 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 230


State 167

  190 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 231


State 168

  192 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 232


State 169

  197 expression_list: expression_list ',' . expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    FUNC            shift, and go to state 70
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '{'             shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 46
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                  go to state 83
    primitive_type                  go to state 84
    array_type                      go to state 85
    anonymous_function_declaration  go to state 86
    primary_expression              go to state 87
    just_not_name                   go to state 88
    complex_primary                 go to state 89
    const_name                      go to state 90
    array_complex_primary           go to state 91
    array_access                    go to state 92
    field_access                    go to state 93
    method_call                     go to state 94
    method_access                   go to state 95
    initializer_expression          go to state 96
    postfix_expression              go to state 97
    real_postfix_expression         go to state 98
    unary_expression                go to state 99
    unary_operator                  go to state 100
    multiplicative_expression       go to state 101
    additive_expression             go to state 102
    shift_expression                go to state 103
    relational_expression           go to state 104
    equality_expression             go to state 105
    and_expression                  go to state 106
    exclusive_or_expression         go to state 107
    inclusive_or_expression         go to state 108
    logical_and_expression          go to state 109
    logical_or_expression           go to state 110
    base_expression                 go to state 111
    expression                      go to state 233


State 170

  106 variable_declaration: VAR var_list '=' expression_list ';' .

    $default  reduce using rule 106 (variable_declaration)


State 171

  107 variable_declaration: VAR var_list type_name '=' expression_list . ';'
  197 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    ';'  shift, and go to state 234


State 172

   73 method_declaration: FUNC ID '.' ID '(' . ')' code_block
   74                   | FUNC ID '.' ID '(' . ')' return_type_list code_block
   75                   | FUNC ID '.' ID '(' . parameter_list ')' code_block
   76                   | FUNC ID '.' ID '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 117
    ')'  shift, and go to state 235

    parameter_list  go to state 236


State 173

   63 parameter_list: ID type_name .

    $default  reduce using rule 63 (parameter_list)


State 174

   77 code_block: '{' . local_variable_declaration_statements '}'
   78           | '{' . '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    IF              shift, and go to state 237
    WHILE           shift, and go to state 238
    DO              shift, and go to state 239
    FOR             shift, and go to state 240
    SWITCH          shift, and go to state 241
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 242
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '}'             shift, and go to state 243
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                         go to state 244
    local_variable_declaration_statements  go to state 245
    local_variable_declaration_statement   go to state 246
    statemnet                              go to state 247
    selection_statement                    go to state 248
    if_statement                           go to state 249
    switch_statement                       go to state 250
    iteration_statemnet                    go to state 251
    jump_statement                         go to state 252
    variable_declaration                   go to state 253
    primary_expression                     go to state 87
    just_not_name                          go to state 88
    complex_primary                        go to state 89
    const_name                             go to state 90
    array_complex_primary                  go to state 91
    array_access                           go to state 254
    field_access                           go to state 255
    method_call                            go to state 94
    method_access                          go to state 95
    postfix_expression                     go to state 97
    real_postfix_expression                go to state 98
    unary_expression                       go to state 99
    unary_operator                         go to state 100
    multiplicative_expression              go to state 101
    additive_expression                    go to state 102
    shift_expression                       go to state 103
    relational_expression                  go to state 104
    equality_expression                    go to state 105
    and_expression                         go to state 106
    exclusive_or_expression                go to state 107
    inclusive_or_expression                go to state 108
    logical_and_expression                 go to state 109
    logical_or_expression                  go to state 110
    base_expression                        go to state 256
    assignment_expression                  go to state 257
    assignment_variable_list               go to state 258
    assignment_variable                    go to state 259
    expression_statement                   go to state 260


State 175

   28 return_type_list: '(' . type_name_list ')'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name_list  go to state 261
    type_name       go to state 127
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 176

   27 return_type_list: type_name .

    $default  reduce using rule 27 (return_type_list)


State 177

   66 function_declaration: FUNC ID '(' ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 262


State 178

   65 function_declaration: FUNC ID '(' ')' code_block .

    $default  reduce using rule 65 (function_declaration)


State 179

   64 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 263


State 180

   67 function_declaration: FUNC ID '(' parameter_list ')' . code_block
   68                     | FUNC ID '(' parameter_list ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 264
    code_block        go to state 265


State 181

   54 field_declaration: ID . type_name ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 266
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 182

   49 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   53 field_declarations: field_declarations . field_declaration

    ID   shift, and go to state 181
    '}'  shift, and go to state 267

    field_declaration  go to state 268


State 183

   52 field_declarations: field_declaration .

    $default  reduce using rule 52 (field_declarations)


State 184

   57 interface_function_declaration: ID . '(' ')' ';'
   58                               | ID . '(' ')' return_type_list ';'
   59                               | ID . '(' type_name_list ')' ';'
   60                               | ID . '(' type_name_list ')' return_type_list ';'
   61                               | ID . '(' parameter_list ')' ';'
   62                               | ID . '(' parameter_list ')' return_type_list ';'

    '('  shift, and go to state 269


State 185

   50 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   56 interface_function_declarations: interface_function_declarations . interface_function_declaration

    ID   shift, and go to state 184
    '}'  shift, and go to state 270

    interface_function_declaration  go to state 271


State 186

   55 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 55 (interface_function_declarations)


State 187

   40 import_statement: IMPORT qualified_name '.' '*' ';' .

    $default  reduce using rule 40 (import_statement)


State 188

   23 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 23 (function_type)


State 189

    4 type_name_list: type_name_list ',' . type_name

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 272
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 190

   24 function_type: FUNC '(' type_name_list ')' .
   25              | FUNC '(' type_name_list ')' . return_type_list

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    $default  reduce using rule 24 (function_type)

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 273


State 191

   26 array_type: '[' INTEGER ']' type_name .

    $default  reduce using rule 26 (array_type)


State 192

   69 anonymous_function_declaration: FUNC '(' ')' . code_block
   70                               | FUNC '(' ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 274
    code_block        go to state 275


State 193

   64 parameter_list: parameter_list . ',' ID type_name
   71 anonymous_function_declaration: FUNC '(' parameter_list . ')' code_block
   72                               | FUNC '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 179
    ')'  shift, and go to state 276


State 194

  150 array_initial_list: INTEGER ':' . base_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 277


State 195

  148 field_initial_list: ID ':' . base_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 278


State 196

  149 field_initial_list: field_initial_list ',' . ID ':' base_expression

    ID  shift, and go to state 279


State 197

  138 initializer_expression: '{' field_initial_list '}' .

    $default  reduce using rule 138 (initializer_expression)


State 198

  151 array_initial_list: array_initial_list ',' . INTEGER ':' base_expression

    INTEGER  shift, and go to state 280


State 199

  139 initializer_expression: '{' array_initial_list '}' .

    $default  reduce using rule 139 (initializer_expression)


State 200

  137 initializer_expression: '{' expression_list '}' .

    $default  reduce using rule 137 (initializer_expression)


State 201

  114 just_not_name: '(' base_expression ')' .
  125 array_complex_primary: '(' base_expression ')' .

    '['       reduce using rule 125 (array_complex_primary)
    $default  reduce using rule 114 (just_not_name)


State 202

  140 initializer_expression: qualified_name '{' '}' .

    $default  reduce using rule 140 (initializer_expression)


State 203

  142 initializer_expression: qualified_name '{' field_initial_list . '}'
  149 field_initial_list: field_initial_list . ',' ID ':' base_expression

    ','  shift, and go to state 196
    '}'  shift, and go to state 281


State 204

  141 initializer_expression: qualified_name '{' expression_list . '}'
  197 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    '}'  shift, and go to state 282


State 205

  129 array_access: qualified_name '[' base_expression . ']'

    ']'  shift, and go to state 283


State 206

  147 initializer_expression: primitive_type '(' base_expression . ')'

    ')'  shift, and go to state 284


State 207

  143 initializer_expression: array_type '{' '}' .

    $default  reduce using rule 143 (initializer_expression)


State 208

  145 initializer_expression: array_type '{' array_initial_list . '}'
  151 array_initial_list: array_initial_list . ',' INTEGER ':' base_expression

    ','  shift, and go to state 198
    '}'  shift, and go to state 285


State 209

  144 initializer_expression: array_type '{' expression_list . '}'
  197 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    '}'  shift, and go to state 286


State 210

  131 field_access: just_not_name '.' ID .

    $default  reduce using rule 131 (field_access)


State 211

  130 array_access: array_complex_primary '[' base_expression . ']'

    ']'  shift, and go to state 287


State 212

  133 method_call: method_access '(' ')' .

    $default  reduce using rule 133 (method_call)


State 213

  132 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 288


State 214

  156 argument_list: expression_list .
  197 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169

    $default  reduce using rule 156 (argument_list)


State 215

  166 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 166 (multiplicative_expression)


State 216

  167 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 167 (multiplicative_expression)


State 217

  168 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 168 (multiplicative_expression)


State 218

  166 multiplicative_expression: multiplicative_expression . '*' unary_expression
  167                          | multiplicative_expression . '/' unary_expression
  168                          | multiplicative_expression . '%' unary_expression
  170 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 151
    '/'  shift, and go to state 152
    '%'  shift, and go to state 153

    $default  reduce using rule 170 (additive_expression)


State 219

  166 multiplicative_expression: multiplicative_expression . '*' unary_expression
  167                          | multiplicative_expression . '/' unary_expression
  168                          | multiplicative_expression . '%' unary_expression
  171 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 151
    '/'  shift, and go to state 152
    '%'  shift, and go to state 153

    $default  reduce using rule 171 (additive_expression)


State 220

  170 additive_expression: additive_expression . '+' multiplicative_expression
  171                    | additive_expression . '-' multiplicative_expression
  173 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 154
    '-'  shift, and go to state 155

    $default  reduce using rule 173 (shift_expression)


State 221

  170 additive_expression: additive_expression . '+' multiplicative_expression
  171                    | additive_expression . '-' multiplicative_expression
  174 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 154
    '-'  shift, and go to state 155

    $default  reduce using rule 174 (shift_expression)


State 222

  173 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  174                 | shift_expression . SHIFT_RIGHT additive_expression
  179 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 156
    SHIFT_RIGHT  shift, and go to state 157

    $default  reduce using rule 179 (relational_expression)


State 223

  173 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  174                 | shift_expression . SHIFT_RIGHT additive_expression
  178 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 156
    SHIFT_RIGHT  shift, and go to state 157

    $default  reduce using rule 178 (relational_expression)


State 224

  173 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  174                 | shift_expression . SHIFT_RIGHT additive_expression
  176 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 156
    SHIFT_RIGHT  shift, and go to state 157

    $default  reduce using rule 176 (relational_expression)


State 225

  173 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  174                 | shift_expression . SHIFT_RIGHT additive_expression
  177 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 156
    SHIFT_RIGHT  shift, and go to state 157

    $default  reduce using rule 177 (relational_expression)


State 226

  176 relational_expression: relational_expression . '<' shift_expression
  177                      | relational_expression . '>' shift_expression
  178                      | relational_expression . LE shift_expression
  179                      | relational_expression . GE shift_expression
  181 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 158
    LE   shift, and go to state 159
    '<'  shift, and go to state 160
    '>'  shift, and go to state 161

    $default  reduce using rule 181 (equality_expression)


State 227

  176 relational_expression: relational_expression . '<' shift_expression
  177                      | relational_expression . '>' shift_expression
  178                      | relational_expression . LE shift_expression
  179                      | relational_expression . GE shift_expression
  182 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 158
    LE   shift, and go to state 159
    '<'  shift, and go to state 160
    '>'  shift, and go to state 161

    $default  reduce using rule 182 (equality_expression)


State 228

  181 equality_expression: equality_expression . EQ relational_expression
  182                    | equality_expression . NE relational_expression
  184 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 162
    NE  shift, and go to state 163

    $default  reduce using rule 184 (and_expression)


State 229

  184 and_expression: and_expression . '&' equality_expression
  186 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 164

    $default  reduce using rule 186 (exclusive_or_expression)


State 230

  186 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  188 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 165

    $default  reduce using rule 188 (inclusive_or_expression)


State 231

  188 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  190 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 166

    $default  reduce using rule 190 (logical_and_expression)


State 232

  190 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  192 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 167

    $default  reduce using rule 192 (logical_or_expression)


State 233

  197 expression_list: expression_list ',' expression .

    $default  reduce using rule 197 (expression_list)


State 234

  107 variable_declaration: VAR var_list type_name '=' expression_list ';' .

    $default  reduce using rule 107 (variable_declaration)


State 235

   73 method_declaration: FUNC ID '.' ID '(' ')' . code_block
   74                   | FUNC ID '.' ID '(' ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 289
    code_block        go to state 290


State 236

   64 parameter_list: parameter_list . ',' ID type_name
   75 method_declaration: FUNC ID '.' ID '(' parameter_list . ')' code_block
   76                   | FUNC ID '.' ID '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 179
    ')'  shift, and go to state 291


State 237

   89 if_statement: IF . '(' base_expression ')' code_block
   90             | IF . '(' base_expression ')' code_block ELSE else_statemnet

    '('  shift, and go to state 292


State 238

   94 iteration_statemnet: WHILE . '(' base_expression ')' code_block

    '('  shift, and go to state 293


State 239

   95 iteration_statemnet: DO . code_block WHILE '(' base_expression ')' ';'

    '{'  shift, and go to state 174

    code_block  go to state 294


State 240

   96 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' code_block

    '('  shift, and go to state 295


State 241

   93 switch_statement: SWITCH . '(' base_expression ')' code_block

    '('  shift, and go to state 296


State 242

  103 jump_statement: RETURN . ';'
  104               | RETURN . expression_list ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    FUNC            shift, and go to state 70
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '{'             shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 46
    ';'             shift, and go to state 297
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                  go to state 83
    primitive_type                  go to state 84
    array_type                      go to state 85
    anonymous_function_declaration  go to state 86
    primary_expression              go to state 87
    just_not_name                   go to state 88
    complex_primary                 go to state 89
    const_name                      go to state 90
    array_complex_primary           go to state 91
    array_access                    go to state 92
    field_access                    go to state 93
    method_call                     go to state 94
    method_access                   go to state 95
    initializer_expression          go to state 96
    postfix_expression              go to state 97
    real_postfix_expression         go to state 98
    unary_expression                go to state 99
    unary_operator                  go to state 100
    multiplicative_expression       go to state 101
    additive_expression             go to state 102
    shift_expression                go to state 103
    relational_expression           go to state 104
    equality_expression             go to state 105
    and_expression                  go to state 106
    exclusive_or_expression         go to state 107
    inclusive_or_expression         go to state 108
    logical_and_expression          go to state 109
    logical_or_expression           go to state 110
    base_expression                 go to state 111
    expression                      go to state 112
    expression_list                 go to state 298


State 243

   78 code_block: '{' '}' .

    $default  reduce using rule 78 (code_block)


State 244

    2 qualified_name: qualified_name . '.' ID
  110 primary_expression: qualified_name .
  129 array_access: qualified_name . '[' base_expression ']'
  135 method_access: qualified_name .
  202 assignment_variable: qualified_name .

    '.'  shift, and go to state 58
    '['  shift, and go to state 142

    ADD_ASSIGN    reduce using rule 202 (assignment_variable)
    SUB_ASSIGN    reduce using rule 202 (assignment_variable)
    MUL_ASSIGN    reduce using rule 202 (assignment_variable)
    DIV_ASSIGN    reduce using rule 202 (assignment_variable)
    MOD_ASSIGN    reduce using rule 202 (assignment_variable)
    AND_ASSIGN    reduce using rule 202 (assignment_variable)
    OR_ASSIGN     reduce using rule 202 (assignment_variable)
    XOR_ASSIGN    reduce using rule 202 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 202 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 202 (assignment_variable)
    ','           reduce using rule 202 (assignment_variable)
    '('           reduce using rule 135 (method_access)
    '='           reduce using rule 202 (assignment_variable)
    $default      reduce using rule 110 (primary_expression)


State 245

   77 code_block: '{' local_variable_declaration_statements . '}'
   80 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    IF              shift, and go to state 237
    WHILE           shift, and go to state 238
    DO              shift, and go to state 239
    FOR             shift, and go to state 240
    SWITCH          shift, and go to state 241
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 242
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '}'             shift, and go to state 299
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                        go to state 244
    local_variable_declaration_statement  go to state 300
    statemnet                             go to state 247
    selection_statement                   go to state 248
    if_statement                          go to state 249
    switch_statement                      go to state 250
    iteration_statemnet                   go to state 251
    jump_statement                        go to state 252
    variable_declaration                  go to state 253
    primary_expression                    go to state 87
    just_not_name                         go to state 88
    complex_primary                       go to state 89
    const_name                            go to state 90
    array_complex_primary                 go to state 91
    array_access                          go to state 254
    field_access                          go to state 255
    method_call                           go to state 94
    method_access                         go to state 95
    postfix_expression                    go to state 97
    real_postfix_expression               go to state 98
    unary_expression                      go to state 99
    unary_operator                        go to state 100
    multiplicative_expression             go to state 101
    additive_expression                   go to state 102
    shift_expression                      go to state 103
    relational_expression                 go to state 104
    equality_expression                   go to state 105
    and_expression                        go to state 106
    exclusive_or_expression               go to state 107
    inclusive_or_expression               go to state 108
    logical_and_expression                go to state 109
    logical_or_expression                 go to state 110
    base_expression                       go to state 256
    assignment_expression                 go to state 257
    assignment_variable_list              go to state 258
    assignment_variable                   go to state 259
    expression_statement                  go to state 260


State 246

   79 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 79 (local_variable_declaration_statements)


State 247

   82 local_variable_declaration_statement: statemnet .

    $default  reduce using rule 82 (local_variable_declaration_statement)


State 248

   84 statemnet: selection_statement .

    $default  reduce using rule 84 (statemnet)


State 249

   87 selection_statement: if_statement .

    $default  reduce using rule 87 (selection_statement)


State 250

   88 selection_statement: switch_statement .

    $default  reduce using rule 88 (selection_statement)


State 251

   85 statemnet: iteration_statemnet .

    $default  reduce using rule 85 (statemnet)


State 252

   86 statemnet: jump_statement .

    $default  reduce using rule 86 (statemnet)


State 253

   81 local_variable_declaration_statement: variable_declaration .

    $default  reduce using rule 81 (local_variable_declaration_statement)


State 254

  116 complex_primary: array_access .
  126 array_complex_primary: array_access .
  203 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 203 (assignment_variable)
    SUB_ASSIGN    reduce using rule 203 (assignment_variable)
    MUL_ASSIGN    reduce using rule 203 (assignment_variable)
    DIV_ASSIGN    reduce using rule 203 (assignment_variable)
    MOD_ASSIGN    reduce using rule 203 (assignment_variable)
    AND_ASSIGN    reduce using rule 203 (assignment_variable)
    OR_ASSIGN     reduce using rule 203 (assignment_variable)
    XOR_ASSIGN    reduce using rule 203 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 203 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 203 (assignment_variable)
    ','           reduce using rule 203 (assignment_variable)
    '['           reduce using rule 126 (array_complex_primary)
    '='           reduce using rule 203 (assignment_variable)
    $default      reduce using rule 116 (complex_primary)


State 255

  117 complex_primary: field_access .
  127 array_complex_primary: field_access .
  204 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 204 (assignment_variable)
    SUB_ASSIGN    reduce using rule 204 (assignment_variable)
    MUL_ASSIGN    reduce using rule 204 (assignment_variable)
    DIV_ASSIGN    reduce using rule 204 (assignment_variable)
    MOD_ASSIGN    reduce using rule 204 (assignment_variable)
    AND_ASSIGN    reduce using rule 204 (assignment_variable)
    OR_ASSIGN     reduce using rule 204 (assignment_variable)
    XOR_ASSIGN    reduce using rule 204 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 204 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 204 (assignment_variable)
    ','           reduce using rule 204 (assignment_variable)
    '['           reduce using rule 127 (array_complex_primary)
    '='           reduce using rule 204 (assignment_variable)
    $default      reduce using rule 117 (complex_primary)


State 256

  215 expression_statement: base_expression .

    $default  reduce using rule 215 (expression_statement)


State 257

  216 expression_statement: assignment_expression .

    $default  reduce using rule 216 (expression_statement)


State 258

  198 assignment_expression: assignment_variable_list . '=' expression_list
  201 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 301
    '='  shift, and go to state 302


State 259

  199 assignment_expression: assignment_variable . compound_assignment_operator base_expression
  200 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 303
    SUB_ASSIGN    shift, and go to state 304
    MUL_ASSIGN    shift, and go to state 305
    DIV_ASSIGN    shift, and go to state 306
    MOD_ASSIGN    shift, and go to state 307
    AND_ASSIGN    shift, and go to state 308
    OR_ASSIGN     shift, and go to state 309
    XOR_ASSIGN    shift, and go to state 310
    RIGHT_ASSIGN  shift, and go to state 311
    LEFT_ASSIGN   shift, and go to state 312

    $default  reduce using rule 200 (assignment_variable_list)

    compound_assignment_operator  go to state 313


State 260

   83 statemnet: expression_statement . ';'

    ';'  shift, and go to state 314


State 261

    4 type_name_list: type_name_list . ',' type_name
   28 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 189
    ')'  shift, and go to state 315


State 262

   66 function_declaration: FUNC ID '(' ')' return_type_list code_block .

    $default  reduce using rule 66 (function_declaration)


State 263

   64 parameter_list: parameter_list ',' ID . type_name

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 316
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 264

   68 function_declaration: FUNC ID '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 317


State 265

   67 function_declaration: FUNC ID '(' parameter_list ')' code_block .

    $default  reduce using rule 67 (function_declaration)


State 266

   54 field_declaration: ID type_name . ';'

    ';'  shift, and go to state 318


State 267

   49 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 49 (type_declaration)


State 268

   53 field_declarations: field_declarations field_declaration .

    $default  reduce using rule 53 (field_declarations)


State 269

   57 interface_function_declaration: ID '(' . ')' ';'
   58                               | ID '(' . ')' return_type_list ';'
   59                               | ID '(' . type_name_list ')' ';'
   60                               | ID '(' . type_name_list ')' return_type_list ';'
   61                               | ID '(' . parameter_list ')' ';'
   62                               | ID '(' . parameter_list ')' return_type_list ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 319
    ')'        shift, and go to state 320
    '['        shift, and go to state 46

    qualified_name  go to state 48
    type_name_list  go to state 321
    type_name       go to state 127
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52
    parameter_list  go to state 322


State 270

   50 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 50 (type_declaration)


State 271

   56 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 56 (interface_function_declarations)


State 272

    4 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 4 (type_name_list)


State 273

   25 function_type: FUNC '(' type_name_list ')' return_type_list .

    $default  reduce using rule 25 (function_type)


State 274

   70 anonymous_function_declaration: FUNC '(' ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 323


State 275

   69 anonymous_function_declaration: FUNC '(' ')' code_block .

    $default  reduce using rule 69 (anonymous_function_declaration)


State 276

   71 anonymous_function_declaration: FUNC '(' parameter_list ')' . code_block
   72                               | FUNC '(' parameter_list ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 324
    code_block        go to state 325


State 277

  150 array_initial_list: INTEGER ':' base_expression .

    $default  reduce using rule 150 (array_initial_list)


State 278

  148 field_initial_list: ID ':' base_expression .

    $default  reduce using rule 148 (field_initial_list)


State 279

  149 field_initial_list: field_initial_list ',' ID . ':' base_expression

    ':'  shift, and go to state 326


State 280

  151 array_initial_list: array_initial_list ',' INTEGER . ':' base_expression

    ':'  shift, and go to state 327


State 281

  142 initializer_expression: qualified_name '{' field_initial_list '}' .

    $default  reduce using rule 142 (initializer_expression)


State 282

  141 initializer_expression: qualified_name '{' expression_list '}' .

    $default  reduce using rule 141 (initializer_expression)


State 283

  129 array_access: qualified_name '[' base_expression ']' .

    $default  reduce using rule 129 (array_access)


State 284

  147 initializer_expression: primitive_type '(' base_expression ')' .

    $default  reduce using rule 147 (initializer_expression)


State 285

  145 initializer_expression: array_type '{' array_initial_list '}' .

    $default  reduce using rule 145 (initializer_expression)


State 286

  144 initializer_expression: array_type '{' expression_list '}' .

    $default  reduce using rule 144 (initializer_expression)


State 287

  130 array_access: array_complex_primary '[' base_expression ']' .

    $default  reduce using rule 130 (array_access)


State 288

  132 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 132 (method_call)


State 289

   74 method_declaration: FUNC ID '.' ID '(' ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 328


State 290

   73 method_declaration: FUNC ID '.' ID '(' ')' code_block .

    $default  reduce using rule 73 (method_declaration)


State 291

   75 method_declaration: FUNC ID '.' ID '(' parameter_list ')' . code_block
   76                   | FUNC ID '.' ID '(' parameter_list ')' . return_type_list code_block

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '{'        shift, and go to state 174
    '('        shift, and go to state 175
    '['        shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 329
    code_block        go to state 330


State 292

   89 if_statement: IF '(' . base_expression ')' code_block
   90             | IF '(' . base_expression ')' code_block ELSE else_statemnet

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 331


State 293

   94 iteration_statemnet: WHILE '(' . base_expression ')' code_block

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 332


State 294

   95 iteration_statemnet: DO code_block . WHILE '(' base_expression ')' ';'

    WHILE  shift, and go to state 333


State 295

   96 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' code_block

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    VAR             shift, and go to state 1
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    ';'             shift, and go to state 334
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 244
    for_init                   go to state 335
    variable_declaration       go to state 336
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 254
    field_access               go to state 255
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 256
    assignment_expression      go to state 257
    assignment_variable_list   go to state 258
    assignment_variable        go to state 259
    expression_statement       go to state 337


State 296

   93 switch_statement: SWITCH '(' . base_expression ')' code_block

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 338


State 297

  103 jump_statement: RETURN ';' .

    $default  reduce using rule 103 (jump_statement)


State 298

  104 jump_statement: RETURN expression_list . ';'
  197 expression_list: expression_list . ',' expression

    ','  shift, and go to state 169
    ';'  shift, and go to state 339


State 299

   77 code_block: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 77 (code_block)


State 300

   80 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 80 (local_variable_declaration_statements)


State 301

  201 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    TOKEN_THIS  shift, and go to state 69
    ID          shift, and go to state 19
    '('         shift, and go to state 78

    qualified_name         go to state 340
    just_not_name          go to state 341
    complex_primary        go to state 89
    array_complex_primary  go to state 91
    array_access           go to state 254
    field_access           go to state 255
    method_call            go to state 94
    method_access          go to state 95
    assignment_variable    go to state 342


State 302

  198 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    FUNC            shift, and go to state 70
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '{'             shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 46
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name                  go to state 83
    primitive_type                  go to state 84
    array_type                      go to state 85
    anonymous_function_declaration  go to state 86
    primary_expression              go to state 87
    just_not_name                   go to state 88
    complex_primary                 go to state 89
    const_name                      go to state 90
    array_complex_primary           go to state 91
    array_access                    go to state 92
    field_access                    go to state 93
    method_call                     go to state 94
    method_access                   go to state 95
    initializer_expression          go to state 96
    postfix_expression              go to state 97
    real_postfix_expression         go to state 98
    unary_expression                go to state 99
    unary_operator                  go to state 100
    multiplicative_expression       go to state 101
    additive_expression             go to state 102
    shift_expression                go to state 103
    relational_expression           go to state 104
    equality_expression             go to state 105
    and_expression                  go to state 106
    exclusive_or_expression         go to state 107
    inclusive_or_expression         go to state 108
    logical_and_expression          go to state 109
    logical_or_expression           go to state 110
    base_expression                 go to state 111
    expression                      go to state 112
    expression_list                 go to state 343


State 303

  205 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 205 (compound_assignment_operator)


State 304

  206 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 206 (compound_assignment_operator)


State 305

  207 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 207 (compound_assignment_operator)


State 306

  208 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 208 (compound_assignment_operator)


State 307

  209 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 209 (compound_assignment_operator)


State 308

  210 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 210 (compound_assignment_operator)


State 309

  211 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 211 (compound_assignment_operator)


State 310

  212 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 212 (compound_assignment_operator)


State 311

  213 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 213 (compound_assignment_operator)


State 312

  214 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 214 (compound_assignment_operator)


State 313

  199 assignment_expression: assignment_variable compound_assignment_operator . base_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 344


State 314

   83 statemnet: expression_statement ';' .

    $default  reduce using rule 83 (statemnet)


State 315

   28 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 28 (return_type_list)


State 316

   64 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 64 (parameter_list)


State 317

   68 function_declaration: FUNC ID '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 68 (function_declaration)


State 318

   54 field_declaration: ID type_name ';' .

    $default  reduce using rule 54 (field_declaration)


State 319

    1 qualified_name: ID .
   63 parameter_list: ID . type_name

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '['        shift, and go to state 46

    $default  reduce using rule 1 (qualified_name)

    qualified_name  go to state 48
    type_name       go to state 173
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 320

   57 interface_function_declaration: ID '(' ')' . ';'
   58                               | ID '(' ')' . return_type_list ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '('        shift, and go to state 175
    '['        shift, and go to state 46
    ';'        shift, and go to state 345

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 346


State 321

    4 type_name_list: type_name_list . ',' type_name
   59 interface_function_declaration: ID '(' type_name_list . ')' ';'
   60                               | ID '(' type_name_list . ')' return_type_list ';'

    ','  shift, and go to state 189
    ')'  shift, and go to state 347


State 322

   61 interface_function_declaration: ID '(' parameter_list . ')' ';'
   62                               | ID '(' parameter_list . ')' return_type_list ';'
   64 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 179
    ')'  shift, and go to state 348


State 323

   70 anonymous_function_declaration: FUNC '(' ')' return_type_list code_block .

    $default  reduce using rule 70 (anonymous_function_declaration)


State 324

   72 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 349


State 325

   71 anonymous_function_declaration: FUNC '(' parameter_list ')' code_block .

    $default  reduce using rule 71 (anonymous_function_declaration)


State 326

  149 field_initial_list: field_initial_list ',' ID ':' . base_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 350


State 327

  151 array_initial_list: array_initial_list ',' INTEGER ':' . base_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 351


State 328

   74 method_declaration: FUNC ID '.' ID '(' ')' return_type_list code_block .

    $default  reduce using rule 74 (method_declaration)


State 329

   76 method_declaration: FUNC ID '.' ID '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 174

    code_block  go to state 352


State 330

   75 method_declaration: FUNC ID '.' ID '(' parameter_list ')' code_block .

    $default  reduce using rule 75 (method_declaration)


State 331

   89 if_statement: IF '(' base_expression . ')' code_block
   90             | IF '(' base_expression . ')' code_block ELSE else_statemnet

    ')'  shift, and go to state 353


State 332

   94 iteration_statemnet: WHILE '(' base_expression . ')' code_block

    ')'  shift, and go to state 354


State 333

   95 iteration_statemnet: DO code_block WHILE . '(' base_expression ')' ';'

    '('  shift, and go to state 355


State 334

   99 for_init: ';' .

    $default  reduce using rule 99 (for_init)


State 335

   96 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' code_block

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    ';'             shift, and go to state 356
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    for_expr                   go to state 357
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 358


State 336

   98 for_init: variable_declaration .

    $default  reduce using rule 98 (for_init)


State 337

   97 for_init: expression_statement . ';'

    ';'  shift, and go to state 359


State 338

   93 switch_statement: SWITCH '(' base_expression . ')' code_block

    ')'  shift, and go to state 360


State 339

  104 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 104 (jump_statement)


State 340

    2 qualified_name: qualified_name . '.' ID
  129 array_access: qualified_name . '[' base_expression ']'
  135 method_access: qualified_name .
  202 assignment_variable: qualified_name .

    '.'  shift, and go to state 58
    '['  shift, and go to state 142

    '('       reduce using rule 135 (method_access)
    $default  reduce using rule 202 (assignment_variable)


State 341

  131 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 145


State 342

  201 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 201 (assignment_variable_list)


State 343

  197 expression_list: expression_list . ',' expression
  198 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 169

    $default  reduce using rule 198 (assignment_expression)


State 344

  199 assignment_expression: assignment_variable compound_assignment_operator base_expression .

    $default  reduce using rule 199 (assignment_expression)


State 345

   57 interface_function_declaration: ID '(' ')' ';' .

    $default  reduce using rule 57 (interface_function_declaration)


State 346

   58 interface_function_declaration: ID '(' ')' return_type_list . ';'

    ';'  shift, and go to state 361


State 347

   59 interface_function_declaration: ID '(' type_name_list ')' . ';'
   60                               | ID '(' type_name_list ')' . return_type_list ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '('        shift, and go to state 175
    '['        shift, and go to state 46
    ';'        shift, and go to state 362

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 363


State 348

   61 interface_function_declaration: ID '(' parameter_list ')' . ';'
   62                               | ID '(' parameter_list ')' . return_type_list ';'

    FUNC       shift, and go to state 31
    INTERFACE  shift, and go to state 32
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ID         shift, and go to state 19
    '('        shift, and go to state 175
    '['        shift, and go to state 46
    ';'        shift, and go to state 364

    qualified_name    go to state 48
    type_name         go to state 176
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 365


State 349

   72 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 72 (anonymous_function_declaration)


State 350

  149 field_initial_list: field_initial_list ',' ID ':' base_expression .

    $default  reduce using rule 149 (field_initial_list)


State 351

  151 array_initial_list: array_initial_list ',' INTEGER ':' base_expression .

    $default  reduce using rule 151 (array_initial_list)


State 352

   76 method_declaration: FUNC ID '.' ID '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 76 (method_declaration)


State 353

   89 if_statement: IF '(' base_expression ')' . code_block
   90             | IF '(' base_expression ')' . code_block ELSE else_statemnet

    '{'  shift, and go to state 174

    code_block  go to state 366


State 354

   94 iteration_statemnet: WHILE '(' base_expression ')' . code_block

    '{'  shift, and go to state 174

    code_block  go to state 367


State 355

   95 iteration_statemnet: DO code_block WHILE '(' . base_expression ')' ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 130
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 92
    field_access               go to state 93
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 368


State 356

  101 for_expr: ';' .

    $default  reduce using rule 101 (for_expr)


State 357

   96 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' code_block

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    TOKEN_THIS      shift, and go to state 69
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    ID              shift, and go to state 19
    '('             shift, and go to state 78
    '+'             shift, and go to state 79
    '-'             shift, and go to state 80
    '~'             shift, and go to state 81
    '!'             shift, and go to state 82

    qualified_name             go to state 244
    for_incr                   go to state 369
    primary_expression         go to state 87
    just_not_name              go to state 88
    complex_primary            go to state 89
    const_name                 go to state 90
    array_complex_primary      go to state 91
    array_access               go to state 254
    field_access               go to state 255
    method_call                go to state 94
    method_access              go to state 95
    postfix_expression         go to state 97
    real_postfix_expression    go to state 98
    unary_expression           go to state 99
    unary_operator             go to state 100
    multiplicative_expression  go to state 101
    additive_expression        go to state 102
    shift_expression           go to state 103
    relational_expression      go to state 104
    equality_expression        go to state 105
    and_expression             go to state 106
    exclusive_or_expression    go to state 107
    inclusive_or_expression    go to state 108
    logical_and_expression     go to state 109
    logical_or_expression      go to state 110
    base_expression            go to state 256
    assignment_expression      go to state 257
    assignment_variable_list   go to state 258
    assignment_variable        go to state 259
    expression_statement       go to state 370


State 358

  100 for_expr: base_expression . ';'

    ';'  shift, and go to state 371


State 359

   97 for_init: expression_statement ';' .

    $default  reduce using rule 97 (for_init)


State 360

   93 switch_statement: SWITCH '(' base_expression ')' . code_block

    '{'  shift, and go to state 174

    code_block  go to state 372


State 361

   58 interface_function_declaration: ID '(' ')' return_type_list ';' .

    $default  reduce using rule 58 (interface_function_declaration)


State 362

   59 interface_function_declaration: ID '(' type_name_list ')' ';' .

    $default  reduce using rule 59 (interface_function_declaration)


State 363

   60 interface_function_declaration: ID '(' type_name_list ')' return_type_list . ';'

    ';'  shift, and go to state 373


State 364

   61 interface_function_declaration: ID '(' parameter_list ')' ';' .

    $default  reduce using rule 61 (interface_function_declaration)


State 365

   62 interface_function_declaration: ID '(' parameter_list ')' return_type_list . ';'

    ';'  shift, and go to state 374


State 366

   89 if_statement: IF '(' base_expression ')' code_block .
   90             | IF '(' base_expression ')' code_block . ELSE else_statemnet

    ELSE  shift, and go to state 375

    $default  reduce using rule 89 (if_statement)


State 367

   94 iteration_statemnet: WHILE '(' base_expression ')' code_block .

    $default  reduce using rule 94 (iteration_statemnet)


State 368

   95 iteration_statemnet: DO code_block WHILE '(' base_expression . ')' ';'

    ')'  shift, and go to state 376


State 369

   96 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' code_block

    ')'  shift, and go to state 377


State 370

  102 for_incr: expression_statement .

    $default  reduce using rule 102 (for_incr)


State 371

  100 for_expr: base_expression ';' .

    $default  reduce using rule 100 (for_expr)


State 372

   93 switch_statement: SWITCH '(' base_expression ')' code_block .

    $default  reduce using rule 93 (switch_statement)


State 373

   60 interface_function_declaration: ID '(' type_name_list ')' return_type_list ';' .

    $default  reduce using rule 60 (interface_function_declaration)


State 374

   62 interface_function_declaration: ID '(' parameter_list ')' return_type_list ';' .

    $default  reduce using rule 62 (interface_function_declaration)


State 375

   90 if_statement: IF '(' base_expression ')' code_block ELSE . else_statemnet

    IF   shift, and go to state 237
    '{'  shift, and go to state 174

    code_block      go to state 378
    if_statement    go to state 379
    else_statemnet  go to state 380


State 376

   95 iteration_statemnet: DO code_block WHILE '(' base_expression ')' . ';'

    ';'  shift, and go to state 381


State 377

   96 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . code_block

    '{'  shift, and go to state 174

    code_block  go to state 382


State 378

   92 else_statemnet: code_block .

    $default  reduce using rule 92 (else_statemnet)


State 379

   91 else_statemnet: if_statement .

    $default  reduce using rule 91 (else_statemnet)


State 380

   90 if_statement: IF '(' base_expression ')' code_block ELSE else_statemnet .

    $default  reduce using rule 90 (if_statement)


State 381

   95 iteration_statemnet: DO code_block WHILE '(' base_expression ')' ';' .

    $default  reduce using rule 95 (iteration_statemnet)


State 382

   96 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' code_block .

    $default  reduce using rule 96 (iteration_statemnet)
