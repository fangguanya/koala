Terminals unused in grammar

   ELLIPSIS
   NOT
   TOKEN_THIS
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   HEX
   OCT


Grammar

    0 $accept: program $end

    1 qualified_name: IDENTIFIER

    2 type_name_list: type_name
    3               | type_name_list ',' type_name

    4 type_name: primitive_type
    5          | qualified_name
    6          | array_type
    7          | function_type
    8          | INTERFACE '{' '}'

    9 primitive_type: UINT8
   10               | UINT16
   11               | UINT32
   12               | UINT64
   13               | INT8
   14               | INT16
   15               | INT32
   16               | INT64
   17               | FLOAT32
   18               | FLOAT64
   19               | BOOL
   20               | STRING

   21 function_type: FUNC '(' ')'
   22              | FUNC '(' ')' return_type_list
   23              | FUNC '(' type_name_list ')'
   24              | FUNC '(' type_name_list ')' return_type_list

   25 array_type: '[' INTEGER ']' type_name

   26 return_type_list: type_name
   27                 | '(' type_name_list ')'

   28 program: package_statement import_statements declarations
   29        | package_statement import_statements
   30        | package_statement declarations
   31        | import_statements declarations
   32        | package_statement
   33        | import_statements
   34        | declarations

   35 package_statement: PACKAGE qualified_name ';'

   36 import_statements: import_statement
   37                  | import_statements import_statement

   38 import_statement: IMPORT qualified_name ';'
   39                 | IMPORT qualified_name '.' '*' ';'

   40 declarations: type_declaration
   41             | declarations type_declaration
   42             | variable_declaration
   43             | declarations variable_declaration
   44             | function_declaration
   45             | declarations function_declaration
   46             | method_declaration
   47             | declarations method_declaration

   48 type_declaration: TYPE IDENTIFIER STRUCT '{' field_declarations '}'
   49                 | TYPE IDENTIFIER INTERFACE '{' interface_function_declarations '}'
   50                 | TYPE IDENTIFIER type_name ';'

   51 field_declarations: IDENTIFIER type_name ';'
   52                   | field_declarations IDENTIFIER type_name ';'

   53 interface_function_declarations: interface_function_declaration
   54                                | interface_function_declarations interface_function_declaration

   55 interface_function_declaration: IDENTIFIER '(' ')' ';'
   56                               | IDENTIFIER '(' ')' return_type_list ';'
   57                               | IDENTIFIER '(' type_name_list ')' ';'
   58                               | IDENTIFIER '(' type_name_list ')' return_type_list ';'
   59                               | IDENTIFIER '(' parameter_list ')' ';'
   60                               | IDENTIFIER '(' parameter_list ')' return_type_list ';'

   61 parameter_list: IDENTIFIER type_name
   62               | parameter_list ',' IDENTIFIER type_name

   63 function_declaration: FUNC IDENTIFIER '(' ')' code_block
   64                     | FUNC IDENTIFIER '(' ')' return_type_list code_block
   65                     | FUNC IDENTIFIER '(' parameter_list ')' code_block
   66                     | FUNC IDENTIFIER '(' parameter_list ')' return_type_list code_block

   67 anonymous_function_declaration: FUNC '(' ')' code_block
   68                               | FUNC '(' ')' return_type_list code_block
   69                               | FUNC '(' parameter_list ')' code_block
   70                               | FUNC '(' parameter_list ')' return_type_list code_block

   71 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' ')' code_block
   72                   | FUNC IDENTIFIER '.' IDENTIFIER '(' ')' return_type_list code_block
   73                   | FUNC IDENTIFIER '.' IDENTIFIER '(' parameter_list ')' code_block
   74                   | FUNC IDENTIFIER '.' IDENTIFIER '(' parameter_list ')' return_type_list code_block

   75 code_block: '{' local_variable_declaration_statements '}'
   76           | '{' '}'

   77 local_variable_declaration_statements: local_variable_declaration_statement
   78                                      | local_variable_declaration_statements local_variable_declaration_statement

   79 local_variable_declaration_statement: variable_declaration
   80                                     | statement

   81 statement: expression_statement ';'
   82          | selection_statement
   83          | iteration_statemnet
   84          | jump_statement

   85 selection_statement: if_statement
   86                    | switch_statement

   87 if_statement: IF '(' basic_expression ')' code_block
   88             | IF '(' basic_expression ')' code_block ELSE else_statemnet

   89 else_statemnet: if_statement
   90               | code_block

   91 switch_statement: SWITCH '(' basic_expression ')' code_block

   92 iteration_statemnet: WHILE '(' basic_expression ')' code_block
   93                    | DO code_block WHILE '(' basic_expression ')' ';'
   94                    | FOR '(' for_init for_expr for_incr ')' code_block

   95 for_init: expression_statement ';'
   96         | variable_declaration
   97         | ';'

   98 for_expr: basic_expression ';'
   99         | ';'

  100 for_incr: expression_statement

  101 jump_statement: RETURN ';'
  102               | RETURN expression_list ';'

  103 variable_declaration: VAR var_list type_name ';'
  104                     | VAR var_list '=' expression_list ';'
  105                     | VAR var_list type_name '=' expression_list ';'

  106 var_list: IDENTIFIER
  107         | var_list ',' IDENTIFIER

  108 initializer_expression: '{' '}'
  109                       | '{' expression_list '}'
  110                       | '{' field_initial_list '}'
  111                       | '{' array_initial_list '}'
  112                       | qualified_name '{' '}'
  113                       | qualified_name '{' expression_list '}'
  114                       | qualified_name '{' field_initial_list '}'
  115                       | array_type '{' '}'
  116                       | array_type '{' expression_list '}'
  117                       | array_type '{' array_initial_list '}'
  118                       | anonymous_function_declaration
  119                       | primitive_type '(' basic_expression ')'

  120 field_initial_list: IDENTIFIER ':' expression
  121                   | field_initial_list ',' IDENTIFIER ':' expression

  122 array_initial_list: INTEGER ':' expression
  123                   | array_initial_list ',' INTEGER ':' expression

  124 primary_expression: qualified_name
  125                   | constant
  126                   | '(' basic_expression ')'

  127 constant: INTEGER
  128         | FLOAT
  129         | STRING_LITERAL
  130         | TOKEN_NIL
  131         | TOKEN_TRUE
  132         | TOKEN_FALSE

  133 postfix_expression: primary_expression
  134                   | postfix_expression INC
  135                   | postfix_expression DEC
  136                   | postfix_expression '.' IDENTIFIER
  137                   | postfix_expression '[' basic_expression ']'
  138                   | postfix_expression '(' ')'
  139                   | postfix_expression '(' argument_expression_list ')'

  140 argument_expression_list: basic_expression
  141                         | argument_expression_list ',' basic_expression

  142 unary_expression: postfix_expression
  143                 | INC unary_expression
  144                 | DEC unary_expression
  145                 | '+' unary_expression
  146                 | '-' unary_expression
  147                 | '~' unary_expression
  148                 | '!' unary_expression

  149 multiplicative_expression: unary_expression
  150                          | multiplicative_expression '*' unary_expression
  151                          | multiplicative_expression '/' unary_expression
  152                          | multiplicative_expression '%' unary_expression

  153 additive_expression: multiplicative_expression
  154                    | additive_expression '+' multiplicative_expression
  155                    | additive_expression '-' multiplicative_expression

  156 shift_expression: additive_expression
  157                 | shift_expression SHIFT_LEFT additive_expression
  158                 | shift_expression SHIFT_RIGHT additive_expression

  159 relational_expression: shift_expression
  160                      | relational_expression '<' shift_expression
  161                      | relational_expression '>' shift_expression
  162                      | relational_expression LE shift_expression
  163                      | relational_expression GE shift_expression

  164 equality_expression: relational_expression
  165                    | equality_expression EQ relational_expression
  166                    | equality_expression NE relational_expression

  167 and_expression: equality_expression
  168               | and_expression '&' equality_expression

  169 exclusive_or_expression: and_expression
  170                        | exclusive_or_expression '^' and_expression

  171 inclusive_or_expression: exclusive_or_expression
  172                        | inclusive_or_expression '|' exclusive_or_expression

  173 logical_and_expression: inclusive_or_expression
  174                       | logical_and_expression AND inclusive_or_expression

  175 logical_or_expression: logical_and_expression
  176                      | logical_or_expression OR logical_and_expression

  177 basic_expression: logical_or_expression

  178 expression: basic_expression
  179           | initializer_expression

  180 expression_list: expression
  181                | expression_list ',' expression

  182 assignment_expression: assignment_variable_list '=' expression_list
  183                      | assignment_variable compound_assignment_operator basic_expression

  184 assignment_variable_list: assignment_variable
  185                         | assignment_variable_list ',' assignment_variable

  186 assignment_variable: qualified_name

  187 compound_assignment_operator: ADD_ASSIGN
  188                             | SUB_ASSIGN
  189                             | MUL_ASSIGN
  190                             | DIV_ASSIGN
  191                             | MOD_ASSIGN
  192                             | AND_ASSIGN
  193                             | OR_ASSIGN
  194                             | XOR_ASSIGN
  195                             | RIGHT_ASSIGN
  196                             | LEFT_ASSIGN

  197 expression_statement: basic_expression
  198                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 148
'%' (37) 152
'&' (38) 168
'(' (40) 21 22 23 24 27 55 56 57 58 59 60 63 64 65 66 67 68 69 70 71
    72 73 74 87 88 91 92 93 94 119 126 138 139
')' (41) 21 22 23 24 27 55 56 57 58 59 60 63 64 65 66 67 68 69 70 71
    72 73 74 87 88 91 92 93 94 119 126 138 139
'*' (42) 39 150
'+' (43) 145 154
',' (44) 3 62 107 121 123 141 181 185
'-' (45) 146 155
'.' (46) 39 71 72 73 74 136
'/' (47) 151
':' (58) 120 121 122 123
';' (59) 35 38 39 50 51 52 55 56 57 58 59 60 81 93 95 97 98 99 101
    102 103 104 105
'<' (60) 160
'=' (61) 104 105 182
'>' (62) 161
'[' (91) 25 137
']' (93) 25 137
'^' (94) 170
'{' (123) 8 48 49 75 76 108 109 110 111 112 113 114 115 116 117
'|' (124) 172
'}' (125) 8 48 49 75 76 108 109 110 111 112 113 114 115 116 117
'~' (126) 147
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 187
SUB_ASSIGN (260) 188
MUL_ASSIGN (261) 189
DIV_ASSIGN (262) 190
MOD_ASSIGN (263) 191
AND_ASSIGN (264) 192
OR_ASSIGN (265) 193
XOR_ASSIGN (266) 194
RIGHT_ASSIGN (267) 195
LEFT_ASSIGN (268) 196
EQ (269) 165
NE (270) 166
GE (271) 163
LE (272) 162
AND (273) 174
OR (274) 176
NOT (275)
SHIFT_LEFT (276) 157
SHIFT_RIGHT (277) 158
INC (278) 134 143
DEC (279) 135 144
TOKEN_THIS (280)
IF (281) 87 88
ELSE (282) 88
WHILE (283) 92 93
DO (284) 93
FOR (285) 94
IN (286)
SWITCH (287) 91
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 103 104 105
FUNC (293) 21 22 23 24 63 64 65 66 67 68 69 70 71 72 73 74
RETURN (294) 101 102
STRUCT (295) 48
INTERFACE (296) 8 49
TYPE (297) 48 49 50
CONST (298)
PACKAGE (299) 35
IMPORT (300) 38 39
INT8 (301) 13
INT16 (302) 14
INT32 (303) 15
INT64 (304) 16
UINT8 (305) 9
UINT16 (306) 10
UINT32 (307) 11
UINT64 (308) 12
FLOAT32 (309) 17
FLOAT64 (310) 18
BOOL (311) 19
STRING (312) 20
TOKEN_NIL (313) 130
TOKEN_TRUE (314) 131
TOKEN_FALSE (315) 132
INTEGER (316) 25 122 123 127
HEX (317)
OCT (318)
FLOAT (319) 128
STRING_LITERAL (320) 129
IDENTIFIER (321) 1 48 49 50 51 52 55 56 57 58 59 60 61 62 63 64 65
    66 71 72 73 74 106 107 120 121 136


Nonterminals, with rules where they appear

$accept (90)
    on left: 0
qualified_name (91)
    on left: 1, on right: 5 35 38 39 112 113 114 124 186
type_name_list (92)
    on left: 2 3, on right: 3 23 24 27 57 58
type_name (93)
    on left: 4 5 6 7 8, on right: 2 3 25 26 50 51 52 61 62 103 105
primitive_type (94)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20, on right: 4 119
function_type (95)
    on left: 21 22 23 24, on right: 7
array_type (96)
    on left: 25, on right: 6 115 116 117
return_type_list (97)
    on left: 26 27, on right: 22 24 56 58 60 64 66 68 70 72 74
program (98)
    on left: 28 29 30 31 32 33 34, on right: 0
package_statement (99)
    on left: 35, on right: 28 29 30 32
import_statements (100)
    on left: 36 37, on right: 28 29 31 33 37
import_statement (101)
    on left: 38 39, on right: 36 37
declarations (102)
    on left: 40 41 42 43 44 45 46 47, on right: 28 30 31 34 41 43 45
    47
type_declaration (103)
    on left: 48 49 50, on right: 40 41
field_declarations (104)
    on left: 51 52, on right: 48 52
interface_function_declarations (105)
    on left: 53 54, on right: 49 54
interface_function_declaration (106)
    on left: 55 56 57 58 59 60, on right: 53 54
parameter_list (107)
    on left: 61 62, on right: 59 60 62 65 66 69 70 73 74
function_declaration (108)
    on left: 63 64 65 66, on right: 44 45
anonymous_function_declaration (109)
    on left: 67 68 69 70, on right: 118
method_declaration (110)
    on left: 71 72 73 74, on right: 46 47
code_block (111)
    on left: 75 76, on right: 63 64 65 66 67 68 69 70 71 72 73 74 87
    88 90 91 92 93 94
local_variable_declaration_statements (112)
    on left: 77 78, on right: 75 78
local_variable_declaration_statement (113)
    on left: 79 80, on right: 77 78
statement (114)
    on left: 81 82 83 84, on right: 80
selection_statement (115)
    on left: 85 86, on right: 82
if_statement (116)
    on left: 87 88, on right: 85 89
else_statemnet (117)
    on left: 89 90, on right: 88
switch_statement (118)
    on left: 91, on right: 86
iteration_statemnet (119)
    on left: 92 93 94, on right: 83
for_init (120)
    on left: 95 96 97, on right: 94
for_expr (121)
    on left: 98 99, on right: 94
for_incr (122)
    on left: 100, on right: 94
jump_statement (123)
    on left: 101 102, on right: 84
variable_declaration (124)
    on left: 103 104 105, on right: 42 43 79 96
var_list (125)
    on left: 106 107, on right: 103 104 105 107
initializer_expression (126)
    on left: 108 109 110 111 112 113 114 115 116 117 118 119, on right:
    179
field_initial_list (127)
    on left: 120 121, on right: 110 114 121
array_initial_list (128)
    on left: 122 123, on right: 111 117 123
primary_expression (129)
    on left: 124 125 126, on right: 133
constant (130)
    on left: 127 128 129 130 131 132, on right: 125
postfix_expression (131)
    on left: 133 134 135 136 137 138 139, on right: 134 135 136 137
    138 139 142
argument_expression_list (132)
    on left: 140 141, on right: 139 141
unary_expression (133)
    on left: 142 143 144 145 146 147 148, on right: 143 144 145 146
    147 148 149 150 151 152
multiplicative_expression (134)
    on left: 149 150 151 152, on right: 150 151 152 153 154 155
additive_expression (135)
    on left: 153 154 155, on right: 154 155 156 157 158
shift_expression (136)
    on left: 156 157 158, on right: 157 158 159 160 161 162 163
relational_expression (137)
    on left: 159 160 161 162 163, on right: 160 161 162 163 164 165
    166
equality_expression (138)
    on left: 164 165 166, on right: 165 166 167 168
and_expression (139)
    on left: 167 168, on right: 168 169 170
exclusive_or_expression (140)
    on left: 169 170, on right: 170 171 172
inclusive_or_expression (141)
    on left: 171 172, on right: 172 173 174
logical_and_expression (142)
    on left: 173 174, on right: 174 175 176
logical_or_expression (143)
    on left: 175 176, on right: 176 177
basic_expression (144)
    on left: 177, on right: 87 88 91 92 93 98 119 126 137 140 141 178
    183 197
expression (145)
    on left: 178 179, on right: 120 121 122 123 180 181
expression_list (146)
    on left: 180 181, on right: 102 104 105 109 113 116 181 182
assignment_expression (147)
    on left: 182 183, on right: 198
assignment_variable_list (148)
    on left: 184 185, on right: 182 185
assignment_variable (149)
    on left: 186, on right: 183 184 185
compound_assignment_operator (150)
    on left: 187 188 189 190 191 192 193 194 195 196, on right: 183
expression_statement (151)
    on left: 197 198, on right: 81 95 100


State 0

    0 $accept: . program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    PACKAGE  shift, and go to state 4
    IMPORT   shift, and go to state 5

    program               go to state 6
    package_statement     go to state 7
    import_statements     go to state 8
    import_statement      go to state 9
    declarations          go to state 10
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 1

  103 variable_declaration: VAR . var_list type_name ';'
  104                     | VAR . var_list '=' expression_list ';'
  105                     | VAR . var_list type_name '=' expression_list ';'

    IDENTIFIER  shift, and go to state 15

    var_list  go to state 16


State 2

   63 function_declaration: FUNC . IDENTIFIER '(' ')' code_block
   64                     | FUNC . IDENTIFIER '(' ')' return_type_list code_block
   65                     | FUNC . IDENTIFIER '(' parameter_list ')' code_block
   66                     | FUNC . IDENTIFIER '(' parameter_list ')' return_type_list code_block
   71 method_declaration: FUNC . IDENTIFIER '.' IDENTIFIER '(' ')' code_block
   72                   | FUNC . IDENTIFIER '.' IDENTIFIER '(' ')' return_type_list code_block
   73                   | FUNC . IDENTIFIER '.' IDENTIFIER '(' parameter_list ')' code_block
   74                   | FUNC . IDENTIFIER '.' IDENTIFIER '(' parameter_list ')' return_type_list code_block

    IDENTIFIER  shift, and go to state 17


State 3

   48 type_declaration: TYPE . IDENTIFIER STRUCT '{' field_declarations '}'
   49                 | TYPE . IDENTIFIER INTERFACE '{' interface_function_declarations '}'
   50                 | TYPE . IDENTIFIER type_name ';'

    IDENTIFIER  shift, and go to state 18


State 4

   35 package_statement: PACKAGE . qualified_name ';'

    IDENTIFIER  shift, and go to state 19

    qualified_name  go to state 20


State 5

   38 import_statement: IMPORT . qualified_name ';'
   39                 | IMPORT . qualified_name '.' '*' ';'

    IDENTIFIER  shift, and go to state 19

    qualified_name  go to state 21


State 6

    0 $accept: program . $end

    $end  shift, and go to state 22


State 7

   28 program: package_statement . import_statements declarations
   29        | package_statement . import_statements
   30        | package_statement . declarations
   32        | package_statement .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 32 (program)

    import_statements     go to state 23
    import_statement      go to state 9
    declarations          go to state 24
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 8

   31 program: import_statements . declarations
   33        | import_statements .
   37 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 33 (program)

    import_statement      go to state 25
    declarations          go to state 26
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 9

   36 import_statements: import_statement .

    $default  reduce using rule 36 (import_statements)


State 10

   34 program: declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 34 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 11

   40 declarations: type_declaration .

    $default  reduce using rule 40 (declarations)


State 12

   44 declarations: function_declaration .

    $default  reduce using rule 44 (declarations)


State 13

   46 declarations: method_declaration .

    $default  reduce using rule 46 (declarations)


State 14

   42 declarations: variable_declaration .

    $default  reduce using rule 42 (declarations)


State 15

  106 var_list: IDENTIFIER .

    $default  reduce using rule 106 (var_list)


State 16

  103 variable_declaration: VAR var_list . type_name ';'
  104                     | VAR var_list . '=' expression_list ';'
  105                     | VAR var_list . type_name '=' expression_list ';'
  107 var_list: var_list . ',' IDENTIFIER

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    ','         shift, and go to state 45
    '['         shift, and go to state 46
    '='         shift, and go to state 47

    qualified_name  go to state 48
    type_name       go to state 49
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 17

   63 function_declaration: FUNC IDENTIFIER . '(' ')' code_block
   64                     | FUNC IDENTIFIER . '(' ')' return_type_list code_block
   65                     | FUNC IDENTIFIER . '(' parameter_list ')' code_block
   66                     | FUNC IDENTIFIER . '(' parameter_list ')' return_type_list code_block
   71 method_declaration: FUNC IDENTIFIER . '.' IDENTIFIER '(' ')' code_block
   72                   | FUNC IDENTIFIER . '.' IDENTIFIER '(' ')' return_type_list code_block
   73                   | FUNC IDENTIFIER . '.' IDENTIFIER '(' parameter_list ')' code_block
   74                   | FUNC IDENTIFIER . '.' IDENTIFIER '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 53
    '.'  shift, and go to state 54


State 18

   48 type_declaration: TYPE IDENTIFIER . STRUCT '{' field_declarations '}'
   49                 | TYPE IDENTIFIER . INTERFACE '{' interface_function_declarations '}'
   50                 | TYPE IDENTIFIER . type_name ';'

    FUNC        shift, and go to state 31
    STRUCT      shift, and go to state 55
    INTERFACE   shift, and go to state 56
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '['         shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 57
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 19

    1 qualified_name: IDENTIFIER .

    $default  reduce using rule 1 (qualified_name)


State 20

   35 package_statement: PACKAGE qualified_name . ';'

    ';'  shift, and go to state 58


State 21

   38 import_statement: IMPORT qualified_name . ';'
   39                 | IMPORT qualified_name . '.' '*' ';'

    ';'  shift, and go to state 59
    '.'  shift, and go to state 60


State 22

    0 $accept: program $end .

    $default  accept


State 23

   28 program: package_statement import_statements . declarations
   29        | package_statement import_statements .
   37 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 29 (program)

    import_statement      go to state 25
    declarations          go to state 61
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 24

   30 program: package_statement declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 30 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 25

   37 import_statements: import_statements import_statement .

    $default  reduce using rule 37 (import_statements)


State 26

   31 program: import_statements declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 31 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 27

   41 declarations: declarations type_declaration .

    $default  reduce using rule 41 (declarations)


State 28

   45 declarations: declarations function_declaration .

    $default  reduce using rule 45 (declarations)


State 29

   47 declarations: declarations method_declaration .

    $default  reduce using rule 47 (declarations)


State 30

   43 declarations: declarations variable_declaration .

    $default  reduce using rule 43 (declarations)


State 31

   21 function_type: FUNC . '(' ')'
   22              | FUNC . '(' ')' return_type_list
   23              | FUNC . '(' type_name_list ')'
   24              | FUNC . '(' type_name_list ')' return_type_list

    '('  shift, and go to state 62


State 32

    8 type_name: INTERFACE . '{' '}'

    '{'  shift, and go to state 63


State 33

   13 primitive_type: INT8 .

    $default  reduce using rule 13 (primitive_type)


State 34

   14 primitive_type: INT16 .

    $default  reduce using rule 14 (primitive_type)


State 35

   15 primitive_type: INT32 .

    $default  reduce using rule 15 (primitive_type)


State 36

   16 primitive_type: INT64 .

    $default  reduce using rule 16 (primitive_type)


State 37

    9 primitive_type: UINT8 .

    $default  reduce using rule 9 (primitive_type)


State 38

   10 primitive_type: UINT16 .

    $default  reduce using rule 10 (primitive_type)


State 39

   11 primitive_type: UINT32 .

    $default  reduce using rule 11 (primitive_type)


State 40

   12 primitive_type: UINT64 .

    $default  reduce using rule 12 (primitive_type)


State 41

   17 primitive_type: FLOAT32 .

    $default  reduce using rule 17 (primitive_type)


State 42

   18 primitive_type: FLOAT64 .

    $default  reduce using rule 18 (primitive_type)


State 43

   19 primitive_type: BOOL .

    $default  reduce using rule 19 (primitive_type)


State 44

   20 primitive_type: STRING .

    $default  reduce using rule 20 (primitive_type)


State 45

  107 var_list: var_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 64


State 46

   25 array_type: '[' . INTEGER ']' type_name

    INTEGER  shift, and go to state 65


State 47

  104 variable_declaration: VAR var_list '=' . expression_list ';'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '{'             shift, and go to state 75
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 101
    expression_list                 go to state 102


State 48

    5 type_name: qualified_name .

    $default  reduce using rule 5 (type_name)


State 49

  103 variable_declaration: VAR var_list type_name . ';'
  105                     | VAR var_list type_name . '=' expression_list ';'

    ';'  shift, and go to state 103
    '='  shift, and go to state 104


State 50

    4 type_name: primitive_type .

    $default  reduce using rule 4 (type_name)


State 51

    7 type_name: function_type .

    $default  reduce using rule 7 (type_name)


State 52

    6 type_name: array_type .

    $default  reduce using rule 6 (type_name)


State 53

   63 function_declaration: FUNC IDENTIFIER '(' . ')' code_block
   64                     | FUNC IDENTIFIER '(' . ')' return_type_list code_block
   65                     | FUNC IDENTIFIER '(' . parameter_list ')' code_block
   66                     | FUNC IDENTIFIER '(' . parameter_list ')' return_type_list code_block

    IDENTIFIER  shift, and go to state 105
    ')'         shift, and go to state 106

    parameter_list  go to state 107


State 54

   71 method_declaration: FUNC IDENTIFIER '.' . IDENTIFIER '(' ')' code_block
   72                   | FUNC IDENTIFIER '.' . IDENTIFIER '(' ')' return_type_list code_block
   73                   | FUNC IDENTIFIER '.' . IDENTIFIER '(' parameter_list ')' code_block
   74                   | FUNC IDENTIFIER '.' . IDENTIFIER '(' parameter_list ')' return_type_list code_block

    IDENTIFIER  shift, and go to state 108


State 55

   48 type_declaration: TYPE IDENTIFIER STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 109


State 56

    8 type_name: INTERFACE . '{' '}'
   49 type_declaration: TYPE IDENTIFIER INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 110


State 57

   50 type_declaration: TYPE IDENTIFIER type_name . ';'

    ';'  shift, and go to state 111


State 58

   35 package_statement: PACKAGE qualified_name ';' .

    $default  reduce using rule 35 (package_statement)


State 59

   38 import_statement: IMPORT qualified_name ';' .

    $default  reduce using rule 38 (import_statement)


State 60

   39 import_statement: IMPORT qualified_name '.' . '*' ';'

    '*'  shift, and go to state 112


State 61

   28 program: package_statement import_statements declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 28 (program)

    type_declaration      go to state 27
    function_declaration  go to state 28
    method_declaration    go to state 29
    variable_declaration  go to state 30


State 62

   21 function_type: FUNC '(' . ')'
   22              | FUNC '(' . ')' return_type_list
   23              | FUNC '(' . type_name_list ')'
   24              | FUNC '(' . type_name_list ')' return_type_list

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    ')'         shift, and go to state 113
    '['         shift, and go to state 46

    qualified_name  go to state 48
    type_name_list  go to state 114
    type_name       go to state 115
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 63

    8 type_name: INTERFACE '{' . '}'

    '}'  shift, and go to state 116


State 64

  107 var_list: var_list ',' IDENTIFIER .

    $default  reduce using rule 107 (var_list)


State 65

   25 array_type: '[' INTEGER . ']' type_name

    ']'  shift, and go to state 117


State 66

  143 unary_expression: INC . unary_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name      go to state 118
    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 119


State 67

  144 unary_expression: DEC . unary_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name      go to state 118
    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 120


State 68

   67 anonymous_function_declaration: FUNC . '(' ')' code_block
   68                               | FUNC . '(' ')' return_type_list code_block
   69                               | FUNC . '(' parameter_list ')' code_block
   70                               | FUNC . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 121


State 69

  130 constant: TOKEN_NIL .

    $default  reduce using rule 130 (constant)


State 70

  131 constant: TOKEN_TRUE .

    $default  reduce using rule 131 (constant)


State 71

  132 constant: TOKEN_FALSE .

    $default  reduce using rule 132 (constant)


State 72

  127 constant: INTEGER .

    $default  reduce using rule 127 (constant)


State 73

  128 constant: FLOAT .

    $default  reduce using rule 128 (constant)


State 74

  129 constant: STRING_LITERAL .

    $default  reduce using rule 129 (constant)


State 75

  108 initializer_expression: '{' . '}'
  109                       | '{' . expression_list '}'
  110                       | '{' . field_initial_list '}'
  111                       | '{' . array_initial_list '}'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 122
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 123
    '{'             shift, and go to state 75
    '}'             shift, and go to state 124
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    field_initial_list              go to state 125
    array_initial_list              go to state 126
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 101
    expression_list                 go to state 127


State 76

  126 primary_expression: '(' . basic_expression ')'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 128


State 77

  145 unary_expression: '+' . unary_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name      go to state 118
    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 129


State 78

  146 unary_expression: '-' . unary_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name      go to state 118
    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 130


State 79

  147 unary_expression: '~' . unary_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name      go to state 118
    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 131


State 80

  148 unary_expression: '!' . unary_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name      go to state 118
    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 132


State 81

  112 initializer_expression: qualified_name . '{' '}'
  113                       | qualified_name . '{' expression_list '}'
  114                       | qualified_name . '{' field_initial_list '}'
  124 primary_expression: qualified_name .

    '{'  shift, and go to state 133

    $default  reduce using rule 124 (primary_expression)


State 82

  119 initializer_expression: primitive_type . '(' basic_expression ')'

    '('  shift, and go to state 134


State 83

  115 initializer_expression: array_type . '{' '}'
  116                       | array_type . '{' expression_list '}'
  117                       | array_type . '{' array_initial_list '}'

    '{'  shift, and go to state 135


State 84

  118 initializer_expression: anonymous_function_declaration .

    $default  reduce using rule 118 (initializer_expression)


State 85

  179 expression: initializer_expression .

    $default  reduce using rule 179 (expression)


State 86

  133 postfix_expression: primary_expression .

    $default  reduce using rule 133 (postfix_expression)


State 87

  125 primary_expression: constant .

    $default  reduce using rule 125 (primary_expression)


State 88

  134 postfix_expression: postfix_expression . INC
  135                   | postfix_expression . DEC
  136                   | postfix_expression . '.' IDENTIFIER
  137                   | postfix_expression . '[' basic_expression ']'
  138                   | postfix_expression . '(' ')'
  139                   | postfix_expression . '(' argument_expression_list ')'
  142 unary_expression: postfix_expression .

    INC  shift, and go to state 136
    DEC  shift, and go to state 137
    '('  shift, and go to state 138
    '['  shift, and go to state 139
    '.'  shift, and go to state 140

    $default  reduce using rule 142 (unary_expression)


State 89

  149 multiplicative_expression: unary_expression .

    $default  reduce using rule 149 (multiplicative_expression)


State 90

  150 multiplicative_expression: multiplicative_expression . '*' unary_expression
  151                          | multiplicative_expression . '/' unary_expression
  152                          | multiplicative_expression . '%' unary_expression
  153 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 141
    '/'  shift, and go to state 142
    '%'  shift, and go to state 143

    $default  reduce using rule 153 (additive_expression)


State 91

  154 additive_expression: additive_expression . '+' multiplicative_expression
  155                    | additive_expression . '-' multiplicative_expression
  156 shift_expression: additive_expression .

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145

    $default  reduce using rule 156 (shift_expression)


State 92

  157 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  158                 | shift_expression . SHIFT_RIGHT additive_expression
  159 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 146
    SHIFT_RIGHT  shift, and go to state 147

    $default  reduce using rule 159 (relational_expression)


State 93

  160 relational_expression: relational_expression . '<' shift_expression
  161                      | relational_expression . '>' shift_expression
  162                      | relational_expression . LE shift_expression
  163                      | relational_expression . GE shift_expression
  164 equality_expression: relational_expression .

    GE   shift, and go to state 148
    LE   shift, and go to state 149
    '<'  shift, and go to state 150
    '>'  shift, and go to state 151

    $default  reduce using rule 164 (equality_expression)


State 94

  165 equality_expression: equality_expression . EQ relational_expression
  166                    | equality_expression . NE relational_expression
  167 and_expression: equality_expression .

    EQ  shift, and go to state 152
    NE  shift, and go to state 153

    $default  reduce using rule 167 (and_expression)


State 95

  168 and_expression: and_expression . '&' equality_expression
  169 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 154

    $default  reduce using rule 169 (exclusive_or_expression)


State 96

  170 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  171 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 155

    $default  reduce using rule 171 (inclusive_or_expression)


State 97

  172 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  173 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 156

    $default  reduce using rule 173 (logical_and_expression)


State 98

  174 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  175 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 157

    $default  reduce using rule 175 (logical_or_expression)


State 99

  176 logical_or_expression: logical_or_expression . OR logical_and_expression
  177 basic_expression: logical_or_expression .

    OR  shift, and go to state 158

    $default  reduce using rule 177 (basic_expression)


State 100

  178 expression: basic_expression .

    $default  reduce using rule 178 (expression)


State 101

  180 expression_list: expression .

    $default  reduce using rule 180 (expression_list)


State 102

  104 variable_declaration: VAR var_list '=' expression_list . ';'
  181 expression_list: expression_list . ',' expression

    ','  shift, and go to state 159
    ';'  shift, and go to state 160


State 103

  103 variable_declaration: VAR var_list type_name ';' .

    $default  reduce using rule 103 (variable_declaration)


State 104

  105 variable_declaration: VAR var_list type_name '=' . expression_list ';'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '{'             shift, and go to state 75
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 101
    expression_list                 go to state 161


State 105

   61 parameter_list: IDENTIFIER . type_name

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '['         shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 162
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 106

   63 function_declaration: FUNC IDENTIFIER '(' ')' . code_block
   64                     | FUNC IDENTIFIER '(' ')' . return_type_list code_block

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '{'         shift, and go to state 163
    '('         shift, and go to state 164
    '['         shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 166
    code_block        go to state 167


State 107

   62 parameter_list: parameter_list . ',' IDENTIFIER type_name
   65 function_declaration: FUNC IDENTIFIER '(' parameter_list . ')' code_block
   66                     | FUNC IDENTIFIER '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 168
    ')'  shift, and go to state 169


State 108

   71 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER . '(' ')' code_block
   72                   | FUNC IDENTIFIER '.' IDENTIFIER . '(' ')' return_type_list code_block
   73                   | FUNC IDENTIFIER '.' IDENTIFIER . '(' parameter_list ')' code_block
   74                   | FUNC IDENTIFIER '.' IDENTIFIER . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 170


State 109

   48 type_declaration: TYPE IDENTIFIER STRUCT '{' . field_declarations '}'

    IDENTIFIER  shift, and go to state 171

    field_declarations  go to state 172


State 110

    8 type_name: INTERFACE '{' . '}'
   49 type_declaration: TYPE IDENTIFIER INTERFACE '{' . interface_function_declarations '}'

    IDENTIFIER  shift, and go to state 173
    '}'         shift, and go to state 116

    interface_function_declarations  go to state 174
    interface_function_declaration   go to state 175


State 111

   50 type_declaration: TYPE IDENTIFIER type_name ';' .

    $default  reduce using rule 50 (type_declaration)


State 112

   39 import_statement: IMPORT qualified_name '.' '*' . ';'

    ';'  shift, and go to state 176


State 113

   21 function_type: FUNC '(' ')' .
   22              | FUNC '(' ')' . return_type_list

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '('         shift, and go to state 164
    '['         shift, and go to state 46

    $default  reduce using rule 21 (function_type)

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 177


State 114

    3 type_name_list: type_name_list . ',' type_name
   23 function_type: FUNC '(' type_name_list . ')'
   24              | FUNC '(' type_name_list . ')' return_type_list

    ','  shift, and go to state 178
    ')'  shift, and go to state 179


State 115

    2 type_name_list: type_name .

    $default  reduce using rule 2 (type_name_list)


State 116

    8 type_name: INTERFACE '{' '}' .

    $default  reduce using rule 8 (type_name)


State 117

   25 array_type: '[' INTEGER ']' . type_name

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '['         shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 180
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 118

  124 primary_expression: qualified_name .

    $default  reduce using rule 124 (primary_expression)


State 119

  143 unary_expression: INC unary_expression .

    $default  reduce using rule 143 (unary_expression)


State 120

  144 unary_expression: DEC unary_expression .

    $default  reduce using rule 144 (unary_expression)


State 121

   67 anonymous_function_declaration: FUNC '(' . ')' code_block
   68                               | FUNC '(' . ')' return_type_list code_block
   69                               | FUNC '(' . parameter_list ')' code_block
   70                               | FUNC '(' . parameter_list ')' return_type_list code_block

    IDENTIFIER  shift, and go to state 105
    ')'         shift, and go to state 181

    parameter_list  go to state 182


State 122

  122 array_initial_list: INTEGER . ':' expression
  127 constant: INTEGER .

    ':'  shift, and go to state 183

    $default  reduce using rule 127 (constant)


State 123

    1 qualified_name: IDENTIFIER .
  120 field_initial_list: IDENTIFIER . ':' expression

    ':'  shift, and go to state 184

    $default  reduce using rule 1 (qualified_name)


State 124

  108 initializer_expression: '{' '}' .

    $default  reduce using rule 108 (initializer_expression)


State 125

  110 initializer_expression: '{' field_initial_list . '}'
  121 field_initial_list: field_initial_list . ',' IDENTIFIER ':' expression

    ','  shift, and go to state 185
    '}'  shift, and go to state 186


State 126

  111 initializer_expression: '{' array_initial_list . '}'
  123 array_initial_list: array_initial_list . ',' INTEGER ':' expression

    ','  shift, and go to state 187
    '}'  shift, and go to state 188


State 127

  109 initializer_expression: '{' expression_list . '}'
  181 expression_list: expression_list . ',' expression

    ','  shift, and go to state 159
    '}'  shift, and go to state 189


State 128

  126 primary_expression: '(' basic_expression . ')'

    ')'  shift, and go to state 190


State 129

  145 unary_expression: '+' unary_expression .

    $default  reduce using rule 145 (unary_expression)


State 130

  146 unary_expression: '-' unary_expression .

    $default  reduce using rule 146 (unary_expression)


State 131

  147 unary_expression: '~' unary_expression .

    $default  reduce using rule 147 (unary_expression)


State 132

  148 unary_expression: '!' unary_expression .

    $default  reduce using rule 148 (unary_expression)


State 133

  112 initializer_expression: qualified_name '{' . '}'
  113                       | qualified_name '{' . expression_list '}'
  114                       | qualified_name '{' . field_initial_list '}'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 123
    '{'             shift, and go to state 75
    '}'             shift, and go to state 191
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    field_initial_list              go to state 192
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 101
    expression_list                 go to state 193


State 134

  119 initializer_expression: primitive_type '(' . basic_expression ')'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 194


State 135

  115 initializer_expression: array_type '{' . '}'
  116                       | array_type '{' . expression_list '}'
  117                       | array_type '{' . array_initial_list '}'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 122
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '{'             shift, and go to state 75
    '}'             shift, and go to state 195
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    array_initial_list              go to state 196
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 101
    expression_list                 go to state 197


State 136

  134 postfix_expression: postfix_expression INC .

    $default  reduce using rule 134 (postfix_expression)


State 137

  135 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 135 (postfix_expression)


State 138

  138 postfix_expression: postfix_expression '(' . ')'
  139                   | postfix_expression '(' . argument_expression_list ')'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    ')'             shift, and go to state 198
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    argument_expression_list   go to state 199
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 200


State 139

  137 postfix_expression: postfix_expression '[' . basic_expression ']'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 201


State 140

  136 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 202


State 141

  150 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name      go to state 118
    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 203


State 142

  151 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name      go to state 118
    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 204


State 143

  152 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name      go to state 118
    primary_expression  go to state 86
    constant            go to state 87
    postfix_expression  go to state 88
    unary_expression    go to state 205


State 144

  154 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 206


State 145

  155 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 207


State 146

  157 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 208


State 147

  158 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 209


State 148

  163 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 210


State 149

  162 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 211


State 150

  160 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 212


State 151

  161 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 213


State 152

  165 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 214


State 153

  166 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 215


State 154

  168 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 216


State 155

  170 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 217


State 156

  172 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 218


State 157

  174 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 219


State 158

  176 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 220


State 159

  181 expression_list: expression_list ',' . expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '{'             shift, and go to state 75
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 221


State 160

  104 variable_declaration: VAR var_list '=' expression_list ';' .

    $default  reduce using rule 104 (variable_declaration)


State 161

  105 variable_declaration: VAR var_list type_name '=' expression_list . ';'
  181 expression_list: expression_list . ',' expression

    ','  shift, and go to state 159
    ';'  shift, and go to state 222


State 162

   61 parameter_list: IDENTIFIER type_name .

    $default  reduce using rule 61 (parameter_list)


State 163

   75 code_block: '{' . local_variable_declaration_statements '}'
   76           | '{' . '}'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    IF              shift, and go to state 223
    WHILE           shift, and go to state 224
    DO              shift, and go to state 225
    FOR             shift, and go to state 226
    SWITCH          shift, and go to state 227
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 228
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '}'             shift, and go to state 229
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                         go to state 230
    local_variable_declaration_statements  go to state 231
    local_variable_declaration_statement   go to state 232
    statement                              go to state 233
    selection_statement                    go to state 234
    if_statement                           go to state 235
    switch_statement                       go to state 236
    iteration_statemnet                    go to state 237
    jump_statement                         go to state 238
    variable_declaration                   go to state 239
    primary_expression                     go to state 86
    constant                               go to state 87
    postfix_expression                     go to state 88
    unary_expression                       go to state 89
    multiplicative_expression              go to state 90
    additive_expression                    go to state 91
    shift_expression                       go to state 92
    relational_expression                  go to state 93
    equality_expression                    go to state 94
    and_expression                         go to state 95
    exclusive_or_expression                go to state 96
    inclusive_or_expression                go to state 97
    logical_and_expression                 go to state 98
    logical_or_expression                  go to state 99
    basic_expression                       go to state 240
    assignment_expression                  go to state 241
    assignment_variable_list               go to state 242
    assignment_variable                    go to state 243
    expression_statement                   go to state 244


State 164

   27 return_type_list: '(' . type_name_list ')'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '['         shift, and go to state 46

    qualified_name  go to state 48
    type_name_list  go to state 245
    type_name       go to state 115
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 165

   26 return_type_list: type_name .

    $default  reduce using rule 26 (return_type_list)


State 166

   64 function_declaration: FUNC IDENTIFIER '(' ')' return_type_list . code_block

    '{'  shift, and go to state 163

    code_block  go to state 246


State 167

   63 function_declaration: FUNC IDENTIFIER '(' ')' code_block .

    $default  reduce using rule 63 (function_declaration)


State 168

   62 parameter_list: parameter_list ',' . IDENTIFIER type_name

    IDENTIFIER  shift, and go to state 247


State 169

   65 function_declaration: FUNC IDENTIFIER '(' parameter_list ')' . code_block
   66                     | FUNC IDENTIFIER '(' parameter_list ')' . return_type_list code_block

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '{'         shift, and go to state 163
    '('         shift, and go to state 164
    '['         shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 248
    code_block        go to state 249


State 170

   71 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' . ')' code_block
   72                   | FUNC IDENTIFIER '.' IDENTIFIER '(' . ')' return_type_list code_block
   73                   | FUNC IDENTIFIER '.' IDENTIFIER '(' . parameter_list ')' code_block
   74                   | FUNC IDENTIFIER '.' IDENTIFIER '(' . parameter_list ')' return_type_list code_block

    IDENTIFIER  shift, and go to state 105
    ')'         shift, and go to state 250

    parameter_list  go to state 251


State 171

   51 field_declarations: IDENTIFIER . type_name ';'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '['         shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 252
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 172

   48 type_declaration: TYPE IDENTIFIER STRUCT '{' field_declarations . '}'
   52 field_declarations: field_declarations . IDENTIFIER type_name ';'

    IDENTIFIER  shift, and go to state 253
    '}'         shift, and go to state 254


State 173

   55 interface_function_declaration: IDENTIFIER . '(' ')' ';'
   56                               | IDENTIFIER . '(' ')' return_type_list ';'
   57                               | IDENTIFIER . '(' type_name_list ')' ';'
   58                               | IDENTIFIER . '(' type_name_list ')' return_type_list ';'
   59                               | IDENTIFIER . '(' parameter_list ')' ';'
   60                               | IDENTIFIER . '(' parameter_list ')' return_type_list ';'

    '('  shift, and go to state 255


State 174

   49 type_declaration: TYPE IDENTIFIER INTERFACE '{' interface_function_declarations . '}'
   54 interface_function_declarations: interface_function_declarations . interface_function_declaration

    IDENTIFIER  shift, and go to state 173
    '}'         shift, and go to state 256

    interface_function_declaration  go to state 257


State 175

   53 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 53 (interface_function_declarations)


State 176

   39 import_statement: IMPORT qualified_name '.' '*' ';' .

    $default  reduce using rule 39 (import_statement)


State 177

   22 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 22 (function_type)


State 178

    3 type_name_list: type_name_list ',' . type_name

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '['         shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 258
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 179

   23 function_type: FUNC '(' type_name_list ')' .
   24              | FUNC '(' type_name_list ')' . return_type_list

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '('         shift, and go to state 164
    '['         shift, and go to state 46

    $default  reduce using rule 23 (function_type)

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 259


State 180

   25 array_type: '[' INTEGER ']' type_name .

    $default  reduce using rule 25 (array_type)


State 181

   67 anonymous_function_declaration: FUNC '(' ')' . code_block
   68                               | FUNC '(' ')' . return_type_list code_block

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '{'         shift, and go to state 163
    '('         shift, and go to state 164
    '['         shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 260
    code_block        go to state 261


State 182

   62 parameter_list: parameter_list . ',' IDENTIFIER type_name
   69 anonymous_function_declaration: FUNC '(' parameter_list . ')' code_block
   70                               | FUNC '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 168
    ')'  shift, and go to state 262


State 183

  122 array_initial_list: INTEGER ':' . expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '{'             shift, and go to state 75
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 263


State 184

  120 field_initial_list: IDENTIFIER ':' . expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '{'             shift, and go to state 75
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 264


State 185

  121 field_initial_list: field_initial_list ',' . IDENTIFIER ':' expression

    IDENTIFIER  shift, and go to state 265


State 186

  110 initializer_expression: '{' field_initial_list '}' .

    $default  reduce using rule 110 (initializer_expression)


State 187

  123 array_initial_list: array_initial_list ',' . INTEGER ':' expression

    INTEGER  shift, and go to state 266


State 188

  111 initializer_expression: '{' array_initial_list '}' .

    $default  reduce using rule 111 (initializer_expression)


State 189

  109 initializer_expression: '{' expression_list '}' .

    $default  reduce using rule 109 (initializer_expression)


State 190

  126 primary_expression: '(' basic_expression ')' .

    $default  reduce using rule 126 (primary_expression)


State 191

  112 initializer_expression: qualified_name '{' '}' .

    $default  reduce using rule 112 (initializer_expression)


State 192

  114 initializer_expression: qualified_name '{' field_initial_list . '}'
  121 field_initial_list: field_initial_list . ',' IDENTIFIER ':' expression

    ','  shift, and go to state 185
    '}'  shift, and go to state 267


State 193

  113 initializer_expression: qualified_name '{' expression_list . '}'
  181 expression_list: expression_list . ',' expression

    ','  shift, and go to state 159
    '}'  shift, and go to state 268


State 194

  119 initializer_expression: primitive_type '(' basic_expression . ')'

    ')'  shift, and go to state 269


State 195

  115 initializer_expression: array_type '{' '}' .

    $default  reduce using rule 115 (initializer_expression)


State 196

  117 initializer_expression: array_type '{' array_initial_list . '}'
  123 array_initial_list: array_initial_list . ',' INTEGER ':' expression

    ','  shift, and go to state 187
    '}'  shift, and go to state 270


State 197

  116 initializer_expression: array_type '{' expression_list . '}'
  181 expression_list: expression_list . ',' expression

    ','  shift, and go to state 159
    '}'  shift, and go to state 271


State 198

  138 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 138 (postfix_expression)


State 199

  139 postfix_expression: postfix_expression '(' argument_expression_list . ')'
  141 argument_expression_list: argument_expression_list . ',' basic_expression

    ','  shift, and go to state 272
    ')'  shift, and go to state 273


State 200

  140 argument_expression_list: basic_expression .

    $default  reduce using rule 140 (argument_expression_list)


State 201

  137 postfix_expression: postfix_expression '[' basic_expression . ']'

    ']'  shift, and go to state 274


State 202

  136 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 136 (postfix_expression)


State 203

  150 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 150 (multiplicative_expression)


State 204

  151 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 151 (multiplicative_expression)


State 205

  152 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 152 (multiplicative_expression)


State 206

  150 multiplicative_expression: multiplicative_expression . '*' unary_expression
  151                          | multiplicative_expression . '/' unary_expression
  152                          | multiplicative_expression . '%' unary_expression
  154 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 141
    '/'  shift, and go to state 142
    '%'  shift, and go to state 143

    $default  reduce using rule 154 (additive_expression)


State 207

  150 multiplicative_expression: multiplicative_expression . '*' unary_expression
  151                          | multiplicative_expression . '/' unary_expression
  152                          | multiplicative_expression . '%' unary_expression
  155 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 141
    '/'  shift, and go to state 142
    '%'  shift, and go to state 143

    $default  reduce using rule 155 (additive_expression)


State 208

  154 additive_expression: additive_expression . '+' multiplicative_expression
  155                    | additive_expression . '-' multiplicative_expression
  157 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145

    $default  reduce using rule 157 (shift_expression)


State 209

  154 additive_expression: additive_expression . '+' multiplicative_expression
  155                    | additive_expression . '-' multiplicative_expression
  158 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 144
    '-'  shift, and go to state 145

    $default  reduce using rule 158 (shift_expression)


State 210

  157 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  158                 | shift_expression . SHIFT_RIGHT additive_expression
  163 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 146
    SHIFT_RIGHT  shift, and go to state 147

    $default  reduce using rule 163 (relational_expression)


State 211

  157 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  158                 | shift_expression . SHIFT_RIGHT additive_expression
  162 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 146
    SHIFT_RIGHT  shift, and go to state 147

    $default  reduce using rule 162 (relational_expression)


State 212

  157 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  158                 | shift_expression . SHIFT_RIGHT additive_expression
  160 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 146
    SHIFT_RIGHT  shift, and go to state 147

    $default  reduce using rule 160 (relational_expression)


State 213

  157 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  158                 | shift_expression . SHIFT_RIGHT additive_expression
  161 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 146
    SHIFT_RIGHT  shift, and go to state 147

    $default  reduce using rule 161 (relational_expression)


State 214

  160 relational_expression: relational_expression . '<' shift_expression
  161                      | relational_expression . '>' shift_expression
  162                      | relational_expression . LE shift_expression
  163                      | relational_expression . GE shift_expression
  165 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 148
    LE   shift, and go to state 149
    '<'  shift, and go to state 150
    '>'  shift, and go to state 151

    $default  reduce using rule 165 (equality_expression)


State 215

  160 relational_expression: relational_expression . '<' shift_expression
  161                      | relational_expression . '>' shift_expression
  162                      | relational_expression . LE shift_expression
  163                      | relational_expression . GE shift_expression
  166 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 148
    LE   shift, and go to state 149
    '<'  shift, and go to state 150
    '>'  shift, and go to state 151

    $default  reduce using rule 166 (equality_expression)


State 216

  165 equality_expression: equality_expression . EQ relational_expression
  166                    | equality_expression . NE relational_expression
  168 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 152
    NE  shift, and go to state 153

    $default  reduce using rule 168 (and_expression)


State 217

  168 and_expression: and_expression . '&' equality_expression
  170 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 154

    $default  reduce using rule 170 (exclusive_or_expression)


State 218

  170 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  172 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 155

    $default  reduce using rule 172 (inclusive_or_expression)


State 219

  172 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  174 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 156

    $default  reduce using rule 174 (logical_and_expression)


State 220

  174 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  176 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 157

    $default  reduce using rule 176 (logical_or_expression)


State 221

  181 expression_list: expression_list ',' expression .

    $default  reduce using rule 181 (expression_list)


State 222

  105 variable_declaration: VAR var_list type_name '=' expression_list ';' .

    $default  reduce using rule 105 (variable_declaration)


State 223

   87 if_statement: IF . '(' basic_expression ')' code_block
   88             | IF . '(' basic_expression ')' code_block ELSE else_statemnet

    '('  shift, and go to state 275


State 224

   92 iteration_statemnet: WHILE . '(' basic_expression ')' code_block

    '('  shift, and go to state 276


State 225

   93 iteration_statemnet: DO . code_block WHILE '(' basic_expression ')' ';'

    '{'  shift, and go to state 163

    code_block  go to state 277


State 226

   94 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' code_block

    '('  shift, and go to state 278


State 227

   91 switch_statement: SWITCH . '(' basic_expression ')' code_block

    '('  shift, and go to state 279


State 228

  101 jump_statement: RETURN . ';'
  102               | RETURN . expression_list ';'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '{'             shift, and go to state 75
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    ';'             shift, and go to state 280
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 101
    expression_list                 go to state 281


State 229

   76 code_block: '{' '}' .

    $default  reduce using rule 76 (code_block)


State 230

  124 primary_expression: qualified_name .
  186 assignment_variable: qualified_name .

    ADD_ASSIGN    reduce using rule 186 (assignment_variable)
    SUB_ASSIGN    reduce using rule 186 (assignment_variable)
    MUL_ASSIGN    reduce using rule 186 (assignment_variable)
    DIV_ASSIGN    reduce using rule 186 (assignment_variable)
    MOD_ASSIGN    reduce using rule 186 (assignment_variable)
    AND_ASSIGN    reduce using rule 186 (assignment_variable)
    OR_ASSIGN     reduce using rule 186 (assignment_variable)
    XOR_ASSIGN    reduce using rule 186 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 186 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 186 (assignment_variable)
    ','           reduce using rule 186 (assignment_variable)
    '='           reduce using rule 186 (assignment_variable)
    $default      reduce using rule 124 (primary_expression)


State 231

   75 code_block: '{' local_variable_declaration_statements . '}'
   78 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    IF              shift, and go to state 223
    WHILE           shift, and go to state 224
    DO              shift, and go to state 225
    FOR             shift, and go to state 226
    SWITCH          shift, and go to state 227
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 228
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '}'             shift, and go to state 282
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                        go to state 230
    local_variable_declaration_statement  go to state 283
    statement                             go to state 233
    selection_statement                   go to state 234
    if_statement                          go to state 235
    switch_statement                      go to state 236
    iteration_statemnet                   go to state 237
    jump_statement                        go to state 238
    variable_declaration                  go to state 239
    primary_expression                    go to state 86
    constant                              go to state 87
    postfix_expression                    go to state 88
    unary_expression                      go to state 89
    multiplicative_expression             go to state 90
    additive_expression                   go to state 91
    shift_expression                      go to state 92
    relational_expression                 go to state 93
    equality_expression                   go to state 94
    and_expression                        go to state 95
    exclusive_or_expression               go to state 96
    inclusive_or_expression               go to state 97
    logical_and_expression                go to state 98
    logical_or_expression                 go to state 99
    basic_expression                      go to state 240
    assignment_expression                 go to state 241
    assignment_variable_list              go to state 242
    assignment_variable                   go to state 243
    expression_statement                  go to state 244


State 232

   77 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 77 (local_variable_declaration_statements)


State 233

   80 local_variable_declaration_statement: statement .

    $default  reduce using rule 80 (local_variable_declaration_statement)


State 234

   82 statement: selection_statement .

    $default  reduce using rule 82 (statement)


State 235

   85 selection_statement: if_statement .

    $default  reduce using rule 85 (selection_statement)


State 236

   86 selection_statement: switch_statement .

    $default  reduce using rule 86 (selection_statement)


State 237

   83 statement: iteration_statemnet .

    $default  reduce using rule 83 (statement)


State 238

   84 statement: jump_statement .

    $default  reduce using rule 84 (statement)


State 239

   79 local_variable_declaration_statement: variable_declaration .

    $default  reduce using rule 79 (local_variable_declaration_statement)


State 240

  197 expression_statement: basic_expression .

    $default  reduce using rule 197 (expression_statement)


State 241

  198 expression_statement: assignment_expression .

    $default  reduce using rule 198 (expression_statement)


State 242

  182 assignment_expression: assignment_variable_list . '=' expression_list
  185 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 284
    '='  shift, and go to state 285


State 243

  183 assignment_expression: assignment_variable . compound_assignment_operator basic_expression
  184 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 286
    SUB_ASSIGN    shift, and go to state 287
    MUL_ASSIGN    shift, and go to state 288
    DIV_ASSIGN    shift, and go to state 289
    MOD_ASSIGN    shift, and go to state 290
    AND_ASSIGN    shift, and go to state 291
    OR_ASSIGN     shift, and go to state 292
    XOR_ASSIGN    shift, and go to state 293
    RIGHT_ASSIGN  shift, and go to state 294
    LEFT_ASSIGN   shift, and go to state 295

    $default  reduce using rule 184 (assignment_variable_list)

    compound_assignment_operator  go to state 296


State 244

   81 statement: expression_statement . ';'

    ';'  shift, and go to state 297


State 245

    3 type_name_list: type_name_list . ',' type_name
   27 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 178
    ')'  shift, and go to state 298


State 246

   64 function_declaration: FUNC IDENTIFIER '(' ')' return_type_list code_block .

    $default  reduce using rule 64 (function_declaration)


State 247

   62 parameter_list: parameter_list ',' IDENTIFIER . type_name

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '['         shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 299
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 248

   66 function_declaration: FUNC IDENTIFIER '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 163

    code_block  go to state 300


State 249

   65 function_declaration: FUNC IDENTIFIER '(' parameter_list ')' code_block .

    $default  reduce using rule 65 (function_declaration)


State 250

   71 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' ')' . code_block
   72                   | FUNC IDENTIFIER '.' IDENTIFIER '(' ')' . return_type_list code_block

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '{'         shift, and go to state 163
    '('         shift, and go to state 164
    '['         shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 301
    code_block        go to state 302


State 251

   62 parameter_list: parameter_list . ',' IDENTIFIER type_name
   73 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' parameter_list . ')' code_block
   74                   | FUNC IDENTIFIER '.' IDENTIFIER '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 168
    ')'  shift, and go to state 303


State 252

   51 field_declarations: IDENTIFIER type_name . ';'

    ';'  shift, and go to state 304


State 253

   52 field_declarations: field_declarations IDENTIFIER . type_name ';'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '['         shift, and go to state 46

    qualified_name  go to state 48
    type_name       go to state 305
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 254

   48 type_declaration: TYPE IDENTIFIER STRUCT '{' field_declarations '}' .

    $default  reduce using rule 48 (type_declaration)


State 255

   55 interface_function_declaration: IDENTIFIER '(' . ')' ';'
   56                               | IDENTIFIER '(' . ')' return_type_list ';'
   57                               | IDENTIFIER '(' . type_name_list ')' ';'
   58                               | IDENTIFIER '(' . type_name_list ')' return_type_list ';'
   59                               | IDENTIFIER '(' . parameter_list ')' ';'
   60                               | IDENTIFIER '(' . parameter_list ')' return_type_list ';'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 306
    ')'         shift, and go to state 307
    '['         shift, and go to state 46

    qualified_name  go to state 48
    type_name_list  go to state 308
    type_name       go to state 115
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52
    parameter_list  go to state 309


State 256

   49 type_declaration: TYPE IDENTIFIER INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 49 (type_declaration)


State 257

   54 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 54 (interface_function_declarations)


State 258

    3 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 3 (type_name_list)


State 259

   24 function_type: FUNC '(' type_name_list ')' return_type_list .

    $default  reduce using rule 24 (function_type)


State 260

   68 anonymous_function_declaration: FUNC '(' ')' return_type_list . code_block

    '{'  shift, and go to state 163

    code_block  go to state 310


State 261

   67 anonymous_function_declaration: FUNC '(' ')' code_block .

    $default  reduce using rule 67 (anonymous_function_declaration)


State 262

   69 anonymous_function_declaration: FUNC '(' parameter_list ')' . code_block
   70                               | FUNC '(' parameter_list ')' . return_type_list code_block

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '{'         shift, and go to state 163
    '('         shift, and go to state 164
    '['         shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 311
    code_block        go to state 312


State 263

  122 array_initial_list: INTEGER ':' expression .

    $default  reduce using rule 122 (array_initial_list)


State 264

  120 field_initial_list: IDENTIFIER ':' expression .

    $default  reduce using rule 120 (field_initial_list)


State 265

  121 field_initial_list: field_initial_list ',' IDENTIFIER . ':' expression

    ':'  shift, and go to state 313


State 266

  123 array_initial_list: array_initial_list ',' INTEGER . ':' expression

    ':'  shift, and go to state 314


State 267

  114 initializer_expression: qualified_name '{' field_initial_list '}' .

    $default  reduce using rule 114 (initializer_expression)


State 268

  113 initializer_expression: qualified_name '{' expression_list '}' .

    $default  reduce using rule 113 (initializer_expression)


State 269

  119 initializer_expression: primitive_type '(' basic_expression ')' .

    $default  reduce using rule 119 (initializer_expression)


State 270

  117 initializer_expression: array_type '{' array_initial_list '}' .

    $default  reduce using rule 117 (initializer_expression)


State 271

  116 initializer_expression: array_type '{' expression_list '}' .

    $default  reduce using rule 116 (initializer_expression)


State 272

  141 argument_expression_list: argument_expression_list ',' . basic_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 315


State 273

  139 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 139 (postfix_expression)


State 274

  137 postfix_expression: postfix_expression '[' basic_expression ']' .

    $default  reduce using rule 137 (postfix_expression)


State 275

   87 if_statement: IF '(' . basic_expression ')' code_block
   88             | IF '(' . basic_expression ')' code_block ELSE else_statemnet

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 316


State 276

   92 iteration_statemnet: WHILE '(' . basic_expression ')' code_block

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 317


State 277

   93 iteration_statemnet: DO code_block . WHILE '(' basic_expression ')' ';'

    WHILE  shift, and go to state 318


State 278

   94 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' code_block

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    VAR             shift, and go to state 1
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    ';'             shift, and go to state 319
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 230
    for_init                   go to state 320
    variable_declaration       go to state 321
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 240
    assignment_expression      go to state 241
    assignment_variable_list   go to state 242
    assignment_variable        go to state 243
    expression_statement       go to state 322


State 279

   91 switch_statement: SWITCH '(' . basic_expression ')' code_block

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 323


State 280

  101 jump_statement: RETURN ';' .

    $default  reduce using rule 101 (jump_statement)


State 281

  102 jump_statement: RETURN expression_list . ';'
  181 expression_list: expression_list . ',' expression

    ','  shift, and go to state 159
    ';'  shift, and go to state 324


State 282

   75 code_block: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 75 (code_block)


State 283

   78 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 78 (local_variable_declaration_statements)


State 284

  185 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    IDENTIFIER  shift, and go to state 19

    qualified_name       go to state 325
    assignment_variable  go to state 326


State 285

  182 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '{'             shift, and go to state 75
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 101
    expression_list                 go to state 327


State 286

  187 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 187 (compound_assignment_operator)


State 287

  188 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 188 (compound_assignment_operator)


State 288

  189 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 189 (compound_assignment_operator)


State 289

  190 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 190 (compound_assignment_operator)


State 290

  191 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 191 (compound_assignment_operator)


State 291

  192 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 192 (compound_assignment_operator)


State 292

  193 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 193 (compound_assignment_operator)


State 293

  194 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 194 (compound_assignment_operator)


State 294

  195 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 195 (compound_assignment_operator)


State 295

  196 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 196 (compound_assignment_operator)


State 296

  183 assignment_expression: assignment_variable compound_assignment_operator . basic_expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 328


State 297

   81 statement: expression_statement ';' .

    $default  reduce using rule 81 (statement)


State 298

   27 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 27 (return_type_list)


State 299

   62 parameter_list: parameter_list ',' IDENTIFIER type_name .

    $default  reduce using rule 62 (parameter_list)


State 300

   66 function_declaration: FUNC IDENTIFIER '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 66 (function_declaration)


State 301

   72 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' ')' return_type_list . code_block

    '{'  shift, and go to state 163

    code_block  go to state 329


State 302

   71 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' ')' code_block .

    $default  reduce using rule 71 (method_declaration)


State 303

   73 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' parameter_list ')' . code_block
   74                   | FUNC IDENTIFIER '.' IDENTIFIER '(' parameter_list ')' . return_type_list code_block

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '{'         shift, and go to state 163
    '('         shift, and go to state 164
    '['         shift, and go to state 46

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 330
    code_block        go to state 331


State 304

   51 field_declarations: IDENTIFIER type_name ';' .

    $default  reduce using rule 51 (field_declarations)


State 305

   52 field_declarations: field_declarations IDENTIFIER type_name . ';'

    ';'  shift, and go to state 332


State 306

    1 qualified_name: IDENTIFIER .
   61 parameter_list: IDENTIFIER . type_name

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '['         shift, and go to state 46

    $default  reduce using rule 1 (qualified_name)

    qualified_name  go to state 48
    type_name       go to state 162
    primitive_type  go to state 50
    function_type   go to state 51
    array_type      go to state 52


State 307

   55 interface_function_declaration: IDENTIFIER '(' ')' . ';'
   56                               | IDENTIFIER '(' ')' . return_type_list ';'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '('         shift, and go to state 164
    '['         shift, and go to state 46
    ';'         shift, and go to state 333

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 334


State 308

    3 type_name_list: type_name_list . ',' type_name
   57 interface_function_declaration: IDENTIFIER '(' type_name_list . ')' ';'
   58                               | IDENTIFIER '(' type_name_list . ')' return_type_list ';'

    ','  shift, and go to state 178
    ')'  shift, and go to state 335


State 309

   59 interface_function_declaration: IDENTIFIER '(' parameter_list . ')' ';'
   60                               | IDENTIFIER '(' parameter_list . ')' return_type_list ';'
   62 parameter_list: parameter_list . ',' IDENTIFIER type_name

    ','  shift, and go to state 168
    ')'  shift, and go to state 336


State 310

   68 anonymous_function_declaration: FUNC '(' ')' return_type_list code_block .

    $default  reduce using rule 68 (anonymous_function_declaration)


State 311

   70 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 163

    code_block  go to state 337


State 312

   69 anonymous_function_declaration: FUNC '(' parameter_list ')' code_block .

    $default  reduce using rule 69 (anonymous_function_declaration)


State 313

  121 field_initial_list: field_initial_list ',' IDENTIFIER ':' . expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '{'             shift, and go to state 75
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 338


State 314

  123 array_initial_list: array_initial_list ',' INTEGER ':' . expression

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    FUNC            shift, and go to state 68
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '{'             shift, and go to state 75
    '('             shift, and go to state 76
    '['             shift, and go to state 46
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name                  go to state 81
    primitive_type                  go to state 82
    array_type                      go to state 83
    anonymous_function_declaration  go to state 84
    initializer_expression          go to state 85
    primary_expression              go to state 86
    constant                        go to state 87
    postfix_expression              go to state 88
    unary_expression                go to state 89
    multiplicative_expression       go to state 90
    additive_expression             go to state 91
    shift_expression                go to state 92
    relational_expression           go to state 93
    equality_expression             go to state 94
    and_expression                  go to state 95
    exclusive_or_expression         go to state 96
    inclusive_or_expression         go to state 97
    logical_and_expression          go to state 98
    logical_or_expression           go to state 99
    basic_expression                go to state 100
    expression                      go to state 339


State 315

  141 argument_expression_list: argument_expression_list ',' basic_expression .

    $default  reduce using rule 141 (argument_expression_list)


State 316

   87 if_statement: IF '(' basic_expression . ')' code_block
   88             | IF '(' basic_expression . ')' code_block ELSE else_statemnet

    ')'  shift, and go to state 340


State 317

   92 iteration_statemnet: WHILE '(' basic_expression . ')' code_block

    ')'  shift, and go to state 341


State 318

   93 iteration_statemnet: DO code_block WHILE . '(' basic_expression ')' ';'

    '('  shift, and go to state 342


State 319

   97 for_init: ';' .

    $default  reduce using rule 97 (for_init)


State 320

   94 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' code_block

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    ';'             shift, and go to state 343
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    for_expr                   go to state 344
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 345


State 321

   96 for_init: variable_declaration .

    $default  reduce using rule 96 (for_init)


State 322

   95 for_init: expression_statement . ';'

    ';'  shift, and go to state 346


State 323

   91 switch_statement: SWITCH '(' basic_expression . ')' code_block

    ')'  shift, and go to state 347


State 324

  102 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 102 (jump_statement)


State 325

  186 assignment_variable: qualified_name .

    $default  reduce using rule 186 (assignment_variable)


State 326

  185 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 185 (assignment_variable_list)


State 327

  181 expression_list: expression_list . ',' expression
  182 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 159

    $default  reduce using rule 182 (assignment_expression)


State 328

  183 assignment_expression: assignment_variable compound_assignment_operator basic_expression .

    $default  reduce using rule 183 (assignment_expression)


State 329

   72 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' ')' return_type_list code_block .

    $default  reduce using rule 72 (method_declaration)


State 330

   74 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 163

    code_block  go to state 348


State 331

   73 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' parameter_list ')' code_block .

    $default  reduce using rule 73 (method_declaration)


State 332

   52 field_declarations: field_declarations IDENTIFIER type_name ';' .

    $default  reduce using rule 52 (field_declarations)


State 333

   55 interface_function_declaration: IDENTIFIER '(' ')' ';' .

    $default  reduce using rule 55 (interface_function_declaration)


State 334

   56 interface_function_declaration: IDENTIFIER '(' ')' return_type_list . ';'

    ';'  shift, and go to state 349


State 335

   57 interface_function_declaration: IDENTIFIER '(' type_name_list ')' . ';'
   58                               | IDENTIFIER '(' type_name_list ')' . return_type_list ';'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '('         shift, and go to state 164
    '['         shift, and go to state 46
    ';'         shift, and go to state 350

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 351


State 336

   59 interface_function_declaration: IDENTIFIER '(' parameter_list ')' . ';'
   60                               | IDENTIFIER '(' parameter_list ')' . return_type_list ';'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 19
    '('         shift, and go to state 164
    '['         shift, and go to state 46
    ';'         shift, and go to state 352

    qualified_name    go to state 48
    type_name         go to state 165
    primitive_type    go to state 50
    function_type     go to state 51
    array_type        go to state 52
    return_type_list  go to state 353


State 337

   70 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 70 (anonymous_function_declaration)


State 338

  121 field_initial_list: field_initial_list ',' IDENTIFIER ':' expression .

    $default  reduce using rule 121 (field_initial_list)


State 339

  123 array_initial_list: array_initial_list ',' INTEGER ':' expression .

    $default  reduce using rule 123 (array_initial_list)


State 340

   87 if_statement: IF '(' basic_expression ')' . code_block
   88             | IF '(' basic_expression ')' . code_block ELSE else_statemnet

    '{'  shift, and go to state 163

    code_block  go to state 354


State 341

   92 iteration_statemnet: WHILE '(' basic_expression ')' . code_block

    '{'  shift, and go to state 163

    code_block  go to state 355


State 342

   93 iteration_statemnet: DO code_block WHILE '(' . basic_expression ')' ';'

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 118
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 356


State 343

   99 for_expr: ';' .

    $default  reduce using rule 99 (for_expr)


State 344

   94 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' code_block

    INC             shift, and go to state 66
    DEC             shift, and go to state 67
    TOKEN_NIL       shift, and go to state 69
    TOKEN_TRUE      shift, and go to state 70
    TOKEN_FALSE     shift, and go to state 71
    INTEGER         shift, and go to state 72
    FLOAT           shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    IDENTIFIER      shift, and go to state 19
    '('             shift, and go to state 76
    '+'             shift, and go to state 77
    '-'             shift, and go to state 78
    '~'             shift, and go to state 79
    '!'             shift, and go to state 80

    qualified_name             go to state 230
    for_incr                   go to state 357
    primary_expression         go to state 86
    constant                   go to state 87
    postfix_expression         go to state 88
    unary_expression           go to state 89
    multiplicative_expression  go to state 90
    additive_expression        go to state 91
    shift_expression           go to state 92
    relational_expression      go to state 93
    equality_expression        go to state 94
    and_expression             go to state 95
    exclusive_or_expression    go to state 96
    inclusive_or_expression    go to state 97
    logical_and_expression     go to state 98
    logical_or_expression      go to state 99
    basic_expression           go to state 240
    assignment_expression      go to state 241
    assignment_variable_list   go to state 242
    assignment_variable        go to state 243
    expression_statement       go to state 358


State 345

   98 for_expr: basic_expression . ';'

    ';'  shift, and go to state 359


State 346

   95 for_init: expression_statement ';' .

    $default  reduce using rule 95 (for_init)


State 347

   91 switch_statement: SWITCH '(' basic_expression ')' . code_block

    '{'  shift, and go to state 163

    code_block  go to state 360


State 348

   74 method_declaration: FUNC IDENTIFIER '.' IDENTIFIER '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 74 (method_declaration)


State 349

   56 interface_function_declaration: IDENTIFIER '(' ')' return_type_list ';' .

    $default  reduce using rule 56 (interface_function_declaration)


State 350

   57 interface_function_declaration: IDENTIFIER '(' type_name_list ')' ';' .

    $default  reduce using rule 57 (interface_function_declaration)


State 351

   58 interface_function_declaration: IDENTIFIER '(' type_name_list ')' return_type_list . ';'

    ';'  shift, and go to state 361


State 352

   59 interface_function_declaration: IDENTIFIER '(' parameter_list ')' ';' .

    $default  reduce using rule 59 (interface_function_declaration)


State 353

   60 interface_function_declaration: IDENTIFIER '(' parameter_list ')' return_type_list . ';'

    ';'  shift, and go to state 362


State 354

   87 if_statement: IF '(' basic_expression ')' code_block .
   88             | IF '(' basic_expression ')' code_block . ELSE else_statemnet

    ELSE  shift, and go to state 363

    $default  reduce using rule 87 (if_statement)


State 355

   92 iteration_statemnet: WHILE '(' basic_expression ')' code_block .

    $default  reduce using rule 92 (iteration_statemnet)


State 356

   93 iteration_statemnet: DO code_block WHILE '(' basic_expression . ')' ';'

    ')'  shift, and go to state 364


State 357

   94 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' code_block

    ')'  shift, and go to state 365


State 358

  100 for_incr: expression_statement .

    $default  reduce using rule 100 (for_incr)


State 359

   98 for_expr: basic_expression ';' .

    $default  reduce using rule 98 (for_expr)


State 360

   91 switch_statement: SWITCH '(' basic_expression ')' code_block .

    $default  reduce using rule 91 (switch_statement)


State 361

   58 interface_function_declaration: IDENTIFIER '(' type_name_list ')' return_type_list ';' .

    $default  reduce using rule 58 (interface_function_declaration)


State 362

   60 interface_function_declaration: IDENTIFIER '(' parameter_list ')' return_type_list ';' .

    $default  reduce using rule 60 (interface_function_declaration)


State 363

   88 if_statement: IF '(' basic_expression ')' code_block ELSE . else_statemnet

    IF   shift, and go to state 223
    '{'  shift, and go to state 163

    code_block      go to state 366
    if_statement    go to state 367
    else_statemnet  go to state 368


State 364

   93 iteration_statemnet: DO code_block WHILE '(' basic_expression ')' . ';'

    ';'  shift, and go to state 369


State 365

   94 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . code_block

    '{'  shift, and go to state 163

    code_block  go to state 370


State 366

   90 else_statemnet: code_block .

    $default  reduce using rule 90 (else_statemnet)


State 367

   89 else_statemnet: if_statement .

    $default  reduce using rule 89 (else_statemnet)


State 368

   88 if_statement: IF '(' basic_expression ')' code_block ELSE else_statemnet .

    $default  reduce using rule 88 (if_statement)


State 369

   93 iteration_statemnet: DO code_block WHILE '(' basic_expression ')' ';' .

    $default  reduce using rule 93 (iteration_statemnet)


State 370

   94 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' code_block .

    $default  reduce using rule 94 (iteration_statemnet)
