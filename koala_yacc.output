Terminals unused in grammar

   ELLIPSIS
   NOT
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   HEX
   OCT
   OP
   IFX
   NO_CODE_BLOCK


Grammar

    0 $accept: program $end

    1 semicolons: ';'

    2 qualified_name: ID
    3               | qualified_name '.' ID

    4 type_name_list: type_name
    5               | type_name_list ',' type_name

    6 type_name: primitive_type
    7          | qualified_name
    8          | array_type

    9 primitive_type: UINT8
   10               | UINT16
   11               | UINT32
   12               | UINT64
   13               | INT8
   14               | INT16
   15               | INT32
   16               | INT64
   17               | FLOAT32
   18               | FLOAT64
   19               | BOOL
   20               | STRING
   21               | ANY_TYPE

   22 function_type: FUNC '(' ')'
   23              | FUNC '(' ')' return_type_list
   24              | FUNC '(' parameter_type_list ')'
   25              | FUNC '(' parameter_type_list ')' return_type_list

   26 array_type: '[' INTEGER ']' type_name

   27 field_name: ID

   28 program: package_statement import_statements declarations
   29        | package_statement import_statements
   30        | package_statement declarations
   31        | import_statements declarations
   32        | package_statement
   33        | import_statements
   34        | declarations

   35 package_statement: PACKAGE qualified_name semicolons

   36 import_statements: import_statement
   37                  | import_statements import_statement

   38 import_statement: IMPORT qualified_name semicolons
   39                 | IMPORT qualified_name '.' '*' semicolons

   40 declarations: type_declaration
   41             | declarations type_declaration
   42             | variable_declaration
   43             | declarations variable_declaration
   44             | function_declaration
   45             | declarations function_declaration
   46             | method_declaration
   47             | declarations method_declaration

   48 type_declaration: TYPE ID STRUCT '{' field_declarations '}'
   49                 | TYPE ID INTERFACE '{' interface_function_declarations '}'
   50                 | TYPE ID type_name semicolons
   51                 | TYPE ID function_type semicolons

   52 field_declarations: field_declaration
   53                   | field_declarations field_declaration

   54 field_declaration: ID type_name semicolons

   55 interface_function_declarations: interface_function_declaration
   56                                | interface_function_declarations interface_function_declaration

   57 interface_function_declaration: FUNC ID '(' ')' semicolons
   58                               | FUNC ID '(' ')' return_type_list semicolons
   59                               | FUNC ID '(' parameter_type_list ')' semicolons
   60                               | FUNC ID '(' parameter_type_list ')' return_type_list semicolons
   61                               | FUNC ID '(' parameter_list ')' semicolons
   62                               | FUNC ID '(' parameter_list ')' return_type_list semicolons

   63 return_type_list: type_name
   64                 | '(' type_name_list ')'

   65 parameter_type_list: type_name
   66                    | parameter_type_list ',' type_name

   67 parameter_list: ID type_name
   68               | parameter_list ',' ID type_name

   69 function_declaration: FUNC ID '(' ')' code_block
   70                     | FUNC ID '(' ')' return_type_list code_block
   71                     | FUNC ID '(' parameter_list ')' code_block
   72                     | FUNC ID '(' parameter_list ')' return_type_list code_block

   73 anonymous_function_declaration: FUNC '(' ')' code_block
   74                               | FUNC '(' ')' return_type_list code_block
   75                               | FUNC '(' parameter_list ')' code_block
   76                               | FUNC '(' parameter_list ')' return_type_list code_block

   77 method_declaration: FUNC method_name '(' ')' code_block
   78                   | FUNC method_name '(' ')' return_type_list code_block
   79                   | FUNC method_name '(' parameter_list ')' code_block
   80                   | FUNC method_name '(' parameter_list ')' return_type_list code_block

   81 method_name: ID '.' ID

   82 code_block: '{' local_variable_declaration_statements '}'
   83           | '{' '}'

   84 local_variable_declaration_statements: local_variable_declaration_statement
   85                                      | local_variable_declaration_statements local_variable_declaration_statement

   86 local_variable_declaration_statement: variable_declaration
   87                                     | statemnet

   88 statemnet: expression_statement ';'
   89          | selection_statement
   90          | iteration_statemnet
   91          | jump_statement

   92 selection_statement: if_statement
   93                    | switch_statement

   94 if_statement: IF '(' expression ')' code_block
   95             | IF '(' expression ')' code_block ELSE else_statemnet

   96 else_statemnet: if_statement
   97               | code_block

   98 switch_statement: SWITCH '(' expression ')' code_block

   99 iteration_statemnet: WHILE '(' expression ')' code_block
  100                    | DO code_block WHILE '(' expression ')' ';'
  101                    | FOR '(' for_init for_expr for_incr ')' code_block

  102 for_init: expression_statement ';'
  103         | variable_declaration
  104         | ';'

  105 for_expr: expression ';'
  106         | ';'

  107 for_incr: expression_statement

  108 jump_statement: RETURN ';'
  109               | RETURN expression_list ';'

  110 variable_declaration: VAR variable_list variable_type ';'
  111                     | VAR variable_list '=' expression_list ';'
  112                     | VAR variable_list variable_type '=' expression_list ';'

  113 variable_list: ID
  114              | variable_list ',' ID

  115 variable_type: type_name
  116              | function_type

  117 primary_expression: qualified_name
  118                   | just_not_name

  119 just_not_name: TOKEN_THIS
  120              | initializer_expression
  121              | complex_primary

  122 complex_primary: '(' expression ')'
  123                | complex_primary_no_parenthesis

  124 complex_primary_no_parenthesis: literal_name
  125                               | array_access
  126                               | field_access
  127                               | method_call

  128 literal_name: INTEGER
  129             | FLOAT
  130             | STRING_LITERAL
  131             | TOKEN_NULL
  132             | TOKEN_TRUE
  133             | TOKEN_FALSE

  134 array_complex_primary: '(' expression ')'
  135                      | array_access
  136                      | field_access
  137                      | method_call

  138 array_access: qualified_name '[' expression ']'
  139             | array_complex_primary '[' expression ']'

  140 field_access: just_not_name '.' ID

  141 method_call: method_access '(' argument_list ')'
  142            | method_access '(' ')'

  143 method_access: complex_primary_no_parenthesis
  144              | qualified_name

  145 initializer_expression: struct_initializer
  146                       | anonymous_function_declaration

  147 struct_initializer: '{' '}'
  148                   | '{' expression_list '}'
  149                   | '{' field_initializer_list '}'
  150                   | type_name '{' '}'
  151                   | type_name '{' expression_list '}'
  152                   | type_name '{' field_initializer_list '}'

  153 field_initializer_list: field_initializer
  154                       | field_initializer_list ',' field_initializer

  155 field_initializer: field_name ':' expression

  156 postfix_expression: primary_expression
  157                   | real_postfix_expression

  158 real_postfix_expression: postfix_expression INC
  159                        | postfix_expression DEC

  160 argument_list: expression_list

  161 unary_expression: postfix_expression
  162                 | INC unary_expression
  163                 | DEC unary_expression
  164                 | unary_operator unary_expression

  165 unary_operator: '+'
  166               | '-'
  167               | '~'
  168               | '!'

  169 multiplicative_expression: unary_expression
  170                          | multiplicative_expression '*' unary_expression
  171                          | multiplicative_expression '/' unary_expression
  172                          | multiplicative_expression '%' unary_expression

  173 additive_expression: multiplicative_expression
  174                    | additive_expression '+' multiplicative_expression
  175                    | additive_expression '-' multiplicative_expression

  176 shift_expression: additive_expression
  177                 | shift_expression SHIFT_LEFT additive_expression
  178                 | shift_expression SHIFT_RIGHT additive_expression

  179 relational_expression: shift_expression
  180                      | relational_expression '<' shift_expression
  181                      | relational_expression '>' shift_expression
  182                      | relational_expression LE shift_expression
  183                      | relational_expression GE shift_expression

  184 equality_expression: relational_expression
  185                    | equality_expression EQ relational_expression
  186                    | equality_expression NE relational_expression

  187 and_expression: equality_expression
  188               | and_expression '&' equality_expression

  189 exclusive_or_expression: and_expression
  190                        | exclusive_or_expression '^' and_expression

  191 inclusive_or_expression: exclusive_or_expression
  192                        | inclusive_or_expression '|' exclusive_or_expression

  193 logical_and_expression: inclusive_or_expression
  194                       | logical_and_expression AND inclusive_or_expression

  195 logical_or_expression: logical_and_expression
  196                      | logical_or_expression OR logical_and_expression

  197 expression: logical_or_expression

  198 expression_list: expression
  199                | expression_list ',' expression

  200 assignment_expression: assignment_variable_list '=' expression_list
  201                      | assignment_variable compound_assignment_operator expression

  202 assignment_variable_list: assignment_variable
  203                         | assignment_variable_list ',' assignment_variable

  204 assignment_variable: qualified_name
  205                    | array_access
  206                    | field_access

  207 compound_assignment_operator: ADD_ASSIGN
  208                             | SUB_ASSIGN
  209                             | MUL_ASSIGN
  210                             | DIV_ASSIGN
  211                             | MOD_ASSIGN
  212                             | AND_ASSIGN
  213                             | OR_ASSIGN
  214                             | XOR_ASSIGN
  215                             | RIGHT_ASSIGN
  216                             | LEFT_ASSIGN

  217 expression_statement: expression
  218                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 168
'%' (37) 172
'&' (38) 188
'(' (40) 22 23 24 25 57 58 59 60 61 62 64 69 70 71 72 73 74 75 76 77
    78 79 80 94 95 98 99 100 101 122 134 141 142
')' (41) 22 23 24 25 57 58 59 60 61 62 64 69 70 71 72 73 74 75 76 77
    78 79 80 94 95 98 99 100 101 122 134 141 142
'*' (42) 39 170
'+' (43) 165 174
',' (44) 5 66 68 114 154 199 203
'-' (45) 166 175
'.' (46) 3 39 81 140
'/' (47) 171
':' (58) 155
';' (59) 1 88 100 102 104 105 106 108 109 110 111 112
'<' (60) 180
'=' (61) 111 112 200
'>' (62) 181
'[' (91) 26 138 139
']' (93) 26 138 139
'^' (94) 190
'{' (123) 48 49 82 83 147 148 149 150 151 152
'|' (124) 192
'}' (125) 48 49 82 83 147 148 149 150 151 152
'~' (126) 167
error (256)
ELLIPSIS (258)
ADD_ASSIGN (259) 207
SUB_ASSIGN (260) 208
MUL_ASSIGN (261) 209
DIV_ASSIGN (262) 210
MOD_ASSIGN (263) 211
AND_ASSIGN (264) 212
OR_ASSIGN (265) 213
XOR_ASSIGN (266) 214
RIGHT_ASSIGN (267) 215
LEFT_ASSIGN (268) 216
EQ (269) 185
NE (270) 186
GE (271) 183
LE (272) 182
AND (273) 194
OR (274) 196
NOT (275)
SHIFT_LEFT (276) 177
SHIFT_RIGHT (277) 178
INC (278) 158 162
DEC (279) 159 163
TOKEN_THIS (280) 119
IF (281) 94 95
ELSE (282) 95
WHILE (283) 99 100
DO (284) 100
FOR (285) 101
IN (286)
SWITCH (287) 98
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 110 111 112
FUNC (293) 22 23 24 25 57 58 59 60 61 62 69 70 71 72 73 74 75 76 77
    78 79 80
RETURN (294) 108 109
STRUCT (295) 48
INTERFACE (296) 49
TYPE (297) 48 49 50 51
CONST (298)
PACKAGE (299) 35
IMPORT (300) 38 39
INT8 (301) 13
INT16 (302) 14
INT32 (303) 15
INT64 (304) 16
UINT8 (305) 9
UINT16 (306) 10
UINT32 (307) 11
UINT64 (308) 12
FLOAT32 (309) 17
FLOAT64 (310) 18
BOOL (311) 19
STRING (312) 20
ANY_TYPE (313) 21
TOKEN_NULL (314) 131
TOKEN_TRUE (315) 132
TOKEN_FALSE (316) 133
INTEGER (317) 26 128
HEX (318)
OCT (319)
FLOAT (320) 129
STRING_LITERAL (321) 130
ID (322) 2 3 27 48 49 50 51 54 57 58 59 60 61 62 67 68 69 70 71 72
    81 113 114 140
OP (323)
IFX (324)
NO_CODE_BLOCK (325)


Nonterminals, with rules where they appear

$accept (94)
    on left: 0
semicolons (95)
    on left: 1, on right: 35 38 39 50 51 54 57 58 59 60 61 62
qualified_name (96)
    on left: 2 3, on right: 3 7 35 38 39 117 138 144 204
type_name_list (97)
    on left: 4 5, on right: 5 64
type_name (98)
    on left: 6 7 8, on right: 4 5 26 50 54 63 65 66 67 68 115 150 151
    152
primitive_type (99)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21, on right: 6
function_type (100)
    on left: 22 23 24 25, on right: 51 116
array_type (101)
    on left: 26, on right: 8
field_name (102)
    on left: 27, on right: 155
program (103)
    on left: 28 29 30 31 32 33 34, on right: 0
package_statement (104)
    on left: 35, on right: 28 29 30 32
import_statements (105)
    on left: 36 37, on right: 28 29 31 33 37
import_statement (106)
    on left: 38 39, on right: 36 37
declarations (107)
    on left: 40 41 42 43 44 45 46 47, on right: 28 30 31 34 41 43 45
    47
type_declaration (108)
    on left: 48 49 50 51, on right: 40 41
field_declarations (109)
    on left: 52 53, on right: 48 53
field_declaration (110)
    on left: 54, on right: 52 53
interface_function_declarations (111)
    on left: 55 56, on right: 49 56
interface_function_declaration (112)
    on left: 57 58 59 60 61 62, on right: 55 56
return_type_list (113)
    on left: 63 64, on right: 23 25 58 60 62 70 72 74 76 78 80
parameter_type_list (114)
    on left: 65 66, on right: 24 25 59 60 66
parameter_list (115)
    on left: 67 68, on right: 61 62 68 71 72 75 76 79 80
function_declaration (116)
    on left: 69 70 71 72, on right: 44 45
anonymous_function_declaration (117)
    on left: 73 74 75 76, on right: 146
method_declaration (118)
    on left: 77 78 79 80, on right: 46 47
method_name (119)
    on left: 81, on right: 77 78 79 80
code_block (120)
    on left: 82 83, on right: 69 70 71 72 73 74 75 76 77 78 79 80 94
    95 97 98 99 100 101
local_variable_declaration_statements (121)
    on left: 84 85, on right: 82 85
local_variable_declaration_statement (122)
    on left: 86 87, on right: 84 85
statemnet (123)
    on left: 88 89 90 91, on right: 87
selection_statement (124)
    on left: 92 93, on right: 89
if_statement (125)
    on left: 94 95, on right: 92 96
else_statemnet (126)
    on left: 96 97, on right: 95
switch_statement (127)
    on left: 98, on right: 93
iteration_statemnet (128)
    on left: 99 100 101, on right: 90
for_init (129)
    on left: 102 103 104, on right: 101
for_expr (130)
    on left: 105 106, on right: 101
for_incr (131)
    on left: 107, on right: 101
jump_statement (132)
    on left: 108 109, on right: 91
variable_declaration (133)
    on left: 110 111 112, on right: 42 43 86 103
variable_list (134)
    on left: 113 114, on right: 110 111 112 114
variable_type (135)
    on left: 115 116, on right: 110 112
primary_expression (136)
    on left: 117 118, on right: 156
just_not_name (137)
    on left: 119 120 121, on right: 118 140
complex_primary (138)
    on left: 122 123, on right: 121
complex_primary_no_parenthesis (139)
    on left: 124 125 126 127, on right: 123 143
literal_name (140)
    on left: 128 129 130 131 132 133, on right: 124
array_complex_primary (141)
    on left: 134 135 136 137, on right: 139
array_access (142)
    on left: 138 139, on right: 125 135 205
field_access (143)
    on left: 140, on right: 126 136 206
method_call (144)
    on left: 141 142, on right: 127 137
method_access (145)
    on left: 143 144, on right: 141 142
initializer_expression (146)
    on left: 145 146, on right: 120
struct_initializer (147)
    on left: 147 148 149 150 151 152, on right: 145
field_initializer_list (148)
    on left: 153 154, on right: 149 152 154
field_initializer (149)
    on left: 155, on right: 153 154
postfix_expression (150)
    on left: 156 157, on right: 158 159 161
real_postfix_expression (151)
    on left: 158 159, on right: 157
argument_list (152)
    on left: 160, on right: 141
unary_expression (153)
    on left: 161 162 163 164, on right: 162 163 164 169 170 171 172
unary_operator (154)
    on left: 165 166 167 168, on right: 164
multiplicative_expression (155)
    on left: 169 170 171 172, on right: 170 171 172 173 174 175
additive_expression (156)
    on left: 173 174 175, on right: 174 175 176 177 178
shift_expression (157)
    on left: 176 177 178, on right: 177 178 179 180 181 182 183
relational_expression (158)
    on left: 179 180 181 182 183, on right: 180 181 182 183 184 185
    186
equality_expression (159)
    on left: 184 185 186, on right: 185 186 187 188
and_expression (160)
    on left: 187 188, on right: 188 189 190
exclusive_or_expression (161)
    on left: 189 190, on right: 190 191 192
inclusive_or_expression (162)
    on left: 191 192, on right: 192 193 194
logical_and_expression (163)
    on left: 193 194, on right: 194 195 196
logical_or_expression (164)
    on left: 195 196, on right: 196 197
expression (165)
    on left: 197, on right: 94 95 98 99 100 105 122 134 138 139 155
    198 199 201 217
expression_list (166)
    on left: 198 199, on right: 109 111 112 148 151 160 199 200
assignment_expression (167)
    on left: 200 201, on right: 218
assignment_variable_list (168)
    on left: 202 203, on right: 200 203
assignment_variable (169)
    on left: 204 205 206, on right: 201 202 203
compound_assignment_operator (170)
    on left: 207 208 209 210 211 212 213 214 215 216, on right: 201
expression_statement (171)
    on left: 217 218, on right: 88 102 107


State 0

    0 $accept: . program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    PACKAGE  shift, and go to state 4
    IMPORT   shift, and go to state 5

    program               go to state 6
    package_statement     go to state 7
    import_statements     go to state 8
    import_statement      go to state 9
    declarations          go to state 10
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 1

  110 variable_declaration: VAR . variable_list variable_type ';'
  111                     | VAR . variable_list '=' expression_list ';'
  112                     | VAR . variable_list variable_type '=' expression_list ';'

    ID  shift, and go to state 15

    variable_list  go to state 16


State 2

   69 function_declaration: FUNC . ID '(' ')' code_block
   70                     | FUNC . ID '(' ')' return_type_list code_block
   71                     | FUNC . ID '(' parameter_list ')' code_block
   72                     | FUNC . ID '(' parameter_list ')' return_type_list code_block
   77 method_declaration: FUNC . method_name '(' ')' code_block
   78                   | FUNC . method_name '(' ')' return_type_list code_block
   79                   | FUNC . method_name '(' parameter_list ')' code_block
   80                   | FUNC . method_name '(' parameter_list ')' return_type_list code_block

    ID  shift, and go to state 17

    method_name  go to state 18


State 3

   48 type_declaration: TYPE . ID STRUCT '{' field_declarations '}'
   49                 | TYPE . ID INTERFACE '{' interface_function_declarations '}'
   50                 | TYPE . ID type_name semicolons
   51                 | TYPE . ID function_type semicolons

    ID  shift, and go to state 19


State 4

   35 package_statement: PACKAGE . qualified_name semicolons

    ID  shift, and go to state 20

    qualified_name  go to state 21


State 5

   38 import_statement: IMPORT . qualified_name semicolons
   39                 | IMPORT . qualified_name '.' '*' semicolons

    ID  shift, and go to state 20

    qualified_name  go to state 22


State 6

    0 $accept: program . $end

    $end  shift, and go to state 23


State 7

   28 program: package_statement . import_statements declarations
   29        | package_statement . import_statements
   30        | package_statement . declarations
   32        | package_statement .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 32 (program)

    import_statements     go to state 24
    import_statement      go to state 9
    declarations          go to state 25
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 8

   31 program: import_statements . declarations
   33        | import_statements .
   37 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 33 (program)

    import_statement      go to state 26
    declarations          go to state 27
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 9

   36 import_statements: import_statement .

    $default  reduce using rule 36 (import_statements)


State 10

   34 program: declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 34 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 11

   40 declarations: type_declaration .

    $default  reduce using rule 40 (declarations)


State 12

   44 declarations: function_declaration .

    $default  reduce using rule 44 (declarations)


State 13

   46 declarations: method_declaration .

    $default  reduce using rule 46 (declarations)


State 14

   42 declarations: variable_declaration .

    $default  reduce using rule 42 (declarations)


State 15

  113 variable_list: ID .

    $default  reduce using rule 113 (variable_list)


State 16

  110 variable_declaration: VAR variable_list . variable_type ';'
  111                     | VAR variable_list . '=' expression_list ';'
  112                     | VAR variable_list . variable_type '=' expression_list ';'
  114 variable_list: variable_list . ',' ID

    FUNC      shift, and go to state 32
    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    ','       shift, and go to state 46
    '['       shift, and go to state 47
    '='       shift, and go to state 48

    qualified_name  go to state 49
    type_name       go to state 50
    primitive_type  go to state 51
    function_type   go to state 52
    array_type      go to state 53
    variable_type   go to state 54


State 17

   69 function_declaration: FUNC ID . '(' ')' code_block
   70                     | FUNC ID . '(' ')' return_type_list code_block
   71                     | FUNC ID . '(' parameter_list ')' code_block
   72                     | FUNC ID . '(' parameter_list ')' return_type_list code_block
   81 method_name: ID . '.' ID

    '.'  shift, and go to state 55
    '('  shift, and go to state 56


State 18

   77 method_declaration: FUNC method_name . '(' ')' code_block
   78                   | FUNC method_name . '(' ')' return_type_list code_block
   79                   | FUNC method_name . '(' parameter_list ')' code_block
   80                   | FUNC method_name . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 57


State 19

   48 type_declaration: TYPE ID . STRUCT '{' field_declarations '}'
   49                 | TYPE ID . INTERFACE '{' interface_function_declarations '}'
   50                 | TYPE ID . type_name semicolons
   51                 | TYPE ID . function_type semicolons

    FUNC       shift, and go to state 32
    STRUCT     shift, and go to state 58
    INTERFACE  shift, and go to state 59
    INT8       shift, and go to state 33
    INT16      shift, and go to state 34
    INT32      shift, and go to state 35
    INT64      shift, and go to state 36
    UINT8      shift, and go to state 37
    UINT16     shift, and go to state 38
    UINT32     shift, and go to state 39
    UINT64     shift, and go to state 40
    FLOAT32    shift, and go to state 41
    FLOAT64    shift, and go to state 42
    BOOL       shift, and go to state 43
    STRING     shift, and go to state 44
    ANY_TYPE   shift, and go to state 45
    ID         shift, and go to state 20
    '['        shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 60
    primitive_type  go to state 51
    function_type   go to state 61
    array_type      go to state 53


State 20

    2 qualified_name: ID .

    $default  reduce using rule 2 (qualified_name)


State 21

    3 qualified_name: qualified_name . '.' ID
   35 package_statement: PACKAGE qualified_name . semicolons

    ';'  shift, and go to state 62
    '.'  shift, and go to state 63

    semicolons  go to state 64


State 22

    3 qualified_name: qualified_name . '.' ID
   38 import_statement: IMPORT qualified_name . semicolons
   39                 | IMPORT qualified_name . '.' '*' semicolons

    ';'  shift, and go to state 62
    '.'  shift, and go to state 65

    semicolons  go to state 66


State 23

    0 $accept: program $end .

    $default  accept


State 24

   28 program: package_statement import_statements . declarations
   29        | package_statement import_statements .
   37 import_statements: import_statements . import_statement

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 29 (program)

    import_statement      go to state 26
    declarations          go to state 67
    type_declaration      go to state 11
    function_declaration  go to state 12
    method_declaration    go to state 13
    variable_declaration  go to state 14


State 25

   30 program: package_statement declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 30 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 26

   37 import_statements: import_statements import_statement .

    $default  reduce using rule 37 (import_statements)


State 27

   31 program: import_statements declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 31 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 28

   41 declarations: declarations type_declaration .

    $default  reduce using rule 41 (declarations)


State 29

   45 declarations: declarations function_declaration .

    $default  reduce using rule 45 (declarations)


State 30

   47 declarations: declarations method_declaration .

    $default  reduce using rule 47 (declarations)


State 31

   43 declarations: declarations variable_declaration .

    $default  reduce using rule 43 (declarations)


State 32

   22 function_type: FUNC . '(' ')'
   23              | FUNC . '(' ')' return_type_list
   24              | FUNC . '(' parameter_type_list ')'
   25              | FUNC . '(' parameter_type_list ')' return_type_list

    '('  shift, and go to state 68


State 33

   13 primitive_type: INT8 .

    $default  reduce using rule 13 (primitive_type)


State 34

   14 primitive_type: INT16 .

    $default  reduce using rule 14 (primitive_type)


State 35

   15 primitive_type: INT32 .

    $default  reduce using rule 15 (primitive_type)


State 36

   16 primitive_type: INT64 .

    $default  reduce using rule 16 (primitive_type)


State 37

    9 primitive_type: UINT8 .

    $default  reduce using rule 9 (primitive_type)


State 38

   10 primitive_type: UINT16 .

    $default  reduce using rule 10 (primitive_type)


State 39

   11 primitive_type: UINT32 .

    $default  reduce using rule 11 (primitive_type)


State 40

   12 primitive_type: UINT64 .

    $default  reduce using rule 12 (primitive_type)


State 41

   17 primitive_type: FLOAT32 .

    $default  reduce using rule 17 (primitive_type)


State 42

   18 primitive_type: FLOAT64 .

    $default  reduce using rule 18 (primitive_type)


State 43

   19 primitive_type: BOOL .

    $default  reduce using rule 19 (primitive_type)


State 44

   20 primitive_type: STRING .

    $default  reduce using rule 20 (primitive_type)


State 45

   21 primitive_type: ANY_TYPE .

    $default  reduce using rule 21 (primitive_type)


State 46

  114 variable_list: variable_list ',' . ID

    ID  shift, and go to state 69


State 47

   26 array_type: '[' . INTEGER ']' type_name

    INTEGER  shift, and go to state 70


State 48

  111 variable_declaration: VAR variable_list '=' . expression_list ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 117


State 49

    3 qualified_name: qualified_name . '.' ID
    7 type_name: qualified_name .

    '.'  shift, and go to state 63

    $default  reduce using rule 7 (type_name)


State 50

  115 variable_type: type_name .

    $default  reduce using rule 115 (variable_type)


State 51

    6 type_name: primitive_type .

    $default  reduce using rule 6 (type_name)


State 52

  116 variable_type: function_type .

    $default  reduce using rule 116 (variable_type)


State 53

    8 type_name: array_type .

    $default  reduce using rule 8 (type_name)


State 54

  110 variable_declaration: VAR variable_list variable_type . ';'
  112                     | VAR variable_list variable_type . '=' expression_list ';'

    ';'  shift, and go to state 118
    '='  shift, and go to state 119


State 55

   81 method_name: ID '.' . ID

    ID  shift, and go to state 120


State 56

   69 function_declaration: FUNC ID '(' . ')' code_block
   70                     | FUNC ID '(' . ')' return_type_list code_block
   71                     | FUNC ID '(' . parameter_list ')' code_block
   72                     | FUNC ID '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 121
    ')'  shift, and go to state 122

    parameter_list  go to state 123


State 57

   77 method_declaration: FUNC method_name '(' . ')' code_block
   78                   | FUNC method_name '(' . ')' return_type_list code_block
   79                   | FUNC method_name '(' . parameter_list ')' code_block
   80                   | FUNC method_name '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 121
    ')'  shift, and go to state 124

    parameter_list  go to state 125


State 58

   48 type_declaration: TYPE ID STRUCT . '{' field_declarations '}'

    '{'  shift, and go to state 126


State 59

   49 type_declaration: TYPE ID INTERFACE . '{' interface_function_declarations '}'

    '{'  shift, and go to state 127


State 60

   50 type_declaration: TYPE ID type_name . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 128


State 61

   51 type_declaration: TYPE ID function_type . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 129


State 62

    1 semicolons: ';' .

    $default  reduce using rule 1 (semicolons)


State 63

    3 qualified_name: qualified_name '.' . ID

    ID  shift, and go to state 130


State 64

   35 package_statement: PACKAGE qualified_name semicolons .

    $default  reduce using rule 35 (package_statement)


State 65

    3 qualified_name: qualified_name '.' . ID
   39 import_statement: IMPORT qualified_name '.' . '*' semicolons

    ID   shift, and go to state 130
    '*'  shift, and go to state 131


State 66

   38 import_statement: IMPORT qualified_name semicolons .

    $default  reduce using rule 38 (import_statement)


State 67

   28 program: package_statement import_statements declarations .
   41 declarations: declarations . type_declaration
   43             | declarations . variable_declaration
   45             | declarations . function_declaration
   47             | declarations . method_declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 28 (program)

    type_declaration      go to state 28
    function_declaration  go to state 29
    method_declaration    go to state 30
    variable_declaration  go to state 31


State 68

   22 function_type: FUNC '(' . ')'
   23              | FUNC '(' . ')' return_type_list
   24              | FUNC '(' . parameter_type_list ')'
   25              | FUNC '(' . parameter_type_list ')' return_type_list

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    ')'       shift, and go to state 132
    '['       shift, and go to state 47

    qualified_name       go to state 49
    type_name            go to state 133
    primitive_type       go to state 51
    array_type           go to state 53
    parameter_type_list  go to state 134


State 69

  114 variable_list: variable_list ',' ID .

    $default  reduce using rule 114 (variable_list)


State 70

   26 array_type: '[' INTEGER . ']' type_name

    ']'  shift, and go to state 135


State 71

  162 unary_expression: INC . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 136
    unary_operator                  go to state 105


State 72

  163 unary_expression: DEC . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 137
    unary_operator                  go to state 105


State 73

  119 just_not_name: TOKEN_THIS .

    $default  reduce using rule 119 (just_not_name)


State 74

   73 anonymous_function_declaration: FUNC . '(' ')' code_block
   74                               | FUNC . '(' ')' return_type_list code_block
   75                               | FUNC . '(' parameter_list ')' code_block
   76                               | FUNC . '(' parameter_list ')' return_type_list code_block

    '('  shift, and go to state 138


State 75

  131 literal_name: TOKEN_NULL .

    $default  reduce using rule 131 (literal_name)


State 76

  132 literal_name: TOKEN_TRUE .

    $default  reduce using rule 132 (literal_name)


State 77

  133 literal_name: TOKEN_FALSE .

    $default  reduce using rule 133 (literal_name)


State 78

  128 literal_name: INTEGER .

    $default  reduce using rule 128 (literal_name)


State 79

  129 literal_name: FLOAT .

    $default  reduce using rule 129 (literal_name)


State 80

  130 literal_name: STRING_LITERAL .

    $default  reduce using rule 130 (literal_name)


State 81

  122 complex_primary: '(' . expression ')'
  134 array_complex_primary: '(' . expression ')'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 139


State 82

  147 struct_initializer: '{' . '}'
  148                   | '{' . expression_list '}'
  149                   | '{' . field_initializer_list '}'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 140
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '}'             shift, and go to state 141
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    field_name                      go to state 142
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    field_initializer_list          go to state 143
    field_initializer               go to state 144
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 145


State 83

  165 unary_operator: '+' .

    $default  reduce using rule 165 (unary_operator)


State 84

  166 unary_operator: '-' .

    $default  reduce using rule 166 (unary_operator)


State 85

  167 unary_operator: '~' .

    $default  reduce using rule 167 (unary_operator)


State 86

  168 unary_operator: '!' .

    $default  reduce using rule 168 (unary_operator)


State 87

    3 qualified_name: qualified_name . '.' ID
    7 type_name: qualified_name .
  117 primary_expression: qualified_name .
  138 array_access: qualified_name . '[' expression ']'
  144 method_access: qualified_name .

    '.'  shift, and go to state 63
    '['  shift, and go to state 146

    '('       reduce using rule 144 (method_access)
    '{'       reduce using rule 7 (type_name)
    $default  reduce using rule 117 (primary_expression)


State 88

  150 struct_initializer: type_name . '{' '}'
  151                   | type_name . '{' expression_list '}'
  152                   | type_name . '{' field_initializer_list '}'

    '{'  shift, and go to state 147


State 89

  146 initializer_expression: anonymous_function_declaration .

    $default  reduce using rule 146 (initializer_expression)


State 90

  156 postfix_expression: primary_expression .

    $default  reduce using rule 156 (postfix_expression)


State 91

  118 primary_expression: just_not_name .
  140 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 148

    $default  reduce using rule 118 (primary_expression)


State 92

  121 just_not_name: complex_primary .

    $default  reduce using rule 121 (just_not_name)


State 93

  123 complex_primary: complex_primary_no_parenthesis .
  143 method_access: complex_primary_no_parenthesis .

    '('       reduce using rule 143 (method_access)
    $default  reduce using rule 123 (complex_primary)


State 94

  124 complex_primary_no_parenthesis: literal_name .

    $default  reduce using rule 124 (complex_primary_no_parenthesis)


State 95

  139 array_access: array_complex_primary . '[' expression ']'

    '['  shift, and go to state 149


State 96

  125 complex_primary_no_parenthesis: array_access .
  135 array_complex_primary: array_access .

    '['       reduce using rule 135 (array_complex_primary)
    $default  reduce using rule 125 (complex_primary_no_parenthesis)


State 97

  126 complex_primary_no_parenthesis: field_access .
  136 array_complex_primary: field_access .

    '['       reduce using rule 136 (array_complex_primary)
    $default  reduce using rule 126 (complex_primary_no_parenthesis)


State 98

  127 complex_primary_no_parenthesis: method_call .
  137 array_complex_primary: method_call .

    '['       reduce using rule 137 (array_complex_primary)
    $default  reduce using rule 127 (complex_primary_no_parenthesis)


State 99

  141 method_call: method_access . '(' argument_list ')'
  142            | method_access . '(' ')'

    '('  shift, and go to state 150


State 100

  120 just_not_name: initializer_expression .

    $default  reduce using rule 120 (just_not_name)


State 101

  145 initializer_expression: struct_initializer .

    $default  reduce using rule 145 (initializer_expression)


State 102

  158 real_postfix_expression: postfix_expression . INC
  159                        | postfix_expression . DEC
  161 unary_expression: postfix_expression .

    INC  shift, and go to state 151
    DEC  shift, and go to state 152

    $default  reduce using rule 161 (unary_expression)


State 103

  157 postfix_expression: real_postfix_expression .

    $default  reduce using rule 157 (postfix_expression)


State 104

  169 multiplicative_expression: unary_expression .

    $default  reduce using rule 169 (multiplicative_expression)


State 105

  164 unary_expression: unary_operator . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 153
    unary_operator                  go to state 105


State 106

  170 multiplicative_expression: multiplicative_expression . '*' unary_expression
  171                          | multiplicative_expression . '/' unary_expression
  172                          | multiplicative_expression . '%' unary_expression
  173 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 154
    '/'  shift, and go to state 155
    '%'  shift, and go to state 156

    $default  reduce using rule 173 (additive_expression)


State 107

  174 additive_expression: additive_expression . '+' multiplicative_expression
  175                    | additive_expression . '-' multiplicative_expression
  176 shift_expression: additive_expression .

    '+'  shift, and go to state 157
    '-'  shift, and go to state 158

    $default  reduce using rule 176 (shift_expression)


State 108

  177 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  178                 | shift_expression . SHIFT_RIGHT additive_expression
  179 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 159
    SHIFT_RIGHT  shift, and go to state 160

    $default  reduce using rule 179 (relational_expression)


State 109

  180 relational_expression: relational_expression . '<' shift_expression
  181                      | relational_expression . '>' shift_expression
  182                      | relational_expression . LE shift_expression
  183                      | relational_expression . GE shift_expression
  184 equality_expression: relational_expression .

    GE   shift, and go to state 161
    LE   shift, and go to state 162
    '<'  shift, and go to state 163
    '>'  shift, and go to state 164

    $default  reduce using rule 184 (equality_expression)


State 110

  185 equality_expression: equality_expression . EQ relational_expression
  186                    | equality_expression . NE relational_expression
  187 and_expression: equality_expression .

    EQ  shift, and go to state 165
    NE  shift, and go to state 166

    $default  reduce using rule 187 (and_expression)


State 111

  188 and_expression: and_expression . '&' equality_expression
  189 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 167

    $default  reduce using rule 189 (exclusive_or_expression)


State 112

  190 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  191 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 168

    $default  reduce using rule 191 (inclusive_or_expression)


State 113

  192 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  193 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 169

    $default  reduce using rule 193 (logical_and_expression)


State 114

  194 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  195 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 170

    $default  reduce using rule 195 (logical_or_expression)


State 115

  196 logical_or_expression: logical_or_expression . OR logical_and_expression
  197 expression: logical_or_expression .

    OR  shift, and go to state 171

    $default  reduce using rule 197 (expression)


State 116

  198 expression_list: expression .

    $default  reduce using rule 198 (expression_list)


State 117

  111 variable_declaration: VAR variable_list '=' expression_list . ';'
  199 expression_list: expression_list . ',' expression

    ';'  shift, and go to state 172
    ','  shift, and go to state 173


State 118

  110 variable_declaration: VAR variable_list variable_type ';' .

    $default  reduce using rule 110 (variable_declaration)


State 119

  112 variable_declaration: VAR variable_list variable_type '=' . expression_list ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 174


State 120

   81 method_name: ID '.' ID .

    $default  reduce using rule 81 (method_name)


State 121

   67 parameter_list: ID . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 175
    primitive_type  go to state 51
    array_type      go to state 53


State 122

   69 function_declaration: FUNC ID '(' ')' . code_block
   70                     | FUNC ID '(' ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 176
    '['       shift, and go to state 47
    '{'       shift, and go to state 177

    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 179
    code_block        go to state 180


State 123

   68 parameter_list: parameter_list . ',' ID type_name
   71 function_declaration: FUNC ID '(' parameter_list . ')' code_block
   72                     | FUNC ID '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 181
    ')'  shift, and go to state 182


State 124

   77 method_declaration: FUNC method_name '(' ')' . code_block
   78                   | FUNC method_name '(' ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 176
    '['       shift, and go to state 47
    '{'       shift, and go to state 177

    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 183
    code_block        go to state 184


State 125

   68 parameter_list: parameter_list . ',' ID type_name
   79 method_declaration: FUNC method_name '(' parameter_list . ')' code_block
   80                   | FUNC method_name '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 181
    ')'  shift, and go to state 185


State 126

   48 type_declaration: TYPE ID STRUCT '{' . field_declarations '}'

    ID  shift, and go to state 186

    field_declarations  go to state 187
    field_declaration   go to state 188


State 127

   49 type_declaration: TYPE ID INTERFACE '{' . interface_function_declarations '}'

    FUNC  shift, and go to state 189

    interface_function_declarations  go to state 190
    interface_function_declaration   go to state 191


State 128

   50 type_declaration: TYPE ID type_name semicolons .

    $default  reduce using rule 50 (type_declaration)


State 129

   51 type_declaration: TYPE ID function_type semicolons .

    $default  reduce using rule 51 (type_declaration)


State 130

    3 qualified_name: qualified_name '.' ID .

    $default  reduce using rule 3 (qualified_name)


State 131

   39 import_statement: IMPORT qualified_name '.' '*' . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 192


State 132

   22 function_type: FUNC '(' ')' .
   23              | FUNC '(' ')' . return_type_list

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 176
    '['       shift, and go to state 47

    $default  reduce using rule 22 (function_type)

    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 193


State 133

   65 parameter_type_list: type_name .

    $default  reduce using rule 65 (parameter_type_list)


State 134

   24 function_type: FUNC '(' parameter_type_list . ')'
   25              | FUNC '(' parameter_type_list . ')' return_type_list
   66 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 194
    ')'  shift, and go to state 195


State 135

   26 array_type: '[' INTEGER ']' . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 196
    primitive_type  go to state 51
    array_type      go to state 53


State 136

  162 unary_expression: INC unary_expression .

    $default  reduce using rule 162 (unary_expression)


State 137

  163 unary_expression: DEC unary_expression .

    $default  reduce using rule 163 (unary_expression)


State 138

   73 anonymous_function_declaration: FUNC '(' . ')' code_block
   74                               | FUNC '(' . ')' return_type_list code_block
   75                               | FUNC '(' . parameter_list ')' code_block
   76                               | FUNC '(' . parameter_list ')' return_type_list code_block

    ID   shift, and go to state 121
    ')'  shift, and go to state 197

    parameter_list  go to state 198


State 139

  122 complex_primary: '(' expression . ')'
  134 array_complex_primary: '(' expression . ')'

    ')'  shift, and go to state 199


State 140

    2 qualified_name: ID .
   27 field_name: ID .

    ':'       reduce using rule 27 (field_name)
    $default  reduce using rule 2 (qualified_name)


State 141

  147 struct_initializer: '{' '}' .

    $default  reduce using rule 147 (struct_initializer)


State 142

  155 field_initializer: field_name . ':' expression

    ':'  shift, and go to state 200


State 143

  149 struct_initializer: '{' field_initializer_list . '}'
  154 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 201
    '}'  shift, and go to state 202


State 144

  153 field_initializer_list: field_initializer .

    $default  reduce using rule 153 (field_initializer_list)


State 145

  148 struct_initializer: '{' expression_list . '}'
  199 expression_list: expression_list . ',' expression

    ','  shift, and go to state 173
    '}'  shift, and go to state 203


State 146

  138 array_access: qualified_name '[' . expression ']'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 204


State 147

  150 struct_initializer: type_name '{' . '}'
  151                   | type_name '{' . expression_list '}'
  152                   | type_name '{' . field_initializer_list '}'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 140
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '}'             shift, and go to state 205
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    field_name                      go to state 142
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    field_initializer_list          go to state 206
    field_initializer               go to state 144
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 207


State 148

  140 field_access: just_not_name '.' . ID

    ID  shift, and go to state 208


State 149

  139 array_access: array_complex_primary '[' . expression ']'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 209


State 150

  141 method_call: method_access '(' . argument_list ')'
  142            | method_access '(' . ')'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    ')'             shift, and go to state 210
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    argument_list                   go to state 211
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 212


State 151

  158 real_postfix_expression: postfix_expression INC .

    $default  reduce using rule 158 (real_postfix_expression)


State 152

  159 real_postfix_expression: postfix_expression DEC .

    $default  reduce using rule 159 (real_postfix_expression)


State 153

  164 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 164 (unary_expression)


State 154

  170 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 213
    unary_operator                  go to state 105


State 155

  171 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 214
    unary_operator                  go to state 105


State 156

  172 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 215
    unary_operator                  go to state 105


State 157

  174 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 216


State 158

  175 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 217


State 159

  177 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 218


State 160

  178 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 219


State 161

  183 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 220


State 162

  182 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 221


State 163

  180 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 222


State 164

  181 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 223


State 165

  185 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 224


State 166

  186 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 225


State 167

  188 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 226


State 168

  190 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 227


State 169

  192 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 228


State 170

  194 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 229


State 171

  196 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 230


State 172

  111 variable_declaration: VAR variable_list '=' expression_list ';' .

    $default  reduce using rule 111 (variable_declaration)


State 173

  199 expression_list: expression_list ',' . expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 231


State 174

  112 variable_declaration: VAR variable_list variable_type '=' expression_list . ';'
  199 expression_list: expression_list . ',' expression

    ';'  shift, and go to state 232
    ','  shift, and go to state 173


State 175

   67 parameter_list: ID type_name .

    $default  reduce using rule 67 (parameter_list)


State 176

   64 return_type_list: '(' . type_name_list ')'

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name_list  go to state 233
    type_name       go to state 234
    primitive_type  go to state 51
    array_type      go to state 53


State 177

   82 code_block: '{' . local_variable_declaration_statements '}'
   83           | '{' . '}'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    IF              shift, and go to state 235
    WHILE           shift, and go to state 236
    DO              shift, and go to state 237
    FOR             shift, and go to state 238
    SWITCH          shift, and go to state 239
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 74
    RETURN          shift, and go to state 240
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '}'             shift, and go to state 241
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                         go to state 242
    type_name                              go to state 88
    primitive_type                         go to state 51
    array_type                             go to state 53
    anonymous_function_declaration         go to state 89
    local_variable_declaration_statements  go to state 243
    local_variable_declaration_statement   go to state 244
    statemnet                              go to state 245
    selection_statement                    go to state 246
    if_statement                           go to state 247
    switch_statement                       go to state 248
    iteration_statemnet                    go to state 249
    jump_statement                         go to state 250
    variable_declaration                   go to state 251
    primary_expression                     go to state 90
    just_not_name                          go to state 91
    complex_primary                        go to state 92
    complex_primary_no_parenthesis         go to state 93
    literal_name                           go to state 94
    array_complex_primary                  go to state 95
    array_access                           go to state 252
    field_access                           go to state 253
    method_call                            go to state 98
    method_access                          go to state 99
    initializer_expression                 go to state 100
    struct_initializer                     go to state 101
    postfix_expression                     go to state 102
    real_postfix_expression                go to state 103
    unary_expression                       go to state 104
    unary_operator                         go to state 105
    multiplicative_expression              go to state 106
    additive_expression                    go to state 107
    shift_expression                       go to state 108
    relational_expression                  go to state 109
    equality_expression                    go to state 110
    and_expression                         go to state 111
    exclusive_or_expression                go to state 112
    inclusive_or_expression                go to state 113
    logical_and_expression                 go to state 114
    logical_or_expression                  go to state 115
    expression                             go to state 254
    assignment_expression                  go to state 255
    assignment_variable_list               go to state 256
    assignment_variable                    go to state 257
    expression_statement                   go to state 258


State 178

   63 return_type_list: type_name .

    $default  reduce using rule 63 (return_type_list)


State 179

   70 function_declaration: FUNC ID '(' ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 259


State 180

   69 function_declaration: FUNC ID '(' ')' code_block .

    $default  reduce using rule 69 (function_declaration)


State 181

   68 parameter_list: parameter_list ',' . ID type_name

    ID  shift, and go to state 260


State 182

   71 function_declaration: FUNC ID '(' parameter_list ')' . code_block
   72                     | FUNC ID '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 176
    '['       shift, and go to state 47
    '{'       shift, and go to state 177

    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 261
    code_block        go to state 262


State 183

   78 method_declaration: FUNC method_name '(' ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 263


State 184

   77 method_declaration: FUNC method_name '(' ')' code_block .

    $default  reduce using rule 77 (method_declaration)


State 185

   79 method_declaration: FUNC method_name '(' parameter_list ')' . code_block
   80                   | FUNC method_name '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 176
    '['       shift, and go to state 47
    '{'       shift, and go to state 177

    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 264
    code_block        go to state 265


State 186

   54 field_declaration: ID . type_name semicolons

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 266
    primitive_type  go to state 51
    array_type      go to state 53


State 187

   48 type_declaration: TYPE ID STRUCT '{' field_declarations . '}'
   53 field_declarations: field_declarations . field_declaration

    ID   shift, and go to state 186
    '}'  shift, and go to state 267

    field_declaration  go to state 268


State 188

   52 field_declarations: field_declaration .

    $default  reduce using rule 52 (field_declarations)


State 189

   57 interface_function_declaration: FUNC . ID '(' ')' semicolons
   58                               | FUNC . ID '(' ')' return_type_list semicolons
   59                               | FUNC . ID '(' parameter_type_list ')' semicolons
   60                               | FUNC . ID '(' parameter_type_list ')' return_type_list semicolons
   61                               | FUNC . ID '(' parameter_list ')' semicolons
   62                               | FUNC . ID '(' parameter_list ')' return_type_list semicolons

    ID  shift, and go to state 269


State 190

   49 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations . '}'
   56 interface_function_declarations: interface_function_declarations . interface_function_declaration

    FUNC  shift, and go to state 189
    '}'   shift, and go to state 270

    interface_function_declaration  go to state 271


State 191

   55 interface_function_declarations: interface_function_declaration .

    $default  reduce using rule 55 (interface_function_declarations)


State 192

   39 import_statement: IMPORT qualified_name '.' '*' semicolons .

    $default  reduce using rule 39 (import_statement)


State 193

   23 function_type: FUNC '(' ')' return_type_list .

    $default  reduce using rule 23 (function_type)


State 194

   66 parameter_type_list: parameter_type_list ',' . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 272
    primitive_type  go to state 51
    array_type      go to state 53


State 195

   24 function_type: FUNC '(' parameter_type_list ')' .
   25              | FUNC '(' parameter_type_list ')' . return_type_list

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 176
    '['       shift, and go to state 47

    $default  reduce using rule 24 (function_type)

    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 273


State 196

   26 array_type: '[' INTEGER ']' type_name .

    $default  reduce using rule 26 (array_type)


State 197

   73 anonymous_function_declaration: FUNC '(' ')' . code_block
   74                               | FUNC '(' ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 176
    '['       shift, and go to state 47
    '{'       shift, and go to state 177

    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 274
    code_block        go to state 275


State 198

   68 parameter_list: parameter_list . ',' ID type_name
   75 anonymous_function_declaration: FUNC '(' parameter_list . ')' code_block
   76                               | FUNC '(' parameter_list . ')' return_type_list code_block

    ','  shift, and go to state 181
    ')'  shift, and go to state 276


State 199

  122 complex_primary: '(' expression ')' .
  134 array_complex_primary: '(' expression ')' .

    '['       reduce using rule 134 (array_complex_primary)
    $default  reduce using rule 122 (complex_primary)


State 200

  155 field_initializer: field_name ':' . expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 277


State 201

  154 field_initializer_list: field_initializer_list ',' . field_initializer

    ID  shift, and go to state 278

    field_name         go to state 142
    field_initializer  go to state 279


State 202

  149 struct_initializer: '{' field_initializer_list '}' .

    $default  reduce using rule 149 (struct_initializer)


State 203

  148 struct_initializer: '{' expression_list '}' .

    $default  reduce using rule 148 (struct_initializer)


State 204

  138 array_access: qualified_name '[' expression . ']'

    ']'  shift, and go to state 280


State 205

  150 struct_initializer: type_name '{' '}' .

    $default  reduce using rule 150 (struct_initializer)


State 206

  152 struct_initializer: type_name '{' field_initializer_list . '}'
  154 field_initializer_list: field_initializer_list . ',' field_initializer

    ','  shift, and go to state 201
    '}'  shift, and go to state 281


State 207

  151 struct_initializer: type_name '{' expression_list . '}'
  199 expression_list: expression_list . ',' expression

    ','  shift, and go to state 173
    '}'  shift, and go to state 282


State 208

  140 field_access: just_not_name '.' ID .

    $default  reduce using rule 140 (field_access)


State 209

  139 array_access: array_complex_primary '[' expression . ']'

    ']'  shift, and go to state 283


State 210

  142 method_call: method_access '(' ')' .

    $default  reduce using rule 142 (method_call)


State 211

  141 method_call: method_access '(' argument_list . ')'

    ')'  shift, and go to state 284


State 212

  160 argument_list: expression_list .
  199 expression_list: expression_list . ',' expression

    ','  shift, and go to state 173

    $default  reduce using rule 160 (argument_list)


State 213

  170 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 170 (multiplicative_expression)


State 214

  171 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 171 (multiplicative_expression)


State 215

  172 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 172 (multiplicative_expression)


State 216

  170 multiplicative_expression: multiplicative_expression . '*' unary_expression
  171                          | multiplicative_expression . '/' unary_expression
  172                          | multiplicative_expression . '%' unary_expression
  174 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 154
    '/'  shift, and go to state 155
    '%'  shift, and go to state 156

    $default  reduce using rule 174 (additive_expression)


State 217

  170 multiplicative_expression: multiplicative_expression . '*' unary_expression
  171                          | multiplicative_expression . '/' unary_expression
  172                          | multiplicative_expression . '%' unary_expression
  175 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 154
    '/'  shift, and go to state 155
    '%'  shift, and go to state 156

    $default  reduce using rule 175 (additive_expression)


State 218

  174 additive_expression: additive_expression . '+' multiplicative_expression
  175                    | additive_expression . '-' multiplicative_expression
  177 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 157
    '-'  shift, and go to state 158

    $default  reduce using rule 177 (shift_expression)


State 219

  174 additive_expression: additive_expression . '+' multiplicative_expression
  175                    | additive_expression . '-' multiplicative_expression
  178 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 157
    '-'  shift, and go to state 158

    $default  reduce using rule 178 (shift_expression)


State 220

  177 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  178                 | shift_expression . SHIFT_RIGHT additive_expression
  183 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 159
    SHIFT_RIGHT  shift, and go to state 160

    $default  reduce using rule 183 (relational_expression)


State 221

  177 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  178                 | shift_expression . SHIFT_RIGHT additive_expression
  182 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 159
    SHIFT_RIGHT  shift, and go to state 160

    $default  reduce using rule 182 (relational_expression)


State 222

  177 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  178                 | shift_expression . SHIFT_RIGHT additive_expression
  180 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 159
    SHIFT_RIGHT  shift, and go to state 160

    $default  reduce using rule 180 (relational_expression)


State 223

  177 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  178                 | shift_expression . SHIFT_RIGHT additive_expression
  181 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 159
    SHIFT_RIGHT  shift, and go to state 160

    $default  reduce using rule 181 (relational_expression)


State 224

  180 relational_expression: relational_expression . '<' shift_expression
  181                      | relational_expression . '>' shift_expression
  182                      | relational_expression . LE shift_expression
  183                      | relational_expression . GE shift_expression
  185 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 161
    LE   shift, and go to state 162
    '<'  shift, and go to state 163
    '>'  shift, and go to state 164

    $default  reduce using rule 185 (equality_expression)


State 225

  180 relational_expression: relational_expression . '<' shift_expression
  181                      | relational_expression . '>' shift_expression
  182                      | relational_expression . LE shift_expression
  183                      | relational_expression . GE shift_expression
  186 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 161
    LE   shift, and go to state 162
    '<'  shift, and go to state 163
    '>'  shift, and go to state 164

    $default  reduce using rule 186 (equality_expression)


State 226

  185 equality_expression: equality_expression . EQ relational_expression
  186                    | equality_expression . NE relational_expression
  188 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 165
    NE  shift, and go to state 166

    $default  reduce using rule 188 (and_expression)


State 227

  188 and_expression: and_expression . '&' equality_expression
  190 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 167

    $default  reduce using rule 190 (exclusive_or_expression)


State 228

  190 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  192 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 168

    $default  reduce using rule 192 (inclusive_or_expression)


State 229

  192 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  194 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 169

    $default  reduce using rule 194 (logical_and_expression)


State 230

  194 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  196 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 170

    $default  reduce using rule 196 (logical_or_expression)


State 231

  199 expression_list: expression_list ',' expression .

    $default  reduce using rule 199 (expression_list)


State 232

  112 variable_declaration: VAR variable_list variable_type '=' expression_list ';' .

    $default  reduce using rule 112 (variable_declaration)


State 233

    5 type_name_list: type_name_list . ',' type_name
   64 return_type_list: '(' type_name_list . ')'

    ','  shift, and go to state 285
    ')'  shift, and go to state 286


State 234

    4 type_name_list: type_name .

    $default  reduce using rule 4 (type_name_list)


State 235

   94 if_statement: IF . '(' expression ')' code_block
   95             | IF . '(' expression ')' code_block ELSE else_statemnet

    '('  shift, and go to state 287


State 236

   99 iteration_statemnet: WHILE . '(' expression ')' code_block

    '('  shift, and go to state 288


State 237

  100 iteration_statemnet: DO . code_block WHILE '(' expression ')' ';'

    '{'  shift, and go to state 177

    code_block  go to state 289


State 238

  101 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' code_block

    '('  shift, and go to state 290


State 239

   98 switch_statement: SWITCH . '(' expression ')' code_block

    '('  shift, and go to state 291


State 240

  108 jump_statement: RETURN . ';'
  109               | RETURN . expression_list ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    ';'             shift, and go to state 292
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 293


State 241

   83 code_block: '{' '}' .

    $default  reduce using rule 83 (code_block)


State 242

    3 qualified_name: qualified_name . '.' ID
    7 type_name: qualified_name .
  117 primary_expression: qualified_name .
  138 array_access: qualified_name . '[' expression ']'
  144 method_access: qualified_name .
  204 assignment_variable: qualified_name .

    '.'  shift, and go to state 63
    '['  shift, and go to state 146

    ADD_ASSIGN    reduce using rule 204 (assignment_variable)
    SUB_ASSIGN    reduce using rule 204 (assignment_variable)
    MUL_ASSIGN    reduce using rule 204 (assignment_variable)
    DIV_ASSIGN    reduce using rule 204 (assignment_variable)
    MOD_ASSIGN    reduce using rule 204 (assignment_variable)
    AND_ASSIGN    reduce using rule 204 (assignment_variable)
    OR_ASSIGN     reduce using rule 204 (assignment_variable)
    XOR_ASSIGN    reduce using rule 204 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 204 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 204 (assignment_variable)
    ','           reduce using rule 204 (assignment_variable)
    '('           reduce using rule 144 (method_access)
    '{'           reduce using rule 7 (type_name)
    '='           reduce using rule 204 (assignment_variable)
    $default      reduce using rule 117 (primary_expression)


State 243

   82 code_block: '{' local_variable_declaration_statements . '}'
   85 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    IF              shift, and go to state 235
    WHILE           shift, and go to state 236
    DO              shift, and go to state 237
    FOR             shift, and go to state 238
    SWITCH          shift, and go to state 239
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 74
    RETURN          shift, and go to state 240
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '}'             shift, and go to state 294
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                        go to state 242
    type_name                             go to state 88
    primitive_type                        go to state 51
    array_type                            go to state 53
    anonymous_function_declaration        go to state 89
    local_variable_declaration_statement  go to state 295
    statemnet                             go to state 245
    selection_statement                   go to state 246
    if_statement                          go to state 247
    switch_statement                      go to state 248
    iteration_statemnet                   go to state 249
    jump_statement                        go to state 250
    variable_declaration                  go to state 251
    primary_expression                    go to state 90
    just_not_name                         go to state 91
    complex_primary                       go to state 92
    complex_primary_no_parenthesis        go to state 93
    literal_name                          go to state 94
    array_complex_primary                 go to state 95
    array_access                          go to state 252
    field_access                          go to state 253
    method_call                           go to state 98
    method_access                         go to state 99
    initializer_expression                go to state 100
    struct_initializer                    go to state 101
    postfix_expression                    go to state 102
    real_postfix_expression               go to state 103
    unary_expression                      go to state 104
    unary_operator                        go to state 105
    multiplicative_expression             go to state 106
    additive_expression                   go to state 107
    shift_expression                      go to state 108
    relational_expression                 go to state 109
    equality_expression                   go to state 110
    and_expression                        go to state 111
    exclusive_or_expression               go to state 112
    inclusive_or_expression               go to state 113
    logical_and_expression                go to state 114
    logical_or_expression                 go to state 115
    expression                            go to state 254
    assignment_expression                 go to state 255
    assignment_variable_list              go to state 256
    assignment_variable                   go to state 257
    expression_statement                  go to state 258


State 244

   84 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 84 (local_variable_declaration_statements)


State 245

   87 local_variable_declaration_statement: statemnet .

    $default  reduce using rule 87 (local_variable_declaration_statement)


State 246

   89 statemnet: selection_statement .

    $default  reduce using rule 89 (statemnet)


State 247

   92 selection_statement: if_statement .

    $default  reduce using rule 92 (selection_statement)


State 248

   93 selection_statement: switch_statement .

    $default  reduce using rule 93 (selection_statement)


State 249

   90 statemnet: iteration_statemnet .

    $default  reduce using rule 90 (statemnet)


State 250

   91 statemnet: jump_statement .

    $default  reduce using rule 91 (statemnet)


State 251

   86 local_variable_declaration_statement: variable_declaration .

    $default  reduce using rule 86 (local_variable_declaration_statement)


State 252

  125 complex_primary_no_parenthesis: array_access .
  135 array_complex_primary: array_access .
  205 assignment_variable: array_access .

    ADD_ASSIGN    reduce using rule 205 (assignment_variable)
    SUB_ASSIGN    reduce using rule 205 (assignment_variable)
    MUL_ASSIGN    reduce using rule 205 (assignment_variable)
    DIV_ASSIGN    reduce using rule 205 (assignment_variable)
    MOD_ASSIGN    reduce using rule 205 (assignment_variable)
    AND_ASSIGN    reduce using rule 205 (assignment_variable)
    OR_ASSIGN     reduce using rule 205 (assignment_variable)
    XOR_ASSIGN    reduce using rule 205 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 205 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 205 (assignment_variable)
    ','           reduce using rule 205 (assignment_variable)
    '['           reduce using rule 135 (array_complex_primary)
    '='           reduce using rule 205 (assignment_variable)
    $default      reduce using rule 125 (complex_primary_no_parenthesis)


State 253

  126 complex_primary_no_parenthesis: field_access .
  136 array_complex_primary: field_access .
  206 assignment_variable: field_access .

    ADD_ASSIGN    reduce using rule 206 (assignment_variable)
    SUB_ASSIGN    reduce using rule 206 (assignment_variable)
    MUL_ASSIGN    reduce using rule 206 (assignment_variable)
    DIV_ASSIGN    reduce using rule 206 (assignment_variable)
    MOD_ASSIGN    reduce using rule 206 (assignment_variable)
    AND_ASSIGN    reduce using rule 206 (assignment_variable)
    OR_ASSIGN     reduce using rule 206 (assignment_variable)
    XOR_ASSIGN    reduce using rule 206 (assignment_variable)
    RIGHT_ASSIGN  reduce using rule 206 (assignment_variable)
    LEFT_ASSIGN   reduce using rule 206 (assignment_variable)
    ','           reduce using rule 206 (assignment_variable)
    '['           reduce using rule 136 (array_complex_primary)
    '='           reduce using rule 206 (assignment_variable)
    $default      reduce using rule 126 (complex_primary_no_parenthesis)


State 254

  217 expression_statement: expression .

    $default  reduce using rule 217 (expression_statement)


State 255

  218 expression_statement: assignment_expression .

    $default  reduce using rule 218 (expression_statement)


State 256

  200 assignment_expression: assignment_variable_list . '=' expression_list
  203 assignment_variable_list: assignment_variable_list . ',' assignment_variable

    ','  shift, and go to state 296
    '='  shift, and go to state 297


State 257

  201 assignment_expression: assignment_variable . compound_assignment_operator expression
  202 assignment_variable_list: assignment_variable .

    ADD_ASSIGN    shift, and go to state 298
    SUB_ASSIGN    shift, and go to state 299
    MUL_ASSIGN    shift, and go to state 300
    DIV_ASSIGN    shift, and go to state 301
    MOD_ASSIGN    shift, and go to state 302
    AND_ASSIGN    shift, and go to state 303
    OR_ASSIGN     shift, and go to state 304
    XOR_ASSIGN    shift, and go to state 305
    RIGHT_ASSIGN  shift, and go to state 306
    LEFT_ASSIGN   shift, and go to state 307

    $default  reduce using rule 202 (assignment_variable_list)

    compound_assignment_operator  go to state 308


State 258

   88 statemnet: expression_statement . ';'

    ';'  shift, and go to state 309


State 259

   70 function_declaration: FUNC ID '(' ')' return_type_list code_block .

    $default  reduce using rule 70 (function_declaration)


State 260

   68 parameter_list: parameter_list ',' ID . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 310
    primitive_type  go to state 51
    array_type      go to state 53


State 261

   72 function_declaration: FUNC ID '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 311


State 262

   71 function_declaration: FUNC ID '(' parameter_list ')' code_block .

    $default  reduce using rule 71 (function_declaration)


State 263

   78 method_declaration: FUNC method_name '(' ')' return_type_list code_block .

    $default  reduce using rule 78 (method_declaration)


State 264

   80 method_declaration: FUNC method_name '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 312


State 265

   79 method_declaration: FUNC method_name '(' parameter_list ')' code_block .

    $default  reduce using rule 79 (method_declaration)


State 266

   54 field_declaration: ID type_name . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 313


State 267

   48 type_declaration: TYPE ID STRUCT '{' field_declarations '}' .

    $default  reduce using rule 48 (type_declaration)


State 268

   53 field_declarations: field_declarations field_declaration .

    $default  reduce using rule 53 (field_declarations)


State 269

   57 interface_function_declaration: FUNC ID . '(' ')' semicolons
   58                               | FUNC ID . '(' ')' return_type_list semicolons
   59                               | FUNC ID . '(' parameter_type_list ')' semicolons
   60                               | FUNC ID . '(' parameter_type_list ')' return_type_list semicolons
   61                               | FUNC ID . '(' parameter_list ')' semicolons
   62                               | FUNC ID . '(' parameter_list ')' return_type_list semicolons

    '('  shift, and go to state 314


State 270

   49 type_declaration: TYPE ID INTERFACE '{' interface_function_declarations '}' .

    $default  reduce using rule 49 (type_declaration)


State 271

   56 interface_function_declarations: interface_function_declarations interface_function_declaration .

    $default  reduce using rule 56 (interface_function_declarations)


State 272

   66 parameter_type_list: parameter_type_list ',' type_name .

    $default  reduce using rule 66 (parameter_type_list)


State 273

   25 function_type: FUNC '(' parameter_type_list ')' return_type_list .

    $default  reduce using rule 25 (function_type)


State 274

   74 anonymous_function_declaration: FUNC '(' ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 315


State 275

   73 anonymous_function_declaration: FUNC '(' ')' code_block .

    $default  reduce using rule 73 (anonymous_function_declaration)


State 276

   75 anonymous_function_declaration: FUNC '(' parameter_list ')' . code_block
   76                               | FUNC '(' parameter_list ')' . return_type_list code_block

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '('       shift, and go to state 176
    '['       shift, and go to state 47
    '{'       shift, and go to state 177

    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 316
    code_block        go to state 317


State 277

  155 field_initializer: field_name ':' expression .

    $default  reduce using rule 155 (field_initializer)


State 278

   27 field_name: ID .

    $default  reduce using rule 27 (field_name)


State 279

  154 field_initializer_list: field_initializer_list ',' field_initializer .

    $default  reduce using rule 154 (field_initializer_list)


State 280

  138 array_access: qualified_name '[' expression ']' .

    $default  reduce using rule 138 (array_access)


State 281

  152 struct_initializer: type_name '{' field_initializer_list '}' .

    $default  reduce using rule 152 (struct_initializer)


State 282

  151 struct_initializer: type_name '{' expression_list '}' .

    $default  reduce using rule 151 (struct_initializer)


State 283

  139 array_access: array_complex_primary '[' expression ']' .

    $default  reduce using rule 139 (array_access)


State 284

  141 method_call: method_access '(' argument_list ')' .

    $default  reduce using rule 141 (method_call)


State 285

    5 type_name_list: type_name_list ',' . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    qualified_name  go to state 49
    type_name       go to state 318
    primitive_type  go to state 51
    array_type      go to state 53


State 286

   64 return_type_list: '(' type_name_list ')' .

    $default  reduce using rule 64 (return_type_list)


State 287

   94 if_statement: IF '(' . expression ')' code_block
   95             | IF '(' . expression ')' code_block ELSE else_statemnet

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 319


State 288

   99 iteration_statemnet: WHILE '(' . expression ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 320


State 289

  100 iteration_statemnet: DO code_block . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 321


State 290

  101 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    ';'             shift, and go to state 322
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 242
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    for_init                        go to state 323
    variable_declaration            go to state 324
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 252
    field_access                    go to state 253
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 254
    assignment_expression           go to state 255
    assignment_variable_list        go to state 256
    assignment_variable             go to state 257
    expression_statement            go to state 325


State 291

   98 switch_statement: SWITCH '(' . expression ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 326


State 292

  108 jump_statement: RETURN ';' .

    $default  reduce using rule 108 (jump_statement)


State 293

  109 jump_statement: RETURN expression_list . ';'
  199 expression_list: expression_list . ',' expression

    ';'  shift, and go to state 327
    ','  shift, and go to state 173


State 294

   82 code_block: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 82 (code_block)


State 295

   85 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 85 (local_variable_declaration_statements)


State 296

  203 assignment_variable_list: assignment_variable_list ',' . assignment_variable

    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82

    qualified_name                  go to state 328
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    just_not_name                   go to state 329
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 252
    field_access                    go to state 253
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    assignment_variable             go to state 330


State 297

  200 assignment_expression: assignment_variable_list '=' . expression_list

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 116
    expression_list                 go to state 331


State 298

  207 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 207 (compound_assignment_operator)


State 299

  208 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 208 (compound_assignment_operator)


State 300

  209 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 209 (compound_assignment_operator)


State 301

  210 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 210 (compound_assignment_operator)


State 302

  211 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 211 (compound_assignment_operator)


State 303

  212 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 212 (compound_assignment_operator)


State 304

  213 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 213 (compound_assignment_operator)


State 305

  214 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 214 (compound_assignment_operator)


State 306

  215 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 215 (compound_assignment_operator)


State 307

  216 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 216 (compound_assignment_operator)


State 308

  201 assignment_expression: assignment_variable compound_assignment_operator . expression

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 332


State 309

   88 statemnet: expression_statement ';' .

    $default  reduce using rule 88 (statemnet)


State 310

   68 parameter_list: parameter_list ',' ID type_name .

    $default  reduce using rule 68 (parameter_list)


State 311

   72 function_declaration: FUNC ID '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 72 (function_declaration)


State 312

   80 method_declaration: FUNC method_name '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 80 (method_declaration)


State 313

   54 field_declaration: ID type_name semicolons .

    $default  reduce using rule 54 (field_declaration)


State 314

   57 interface_function_declaration: FUNC ID '(' . ')' semicolons
   58                               | FUNC ID '(' . ')' return_type_list semicolons
   59                               | FUNC ID '(' . parameter_type_list ')' semicolons
   60                               | FUNC ID '(' . parameter_type_list ')' return_type_list semicolons
   61                               | FUNC ID '(' . parameter_list ')' semicolons
   62                               | FUNC ID '(' . parameter_list ')' return_type_list semicolons

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 333
    ')'       shift, and go to state 334
    '['       shift, and go to state 47

    qualified_name       go to state 49
    type_name            go to state 133
    primitive_type       go to state 51
    array_type           go to state 53
    parameter_type_list  go to state 335
    parameter_list       go to state 336


State 315

   74 anonymous_function_declaration: FUNC '(' ')' return_type_list code_block .

    $default  reduce using rule 74 (anonymous_function_declaration)


State 316

   76 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list . code_block

    '{'  shift, and go to state 177

    code_block  go to state 337


State 317

   75 anonymous_function_declaration: FUNC '(' parameter_list ')' code_block .

    $default  reduce using rule 75 (anonymous_function_declaration)


State 318

    5 type_name_list: type_name_list ',' type_name .

    $default  reduce using rule 5 (type_name_list)


State 319

   94 if_statement: IF '(' expression . ')' code_block
   95             | IF '(' expression . ')' code_block ELSE else_statemnet

    ')'  shift, and go to state 338


State 320

   99 iteration_statemnet: WHILE '(' expression . ')' code_block

    ')'  shift, and go to state 339


State 321

  100 iteration_statemnet: DO code_block WHILE . '(' expression ')' ';'

    '('  shift, and go to state 340


State 322

  104 for_init: ';' .

    $default  reduce using rule 104 (for_init)


State 323

  101 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    ';'             shift, and go to state 341
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    for_expr                        go to state 342
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 343


State 324

  103 for_init: variable_declaration .

    $default  reduce using rule 103 (for_init)


State 325

  102 for_init: expression_statement . ';'

    ';'  shift, and go to state 344


State 326

   98 switch_statement: SWITCH '(' expression . ')' code_block

    ')'  shift, and go to state 345


State 327

  109 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 109 (jump_statement)


State 328

    3 qualified_name: qualified_name . '.' ID
    7 type_name: qualified_name .
  138 array_access: qualified_name . '[' expression ']'
  144 method_access: qualified_name .
  204 assignment_variable: qualified_name .

    '.'  shift, and go to state 63
    '['  shift, and go to state 146

    '('       reduce using rule 144 (method_access)
    '{'       reduce using rule 7 (type_name)
    $default  reduce using rule 204 (assignment_variable)


State 329

  140 field_access: just_not_name . '.' ID

    '.'  shift, and go to state 148


State 330

  203 assignment_variable_list: assignment_variable_list ',' assignment_variable .

    $default  reduce using rule 203 (assignment_variable_list)


State 331

  199 expression_list: expression_list . ',' expression
  200 assignment_expression: assignment_variable_list '=' expression_list .

    ','  shift, and go to state 173

    $default  reduce using rule 200 (assignment_expression)


State 332

  201 assignment_expression: assignment_variable compound_assignment_operator expression .

    $default  reduce using rule 201 (assignment_expression)


State 333

    2 qualified_name: ID .
   67 parameter_list: ID . type_name

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    '['       shift, and go to state 47

    $default  reduce using rule 2 (qualified_name)

    qualified_name  go to state 49
    type_name       go to state 175
    primitive_type  go to state 51
    array_type      go to state 53


State 334

   57 interface_function_declaration: FUNC ID '(' ')' . semicolons
   58                               | FUNC ID '(' ')' . return_type_list semicolons

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    ';'       shift, and go to state 62
    '('       shift, and go to state 176
    '['       shift, and go to state 47

    semicolons        go to state 346
    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 347


State 335

   59 interface_function_declaration: FUNC ID '(' parameter_type_list . ')' semicolons
   60                               | FUNC ID '(' parameter_type_list . ')' return_type_list semicolons
   66 parameter_type_list: parameter_type_list . ',' type_name

    ','  shift, and go to state 194
    ')'  shift, and go to state 348


State 336

   61 interface_function_declaration: FUNC ID '(' parameter_list . ')' semicolons
   62                               | FUNC ID '(' parameter_list . ')' return_type_list semicolons
   68 parameter_list: parameter_list . ',' ID type_name

    ','  shift, and go to state 181
    ')'  shift, and go to state 349


State 337

   76 anonymous_function_declaration: FUNC '(' parameter_list ')' return_type_list code_block .

    $default  reduce using rule 76 (anonymous_function_declaration)


State 338

   94 if_statement: IF '(' expression ')' . code_block
   95             | IF '(' expression ')' . code_block ELSE else_statemnet

    '{'  shift, and go to state 177

    code_block  go to state 350


State 339

   99 iteration_statemnet: WHILE '(' expression ')' . code_block

    '{'  shift, and go to state 177

    code_block  go to state 351


State 340

  100 iteration_statemnet: DO code_block WHILE '(' . expression ')' ';'

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 87
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 96
    field_access                    go to state 97
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 352


State 341

  106 for_expr: ';' .

    $default  reduce using rule 106 (for_expr)


State 342

  101 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' code_block

    INC             shift, and go to state 71
    DEC             shift, and go to state 72
    TOKEN_THIS      shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    ANY_TYPE        shift, and go to state 45
    TOKEN_NULL      shift, and go to state 75
    TOKEN_TRUE      shift, and go to state 76
    TOKEN_FALSE     shift, and go to state 77
    INTEGER         shift, and go to state 78
    FLOAT           shift, and go to state 79
    STRING_LITERAL  shift, and go to state 80
    ID              shift, and go to state 20
    '('             shift, and go to state 81
    '['             shift, and go to state 47
    '{'             shift, and go to state 82
    '+'             shift, and go to state 83
    '-'             shift, and go to state 84
    '~'             shift, and go to state 85
    '!'             shift, and go to state 86

    qualified_name                  go to state 242
    type_name                       go to state 88
    primitive_type                  go to state 51
    array_type                      go to state 53
    anonymous_function_declaration  go to state 89
    for_incr                        go to state 353
    primary_expression              go to state 90
    just_not_name                   go to state 91
    complex_primary                 go to state 92
    complex_primary_no_parenthesis  go to state 93
    literal_name                    go to state 94
    array_complex_primary           go to state 95
    array_access                    go to state 252
    field_access                    go to state 253
    method_call                     go to state 98
    method_access                   go to state 99
    initializer_expression          go to state 100
    struct_initializer              go to state 101
    postfix_expression              go to state 102
    real_postfix_expression         go to state 103
    unary_expression                go to state 104
    unary_operator                  go to state 105
    multiplicative_expression       go to state 106
    additive_expression             go to state 107
    shift_expression                go to state 108
    relational_expression           go to state 109
    equality_expression             go to state 110
    and_expression                  go to state 111
    exclusive_or_expression         go to state 112
    inclusive_or_expression         go to state 113
    logical_and_expression          go to state 114
    logical_or_expression           go to state 115
    expression                      go to state 254
    assignment_expression           go to state 255
    assignment_variable_list        go to state 256
    assignment_variable             go to state 257
    expression_statement            go to state 354


State 343

  105 for_expr: expression . ';'

    ';'  shift, and go to state 355


State 344

  102 for_init: expression_statement ';' .

    $default  reduce using rule 102 (for_init)


State 345

   98 switch_statement: SWITCH '(' expression ')' . code_block

    '{'  shift, and go to state 177

    code_block  go to state 356


State 346

   57 interface_function_declaration: FUNC ID '(' ')' semicolons .

    $default  reduce using rule 57 (interface_function_declaration)


State 347

   58 interface_function_declaration: FUNC ID '(' ')' return_type_list . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 357


State 348

   59 interface_function_declaration: FUNC ID '(' parameter_type_list ')' . semicolons
   60                               | FUNC ID '(' parameter_type_list ')' . return_type_list semicolons

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    ';'       shift, and go to state 62
    '('       shift, and go to state 176
    '['       shift, and go to state 47

    semicolons        go to state 358
    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 359


State 349

   61 interface_function_declaration: FUNC ID '(' parameter_list ')' . semicolons
   62                               | FUNC ID '(' parameter_list ')' . return_type_list semicolons

    INT8      shift, and go to state 33
    INT16     shift, and go to state 34
    INT32     shift, and go to state 35
    INT64     shift, and go to state 36
    UINT8     shift, and go to state 37
    UINT16    shift, and go to state 38
    UINT32    shift, and go to state 39
    UINT64    shift, and go to state 40
    FLOAT32   shift, and go to state 41
    FLOAT64   shift, and go to state 42
    BOOL      shift, and go to state 43
    STRING    shift, and go to state 44
    ANY_TYPE  shift, and go to state 45
    ID        shift, and go to state 20
    ';'       shift, and go to state 62
    '('       shift, and go to state 176
    '['       shift, and go to state 47

    semicolons        go to state 360
    qualified_name    go to state 49
    type_name         go to state 178
    primitive_type    go to state 51
    array_type        go to state 53
    return_type_list  go to state 361


State 350

   94 if_statement: IF '(' expression ')' code_block .
   95             | IF '(' expression ')' code_block . ELSE else_statemnet

    ELSE  shift, and go to state 362

    $default  reduce using rule 94 (if_statement)


State 351

   99 iteration_statemnet: WHILE '(' expression ')' code_block .

    $default  reduce using rule 99 (iteration_statemnet)


State 352

  100 iteration_statemnet: DO code_block WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 363


State 353

  101 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' code_block

    ')'  shift, and go to state 364


State 354

  107 for_incr: expression_statement .

    $default  reduce using rule 107 (for_incr)


State 355

  105 for_expr: expression ';' .

    $default  reduce using rule 105 (for_expr)


State 356

   98 switch_statement: SWITCH '(' expression ')' code_block .

    $default  reduce using rule 98 (switch_statement)


State 357

   58 interface_function_declaration: FUNC ID '(' ')' return_type_list semicolons .

    $default  reduce using rule 58 (interface_function_declaration)


State 358

   59 interface_function_declaration: FUNC ID '(' parameter_type_list ')' semicolons .

    $default  reduce using rule 59 (interface_function_declaration)


State 359

   60 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 365


State 360

   61 interface_function_declaration: FUNC ID '(' parameter_list ')' semicolons .

    $default  reduce using rule 61 (interface_function_declaration)


State 361

   62 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list . semicolons

    ';'  shift, and go to state 62

    semicolons  go to state 366


State 362

   95 if_statement: IF '(' expression ')' code_block ELSE . else_statemnet

    IF   shift, and go to state 235
    '{'  shift, and go to state 177

    code_block      go to state 367
    if_statement    go to state 368
    else_statemnet  go to state 369


State 363

  100 iteration_statemnet: DO code_block WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 370


State 364

  101 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . code_block

    '{'  shift, and go to state 177

    code_block  go to state 371


State 365

   60 interface_function_declaration: FUNC ID '(' parameter_type_list ')' return_type_list semicolons .

    $default  reduce using rule 60 (interface_function_declaration)


State 366

   62 interface_function_declaration: FUNC ID '(' parameter_list ')' return_type_list semicolons .

    $default  reduce using rule 62 (interface_function_declaration)


State 367

   97 else_statemnet: code_block .

    $default  reduce using rule 97 (else_statemnet)


State 368

   96 else_statemnet: if_statement .

    $default  reduce using rule 96 (else_statemnet)


State 369

   95 if_statement: IF '(' expression ')' code_block ELSE else_statemnet .

    $default  reduce using rule 95 (if_statement)


State 370

  100 iteration_statemnet: DO code_block WHILE '(' expression ')' ';' .

    $default  reduce using rule 100 (iteration_statemnet)


State 371

  101 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' code_block .

    $default  reduce using rule 101 (iteration_statemnet)
