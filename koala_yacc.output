Terminals unused in grammar

   ELLIPSIS
   NOT
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   NEW
   HEX
   OCT


Grammar

    0 $accept: Program $end

    1 PackageOrTypeName: IDENTIFIER
    2                  | PackageOrTypeName '.' IDENTIFIER

    3 TypeList: Type
    4         | TypeList ',' Type

    5 Type: PrimitiveType
    6     | ReferenceType
    7     | Dims PrimitiveType
    8     | Dims ReferenceType

    9 PrimitiveType: UINT8
   10              | UINT16
   11              | UINT32
   12              | UINT64
   13              | INT8
   14              | INT16
   15              | INT32
   16              | INT64
   17              | FLOAT32
   18              | FLOAT64
   19              | BOOL
   20              | STRING
   21              | ROOT_OBJECT

   22 ReferenceType: PackageOrTypeName
   23              | FunctionType

   24 Dims: '[' ']'
   25     | Dims '[' ']'

   26 FunctionType: FUNC '(' ')'
   27             | FUNC '(' ')' ReturnTypeList
   28             | FUNC '(' TypeList ')'
   29             | FUNC '(' TypeList ')' ReturnTypeList

   30 ReturnTypeList: Type
   31               | '(' Type ')'
   32               | '(' ReturnTypeList ',' Type ')'

   33 Program: PackageDeclaration ImportDeclarations Declarations
   34        | PackageDeclaration ImportDeclarations
   35        | PackageDeclaration Declarations
   36        | ImportDeclarations Declarations
   37        | PackageDeclaration
   38        | ImportDeclarations
   39        | Declarations

   40 PackageDeclaration: PACKAGE PackageOrTypeName ';'

   41 ImportDeclarations: ImportDeclaration
   42                   | ImportDeclarations ImportDeclaration

   43 ImportDeclaration: IMPORT PackageOrTypeName ';'
   44                  | IMPORT PackageOrTypeName '.' '*' ';'

   45 Declarations: Declaration
   46             | Declarations Declaration

   47 Declaration: VariableDeclaration
   48            | TypeDeclaration
   49            | FunctionDeclaration

   50 VariableDeclaration: VAR VariableList Type ';'
   51                    | VAR VariableList '=' VariableInitializerList ';'
   52                    | VAR VariableList Type '=' VariableInitializerList ';'

   53 VariableList: IDENTIFIER
   54             | VariableList ',' IDENTIFIER

   55 VariableInitializerList: ComplexVariableInitializer
   56                        | VariableInitializerList ',' ComplexVariableInitializer

   57 ComplexVariableInitializer: basic_expression
   58                           | PrimitiveType '(' basic_expression ')'
   59                           | AnonymousFunctionDeclaration
   60                           | '{' ArrayInitializerList '}'
   61                           | DimExprs Type
   62                           | DimExprs Type '{' ArrayInitializerList '}'
   63                           | DimExprs Type '{' '}'

   64 ArrayInitializerList: ArrayInitializer
   65                     | ArrayInitializerList ',' ArrayInitializer

   66 DimExprs: DimExpr
   67         | DimExprs DimExpr

   68 DimExpr: '[' basic_expression ']'

   69 ArrayInitializer: basic_expression
   70                 | PrimitiveType '(' basic_expression ')'
   71                 | AnonymousFunctionDeclaration
   72                 | ArrayPositionInitializer
   73                 | '{' ArrayInitializerList '}'

   74 ArrayPositionInitializer: INTEGER ':' ArrayInitializer

   75 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' ';'
   76                | TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' ';'
   77                | TYPE IDENTIFIER Type ';'

   78 MemberDeclarations: MemberDeclaration
   79                   | MemberDeclarations MemberDeclaration

   80 MemberDeclaration: FieldDeclaration
   81                  | MethodDeclaration

   82 FieldDeclaration: VAR IDENTIFIER Type ';'

   83 MethodDeclaration: MethodDeclarationHeader1 CodeBlock

   84 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')'
   85                         | FUNC IDENTIFIER '(' ')' ReturnTypeList
   86                         | FUNC IDENTIFIER '(' ParameterList ')'
   87                         | FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList

   88 ParameterList: IDENTIFIER Type
   89              | ParameterList ',' IDENTIFIER Type

   90 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')'
   91                         | FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList

   92 CodeBlock: '{' local_variable_declaration_statements '}'
   93          | '{' '}'

   94 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration
   95                              | InterfaceFunctionDeclarations InterfaceFunctionDeclaration

   96 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';'
   97                             | MethodDeclarationHeader2 ';'

   98 FunctionDeclaration: MethodDeclarationHeader1 CodeBlock

   99 AnonymousFunctionDeclaration: FUNC '(' ')' CodeBlock
  100                             | FUNC '(' ')' ReturnTypeList CodeBlock
  101                             | FUNC '(' ParameterList ')' CodeBlock
  102                             | FUNC '(' ParameterList ')' ReturnTypeList CodeBlock

  103 local_variable_declaration_statements: local_variable_declaration_statement
  104                                      | local_variable_declaration_statements local_variable_declaration_statement

  105 local_variable_declaration_statement: VariableDeclaration
  106                                     | statement

  107 statement: expression_statement ';'
  108          | selection_statement
  109          | iteration_statemnet
  110          | jump_statement

  111 selection_statement: if_statement
  112                    | switch_statement

  113 if_statement: IF '(' basic_expression ')' CodeBlock
  114             | IF '(' basic_expression ')' CodeBlock ELSE else_statemnet

  115 else_statemnet: if_statement
  116               | CodeBlock

  117 switch_statement: SWITCH '(' basic_expression ')' CodeBlock

  118 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock
  119                    | DO CodeBlock WHILE '(' basic_expression ')' ';'
  120                    | FOR '(' for_init for_expr for_incr ')' CodeBlock

  121 for_init: expression_statement ';'
  122         | VariableDeclaration
  123         | ';'

  124 for_expr: basic_expression ';'
  125         | ';'

  126 for_incr: expression_statement

  127 jump_statement: RETURN ';'
  128               | RETURN expression_list ';'

  129 primary_expression: IDENTIFIER
  130                   | constant
  131                   | TOKEN_THIS
  132                   | '(' basic_expression ')'

  133 constant: INTEGER
  134         | FLOAT
  135         | STRING_LITERAL
  136         | TOKEN_NIL
  137         | TOKEN_TRUE
  138         | TOKEN_FALSE

  139 postfix_expression: primary_expression
  140                   | postfix_expression INC
  141                   | postfix_expression DEC
  142                   | postfix_expression '.' IDENTIFIER
  143                   | postfix_expression '[' basic_expression ']'
  144                   | postfix_expression '(' expression_list ')'
  145                   | postfix_expression '(' ')'
  146                   | postfix_expression '(' ')' CodeBlock

  147 unary_expression: postfix_expression
  148                 | INC unary_expression
  149                 | DEC unary_expression
  150                 | '+' unary_expression
  151                 | '-' unary_expression
  152                 | '~' unary_expression
  153                 | '!' unary_expression

  154 multiplicative_expression: unary_expression
  155                          | multiplicative_expression '*' unary_expression
  156                          | multiplicative_expression '/' unary_expression
  157                          | multiplicative_expression '%' unary_expression

  158 additive_expression: multiplicative_expression
  159                    | additive_expression '+' multiplicative_expression
  160                    | additive_expression '-' multiplicative_expression

  161 shift_expression: additive_expression
  162                 | shift_expression SHIFT_LEFT additive_expression
  163                 | shift_expression SHIFT_RIGHT additive_expression

  164 relational_expression: shift_expression
  165                      | relational_expression '<' shift_expression
  166                      | relational_expression '>' shift_expression
  167                      | relational_expression LE shift_expression
  168                      | relational_expression GE shift_expression

  169 equality_expression: relational_expression
  170                    | equality_expression EQ relational_expression
  171                    | equality_expression NE relational_expression

  172 and_expression: equality_expression
  173               | and_expression '&' equality_expression

  174 exclusive_or_expression: and_expression
  175                        | exclusive_or_expression '^' and_expression

  176 inclusive_or_expression: exclusive_or_expression
  177                        | inclusive_or_expression '|' exclusive_or_expression

  178 logical_and_expression: inclusive_or_expression
  179                       | logical_and_expression AND inclusive_or_expression

  180 logical_or_expression: logical_and_expression
  181                      | logical_or_expression OR logical_and_expression

  182 basic_expression: logical_or_expression

  183 expression: basic_expression

  184 expression_list: expression
  185                | expression_list ',' expression

  186 postfix_expression_list: postfix_expression
  187                        | postfix_expression_list ',' postfix_expression

  188 assignment_expression: postfix_expression_list '=' VariableInitializerList
  189                      | postfix_expression compound_assignment_operator ComplexVariableInitializer
  190                      | postfix_expression VAR_ASSIGN ComplexVariableInitializer

  191 compound_assignment_operator: ADD_ASSIGN
  192                             | SUB_ASSIGN
  193                             | MUL_ASSIGN
  194                             | DIV_ASSIGN
  195                             | MOD_ASSIGN
  196                             | AND_ASSIGN
  197                             | OR_ASSIGN
  198                             | XOR_ASSIGN
  199                             | RIGHT_ASSIGN
  200                             | LEFT_ASSIGN

  201 expression_statement: basic_expression
  202                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 153
'%' (37) 157
'&' (38) 173
'(' (40) 26 27 28 29 31 32 58 70 84 85 86 87 90 91 99 100 101 102 113
    114 117 118 119 120 132 144 145 146
')' (41) 26 27 28 29 31 32 58 70 84 85 86 87 90 91 99 100 101 102 113
    114 117 118 119 120 132 144 145 146
'*' (42) 44 155
'+' (43) 150 159
',' (44) 4 32 54 56 65 89 185 187
'-' (45) 151 160
'.' (46) 2 44 142
'/' (47) 156
':' (58) 74
';' (59) 40 43 44 50 51 52 75 76 77 82 96 97 107 119 121 123 124 125
    127 128
'<' (60) 165
'=' (61) 51 52 188
'>' (62) 166
'[' (91) 24 25 68 143
']' (93) 24 25 68 143
'^' (94) 175
'{' (123) 60 62 63 73 75 76 92 93
'|' (124) 177
'}' (125) 60 62 63 73 75 76 92 93
'~' (126) 152
error (256)
ELLIPSIS (258)
VAR_ASSIGN (259) 190
ADD_ASSIGN (260) 191
SUB_ASSIGN (261) 192
MUL_ASSIGN (262) 193
DIV_ASSIGN (263) 194
MOD_ASSIGN (264) 195
AND_ASSIGN (265) 196
OR_ASSIGN (266) 197
XOR_ASSIGN (267) 198
RIGHT_ASSIGN (268) 199
LEFT_ASSIGN (269) 200
EQ (270) 170
NE (271) 171
GE (272) 168
LE (273) 167
AND (274) 179
OR (275) 181
NOT (276)
SHIFT_LEFT (277) 162
SHIFT_RIGHT (278) 163
INC (279) 140 148
DEC (280) 141 149
IF (281) 113 114
ELSE (282) 114
WHILE (283) 118 119
DO (284) 119
FOR (285) 120
IN (286)
SWITCH (287) 117
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 50 51 52 82
FUNC (293) 26 27 28 29 84 85 86 87 90 91 99 100 101 102
RETURN (294) 127 128
STRUCT (295) 75
INTERFACE (296) 76
TYPE (297) 75 76 77
CONST (298)
PACKAGE (299) 40
IMPORT (300) 43 44
NEW (301)
INT8 (302) 13
INT16 (303) 14
INT32 (304) 15
INT64 (305) 16
UINT8 (306) 9
UINT16 (307) 10
UINT32 (308) 11
UINT64 (309) 12
FLOAT32 (310) 17
FLOAT64 (311) 18
BOOL (312) 19
STRING (313) 20
ROOT_OBJECT (314) 21
TOKEN_THIS (315) 131
TOKEN_NIL (316) 136
TOKEN_TRUE (317) 137
TOKEN_FALSE (318) 138
INTEGER (319) 74 133
HEX (320)
OCT (321)
FLOAT (322) 134
STRING_LITERAL (323) 135
IDENTIFIER (324) 1 2 53 54 75 76 77 82 84 85 86 87 88 89 90 91 129
    142


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
PackageOrTypeName (94)
    on left: 1 2, on right: 2 22 40 43 44
TypeList (95)
    on left: 3 4, on right: 4 28 29 90 91
Type (96)
    on left: 5 6 7 8, on right: 3 4 30 31 32 50 52 61 62 63 77 82 88
    89
PrimitiveType (97)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21, on right: 5 7 58
    70
ReferenceType (98)
    on left: 22 23, on right: 6 8
Dims (99)
    on left: 24 25, on right: 7 8 25
FunctionType (100)
    on left: 26 27 28 29, on right: 23
ReturnTypeList (101)
    on left: 30 31 32, on right: 27 29 32 85 87 91 100 102
Program (102)
    on left: 33 34 35 36 37 38 39, on right: 0
PackageDeclaration (103)
    on left: 40, on right: 33 34 35 37
ImportDeclarations (104)
    on left: 41 42, on right: 33 34 36 38 42
ImportDeclaration (105)
    on left: 43 44, on right: 41 42
Declarations (106)
    on left: 45 46, on right: 33 35 36 39 46
Declaration (107)
    on left: 47 48 49, on right: 45 46
VariableDeclaration (108)
    on left: 50 51 52, on right: 47 105 122
VariableList (109)
    on left: 53 54, on right: 50 51 52 54
VariableInitializerList (110)
    on left: 55 56, on right: 51 52 56 188
ComplexVariableInitializer (111)
    on left: 57 58 59 60 61 62 63, on right: 55 56 189 190
ArrayInitializerList (112)
    on left: 64 65, on right: 60 62 65 73
DimExprs (113)
    on left: 66 67, on right: 61 62 63 67
DimExpr (114)
    on left: 68, on right: 66 67
ArrayInitializer (115)
    on left: 69 70 71 72 73, on right: 64 65 74
ArrayPositionInitializer (116)
    on left: 74, on right: 72
TypeDeclaration (117)
    on left: 75 76 77, on right: 48
MemberDeclarations (118)
    on left: 78 79, on right: 75 79
MemberDeclaration (119)
    on left: 80 81, on right: 78 79
FieldDeclaration (120)
    on left: 82, on right: 80
MethodDeclaration (121)
    on left: 83, on right: 81
MethodDeclarationHeader1 (122)
    on left: 84 85 86 87, on right: 83 96 98
ParameterList (123)
    on left: 88 89, on right: 86 87 89 101 102
MethodDeclarationHeader2 (124)
    on left: 90 91, on right: 97
CodeBlock (125)
    on left: 92 93, on right: 83 98 99 100 101 102 113 114 116 117
    118 119 120 146
InterfaceFunctionDeclarations (126)
    on left: 94 95, on right: 76 95
InterfaceFunctionDeclaration (127)
    on left: 96 97, on right: 94 95
FunctionDeclaration (128)
    on left: 98, on right: 49
AnonymousFunctionDeclaration (129)
    on left: 99 100 101 102, on right: 59 71
local_variable_declaration_statements (130)
    on left: 103 104, on right: 92 104
local_variable_declaration_statement (131)
    on left: 105 106, on right: 103 104
statement (132)
    on left: 107 108 109 110, on right: 106
selection_statement (133)
    on left: 111 112, on right: 108
if_statement (134)
    on left: 113 114, on right: 111 115
else_statemnet (135)
    on left: 115 116, on right: 114
switch_statement (136)
    on left: 117, on right: 112
iteration_statemnet (137)
    on left: 118 119 120, on right: 109
for_init (138)
    on left: 121 122 123, on right: 120
for_expr (139)
    on left: 124 125, on right: 120
for_incr (140)
    on left: 126, on right: 120
jump_statement (141)
    on left: 127 128, on right: 110
primary_expression (142)
    on left: 129 130 131 132, on right: 139
constant (143)
    on left: 133 134 135 136 137 138, on right: 130
postfix_expression (144)
    on left: 139 140 141 142 143 144 145 146, on right: 140 141 142
    143 144 145 146 147 186 187 189 190
unary_expression (145)
    on left: 147 148 149 150 151 152 153, on right: 148 149 150 151
    152 153 154 155 156 157
multiplicative_expression (146)
    on left: 154 155 156 157, on right: 155 156 157 158 159 160
additive_expression (147)
    on left: 158 159 160, on right: 159 160 161 162 163
shift_expression (148)
    on left: 161 162 163, on right: 162 163 164 165 166 167 168
relational_expression (149)
    on left: 164 165 166 167 168, on right: 165 166 167 168 169 170
    171
equality_expression (150)
    on left: 169 170 171, on right: 170 171 172 173
and_expression (151)
    on left: 172 173, on right: 173 174 175
exclusive_or_expression (152)
    on left: 174 175, on right: 175 176 177
inclusive_or_expression (153)
    on left: 176 177, on right: 177 178 179
logical_and_expression (154)
    on left: 178 179, on right: 179 180 181
logical_or_expression (155)
    on left: 180 181, on right: 181 182
basic_expression (156)
    on left: 182, on right: 57 58 68 69 70 113 114 117 118 119 124
    132 143 183 201
expression (157)
    on left: 183, on right: 184 185
expression_list (158)
    on left: 184 185, on right: 128 144 185
postfix_expression_list (159)
    on left: 186 187, on right: 187 188
assignment_expression (160)
    on left: 188 189 190, on right: 202
compound_assignment_operator (161)
    on left: 191 192 193 194 195 196 197 198 199 200, on right: 189
expression_statement (162)
    on left: 201 202, on right: 107 121 126


State 0

    0 $accept: . Program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    PACKAGE  shift, and go to state 4
    IMPORT   shift, and go to state 5

    Program                   go to state 6
    PackageDeclaration        go to state 7
    ImportDeclarations        go to state 8
    ImportDeclaration         go to state 9
    Declarations              go to state 10
    Declaration               go to state 11
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 1

   50 VariableDeclaration: VAR . VariableList Type ';'
   51                    | VAR . VariableList '=' VariableInitializerList ';'
   52                    | VAR . VariableList Type '=' VariableInitializerList ';'

    IDENTIFIER  shift, and go to state 16

    VariableList  go to state 17


State 2

   84 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')'
   85                         | FUNC . IDENTIFIER '(' ')' ReturnTypeList
   86                         | FUNC . IDENTIFIER '(' ParameterList ')'
   87                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 18


State 3

   75 TypeDeclaration: TYPE . IDENTIFIER STRUCT '{' MemberDeclarations '}' ';'
   76                | TYPE . IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' ';'
   77                | TYPE . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 19


State 4

   40 PackageDeclaration: PACKAGE . PackageOrTypeName ';'

    IDENTIFIER  shift, and go to state 20

    PackageOrTypeName  go to state 21


State 5

   43 ImportDeclaration: IMPORT . PackageOrTypeName ';'
   44                  | IMPORT . PackageOrTypeName '.' '*' ';'

    IDENTIFIER  shift, and go to state 20

    PackageOrTypeName  go to state 22


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 23


State 7

   33 Program: PackageDeclaration . ImportDeclarations Declarations
   34        | PackageDeclaration . ImportDeclarations
   35        | PackageDeclaration . Declarations
   37        | PackageDeclaration .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 37 (Program)

    ImportDeclarations        go to state 24
    ImportDeclaration         go to state 9
    Declarations              go to state 25
    Declaration               go to state 11
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 8

   36 Program: ImportDeclarations . Declarations
   38        | ImportDeclarations .
   42 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 38 (Program)

    ImportDeclaration         go to state 26
    Declarations              go to state 27
    Declaration               go to state 11
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 9

   41 ImportDeclarations: ImportDeclaration .

    $default  reduce using rule 41 (ImportDeclarations)


State 10

   39 Program: Declarations .
   46 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 39 (Program)

    Declaration               go to state 28
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 11

   45 Declarations: Declaration .

    $default  reduce using rule 45 (Declarations)


State 12

   47 Declaration: VariableDeclaration .

    $default  reduce using rule 47 (Declaration)


State 13

   48 Declaration: TypeDeclaration .

    $default  reduce using rule 48 (Declaration)


State 14

   98 FunctionDeclaration: MethodDeclarationHeader1 . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 30


State 15

   49 Declaration: FunctionDeclaration .

    $default  reduce using rule 49 (Declaration)


State 16

   53 VariableList: IDENTIFIER .

    $default  reduce using rule 53 (VariableList)


State 17

   50 VariableDeclaration: VAR VariableList . Type ';'
   51                    | VAR VariableList . '=' VariableInitializerList ';'
   52                    | VAR VariableList . Type '=' VariableInitializerList ';'
   54 VariableList: VariableList . ',' IDENTIFIER

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    ','          shift, and go to state 45
    '['          shift, and go to state 46
    '='          shift, and go to state 47

    PackageOrTypeName  go to state 48
    Type               go to state 49
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53


State 18

   84 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')'
   85                         | FUNC IDENTIFIER . '(' ')' ReturnTypeList
   86                         | FUNC IDENTIFIER . '(' ParameterList ')'
   87                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList

    '('  shift, and go to state 54


State 19

   75 TypeDeclaration: TYPE IDENTIFIER . STRUCT '{' MemberDeclarations '}' ';'
   76                | TYPE IDENTIFIER . INTERFACE '{' InterfaceFunctionDeclarations '}' ';'
   77                | TYPE IDENTIFIER . Type ';'

    FUNC         shift, and go to state 31
    STRUCT       shift, and go to state 55
    INTERFACE    shift, and go to state 56
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 57
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53


State 20

    1 PackageOrTypeName: IDENTIFIER .

    $default  reduce using rule 1 (PackageOrTypeName)


State 21

    2 PackageOrTypeName: PackageOrTypeName . '.' IDENTIFIER
   40 PackageDeclaration: PACKAGE PackageOrTypeName . ';'

    '.'  shift, and go to state 58
    ';'  shift, and go to state 59


State 22

    2 PackageOrTypeName: PackageOrTypeName . '.' IDENTIFIER
   43 ImportDeclaration: IMPORT PackageOrTypeName . ';'
   44                  | IMPORT PackageOrTypeName . '.' '*' ';'

    '.'  shift, and go to state 60
    ';'  shift, and go to state 61


State 23

    0 $accept: Program $end .

    $default  accept


State 24

   33 Program: PackageDeclaration ImportDeclarations . Declarations
   34        | PackageDeclaration ImportDeclarations .
   42 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 34 (Program)

    ImportDeclaration         go to state 26
    Declarations              go to state 62
    Declaration               go to state 11
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 25

   35 Program: PackageDeclaration Declarations .
   46 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 35 (Program)

    Declaration               go to state 28
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 26

   42 ImportDeclarations: ImportDeclarations ImportDeclaration .

    $default  reduce using rule 42 (ImportDeclarations)


State 27

   36 Program: ImportDeclarations Declarations .
   46 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 36 (Program)

    Declaration               go to state 28
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 28

   46 Declarations: Declarations Declaration .

    $default  reduce using rule 46 (Declarations)


State 29

   92 CodeBlock: '{' . local_variable_declaration_statements '}'
   93          | '{' . '}'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    IF              shift, and go to state 65
    WHILE           shift, and go to state 66
    DO              shift, and go to state 67
    FOR             shift, and go to state 68
    SWITCH          shift, and go to state 69
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 70
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '}'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    VariableDeclaration                    go to state 85
    local_variable_declaration_statements  go to state 86
    local_variable_declaration_statement   go to state 87
    statement                              go to state 88
    selection_statement                    go to state 89
    if_statement                           go to state 90
    switch_statement                       go to state 91
    iteration_statemnet                    go to state 92
    jump_statement                         go to state 93
    primary_expression                     go to state 94
    constant                               go to state 95
    postfix_expression                     go to state 96
    unary_expression                       go to state 97
    multiplicative_expression              go to state 98
    additive_expression                    go to state 99
    shift_expression                       go to state 100
    relational_expression                  go to state 101
    equality_expression                    go to state 102
    and_expression                         go to state 103
    exclusive_or_expression                go to state 104
    inclusive_or_expression                go to state 105
    logical_and_expression                 go to state 106
    logical_or_expression                  go to state 107
    basic_expression                       go to state 108
    postfix_expression_list                go to state 109
    assignment_expression                  go to state 110
    expression_statement                   go to state 111


State 30

   98 FunctionDeclaration: MethodDeclarationHeader1 CodeBlock .

    $default  reduce using rule 98 (FunctionDeclaration)


State 31

   26 FunctionType: FUNC . '(' ')'
   27             | FUNC . '(' ')' ReturnTypeList
   28             | FUNC . '(' TypeList ')'
   29             | FUNC . '(' TypeList ')' ReturnTypeList

    '('  shift, and go to state 112


State 32

   13 PrimitiveType: INT8 .

    $default  reduce using rule 13 (PrimitiveType)


State 33

   14 PrimitiveType: INT16 .

    $default  reduce using rule 14 (PrimitiveType)


State 34

   15 PrimitiveType: INT32 .

    $default  reduce using rule 15 (PrimitiveType)


State 35

   16 PrimitiveType: INT64 .

    $default  reduce using rule 16 (PrimitiveType)


State 36

    9 PrimitiveType: UINT8 .

    $default  reduce using rule 9 (PrimitiveType)


State 37

   10 PrimitiveType: UINT16 .

    $default  reduce using rule 10 (PrimitiveType)


State 38

   11 PrimitiveType: UINT32 .

    $default  reduce using rule 11 (PrimitiveType)


State 39

   12 PrimitiveType: UINT64 .

    $default  reduce using rule 12 (PrimitiveType)


State 40

   17 PrimitiveType: FLOAT32 .

    $default  reduce using rule 17 (PrimitiveType)


State 41

   18 PrimitiveType: FLOAT64 .

    $default  reduce using rule 18 (PrimitiveType)


State 42

   19 PrimitiveType: BOOL .

    $default  reduce using rule 19 (PrimitiveType)


State 43

   20 PrimitiveType: STRING .

    $default  reduce using rule 20 (PrimitiveType)


State 44

   21 PrimitiveType: ROOT_OBJECT .

    $default  reduce using rule 21 (PrimitiveType)


State 45

   54 VariableList: VariableList ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 113


State 46

   24 Dims: '[' . ']'

    ']'  shift, and go to state 114


State 47

   51 VariableDeclaration: VAR VariableList '=' . VariableInitializerList ';'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '['             shift, and go to state 116
    '('             shift, and go to state 79
    '{'             shift, and go to state 117
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 118
    VariableInitializerList       go to state 119
    ComplexVariableInitializer    go to state 120
    DimExprs                      go to state 121
    DimExpr                       go to state 122
    AnonymousFunctionDeclaration  go to state 123
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 125


State 48

    2 PackageOrTypeName: PackageOrTypeName . '.' IDENTIFIER
   22 ReferenceType: PackageOrTypeName .

    '.'  shift, and go to state 58

    $default  reduce using rule 22 (ReferenceType)


State 49

   50 VariableDeclaration: VAR VariableList Type . ';'
   52                    | VAR VariableList Type . '=' VariableInitializerList ';'

    ';'  shift, and go to state 126
    '='  shift, and go to state 127


State 50

    5 Type: PrimitiveType .

    $default  reduce using rule 5 (Type)


State 51

    6 Type: ReferenceType .

    $default  reduce using rule 6 (Type)


State 52

    7 Type: Dims . PrimitiveType
    8     | Dims . ReferenceType
   25 Dims: Dims . '[' ']'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 128

    PackageOrTypeName  go to state 48
    PrimitiveType      go to state 129
    ReferenceType      go to state 130
    FunctionType       go to state 53


State 53

   23 ReferenceType: FunctionType .

    $default  reduce using rule 23 (ReferenceType)


State 54

   84 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')'
   85                         | FUNC IDENTIFIER '(' . ')' ReturnTypeList
   86                         | FUNC IDENTIFIER '(' . ParameterList ')'
   87                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 131
    ')'         shift, and go to state 132

    ParameterList  go to state 133


State 55

   75 TypeDeclaration: TYPE IDENTIFIER STRUCT . '{' MemberDeclarations '}' ';'

    '{'  shift, and go to state 134


State 56

   76 TypeDeclaration: TYPE IDENTIFIER INTERFACE . '{' InterfaceFunctionDeclarations '}' ';'

    '{'  shift, and go to state 135


State 57

   77 TypeDeclaration: TYPE IDENTIFIER Type . ';'

    ';'  shift, and go to state 136


State 58

    2 PackageOrTypeName: PackageOrTypeName '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 137


State 59

   40 PackageDeclaration: PACKAGE PackageOrTypeName ';' .

    $default  reduce using rule 40 (PackageDeclaration)


State 60

    2 PackageOrTypeName: PackageOrTypeName '.' . IDENTIFIER
   44 ImportDeclaration: IMPORT PackageOrTypeName '.' . '*' ';'

    IDENTIFIER  shift, and go to state 137
    '*'         shift, and go to state 138


State 61

   43 ImportDeclaration: IMPORT PackageOrTypeName ';' .

    $default  reduce using rule 43 (ImportDeclaration)


State 62

   33 Program: PackageDeclaration ImportDeclarations Declarations .
   46 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 33 (Program)

    Declaration               go to state 28
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 63

  148 unary_expression: INC . unary_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 94
    constant            go to state 95
    postfix_expression  go to state 124
    unary_expression    go to state 139


State 64

  149 unary_expression: DEC . unary_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 94
    constant            go to state 95
    postfix_expression  go to state 124
    unary_expression    go to state 140


State 65

  113 if_statement: IF . '(' basic_expression ')' CodeBlock
  114             | IF . '(' basic_expression ')' CodeBlock ELSE else_statemnet

    '('  shift, and go to state 141


State 66

  118 iteration_statemnet: WHILE . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 142


State 67

  119 iteration_statemnet: DO . CodeBlock WHILE '(' basic_expression ')' ';'

    '{'  shift, and go to state 29

    CodeBlock  go to state 143


State 68

  120 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' CodeBlock

    '('  shift, and go to state 144


State 69

  117 switch_statement: SWITCH . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 145


State 70

  127 jump_statement: RETURN . ';'
  128               | RETURN . expression_list ';'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    ';'             shift, and go to state 146
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 147
    expression                 go to state 148
    expression_list            go to state 149


State 71

  131 primary_expression: TOKEN_THIS .

    $default  reduce using rule 131 (primary_expression)


State 72

  136 constant: TOKEN_NIL .

    $default  reduce using rule 136 (constant)


State 73

  137 constant: TOKEN_TRUE .

    $default  reduce using rule 137 (constant)


State 74

  138 constant: TOKEN_FALSE .

    $default  reduce using rule 138 (constant)


State 75

  133 constant: INTEGER .

    $default  reduce using rule 133 (constant)


State 76

  134 constant: FLOAT .

    $default  reduce using rule 134 (constant)


State 77

  135 constant: STRING_LITERAL .

    $default  reduce using rule 135 (constant)


State 78

  129 primary_expression: IDENTIFIER .

    $default  reduce using rule 129 (primary_expression)


State 79

  132 primary_expression: '(' . basic_expression ')'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 150


State 80

   93 CodeBlock: '{' '}' .

    $default  reduce using rule 93 (CodeBlock)


State 81

  150 unary_expression: '+' . unary_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 94
    constant            go to state 95
    postfix_expression  go to state 124
    unary_expression    go to state 151


State 82

  151 unary_expression: '-' . unary_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 94
    constant            go to state 95
    postfix_expression  go to state 124
    unary_expression    go to state 152


State 83

  152 unary_expression: '~' . unary_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 94
    constant            go to state 95
    postfix_expression  go to state 124
    unary_expression    go to state 153


State 84

  153 unary_expression: '!' . unary_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 94
    constant            go to state 95
    postfix_expression  go to state 124
    unary_expression    go to state 154


State 85

  105 local_variable_declaration_statement: VariableDeclaration .

    $default  reduce using rule 105 (local_variable_declaration_statement)


State 86

   92 CodeBlock: '{' local_variable_declaration_statements . '}'
  104 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    IF              shift, and go to state 65
    WHILE           shift, and go to state 66
    DO              shift, and go to state 67
    FOR             shift, and go to state 68
    SWITCH          shift, and go to state 69
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 70
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '}'             shift, and go to state 155
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    VariableDeclaration                   go to state 85
    local_variable_declaration_statement  go to state 156
    statement                             go to state 88
    selection_statement                   go to state 89
    if_statement                          go to state 90
    switch_statement                      go to state 91
    iteration_statemnet                   go to state 92
    jump_statement                        go to state 93
    primary_expression                    go to state 94
    constant                              go to state 95
    postfix_expression                    go to state 96
    unary_expression                      go to state 97
    multiplicative_expression             go to state 98
    additive_expression                   go to state 99
    shift_expression                      go to state 100
    relational_expression                 go to state 101
    equality_expression                   go to state 102
    and_expression                        go to state 103
    exclusive_or_expression               go to state 104
    inclusive_or_expression               go to state 105
    logical_and_expression                go to state 106
    logical_or_expression                 go to state 107
    basic_expression                      go to state 108
    postfix_expression_list               go to state 109
    assignment_expression                 go to state 110
    expression_statement                  go to state 111


State 87

  103 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 103 (local_variable_declaration_statements)


State 88

  106 local_variable_declaration_statement: statement .

    $default  reduce using rule 106 (local_variable_declaration_statement)


State 89

  108 statement: selection_statement .

    $default  reduce using rule 108 (statement)


State 90

  111 selection_statement: if_statement .

    $default  reduce using rule 111 (selection_statement)


State 91

  112 selection_statement: switch_statement .

    $default  reduce using rule 112 (selection_statement)


State 92

  109 statement: iteration_statemnet .

    $default  reduce using rule 109 (statement)


State 93

  110 statement: jump_statement .

    $default  reduce using rule 110 (statement)


State 94

  139 postfix_expression: primary_expression .

    $default  reduce using rule 139 (postfix_expression)


State 95

  130 primary_expression: constant .

    $default  reduce using rule 130 (primary_expression)


State 96

  140 postfix_expression: postfix_expression . INC
  141                   | postfix_expression . DEC
  142                   | postfix_expression . '.' IDENTIFIER
  143                   | postfix_expression . '[' basic_expression ']'
  144                   | postfix_expression . '(' expression_list ')'
  145                   | postfix_expression . '(' ')'
  146                   | postfix_expression . '(' ')' CodeBlock
  147 unary_expression: postfix_expression .
  186 postfix_expression_list: postfix_expression .
  189 assignment_expression: postfix_expression . compound_assignment_operator ComplexVariableInitializer
  190                      | postfix_expression . VAR_ASSIGN ComplexVariableInitializer

    VAR_ASSIGN    shift, and go to state 157
    ADD_ASSIGN    shift, and go to state 158
    SUB_ASSIGN    shift, and go to state 159
    MUL_ASSIGN    shift, and go to state 160
    DIV_ASSIGN    shift, and go to state 161
    MOD_ASSIGN    shift, and go to state 162
    AND_ASSIGN    shift, and go to state 163
    OR_ASSIGN     shift, and go to state 164
    XOR_ASSIGN    shift, and go to state 165
    RIGHT_ASSIGN  shift, and go to state 166
    LEFT_ASSIGN   shift, and go to state 167
    INC           shift, and go to state 168
    DEC           shift, and go to state 169
    '.'           shift, and go to state 170
    '['           shift, and go to state 171
    '('           shift, and go to state 172

    ','       reduce using rule 186 (postfix_expression_list)
    '='       reduce using rule 186 (postfix_expression_list)
    $default  reduce using rule 147 (unary_expression)

    compound_assignment_operator  go to state 173


State 97

  154 multiplicative_expression: unary_expression .

    $default  reduce using rule 154 (multiplicative_expression)


State 98

  155 multiplicative_expression: multiplicative_expression . '*' unary_expression
  156                          | multiplicative_expression . '/' unary_expression
  157                          | multiplicative_expression . '%' unary_expression
  158 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 174
    '/'  shift, and go to state 175
    '%'  shift, and go to state 176

    $default  reduce using rule 158 (additive_expression)


State 99

  159 additive_expression: additive_expression . '+' multiplicative_expression
  160                    | additive_expression . '-' multiplicative_expression
  161 shift_expression: additive_expression .

    '+'  shift, and go to state 177
    '-'  shift, and go to state 178

    $default  reduce using rule 161 (shift_expression)


State 100

  162 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  163                 | shift_expression . SHIFT_RIGHT additive_expression
  164 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 179
    SHIFT_RIGHT  shift, and go to state 180

    $default  reduce using rule 164 (relational_expression)


State 101

  165 relational_expression: relational_expression . '<' shift_expression
  166                      | relational_expression . '>' shift_expression
  167                      | relational_expression . LE shift_expression
  168                      | relational_expression . GE shift_expression
  169 equality_expression: relational_expression .

    GE   shift, and go to state 181
    LE   shift, and go to state 182
    '<'  shift, and go to state 183
    '>'  shift, and go to state 184

    $default  reduce using rule 169 (equality_expression)


State 102

  170 equality_expression: equality_expression . EQ relational_expression
  171                    | equality_expression . NE relational_expression
  172 and_expression: equality_expression .

    EQ  shift, and go to state 185
    NE  shift, and go to state 186

    $default  reduce using rule 172 (and_expression)


State 103

  173 and_expression: and_expression . '&' equality_expression
  174 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 187

    $default  reduce using rule 174 (exclusive_or_expression)


State 104

  175 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  176 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 188

    $default  reduce using rule 176 (inclusive_or_expression)


State 105

  177 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  178 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 189

    $default  reduce using rule 178 (logical_and_expression)


State 106

  179 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  180 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 190

    $default  reduce using rule 180 (logical_or_expression)


State 107

  181 logical_or_expression: logical_or_expression . OR logical_and_expression
  182 basic_expression: logical_or_expression .

    OR  shift, and go to state 191

    $default  reduce using rule 182 (basic_expression)


State 108

  201 expression_statement: basic_expression .

    $default  reduce using rule 201 (expression_statement)


State 109

  187 postfix_expression_list: postfix_expression_list . ',' postfix_expression
  188 assignment_expression: postfix_expression_list . '=' VariableInitializerList

    ','  shift, and go to state 192
    '='  shift, and go to state 193


State 110

  202 expression_statement: assignment_expression .

    $default  reduce using rule 202 (expression_statement)


State 111

  107 statement: expression_statement . ';'

    ';'  shift, and go to state 194


State 112

   26 FunctionType: FUNC '(' . ')'
   27             | FUNC '(' . ')' ReturnTypeList
   28             | FUNC '(' . TypeList ')'
   29             | FUNC '(' . TypeList ')' ReturnTypeList

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46
    ')'          shift, and go to state 195

    PackageOrTypeName  go to state 48
    TypeList           go to state 196
    Type               go to state 197
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53


State 113

   54 VariableList: VariableList ',' IDENTIFIER .

    $default  reduce using rule 54 (VariableList)


State 114

   24 Dims: '[' ']' .

    $default  reduce using rule 24 (Dims)


State 115

   99 AnonymousFunctionDeclaration: FUNC . '(' ')' CodeBlock
  100                             | FUNC . '(' ')' ReturnTypeList CodeBlock
  101                             | FUNC . '(' ParameterList ')' CodeBlock
  102                             | FUNC . '(' ParameterList ')' ReturnTypeList CodeBlock

    '('  shift, and go to state 198


State 116

   68 DimExpr: '[' . basic_expression ']'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 199


State 117

   60 ComplexVariableInitializer: '{' . ArrayInitializerList '}'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 200
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '{'             shift, and go to state 201
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 202
    ArrayInitializerList          go to state 203
    ArrayInitializer              go to state 204
    ArrayPositionInitializer      go to state 205
    AnonymousFunctionDeclaration  go to state 206
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 207


State 118

   58 ComplexVariableInitializer: PrimitiveType . '(' basic_expression ')'

    '('  shift, and go to state 208


State 119

   51 VariableDeclaration: VAR VariableList '=' VariableInitializerList . ';'
   56 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer

    ','  shift, and go to state 209
    ';'  shift, and go to state 210


State 120

   55 VariableInitializerList: ComplexVariableInitializer .

    $default  reduce using rule 55 (VariableInitializerList)


State 121

   61 ComplexVariableInitializer: DimExprs . Type
   62                           | DimExprs . Type '{' ArrayInitializerList '}'
   63                           | DimExprs . Type '{' '}'
   67 DimExprs: DimExprs . DimExpr

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 211

    PackageOrTypeName  go to state 48
    Type               go to state 212
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    DimExpr            go to state 213


State 122

   66 DimExprs: DimExpr .

    $default  reduce using rule 66 (DimExprs)


State 123

   59 ComplexVariableInitializer: AnonymousFunctionDeclaration .

    $default  reduce using rule 59 (ComplexVariableInitializer)


State 124

  140 postfix_expression: postfix_expression . INC
  141                   | postfix_expression . DEC
  142                   | postfix_expression . '.' IDENTIFIER
  143                   | postfix_expression . '[' basic_expression ']'
  144                   | postfix_expression . '(' expression_list ')'
  145                   | postfix_expression . '(' ')'
  146                   | postfix_expression . '(' ')' CodeBlock
  147 unary_expression: postfix_expression .

    INC  shift, and go to state 168
    DEC  shift, and go to state 169
    '.'  shift, and go to state 170
    '['  shift, and go to state 171
    '('  shift, and go to state 172

    $default  reduce using rule 147 (unary_expression)


State 125

   57 ComplexVariableInitializer: basic_expression .

    $default  reduce using rule 57 (ComplexVariableInitializer)


State 126

   50 VariableDeclaration: VAR VariableList Type ';' .

    $default  reduce using rule 50 (VariableDeclaration)


State 127

   52 VariableDeclaration: VAR VariableList Type '=' . VariableInitializerList ';'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '['             shift, and go to state 116
    '('             shift, and go to state 79
    '{'             shift, and go to state 117
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 118
    VariableInitializerList       go to state 214
    ComplexVariableInitializer    go to state 120
    DimExprs                      go to state 121
    DimExpr                       go to state 122
    AnonymousFunctionDeclaration  go to state 123
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 125


State 128

   25 Dims: Dims '[' . ']'

    ']'  shift, and go to state 215


State 129

    7 Type: Dims PrimitiveType .

    $default  reduce using rule 7 (Type)


State 130

    8 Type: Dims ReferenceType .

    $default  reduce using rule 8 (Type)


State 131

   88 ParameterList: IDENTIFIER . Type

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 216
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53


State 132

   84 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' .
   85                         | FUNC IDENTIFIER '(' ')' . ReturnTypeList

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46
    '('          shift, and go to state 217

    $default  reduce using rule 84 (MethodDeclarationHeader1)

    PackageOrTypeName  go to state 48
    Type               go to state 218
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 219


State 133

   86 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList . ')'
   87                         | FUNC IDENTIFIER '(' ParameterList . ')' ReturnTypeList
   89 ParameterList: ParameterList . ',' IDENTIFIER Type

    ','  shift, and go to state 220
    ')'  shift, and go to state 221


State 134

   75 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' . MemberDeclarations '}' ';'

    VAR   shift, and go to state 222
    FUNC  shift, and go to state 2

    MemberDeclarations        go to state 223
    MemberDeclaration         go to state 224
    FieldDeclaration          go to state 225
    MethodDeclaration         go to state 226
    MethodDeclarationHeader1  go to state 227


State 135

   76 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' . InterfaceFunctionDeclarations '}' ';'

    FUNC  shift, and go to state 228

    MethodDeclarationHeader1       go to state 229
    MethodDeclarationHeader2       go to state 230
    InterfaceFunctionDeclarations  go to state 231
    InterfaceFunctionDeclaration   go to state 232


State 136

   77 TypeDeclaration: TYPE IDENTIFIER Type ';' .

    $default  reduce using rule 77 (TypeDeclaration)


State 137

    2 PackageOrTypeName: PackageOrTypeName '.' IDENTIFIER .

    $default  reduce using rule 2 (PackageOrTypeName)


State 138

   44 ImportDeclaration: IMPORT PackageOrTypeName '.' '*' . ';'

    ';'  shift, and go to state 233


State 139

  148 unary_expression: INC unary_expression .

    $default  reduce using rule 148 (unary_expression)


State 140

  149 unary_expression: DEC unary_expression .

    $default  reduce using rule 149 (unary_expression)


State 141

  113 if_statement: IF '(' . basic_expression ')' CodeBlock
  114             | IF '(' . basic_expression ')' CodeBlock ELSE else_statemnet

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 234


State 142

  118 iteration_statemnet: WHILE '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 235


State 143

  119 iteration_statemnet: DO CodeBlock . WHILE '(' basic_expression ')' ';'

    WHILE  shift, and go to state 236


State 144

  120 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    VAR             shift, and go to state 1
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    ';'             shift, and go to state 237
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    VariableDeclaration        go to state 238
    for_init                   go to state 239
    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 108
    postfix_expression_list    go to state 109
    assignment_expression      go to state 110
    expression_statement       go to state 240


State 145

  117 switch_statement: SWITCH '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 241


State 146

  127 jump_statement: RETURN ';' .

    $default  reduce using rule 127 (jump_statement)


State 147

  183 expression: basic_expression .

    $default  reduce using rule 183 (expression)


State 148

  184 expression_list: expression .

    $default  reduce using rule 184 (expression_list)


State 149

  128 jump_statement: RETURN expression_list . ';'
  185 expression_list: expression_list . ',' expression

    ','  shift, and go to state 242
    ';'  shift, and go to state 243


State 150

  132 primary_expression: '(' basic_expression . ')'

    ')'  shift, and go to state 244


State 151

  150 unary_expression: '+' unary_expression .

    $default  reduce using rule 150 (unary_expression)


State 152

  151 unary_expression: '-' unary_expression .

    $default  reduce using rule 151 (unary_expression)


State 153

  152 unary_expression: '~' unary_expression .

    $default  reduce using rule 152 (unary_expression)


State 154

  153 unary_expression: '!' unary_expression .

    $default  reduce using rule 153 (unary_expression)


State 155

   92 CodeBlock: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 92 (CodeBlock)


State 156

  104 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 104 (local_variable_declaration_statements)


State 157

  190 assignment_expression: postfix_expression VAR_ASSIGN . ComplexVariableInitializer

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '['             shift, and go to state 116
    '('             shift, and go to state 79
    '{'             shift, and go to state 117
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 118
    ComplexVariableInitializer    go to state 245
    DimExprs                      go to state 121
    DimExpr                       go to state 122
    AnonymousFunctionDeclaration  go to state 123
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 125


State 158

  191 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 191 (compound_assignment_operator)


State 159

  192 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 192 (compound_assignment_operator)


State 160

  193 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 193 (compound_assignment_operator)


State 161

  194 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 194 (compound_assignment_operator)


State 162

  195 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 195 (compound_assignment_operator)


State 163

  196 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 196 (compound_assignment_operator)


State 164

  197 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 197 (compound_assignment_operator)


State 165

  198 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 198 (compound_assignment_operator)


State 166

  199 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 199 (compound_assignment_operator)


State 167

  200 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 200 (compound_assignment_operator)


State 168

  140 postfix_expression: postfix_expression INC .

    $default  reduce using rule 140 (postfix_expression)


State 169

  141 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 141 (postfix_expression)


State 170

  142 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 246


State 171

  143 postfix_expression: postfix_expression '[' . basic_expression ']'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 247


State 172

  144 postfix_expression: postfix_expression '(' . expression_list ')'
  145                   | postfix_expression '(' . ')'
  146                   | postfix_expression '(' . ')' CodeBlock

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    ')'             shift, and go to state 248
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 147
    expression                 go to state 148
    expression_list            go to state 249


State 173

  189 assignment_expression: postfix_expression compound_assignment_operator . ComplexVariableInitializer

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '['             shift, and go to state 116
    '('             shift, and go to state 79
    '{'             shift, and go to state 117
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 118
    ComplexVariableInitializer    go to state 250
    DimExprs                      go to state 121
    DimExpr                       go to state 122
    AnonymousFunctionDeclaration  go to state 123
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 125


State 174

  155 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 94
    constant            go to state 95
    postfix_expression  go to state 124
    unary_expression    go to state 251


State 175

  156 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 94
    constant            go to state 95
    postfix_expression  go to state 124
    unary_expression    go to state 252


State 176

  157 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression  go to state 94
    constant            go to state 95
    postfix_expression  go to state 124
    unary_expression    go to state 253


State 177

  159 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 254


State 178

  160 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 255


State 179

  162 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 256


State 180

  163 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 257


State 181

  168 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 258


State 182

  167 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 259


State 183

  165 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 260


State 184

  166 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 261


State 185

  170 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 262


State 186

  171 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 263


State 187

  173 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 264


State 188

  175 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 265


State 189

  177 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 266


State 190

  179 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 267


State 191

  181 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 268


State 192

  187 postfix_expression_list: postfix_expression_list ',' . postfix_expression

    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79

    primary_expression  go to state 94
    constant            go to state 95
    postfix_expression  go to state 269


State 193

  188 assignment_expression: postfix_expression_list '=' . VariableInitializerList

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '['             shift, and go to state 116
    '('             shift, and go to state 79
    '{'             shift, and go to state 117
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 118
    VariableInitializerList       go to state 270
    ComplexVariableInitializer    go to state 120
    DimExprs                      go to state 121
    DimExpr                       go to state 122
    AnonymousFunctionDeclaration  go to state 123
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 125


State 194

  107 statement: expression_statement ';' .

    $default  reduce using rule 107 (statement)


State 195

   26 FunctionType: FUNC '(' ')' .
   27             | FUNC '(' ')' . ReturnTypeList

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46
    '('          shift, and go to state 217

    $default  reduce using rule 26 (FunctionType)

    PackageOrTypeName  go to state 48
    Type               go to state 218
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 271


State 196

    4 TypeList: TypeList . ',' Type
   28 FunctionType: FUNC '(' TypeList . ')'
   29             | FUNC '(' TypeList . ')' ReturnTypeList

    ','  shift, and go to state 272
    ')'  shift, and go to state 273


State 197

    3 TypeList: Type .

    $default  reduce using rule 3 (TypeList)


State 198

   99 AnonymousFunctionDeclaration: FUNC '(' . ')' CodeBlock
  100                             | FUNC '(' . ')' ReturnTypeList CodeBlock
  101                             | FUNC '(' . ParameterList ')' CodeBlock
  102                             | FUNC '(' . ParameterList ')' ReturnTypeList CodeBlock

    IDENTIFIER  shift, and go to state 131
    ')'         shift, and go to state 274

    ParameterList  go to state 275


State 199

   68 DimExpr: '[' basic_expression . ']'

    ']'  shift, and go to state 276


State 200

   74 ArrayPositionInitializer: INTEGER . ':' ArrayInitializer
  133 constant: INTEGER .

    ':'  shift, and go to state 277

    $default  reduce using rule 133 (constant)


State 201

   73 ArrayInitializer: '{' . ArrayInitializerList '}'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 200
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '{'             shift, and go to state 201
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 202
    ArrayInitializerList          go to state 278
    ArrayInitializer              go to state 204
    ArrayPositionInitializer      go to state 205
    AnonymousFunctionDeclaration  go to state 206
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 207


State 202

   70 ArrayInitializer: PrimitiveType . '(' basic_expression ')'

    '('  shift, and go to state 279


State 203

   60 ComplexVariableInitializer: '{' ArrayInitializerList . '}'
   65 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 280
    '}'  shift, and go to state 281


State 204

   64 ArrayInitializerList: ArrayInitializer .

    $default  reduce using rule 64 (ArrayInitializerList)


State 205

   72 ArrayInitializer: ArrayPositionInitializer .

    $default  reduce using rule 72 (ArrayInitializer)


State 206

   71 ArrayInitializer: AnonymousFunctionDeclaration .

    $default  reduce using rule 71 (ArrayInitializer)


State 207

   69 ArrayInitializer: basic_expression .

    $default  reduce using rule 69 (ArrayInitializer)


State 208

   58 ComplexVariableInitializer: PrimitiveType '(' . basic_expression ')'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 282


State 209

   56 VariableInitializerList: VariableInitializerList ',' . ComplexVariableInitializer

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '['             shift, and go to state 116
    '('             shift, and go to state 79
    '{'             shift, and go to state 117
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 118
    ComplexVariableInitializer    go to state 283
    DimExprs                      go to state 121
    DimExpr                       go to state 122
    AnonymousFunctionDeclaration  go to state 123
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 125


State 210

   51 VariableDeclaration: VAR VariableList '=' VariableInitializerList ';' .

    $default  reduce using rule 51 (VariableDeclaration)


State 211

   24 Dims: '[' . ']'
   68 DimExpr: '[' . basic_expression ']'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    ']'             shift, and go to state 114
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 199


State 212

   61 ComplexVariableInitializer: DimExprs Type .
   62                           | DimExprs Type . '{' ArrayInitializerList '}'
   63                           | DimExprs Type . '{' '}'

    '{'  shift, and go to state 284

    $default  reduce using rule 61 (ComplexVariableInitializer)


State 213

   67 DimExprs: DimExprs DimExpr .

    $default  reduce using rule 67 (DimExprs)


State 214

   52 VariableDeclaration: VAR VariableList Type '=' VariableInitializerList . ';'
   56 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer

    ','  shift, and go to state 209
    ';'  shift, and go to state 285


State 215

   25 Dims: Dims '[' ']' .

    $default  reduce using rule 25 (Dims)


State 216

   88 ParameterList: IDENTIFIER Type .

    $default  reduce using rule 88 (ParameterList)


State 217

   31 ReturnTypeList: '(' . Type ')'
   32               | '(' . ReturnTypeList ',' Type ')'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46
    '('          shift, and go to state 217

    PackageOrTypeName  go to state 48
    Type               go to state 286
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 287


State 218

   30 ReturnTypeList: Type .

    $default  reduce using rule 30 (ReturnTypeList)


State 219

   85 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' ReturnTypeList .

    $default  reduce using rule 85 (MethodDeclarationHeader1)


State 220

   89 ParameterList: ParameterList ',' . IDENTIFIER Type

    IDENTIFIER  shift, and go to state 288


State 221

   86 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' .
   87                         | FUNC IDENTIFIER '(' ParameterList ')' . ReturnTypeList

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46
    '('          shift, and go to state 217

    $default  reduce using rule 86 (MethodDeclarationHeader1)

    PackageOrTypeName  go to state 48
    Type               go to state 218
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 289


State 222

   82 FieldDeclaration: VAR . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 290


State 223

   75 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations . '}' ';'
   79 MemberDeclarations: MemberDeclarations . MemberDeclaration

    VAR   shift, and go to state 222
    FUNC  shift, and go to state 2
    '}'   shift, and go to state 291

    MemberDeclaration         go to state 292
    FieldDeclaration          go to state 225
    MethodDeclaration         go to state 226
    MethodDeclarationHeader1  go to state 227


State 224

   78 MemberDeclarations: MemberDeclaration .

    $default  reduce using rule 78 (MemberDeclarations)


State 225

   80 MemberDeclaration: FieldDeclaration .

    $default  reduce using rule 80 (MemberDeclaration)


State 226

   81 MemberDeclaration: MethodDeclaration .

    $default  reduce using rule 81 (MemberDeclaration)


State 227

   83 MethodDeclaration: MethodDeclarationHeader1 . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 293


State 228

   84 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')'
   85                         | FUNC . IDENTIFIER '(' ')' ReturnTypeList
   86                         | FUNC . IDENTIFIER '(' ParameterList ')'
   87                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList
   90 MethodDeclarationHeader2: FUNC . IDENTIFIER '(' TypeList ')'
   91                         | FUNC . IDENTIFIER '(' TypeList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 294


State 229

   96 InterfaceFunctionDeclaration: MethodDeclarationHeader1 . ';'

    ';'  shift, and go to state 295


State 230

   97 InterfaceFunctionDeclaration: MethodDeclarationHeader2 . ';'

    ';'  shift, and go to state 296


State 231

   76 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations . '}' ';'
   95 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations . InterfaceFunctionDeclaration

    FUNC  shift, and go to state 228
    '}'   shift, and go to state 297

    MethodDeclarationHeader1      go to state 229
    MethodDeclarationHeader2      go to state 230
    InterfaceFunctionDeclaration  go to state 298


State 232

   94 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration .

    $default  reduce using rule 94 (InterfaceFunctionDeclarations)


State 233

   44 ImportDeclaration: IMPORT PackageOrTypeName '.' '*' ';' .

    $default  reduce using rule 44 (ImportDeclaration)


State 234

  113 if_statement: IF '(' basic_expression . ')' CodeBlock
  114             | IF '(' basic_expression . ')' CodeBlock ELSE else_statemnet

    ')'  shift, and go to state 299


State 235

  118 iteration_statemnet: WHILE '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 300


State 236

  119 iteration_statemnet: DO CodeBlock WHILE . '(' basic_expression ')' ';'

    '('  shift, and go to state 301


State 237

  123 for_init: ';' .

    $default  reduce using rule 123 (for_init)


State 238

  122 for_init: VariableDeclaration .

    $default  reduce using rule 122 (for_init)


State 239

  120 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    ';'             shift, and go to state 302
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    for_expr                   go to state 303
    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 304


State 240

  121 for_init: expression_statement . ';'

    ';'  shift, and go to state 305


State 241

  117 switch_statement: SWITCH '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 306


State 242

  185 expression_list: expression_list ',' . expression

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 147
    expression                 go to state 307


State 243

  128 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 128 (jump_statement)


State 244

  132 primary_expression: '(' basic_expression ')' .

    $default  reduce using rule 132 (primary_expression)


State 245

  190 assignment_expression: postfix_expression VAR_ASSIGN ComplexVariableInitializer .

    $default  reduce using rule 190 (assignment_expression)


State 246

  142 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 142 (postfix_expression)


State 247

  143 postfix_expression: postfix_expression '[' basic_expression . ']'

    ']'  shift, and go to state 308


State 248

  145 postfix_expression: postfix_expression '(' ')' .
  146                   | postfix_expression '(' ')' . CodeBlock

    '{'  shift, and go to state 29

    $default  reduce using rule 145 (postfix_expression)

    CodeBlock  go to state 309


State 249

  144 postfix_expression: postfix_expression '(' expression_list . ')'
  185 expression_list: expression_list . ',' expression

    ','  shift, and go to state 242
    ')'  shift, and go to state 310


State 250

  189 assignment_expression: postfix_expression compound_assignment_operator ComplexVariableInitializer .

    $default  reduce using rule 189 (assignment_expression)


State 251

  155 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 155 (multiplicative_expression)


State 252

  156 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 156 (multiplicative_expression)


State 253

  157 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 157 (multiplicative_expression)


State 254

  155 multiplicative_expression: multiplicative_expression . '*' unary_expression
  156                          | multiplicative_expression . '/' unary_expression
  157                          | multiplicative_expression . '%' unary_expression
  159 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 174
    '/'  shift, and go to state 175
    '%'  shift, and go to state 176

    $default  reduce using rule 159 (additive_expression)


State 255

  155 multiplicative_expression: multiplicative_expression . '*' unary_expression
  156                          | multiplicative_expression . '/' unary_expression
  157                          | multiplicative_expression . '%' unary_expression
  160 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 174
    '/'  shift, and go to state 175
    '%'  shift, and go to state 176

    $default  reduce using rule 160 (additive_expression)


State 256

  159 additive_expression: additive_expression . '+' multiplicative_expression
  160                    | additive_expression . '-' multiplicative_expression
  162 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 177
    '-'  shift, and go to state 178

    $default  reduce using rule 162 (shift_expression)


State 257

  159 additive_expression: additive_expression . '+' multiplicative_expression
  160                    | additive_expression . '-' multiplicative_expression
  163 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 177
    '-'  shift, and go to state 178

    $default  reduce using rule 163 (shift_expression)


State 258

  162 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  163                 | shift_expression . SHIFT_RIGHT additive_expression
  168 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 179
    SHIFT_RIGHT  shift, and go to state 180

    $default  reduce using rule 168 (relational_expression)


State 259

  162 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  163                 | shift_expression . SHIFT_RIGHT additive_expression
  167 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 179
    SHIFT_RIGHT  shift, and go to state 180

    $default  reduce using rule 167 (relational_expression)


State 260

  162 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  163                 | shift_expression . SHIFT_RIGHT additive_expression
  165 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 179
    SHIFT_RIGHT  shift, and go to state 180

    $default  reduce using rule 165 (relational_expression)


State 261

  162 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  163                 | shift_expression . SHIFT_RIGHT additive_expression
  166 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 179
    SHIFT_RIGHT  shift, and go to state 180

    $default  reduce using rule 166 (relational_expression)


State 262

  165 relational_expression: relational_expression . '<' shift_expression
  166                      | relational_expression . '>' shift_expression
  167                      | relational_expression . LE shift_expression
  168                      | relational_expression . GE shift_expression
  170 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 181
    LE   shift, and go to state 182
    '<'  shift, and go to state 183
    '>'  shift, and go to state 184

    $default  reduce using rule 170 (equality_expression)


State 263

  165 relational_expression: relational_expression . '<' shift_expression
  166                      | relational_expression . '>' shift_expression
  167                      | relational_expression . LE shift_expression
  168                      | relational_expression . GE shift_expression
  171 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 181
    LE   shift, and go to state 182
    '<'  shift, and go to state 183
    '>'  shift, and go to state 184

    $default  reduce using rule 171 (equality_expression)


State 264

  170 equality_expression: equality_expression . EQ relational_expression
  171                    | equality_expression . NE relational_expression
  173 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 185
    NE  shift, and go to state 186

    $default  reduce using rule 173 (and_expression)


State 265

  173 and_expression: and_expression . '&' equality_expression
  175 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 187

    $default  reduce using rule 175 (exclusive_or_expression)


State 266

  175 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  177 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 188

    $default  reduce using rule 177 (inclusive_or_expression)


State 267

  177 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  179 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 189

    $default  reduce using rule 179 (logical_and_expression)


State 268

  179 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  181 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 190

    $default  reduce using rule 181 (logical_or_expression)


State 269

  140 postfix_expression: postfix_expression . INC
  141                   | postfix_expression . DEC
  142                   | postfix_expression . '.' IDENTIFIER
  143                   | postfix_expression . '[' basic_expression ']'
  144                   | postfix_expression . '(' expression_list ')'
  145                   | postfix_expression . '(' ')'
  146                   | postfix_expression . '(' ')' CodeBlock
  187 postfix_expression_list: postfix_expression_list ',' postfix_expression .

    INC  shift, and go to state 168
    DEC  shift, and go to state 169
    '.'  shift, and go to state 170
    '['  shift, and go to state 171
    '('  shift, and go to state 172

    $default  reduce using rule 187 (postfix_expression_list)


State 270

   56 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer
  188 assignment_expression: postfix_expression_list '=' VariableInitializerList .

    ','  shift, and go to state 209

    $default  reduce using rule 188 (assignment_expression)


State 271

   27 FunctionType: FUNC '(' ')' ReturnTypeList .

    $default  reduce using rule 27 (FunctionType)


State 272

    4 TypeList: TypeList ',' . Type

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 311
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53


State 273

   28 FunctionType: FUNC '(' TypeList ')' .
   29             | FUNC '(' TypeList ')' . ReturnTypeList

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46
    '('          shift, and go to state 217

    $default  reduce using rule 28 (FunctionType)

    PackageOrTypeName  go to state 48
    Type               go to state 218
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 312


State 274

   99 AnonymousFunctionDeclaration: FUNC '(' ')' . CodeBlock
  100                             | FUNC '(' ')' . ReturnTypeList CodeBlock

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46
    '('          shift, and go to state 217
    '{'          shift, and go to state 29

    PackageOrTypeName  go to state 48
    Type               go to state 218
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 313
    CodeBlock          go to state 314


State 275

   89 ParameterList: ParameterList . ',' IDENTIFIER Type
  101 AnonymousFunctionDeclaration: FUNC '(' ParameterList . ')' CodeBlock
  102                             | FUNC '(' ParameterList . ')' ReturnTypeList CodeBlock

    ','  shift, and go to state 220
    ')'  shift, and go to state 315


State 276

   68 DimExpr: '[' basic_expression ']' .

    $default  reduce using rule 68 (DimExpr)


State 277

   74 ArrayPositionInitializer: INTEGER ':' . ArrayInitializer

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 200
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '{'             shift, and go to state 201
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 202
    ArrayInitializer              go to state 316
    ArrayPositionInitializer      go to state 205
    AnonymousFunctionDeclaration  go to state 206
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 207


State 278

   65 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
   73 ArrayInitializer: '{' ArrayInitializerList . '}'

    ','  shift, and go to state 280
    '}'  shift, and go to state 317


State 279

   70 ArrayInitializer: PrimitiveType '(' . basic_expression ')'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 318


State 280

   65 ArrayInitializerList: ArrayInitializerList ',' . ArrayInitializer

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 200
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '{'             shift, and go to state 201
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 202
    ArrayInitializer              go to state 319
    ArrayPositionInitializer      go to state 205
    AnonymousFunctionDeclaration  go to state 206
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 207


State 281

   60 ComplexVariableInitializer: '{' ArrayInitializerList '}' .

    $default  reduce using rule 60 (ComplexVariableInitializer)


State 282

   58 ComplexVariableInitializer: PrimitiveType '(' basic_expression . ')'

    ')'  shift, and go to state 320


State 283

   56 VariableInitializerList: VariableInitializerList ',' ComplexVariableInitializer .

    $default  reduce using rule 56 (VariableInitializerList)


State 284

   62 ComplexVariableInitializer: DimExprs Type '{' . ArrayInitializerList '}'
   63                           | DimExprs Type '{' . '}'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    FUNC            shift, and go to state 115
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 200
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '{'             shift, and go to state 201
    '}'             shift, and go to state 321
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 202
    ArrayInitializerList          go to state 322
    ArrayInitializer              go to state 204
    ArrayPositionInitializer      go to state 205
    AnonymousFunctionDeclaration  go to state 206
    primary_expression            go to state 94
    constant                      go to state 95
    postfix_expression            go to state 124
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 207


State 285

   52 VariableDeclaration: VAR VariableList Type '=' VariableInitializerList ';' .

    $default  reduce using rule 52 (VariableDeclaration)


State 286

   30 ReturnTypeList: Type .
   31               | '(' Type . ')'

    ')'  shift, and go to state 323

    $default  reduce using rule 30 (ReturnTypeList)


State 287

   32 ReturnTypeList: '(' ReturnTypeList . ',' Type ')'

    ','  shift, and go to state 324


State 288

   89 ParameterList: ParameterList ',' IDENTIFIER . Type

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 325
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53


State 289

   87 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList .

    $default  reduce using rule 87 (MethodDeclarationHeader1)


State 290

   82 FieldDeclaration: VAR IDENTIFIER . Type ';'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 326
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53


State 291

   75 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' . ';'

    ';'  shift, and go to state 327


State 292

   79 MemberDeclarations: MemberDeclarations MemberDeclaration .

    $default  reduce using rule 79 (MemberDeclarations)


State 293

   83 MethodDeclaration: MethodDeclarationHeader1 CodeBlock .

    $default  reduce using rule 83 (MethodDeclaration)


State 294

   84 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')'
   85                         | FUNC IDENTIFIER . '(' ')' ReturnTypeList
   86                         | FUNC IDENTIFIER . '(' ParameterList ')'
   87                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   90 MethodDeclarationHeader2: FUNC IDENTIFIER . '(' TypeList ')'
   91                         | FUNC IDENTIFIER . '(' TypeList ')' ReturnTypeList

    '('  shift, and go to state 328


State 295

   96 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';' .

    $default  reduce using rule 96 (InterfaceFunctionDeclaration)


State 296

   97 InterfaceFunctionDeclaration: MethodDeclarationHeader2 ';' .

    $default  reduce using rule 97 (InterfaceFunctionDeclaration)


State 297

   76 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' . ';'

    ';'  shift, and go to state 329


State 298

   95 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations InterfaceFunctionDeclaration .

    $default  reduce using rule 95 (InterfaceFunctionDeclarations)


State 299

  113 if_statement: IF '(' basic_expression ')' . CodeBlock
  114             | IF '(' basic_expression ')' . CodeBlock ELSE else_statemnet

    '{'  shift, and go to state 29

    CodeBlock  go to state 330


State 300

  118 iteration_statemnet: WHILE '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 331


State 301

  119 iteration_statemnet: DO CodeBlock WHILE '(' . basic_expression ')' ';'

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 124
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 332


State 302

  125 for_expr: ';' .

    $default  reduce using rule 125 (for_expr)


State 303

  120 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' CodeBlock

    INC             shift, and go to state 63
    DEC             shift, and go to state 64
    TOKEN_THIS      shift, and go to state 71
    TOKEN_NIL       shift, and go to state 72
    TOKEN_TRUE      shift, and go to state 73
    TOKEN_FALSE     shift, and go to state 74
    INTEGER         shift, and go to state 75
    FLOAT           shift, and go to state 76
    STRING_LITERAL  shift, and go to state 77
    IDENTIFIER      shift, and go to state 78
    '('             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    for_incr                   go to state 333
    primary_expression         go to state 94
    constant                   go to state 95
    postfix_expression         go to state 96
    unary_expression           go to state 97
    multiplicative_expression  go to state 98
    additive_expression        go to state 99
    shift_expression           go to state 100
    relational_expression      go to state 101
    equality_expression        go to state 102
    and_expression             go to state 103
    exclusive_or_expression    go to state 104
    inclusive_or_expression    go to state 105
    logical_and_expression     go to state 106
    logical_or_expression      go to state 107
    basic_expression           go to state 108
    postfix_expression_list    go to state 109
    assignment_expression      go to state 110
    expression_statement       go to state 334


State 304

  124 for_expr: basic_expression . ';'

    ';'  shift, and go to state 335


State 305

  121 for_init: expression_statement ';' .

    $default  reduce using rule 121 (for_init)


State 306

  117 switch_statement: SWITCH '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 336


State 307

  185 expression_list: expression_list ',' expression .

    $default  reduce using rule 185 (expression_list)


State 308

  143 postfix_expression: postfix_expression '[' basic_expression ']' .

    $default  reduce using rule 143 (postfix_expression)


State 309

  146 postfix_expression: postfix_expression '(' ')' CodeBlock .

    $default  reduce using rule 146 (postfix_expression)


State 310

  144 postfix_expression: postfix_expression '(' expression_list ')' .

    $default  reduce using rule 144 (postfix_expression)


State 311

    4 TypeList: TypeList ',' Type .

    $default  reduce using rule 4 (TypeList)


State 312

   29 FunctionType: FUNC '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 29 (FunctionType)


State 313

  100 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 337


State 314

   99 AnonymousFunctionDeclaration: FUNC '(' ')' CodeBlock .

    $default  reduce using rule 99 (AnonymousFunctionDeclaration)


State 315

  101 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' . CodeBlock
  102                             | FUNC '(' ParameterList ')' . ReturnTypeList CodeBlock

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46
    '('          shift, and go to state 217
    '{'          shift, and go to state 29

    PackageOrTypeName  go to state 48
    Type               go to state 218
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 338
    CodeBlock          go to state 339


State 316

   74 ArrayPositionInitializer: INTEGER ':' ArrayInitializer .

    $default  reduce using rule 74 (ArrayPositionInitializer)


State 317

   73 ArrayInitializer: '{' ArrayInitializerList '}' .

    $default  reduce using rule 73 (ArrayInitializer)


State 318

   70 ArrayInitializer: PrimitiveType '(' basic_expression . ')'

    ')'  shift, and go to state 340


State 319

   65 ArrayInitializerList: ArrayInitializerList ',' ArrayInitializer .

    $default  reduce using rule 65 (ArrayInitializerList)


State 320

   58 ComplexVariableInitializer: PrimitiveType '(' basic_expression ')' .

    $default  reduce using rule 58 (ComplexVariableInitializer)


State 321

   63 ComplexVariableInitializer: DimExprs Type '{' '}' .

    $default  reduce using rule 63 (ComplexVariableInitializer)


State 322

   62 ComplexVariableInitializer: DimExprs Type '{' ArrayInitializerList . '}'
   65 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 280
    '}'  shift, and go to state 341


State 323

   31 ReturnTypeList: '(' Type ')' .

    $default  reduce using rule 31 (ReturnTypeList)


State 324

   32 ReturnTypeList: '(' ReturnTypeList ',' . Type ')'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 342
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53


State 325

   89 ParameterList: ParameterList ',' IDENTIFIER Type .

    $default  reduce using rule 89 (ParameterList)


State 326

   82 FieldDeclaration: VAR IDENTIFIER Type . ';'

    ';'  shift, and go to state 343


State 327

   75 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' ';' .

    $default  reduce using rule 75 (TypeDeclaration)


State 328

   84 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')'
   85                         | FUNC IDENTIFIER '(' . ')' ReturnTypeList
   86                         | FUNC IDENTIFIER '(' . ParameterList ')'
   87                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   90 MethodDeclarationHeader2: FUNC IDENTIFIER '(' . TypeList ')'
   91                         | FUNC IDENTIFIER '(' . TypeList ')' ReturnTypeList

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 344
    '['          shift, and go to state 46
    ')'          shift, and go to state 132

    PackageOrTypeName  go to state 48
    TypeList           go to state 345
    Type               go to state 197
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ParameterList      go to state 133


State 329

   76 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' ';' .

    $default  reduce using rule 76 (TypeDeclaration)


State 330

  113 if_statement: IF '(' basic_expression ')' CodeBlock .
  114             | IF '(' basic_expression ')' CodeBlock . ELSE else_statemnet

    ELSE  shift, and go to state 346

    $default  reduce using rule 113 (if_statement)


State 331

  118 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 118 (iteration_statemnet)


State 332

  119 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression . ')' ';'

    ')'  shift, and go to state 347


State 333

  120 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' CodeBlock

    ')'  shift, and go to state 348


State 334

  126 for_incr: expression_statement .

    $default  reduce using rule 126 (for_incr)


State 335

  124 for_expr: basic_expression ';' .

    $default  reduce using rule 124 (for_expr)


State 336

  117 switch_statement: SWITCH '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 117 (switch_statement)


State 337

  100 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 100 (AnonymousFunctionDeclaration)


State 338

  102 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 349


State 339

  101 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' CodeBlock .

    $default  reduce using rule 101 (AnonymousFunctionDeclaration)


State 340

   70 ArrayInitializer: PrimitiveType '(' basic_expression ')' .

    $default  reduce using rule 70 (ArrayInitializer)


State 341

   62 ComplexVariableInitializer: DimExprs Type '{' ArrayInitializerList '}' .

    $default  reduce using rule 62 (ComplexVariableInitializer)


State 342

   32 ReturnTypeList: '(' ReturnTypeList ',' Type . ')'

    ')'  shift, and go to state 350


State 343

   82 FieldDeclaration: VAR IDENTIFIER Type ';' .

    $default  reduce using rule 82 (FieldDeclaration)


State 344

    1 PackageOrTypeName: IDENTIFIER .
   88 ParameterList: IDENTIFIER . Type

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46

    $default  reduce using rule 1 (PackageOrTypeName)

    PackageOrTypeName  go to state 48
    Type               go to state 216
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53


State 345

    4 TypeList: TypeList . ',' Type
   90 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList . ')'
   91                         | FUNC IDENTIFIER '(' TypeList . ')' ReturnTypeList

    ','  shift, and go to state 272
    ')'  shift, and go to state 351


State 346

  114 if_statement: IF '(' basic_expression ')' CodeBlock ELSE . else_statemnet

    IF   shift, and go to state 65
    '{'  shift, and go to state 29

    CodeBlock       go to state 352
    if_statement    go to state 353
    else_statemnet  go to state 354


State 347

  119 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' . ';'

    ';'  shift, and go to state 355


State 348

  120 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 356


State 349

  102 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 102 (AnonymousFunctionDeclaration)


State 350

   32 ReturnTypeList: '(' ReturnTypeList ',' Type ')' .

    $default  reduce using rule 32 (ReturnTypeList)


State 351

   90 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' .
   91                         | FUNC IDENTIFIER '(' TypeList ')' . ReturnTypeList

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 20
    '['          shift, and go to state 46
    '('          shift, and go to state 217

    $default  reduce using rule 90 (MethodDeclarationHeader2)

    PackageOrTypeName  go to state 48
    Type               go to state 218
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 357


State 352

  116 else_statemnet: CodeBlock .

    $default  reduce using rule 116 (else_statemnet)


State 353

  115 else_statemnet: if_statement .

    $default  reduce using rule 115 (else_statemnet)


State 354

  114 if_statement: IF '(' basic_expression ')' CodeBlock ELSE else_statemnet .

    $default  reduce using rule 114 (if_statement)


State 355

  119 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' ';' .

    $default  reduce using rule 119 (iteration_statemnet)


State 356

  120 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' CodeBlock .

    $default  reduce using rule 120 (iteration_statemnet)


State 357

   91 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 91 (MethodDeclarationHeader2)
