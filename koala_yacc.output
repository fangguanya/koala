Terminals unused in grammar

   ELLIPSIS
   NOT
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   NEW
   FUNC_HEADER
   HEX
   OCT


Grammar

    0 $accept: Program $end

    1 ModuleFilePathName: IDENTIFIER
    2                   | ModuleFilePathName '.' IDENTIFIER

    3 TypeList: Type
    4         | TypeList ',' Type

    5 Type: PrimitiveType
    6     | ModuleType
    7     | FunctionType
    8     | DIMS PrimitiveType
    9     | DIMS ModuleType
   10     | DIMS FunctionType

   11 PrimitiveType: UINT8
   12              | UINT16
   13              | UINT32
   14              | UINT64
   15              | INT8
   16              | INT16
   17              | INT32
   18              | INT64
   19              | FLOAT32
   20              | FLOAT64
   21              | BOOL
   22              | STRING
   23              | ROOT_OBJECT

   24 ModuleType: IDENTIFIER '.' IDENTIFIER
   25           | IDENTIFIER

   26 FunctionType: FUNC '(' ')' ReturnTypeList
   27             | FUNC '(' ')'
   28             | FUNC '(' TypeList ')' ReturnTypeList
   29             | FUNC '(' TypeList ')'

   30 ReturnTypeList: Type
   31               | '(' TypeList ')'

   32 Program: PackageDeclaration ImportDeclarations Declarations
   33        | PackageDeclaration ImportDeclarations
   34        | PackageDeclaration Declarations
   35        | ImportDeclarations Declarations
   36        | PackageDeclaration
   37        | ImportDeclarations
   38        | Declarations

   39 PackageDeclaration: PACKAGE ModuleFilePathName SemiOrEmpty

   40 ImportDeclarations: ImportDeclaration
   41                   | ImportDeclarations ImportDeclaration

   42 ImportDeclaration: IMPORT ModuleFilePathName SemiOrEmpty
   43                  | IMPORT ModuleFilePathName AS IDENTIFIER SemiOrEmpty
   44                  | IMPORT ModuleFilePathName '.' '*' SemiOrEmpty

   45 Declarations: Declaration
   46             | Declarations Declaration

   47 Declaration: VariableDeclaration
   48            | TypeDeclaration
   49            | FunctionDeclaration

   50 VariableDeclaration: VAR VariableList Type ';'
   51                    | VAR VariableList '=' ArrayInitializerList ';'
   52                    | VAR VariableList Type '=' ArrayInitializerList ';'

   53 VariableList: IDENTIFIER
   54             | VariableList ',' IDENTIFIER

   55 ArrayInitializerList: ArrayInitializer
   56                     | ArrayInitializerList ',' ArrayInitializer

   57 DimExprs: DimExpr
   58         | DimExprs DimExpr

   59 DimExpr: '[' basic_expression ']'

   60 ArrayInitializer: basic_expression
   61                 | arrayinit

   62 arrayinit: '{' ArrayInitializerList '}'

   63 SemiOrEmpty: %empty
   64            | ';'

   65 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' SemiOrEmpty
   66                | TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty
   67                | TYPE IDENTIFIER Type ';'

   68 MemberDeclarations: MemberDeclaration
   69                   | MemberDeclarations MemberDeclaration

   70 MemberDeclaration: FieldDeclaration
   71                  | MethodDeclaration

   72 FieldDeclaration: VAR IDENTIFIER Type ';'
   73                 | IDENTIFIER Type ';'

   74 MethodDeclaration: MethodDeclarationHeader1 CodeBlock

   75 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' ReturnTypeList
   76                         | FUNC IDENTIFIER '(' ')'
   77                         | FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList
   78                         | FUNC IDENTIFIER '(' ParameterList ')'
   79                         | IDENTIFIER '(' ')' ReturnTypeList
   80                         | IDENTIFIER '(' ')'
   81                         | IDENTIFIER '(' ParameterList ')' ReturnTypeList
   82                         | IDENTIFIER '(' ParameterList ')'

   83 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList
   84                         | FUNC IDENTIFIER '(' TypeList ')'
   85                         | IDENTIFIER '(' TypeList ')' ReturnTypeList
   86                         | IDENTIFIER '(' TypeList ')'

   87 ParameterList: IDENTIFIER Type
   88              | ParameterList ',' IDENTIFIER Type

   89 CodeBlock: '{' local_variable_declaration_statements '}'
   90          | '{' '}'

   91 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration
   92                              | InterfaceFunctionDeclarations InterfaceFunctionDeclaration

   93 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';'
   94                             | MethodDeclarationHeader2 ';'

   95 FunctionDeclaration: FUNC IDENTIFIER '(' ')' ReturnTypeList CodeBlock
   96                    | FUNC IDENTIFIER '(' ')' CodeBlock
   97                    | FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock
   98                    | FUNC IDENTIFIER '(' ParameterList ')' CodeBlock

   99 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList CodeBlock
  100                             | FUNC '(' ')' CodeBlock
  101                             | FUNC '(' ParameterList ')' ReturnTypeList CodeBlock
  102                             | FUNC '(' ParameterList ')' CodeBlock

  103 local_variable_declaration_statements: local_variable_declaration_statement
  104                                      | local_variable_declaration_statements local_variable_declaration_statement

  105 local_variable_declaration_statement: VariableDeclaration
  106                                     | statement

  107 statement: expression_statement ';'
  108          | selection_statement
  109          | iteration_statemnet
  110          | jump_statement

  111 selection_statement: if_statement
  112                    | switch_statement

  113 if_statement: IF '(' basic_expression ')' CodeBlock
  114             | IF '(' basic_expression ')' CodeBlock ELSE else_statemnet

  115 else_statemnet: if_statement
  116               | CodeBlock

  117 switch_statement: SWITCH '(' basic_expression ')' CodeBlock

  118 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock
  119                    | DO CodeBlock WHILE '(' basic_expression ')' ';'
  120                    | FOR '(' for_init for_expr for_incr ')' CodeBlock

  121 for_init: expression_statement ';'
  122         | VariableDeclaration
  123         | ';'

  124 for_expr: basic_expression ';'
  125         | ';'

  126 for_incr: expression_statement

  127 jump_statement: RETURN ';'
  128               | RETURN expression_list ';'

  129 primary_expression: IDENTIFIER
  130                   | constant
  131                   | SELF
  132                   | '(' basic_expression ')'
  133                   | complex_primary

  134 complex_primary: PrimitiveType '(' constant ')'
  135                | AnonymousFunctionDeclaration
  136                | ArrayExpression

  137 ArrayExpression: DimExprs Type
  138                | DimExprs Type '{' ArrayInitializerList '}'
  139                | DimExprs Type '{' '}'

  140 constant: INTEGER
  141         | FLOAT
  142         | STRING_LITERAL
  143         | TOKEN_NIL
  144         | TOKEN_TRUE
  145         | TOKEN_FALSE

  146 postfix_expression: primary_expression
  147                   | postfix_expression INC
  148                   | postfix_expression DEC
  149                   | postfix_expression '.' IDENTIFIER
  150                   | postfix_expression '[' basic_expression ']'
  151                   | postfix_expression '(' expression_list ')'
  152                   | postfix_expression '(' ')'
  153                   | postfix_expression '(' ')' CodeBlock

  154 unary_expression: postfix_expression
  155                 | INC unary_expression
  156                 | DEC unary_expression
  157                 | '+' unary_expression
  158                 | '-' unary_expression
  159                 | '~' unary_expression
  160                 | '!' unary_expression

  161 multiplicative_expression: unary_expression
  162                          | multiplicative_expression '*' unary_expression
  163                          | multiplicative_expression '/' unary_expression
  164                          | multiplicative_expression '%' unary_expression

  165 additive_expression: multiplicative_expression
  166                    | additive_expression '+' multiplicative_expression
  167                    | additive_expression '-' multiplicative_expression

  168 shift_expression: additive_expression
  169                 | shift_expression SHIFT_LEFT additive_expression
  170                 | shift_expression SHIFT_RIGHT additive_expression

  171 relational_expression: shift_expression
  172                      | relational_expression '<' shift_expression
  173                      | relational_expression '>' shift_expression
  174                      | relational_expression LE shift_expression
  175                      | relational_expression GE shift_expression

  176 equality_expression: relational_expression
  177                    | equality_expression EQ relational_expression
  178                    | equality_expression NE relational_expression

  179 and_expression: equality_expression
  180               | and_expression '&' equality_expression

  181 exclusive_or_expression: and_expression
  182                        | exclusive_or_expression '^' and_expression

  183 inclusive_or_expression: exclusive_or_expression
  184                        | inclusive_or_expression '|' exclusive_or_expression

  185 logical_and_expression: inclusive_or_expression
  186                       | logical_and_expression AND inclusive_or_expression

  187 logical_or_expression: logical_and_expression
  188                      | logical_or_expression OR logical_and_expression

  189 basic_expression: logical_or_expression

  190 expression: basic_expression

  191 expression_list: expression
  192                | expression_list ',' expression

  193 postfix_expression_list: postfix_expression
  194                        | postfix_expression_list ',' postfix_expression

  195 assignment_expression: postfix_expression_list '=' ArrayInitializerList
  196                      | postfix_expression compound_assignment_operator ArrayInitializer

  197 compound_assignment_operator: ADD_ASSIGN
  198                             | SUB_ASSIGN
  199                             | MUL_ASSIGN
  200                             | DIV_ASSIGN
  201                             | MOD_ASSIGN
  202                             | AND_ASSIGN
  203                             | OR_ASSIGN
  204                             | XOR_ASSIGN
  205                             | RIGHT_ASSIGN
  206                             | LEFT_ASSIGN
  207                             | TYPELESS_ASSIGN

  208 expression_statement: basic_expression
  209                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 160
'%' (37) 164
'&' (38) 180
'(' (40) 26 27 28 29 31 75 76 77 78 79 80 81 82 83 84 85 86 95 96 97
    98 99 100 101 102 113 114 117 118 119 120 132 134 151 152 153
')' (41) 26 27 28 29 31 75 76 77 78 79 80 81 82 83 84 85 86 95 96 97
    98 99 100 101 102 113 114 117 118 119 120 132 134 151 152 153
'*' (42) 44 162
'+' (43) 157 166
',' (44) 4 54 56 88 192 194
'-' (45) 158 167
'.' (46) 2 24 44 149
'/' (47) 163
';' (59) 50 51 52 64 67 72 73 93 94 107 119 121 123 124 125 127 128
'<' (60) 172
'=' (61) 51 52 195
'>' (62) 173
'[' (91) 59 150
']' (93) 59 150
'^' (94) 182
'{' (123) 62 65 66 89 90 138 139
'|' (124) 184
'}' (125) 62 65 66 89 90 138 139
'~' (126) 159
error (256)
ELLIPSIS (258)
TYPELESS_ASSIGN (259) 207
ADD_ASSIGN (260) 197
SUB_ASSIGN (261) 198
MUL_ASSIGN (262) 199
DIV_ASSIGN (263) 200
MOD_ASSIGN (264) 201
AND_ASSIGN (265) 202
OR_ASSIGN (266) 203
XOR_ASSIGN (267) 204
RIGHT_ASSIGN (268) 205
LEFT_ASSIGN (269) 206
EQ (270) 177
NE (271) 178
GE (272) 175
LE (273) 174
AND (274) 186
OR (275) 188
NOT (276)
SHIFT_LEFT (277) 169
SHIFT_RIGHT (278) 170
INC (279) 147 155
DEC (280) 148 156
IF (281) 113 114
ELSE (282) 114
WHILE (283) 118 119
DO (284) 119
FOR (285) 120
IN (286)
SWITCH (287) 117
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 50 51 52 72
FUNC (293) 26 27 28 29 75 76 77 78 83 84 95 96 97 98 99 100 101 102
RETURN (294) 127 128
STRUCT (295) 65
INTERFACE (296) 66
TYPE (297) 65 66 67
CONST (298)
PACKAGE (299) 39
IMPORT (300) 42 43 44
AS (301) 43
NEW (302)
FUNC_HEADER (303)
INT8 (304) 15
INT16 (305) 16
INT32 (306) 17
INT64 (307) 18
UINT8 (308) 11
UINT16 (309) 12
UINT32 (310) 13
UINT64 (311) 14
FLOAT32 (312) 19
FLOAT64 (313) 20
BOOL (314) 21
STRING (315) 22
ROOT_OBJECT (316) 23
DIMS (317) 8 9 10
SELF (318) 131
TOKEN_NIL (319) 143
TOKEN_TRUE (320) 144
TOKEN_FALSE (321) 145
INTEGER (322) 140
HEX (323)
OCT (324)
FLOAT (325) 141
STRING_LITERAL (326) 142
IDENTIFIER (327) 1 2 24 25 43 53 54 65 66 67 72 73 75 76 77 78 79 80
    81 82 83 84 85 86 87 88 95 96 97 98 129 149


Nonterminals, with rules where they appear

$accept (95)
    on left: 0
ModuleFilePathName (96)
    on left: 1 2, on right: 2 39 42 43 44
TypeList (97)
    on left: 3 4, on right: 4 28 29 31 83 84 85 86
Type (98)
    on left: 5 6 7 8 9 10, on right: 3 4 30 50 52 67 72 73 87 88 137
    138 139
PrimitiveType (99)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23, on right: 5 8
    134
ModuleType (100)
    on left: 24 25, on right: 6 9
FunctionType (101)
    on left: 26 27 28 29, on right: 7 10
ReturnTypeList (102)
    on left: 30 31, on right: 26 28 75 77 79 81 83 85 95 97 99 101
Program (103)
    on left: 32 33 34 35 36 37 38, on right: 0
PackageDeclaration (104)
    on left: 39, on right: 32 33 34 36
ImportDeclarations (105)
    on left: 40 41, on right: 32 33 35 37 41
ImportDeclaration (106)
    on left: 42 43 44, on right: 40 41
Declarations (107)
    on left: 45 46, on right: 32 34 35 38 46
Declaration (108)
    on left: 47 48 49, on right: 45 46
VariableDeclaration (109)
    on left: 50 51 52, on right: 47 105 122
VariableList (110)
    on left: 53 54, on right: 50 51 52 54
ArrayInitializerList (111)
    on left: 55 56, on right: 51 52 56 62 138 195
DimExprs (112)
    on left: 57 58, on right: 58 137 138 139
DimExpr (113)
    on left: 59, on right: 57 58
ArrayInitializer (114)
    on left: 60 61, on right: 55 56 196
arrayinit (115)
    on left: 62, on right: 61
SemiOrEmpty (116)
    on left: 63 64, on right: 39 42 43 44 65 66
TypeDeclaration (117)
    on left: 65 66 67, on right: 48
MemberDeclarations (118)
    on left: 68 69, on right: 65 69
MemberDeclaration (119)
    on left: 70 71, on right: 68 69
FieldDeclaration (120)
    on left: 72 73, on right: 70
MethodDeclaration (121)
    on left: 74, on right: 71
MethodDeclarationHeader1 (122)
    on left: 75 76 77 78 79 80 81 82, on right: 74 93
MethodDeclarationHeader2 (123)
    on left: 83 84 85 86, on right: 94
ParameterList (124)
    on left: 87 88, on right: 77 78 81 82 88 97 98 101 102
CodeBlock (125)
    on left: 89 90, on right: 74 95 96 97 98 99 100 101 102 113 114
    116 117 118 119 120 153
InterfaceFunctionDeclarations (126)
    on left: 91 92, on right: 66 92
InterfaceFunctionDeclaration (127)
    on left: 93 94, on right: 91 92
FunctionDeclaration (128)
    on left: 95 96 97 98, on right: 49
AnonymousFunctionDeclaration (129)
    on left: 99 100 101 102, on right: 135
local_variable_declaration_statements (130)
    on left: 103 104, on right: 89 104
local_variable_declaration_statement (131)
    on left: 105 106, on right: 103 104
statement (132)
    on left: 107 108 109 110, on right: 106
selection_statement (133)
    on left: 111 112, on right: 108
if_statement (134)
    on left: 113 114, on right: 111 115
else_statemnet (135)
    on left: 115 116, on right: 114
switch_statement (136)
    on left: 117, on right: 112
iteration_statemnet (137)
    on left: 118 119 120, on right: 109
for_init (138)
    on left: 121 122 123, on right: 120
for_expr (139)
    on left: 124 125, on right: 120
for_incr (140)
    on left: 126, on right: 120
jump_statement (141)
    on left: 127 128, on right: 110
primary_expression (142)
    on left: 129 130 131 132 133, on right: 146
complex_primary (143)
    on left: 134 135 136, on right: 133
ArrayExpression (144)
    on left: 137 138 139, on right: 136
constant (145)
    on left: 140 141 142 143 144 145, on right: 130 134
postfix_expression (146)
    on left: 146 147 148 149 150 151 152 153, on right: 147 148 149
    150 151 152 153 154 193 194 196
unary_expression (147)
    on left: 154 155 156 157 158 159 160, on right: 155 156 157 158
    159 160 161 162 163 164
multiplicative_expression (148)
    on left: 161 162 163 164, on right: 162 163 164 165 166 167
additive_expression (149)
    on left: 165 166 167, on right: 166 167 168 169 170
shift_expression (150)
    on left: 168 169 170, on right: 169 170 171 172 173 174 175
relational_expression (151)
    on left: 171 172 173 174 175, on right: 172 173 174 175 176 177
    178
equality_expression (152)
    on left: 176 177 178, on right: 177 178 179 180
and_expression (153)
    on left: 179 180, on right: 180 181 182
exclusive_or_expression (154)
    on left: 181 182, on right: 182 183 184
inclusive_or_expression (155)
    on left: 183 184, on right: 184 185 186
logical_and_expression (156)
    on left: 185 186, on right: 186 187 188
logical_or_expression (157)
    on left: 187 188, on right: 188 189
basic_expression (158)
    on left: 189, on right: 59 60 113 114 117 118 119 124 132 150 190
    208
expression (159)
    on left: 190, on right: 191 192
expression_list (160)
    on left: 191 192, on right: 128 151 192
postfix_expression_list (161)
    on left: 193 194, on right: 194 195
assignment_expression (162)
    on left: 195 196, on right: 209
compound_assignment_operator (163)
    on left: 197 198 199 200 201 202 203 204 205 206 207, on right:
    196
expression_statement (164)
    on left: 208 209, on right: 107 121 126


State 0

    0 $accept: . Program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    PACKAGE  shift, and go to state 4
    IMPORT   shift, and go to state 5

    Program              go to state 6
    PackageDeclaration   go to state 7
    ImportDeclarations   go to state 8
    ImportDeclaration    go to state 9
    Declarations         go to state 10
    Declaration          go to state 11
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 1

   50 VariableDeclaration: VAR . VariableList Type ';'
   51                    | VAR . VariableList '=' ArrayInitializerList ';'
   52                    | VAR . VariableList Type '=' ArrayInitializerList ';'

    IDENTIFIER  shift, and go to state 15

    VariableList  go to state 16


State 2

   95 FunctionDeclaration: FUNC . IDENTIFIER '(' ')' ReturnTypeList CodeBlock
   96                    | FUNC . IDENTIFIER '(' ')' CodeBlock
   97                    | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock
   98                    | FUNC . IDENTIFIER '(' ParameterList ')' CodeBlock

    IDENTIFIER  shift, and go to state 17


State 3

   65 TypeDeclaration: TYPE . IDENTIFIER STRUCT '{' MemberDeclarations '}' SemiOrEmpty
   66                | TYPE . IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty
   67                | TYPE . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 18


State 4

   39 PackageDeclaration: PACKAGE . ModuleFilePathName SemiOrEmpty

    IDENTIFIER  shift, and go to state 19

    ModuleFilePathName  go to state 20


State 5

   42 ImportDeclaration: IMPORT . ModuleFilePathName SemiOrEmpty
   43                  | IMPORT . ModuleFilePathName AS IDENTIFIER SemiOrEmpty
   44                  | IMPORT . ModuleFilePathName '.' '*' SemiOrEmpty

    IDENTIFIER  shift, and go to state 19

    ModuleFilePathName  go to state 21


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 22


State 7

   32 Program: PackageDeclaration . ImportDeclarations Declarations
   33        | PackageDeclaration . ImportDeclarations
   34        | PackageDeclaration . Declarations
   36        | PackageDeclaration .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 36 (Program)

    ImportDeclarations   go to state 23
    ImportDeclaration    go to state 9
    Declarations         go to state 24
    Declaration          go to state 11
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 8

   35 Program: ImportDeclarations . Declarations
   37        | ImportDeclarations .
   41 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 37 (Program)

    ImportDeclaration    go to state 25
    Declarations         go to state 26
    Declaration          go to state 11
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 9

   40 ImportDeclarations: ImportDeclaration .

    $default  reduce using rule 40 (ImportDeclarations)


State 10

   38 Program: Declarations .
   46 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 38 (Program)

    Declaration          go to state 27
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 11

   45 Declarations: Declaration .

    $default  reduce using rule 45 (Declarations)


State 12

   47 Declaration: VariableDeclaration .

    $default  reduce using rule 47 (Declaration)


State 13

   48 Declaration: TypeDeclaration .

    $default  reduce using rule 48 (Declaration)


State 14

   49 Declaration: FunctionDeclaration .

    $default  reduce using rule 49 (Declaration)


State 15

   53 VariableList: IDENTIFIER .

    $default  reduce using rule 53 (VariableList)


State 16

   50 VariableDeclaration: VAR VariableList . Type ';'
   51                    | VAR VariableList . '=' ArrayInitializerList ';'
   52                    | VAR VariableList . Type '=' ArrayInitializerList ';'
   54 VariableList: VariableList . ',' IDENTIFIER

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    ','          shift, and go to state 44
    '='          shift, and go to state 45

    Type           go to state 46
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 17

   95 FunctionDeclaration: FUNC IDENTIFIER . '(' ')' ReturnTypeList CodeBlock
   96                    | FUNC IDENTIFIER . '(' ')' CodeBlock
   97                    | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList CodeBlock
   98                    | FUNC IDENTIFIER . '(' ParameterList ')' CodeBlock

    '('  shift, and go to state 50


State 18

   65 TypeDeclaration: TYPE IDENTIFIER . STRUCT '{' MemberDeclarations '}' SemiOrEmpty
   66                | TYPE IDENTIFIER . INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty
   67                | TYPE IDENTIFIER . Type ';'

    FUNC         shift, and go to state 28
    STRUCT       shift, and go to state 51
    INTERFACE    shift, and go to state 52
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 53
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 19

    1 ModuleFilePathName: IDENTIFIER .

    $default  reduce using rule 1 (ModuleFilePathName)


State 20

    2 ModuleFilePathName: ModuleFilePathName . '.' IDENTIFIER
   39 PackageDeclaration: PACKAGE ModuleFilePathName . SemiOrEmpty

    '.'  shift, and go to state 54
    ';'  shift, and go to state 55

    $default  reduce using rule 63 (SemiOrEmpty)

    SemiOrEmpty  go to state 56


State 21

    2 ModuleFilePathName: ModuleFilePathName . '.' IDENTIFIER
   42 ImportDeclaration: IMPORT ModuleFilePathName . SemiOrEmpty
   43                  | IMPORT ModuleFilePathName . AS IDENTIFIER SemiOrEmpty
   44                  | IMPORT ModuleFilePathName . '.' '*' SemiOrEmpty

    AS   shift, and go to state 57
    '.'  shift, and go to state 58
    ';'  shift, and go to state 55

    $default  reduce using rule 63 (SemiOrEmpty)

    SemiOrEmpty  go to state 59


State 22

    0 $accept: Program $end .

    $default  accept


State 23

   32 Program: PackageDeclaration ImportDeclarations . Declarations
   33        | PackageDeclaration ImportDeclarations .
   41 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 33 (Program)

    ImportDeclaration    go to state 25
    Declarations         go to state 60
    Declaration          go to state 11
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 24

   34 Program: PackageDeclaration Declarations .
   46 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 34 (Program)

    Declaration          go to state 27
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 25

   41 ImportDeclarations: ImportDeclarations ImportDeclaration .

    $default  reduce using rule 41 (ImportDeclarations)


State 26

   35 Program: ImportDeclarations Declarations .
   46 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 35 (Program)

    Declaration          go to state 27
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 27

   46 Declarations: Declarations Declaration .

    $default  reduce using rule 46 (Declarations)


State 28

   26 FunctionType: FUNC . '(' ')' ReturnTypeList
   27             | FUNC . '(' ')'
   28             | FUNC . '(' TypeList ')' ReturnTypeList
   29             | FUNC . '(' TypeList ')'

    '('  shift, and go to state 61


State 29

   15 PrimitiveType: INT8 .

    $default  reduce using rule 15 (PrimitiveType)


State 30

   16 PrimitiveType: INT16 .

    $default  reduce using rule 16 (PrimitiveType)


State 31

   17 PrimitiveType: INT32 .

    $default  reduce using rule 17 (PrimitiveType)


State 32

   18 PrimitiveType: INT64 .

    $default  reduce using rule 18 (PrimitiveType)


State 33

   11 PrimitiveType: UINT8 .

    $default  reduce using rule 11 (PrimitiveType)


State 34

   12 PrimitiveType: UINT16 .

    $default  reduce using rule 12 (PrimitiveType)


State 35

   13 PrimitiveType: UINT32 .

    $default  reduce using rule 13 (PrimitiveType)


State 36

   14 PrimitiveType: UINT64 .

    $default  reduce using rule 14 (PrimitiveType)


State 37

   19 PrimitiveType: FLOAT32 .

    $default  reduce using rule 19 (PrimitiveType)


State 38

   20 PrimitiveType: FLOAT64 .

    $default  reduce using rule 20 (PrimitiveType)


State 39

   21 PrimitiveType: BOOL .

    $default  reduce using rule 21 (PrimitiveType)


State 40

   22 PrimitiveType: STRING .

    $default  reduce using rule 22 (PrimitiveType)


State 41

   23 PrimitiveType: ROOT_OBJECT .

    $default  reduce using rule 23 (PrimitiveType)


State 42

    8 Type: DIMS . PrimitiveType
    9     | DIMS . ModuleType
   10     | DIMS . FunctionType

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    IDENTIFIER   shift, and go to state 43

    PrimitiveType  go to state 62
    ModuleType     go to state 63
    FunctionType   go to state 64


State 43

   24 ModuleType: IDENTIFIER . '.' IDENTIFIER
   25           | IDENTIFIER .

    '.'  shift, and go to state 65

    $default  reduce using rule 25 (ModuleType)


State 44

   54 VariableList: VariableList ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 66


State 45

   51 VariableDeclaration: VAR VariableList '=' . ArrayInitializerList ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '{'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    ArrayInitializerList          go to state 86
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    ArrayInitializer              go to state 89
    arrayinit                     go to state 90
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 108


State 46

   50 VariableDeclaration: VAR VariableList Type . ';'
   52                    | VAR VariableList Type . '=' ArrayInitializerList ';'

    ';'  shift, and go to state 109
    '='  shift, and go to state 110


State 47

    5 Type: PrimitiveType .

    $default  reduce using rule 5 (Type)


State 48

    6 Type: ModuleType .

    $default  reduce using rule 6 (Type)


State 49

    7 Type: FunctionType .

    $default  reduce using rule 7 (Type)


State 50

   95 FunctionDeclaration: FUNC IDENTIFIER '(' . ')' ReturnTypeList CodeBlock
   96                    | FUNC IDENTIFIER '(' . ')' CodeBlock
   97                    | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList CodeBlock
   98                    | FUNC IDENTIFIER '(' . ParameterList ')' CodeBlock

    IDENTIFIER  shift, and go to state 111
    ')'         shift, and go to state 112

    ParameterList  go to state 113


State 51

   65 TypeDeclaration: TYPE IDENTIFIER STRUCT . '{' MemberDeclarations '}' SemiOrEmpty

    '{'  shift, and go to state 114


State 52

   66 TypeDeclaration: TYPE IDENTIFIER INTERFACE . '{' InterfaceFunctionDeclarations '}' SemiOrEmpty

    '{'  shift, and go to state 115


State 53

   67 TypeDeclaration: TYPE IDENTIFIER Type . ';'

    ';'  shift, and go to state 116


State 54

    2 ModuleFilePathName: ModuleFilePathName '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 117


State 55

   64 SemiOrEmpty: ';' .

    $default  reduce using rule 64 (SemiOrEmpty)


State 56

   39 PackageDeclaration: PACKAGE ModuleFilePathName SemiOrEmpty .

    $default  reduce using rule 39 (PackageDeclaration)


State 57

   43 ImportDeclaration: IMPORT ModuleFilePathName AS . IDENTIFIER SemiOrEmpty

    IDENTIFIER  shift, and go to state 118


State 58

    2 ModuleFilePathName: ModuleFilePathName '.' . IDENTIFIER
   44 ImportDeclaration: IMPORT ModuleFilePathName '.' . '*' SemiOrEmpty

    IDENTIFIER  shift, and go to state 117
    '*'         shift, and go to state 119


State 59

   42 ImportDeclaration: IMPORT ModuleFilePathName SemiOrEmpty .

    $default  reduce using rule 42 (ImportDeclaration)


State 60

   32 Program: PackageDeclaration ImportDeclarations Declarations .
   46 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 32 (Program)

    Declaration          go to state 27
    VariableDeclaration  go to state 12
    TypeDeclaration      go to state 13
    FunctionDeclaration  go to state 14


State 61

   26 FunctionType: FUNC '(' . ')' ReturnTypeList
   27             | FUNC '(' . ')'
   28             | FUNC '(' . TypeList ')' ReturnTypeList
   29             | FUNC '(' . TypeList ')'

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    ')'          shift, and go to state 120

    TypeList       go to state 121
    Type           go to state 122
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 62

    8 Type: DIMS PrimitiveType .

    $default  reduce using rule 8 (Type)


State 63

    9 Type: DIMS ModuleType .

    $default  reduce using rule 9 (Type)


State 64

   10 Type: DIMS FunctionType .

    $default  reduce using rule 10 (Type)


State 65

   24 ModuleType: IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


State 66

   54 VariableList: VariableList ',' IDENTIFIER .

    $default  reduce using rule 54 (VariableList)


State 67

  155 unary_expression: INC . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 124


State 68

  156 unary_expression: DEC . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 125


State 69

   99 AnonymousFunctionDeclaration: FUNC . '(' ')' ReturnTypeList CodeBlock
  100                             | FUNC . '(' ')' CodeBlock
  101                             | FUNC . '(' ParameterList ')' ReturnTypeList CodeBlock
  102                             | FUNC . '(' ParameterList ')' CodeBlock

    '('  shift, and go to state 126


State 70

  131 primary_expression: SELF .

    $default  reduce using rule 131 (primary_expression)


State 71

  143 constant: TOKEN_NIL .

    $default  reduce using rule 143 (constant)


State 72

  144 constant: TOKEN_TRUE .

    $default  reduce using rule 144 (constant)


State 73

  145 constant: TOKEN_FALSE .

    $default  reduce using rule 145 (constant)


State 74

  140 constant: INTEGER .

    $default  reduce using rule 140 (constant)


State 75

  141 constant: FLOAT .

    $default  reduce using rule 141 (constant)


State 76

  142 constant: STRING_LITERAL .

    $default  reduce using rule 142 (constant)


State 77

  129 primary_expression: IDENTIFIER .

    $default  reduce using rule 129 (primary_expression)


State 78

  132 primary_expression: '(' . basic_expression ')'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 127


State 79

   59 DimExpr: '[' . basic_expression ']'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 128


State 80

   62 arrayinit: '{' . ArrayInitializerList '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '{'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    ArrayInitializerList          go to state 129
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    ArrayInitializer              go to state 89
    arrayinit                     go to state 90
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 108


State 81

  157 unary_expression: '+' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 130


State 82

  158 unary_expression: '-' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 131


State 83

  159 unary_expression: '~' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 132


State 84

  160 unary_expression: '!' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 133


State 85

  134 complex_primary: PrimitiveType . '(' constant ')'

    '('  shift, and go to state 134


State 86

   51 VariableDeclaration: VAR VariableList '=' ArrayInitializerList . ';'
   56 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 135
    ';'  shift, and go to state 136


State 87

   58 DimExprs: DimExprs . DimExpr
  137 ArrayExpression: DimExprs . Type
  138                | DimExprs . Type '{' ArrayInitializerList '}'
  139                | DimExprs . Type '{' '}'

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '['          shift, and go to state 79

    Type           go to state 137
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49
    DimExpr        go to state 138


State 88

   57 DimExprs: DimExpr .

    $default  reduce using rule 57 (DimExprs)


State 89

   55 ArrayInitializerList: ArrayInitializer .

    $default  reduce using rule 55 (ArrayInitializerList)


State 90

   61 ArrayInitializer: arrayinit .

    $default  reduce using rule 61 (ArrayInitializer)


State 91

  135 complex_primary: AnonymousFunctionDeclaration .

    $default  reduce using rule 135 (complex_primary)


State 92

  146 postfix_expression: primary_expression .

    $default  reduce using rule 146 (postfix_expression)


State 93

  133 primary_expression: complex_primary .

    $default  reduce using rule 133 (primary_expression)


State 94

  136 complex_primary: ArrayExpression .

    $default  reduce using rule 136 (complex_primary)


State 95

  130 primary_expression: constant .

    $default  reduce using rule 130 (primary_expression)


State 96

  147 postfix_expression: postfix_expression . INC
  148                   | postfix_expression . DEC
  149                   | postfix_expression . '.' IDENTIFIER
  150                   | postfix_expression . '[' basic_expression ']'
  151                   | postfix_expression . '(' expression_list ')'
  152                   | postfix_expression . '(' ')'
  153                   | postfix_expression . '(' ')' CodeBlock
  154 unary_expression: postfix_expression .

    INC  shift, and go to state 139
    DEC  shift, and go to state 140
    '.'  shift, and go to state 141
    '('  shift, and go to state 142
    '['  shift, and go to state 143

    $default  reduce using rule 154 (unary_expression)


State 97

  161 multiplicative_expression: unary_expression .

    $default  reduce using rule 161 (multiplicative_expression)


State 98

  162 multiplicative_expression: multiplicative_expression . '*' unary_expression
  163                          | multiplicative_expression . '/' unary_expression
  164                          | multiplicative_expression . '%' unary_expression
  165 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 144
    '/'  shift, and go to state 145
    '%'  shift, and go to state 146

    $default  reduce using rule 165 (additive_expression)


State 99

  166 additive_expression: additive_expression . '+' multiplicative_expression
  167                    | additive_expression . '-' multiplicative_expression
  168 shift_expression: additive_expression .

    '+'  shift, and go to state 147
    '-'  shift, and go to state 148

    $default  reduce using rule 168 (shift_expression)


State 100

  169 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  170                 | shift_expression . SHIFT_RIGHT additive_expression
  171 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 149
    SHIFT_RIGHT  shift, and go to state 150

    $default  reduce using rule 171 (relational_expression)


State 101

  172 relational_expression: relational_expression . '<' shift_expression
  173                      | relational_expression . '>' shift_expression
  174                      | relational_expression . LE shift_expression
  175                      | relational_expression . GE shift_expression
  176 equality_expression: relational_expression .

    GE   shift, and go to state 151
    LE   shift, and go to state 152
    '<'  shift, and go to state 153
    '>'  shift, and go to state 154

    $default  reduce using rule 176 (equality_expression)


State 102

  177 equality_expression: equality_expression . EQ relational_expression
  178                    | equality_expression . NE relational_expression
  179 and_expression: equality_expression .

    EQ  shift, and go to state 155
    NE  shift, and go to state 156

    $default  reduce using rule 179 (and_expression)


State 103

  180 and_expression: and_expression . '&' equality_expression
  181 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 157

    $default  reduce using rule 181 (exclusive_or_expression)


State 104

  182 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  183 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 158

    $default  reduce using rule 183 (inclusive_or_expression)


State 105

  184 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  185 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 159

    $default  reduce using rule 185 (logical_and_expression)


State 106

  186 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  187 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 160

    $default  reduce using rule 187 (logical_or_expression)


State 107

  188 logical_or_expression: logical_or_expression . OR logical_and_expression
  189 basic_expression: logical_or_expression .

    OR  shift, and go to state 161

    $default  reduce using rule 189 (basic_expression)


State 108

   60 ArrayInitializer: basic_expression .

    $default  reduce using rule 60 (ArrayInitializer)


State 109

   50 VariableDeclaration: VAR VariableList Type ';' .

    $default  reduce using rule 50 (VariableDeclaration)


State 110

   52 VariableDeclaration: VAR VariableList Type '=' . ArrayInitializerList ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '{'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    ArrayInitializerList          go to state 162
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    ArrayInitializer              go to state 89
    arrayinit                     go to state 90
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 108


State 111

   87 ParameterList: IDENTIFIER . Type

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 163
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 112

   95 FunctionDeclaration: FUNC IDENTIFIER '(' ')' . ReturnTypeList CodeBlock
   96                    | FUNC IDENTIFIER '(' ')' . CodeBlock

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164
    '{'          shift, and go to state 165

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 167
    CodeBlock       go to state 168


State 113

   88 ParameterList: ParameterList . ',' IDENTIFIER Type
   97 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList . ')' ReturnTypeList CodeBlock
   98                    | FUNC IDENTIFIER '(' ParameterList . ')' CodeBlock

    ')'  shift, and go to state 169
    ','  shift, and go to state 170


State 114

   65 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' . MemberDeclarations '}' SemiOrEmpty

    VAR         shift, and go to state 171
    FUNC        shift, and go to state 172
    IDENTIFIER  shift, and go to state 173

    MemberDeclarations        go to state 174
    MemberDeclaration         go to state 175
    FieldDeclaration          go to state 176
    MethodDeclaration         go to state 177
    MethodDeclarationHeader1  go to state 178


State 115

   66 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' . InterfaceFunctionDeclarations '}' SemiOrEmpty

    FUNC        shift, and go to state 179
    IDENTIFIER  shift, and go to state 180

    MethodDeclarationHeader1       go to state 181
    MethodDeclarationHeader2       go to state 182
    InterfaceFunctionDeclarations  go to state 183
    InterfaceFunctionDeclaration   go to state 184


State 116

   67 TypeDeclaration: TYPE IDENTIFIER Type ';' .

    $default  reduce using rule 67 (TypeDeclaration)


State 117

    2 ModuleFilePathName: ModuleFilePathName '.' IDENTIFIER .

    $default  reduce using rule 2 (ModuleFilePathName)


State 118

   43 ImportDeclaration: IMPORT ModuleFilePathName AS IDENTIFIER . SemiOrEmpty

    ';'  shift, and go to state 55

    $default  reduce using rule 63 (SemiOrEmpty)

    SemiOrEmpty  go to state 185


State 119

   44 ImportDeclaration: IMPORT ModuleFilePathName '.' '*' . SemiOrEmpty

    ';'  shift, and go to state 55

    $default  reduce using rule 63 (SemiOrEmpty)

    SemiOrEmpty  go to state 186


State 120

   26 FunctionType: FUNC '(' ')' . ReturnTypeList
   27             | FUNC '(' ')' .

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164

    $default  reduce using rule 27 (FunctionType)

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 187


State 121

    4 TypeList: TypeList . ',' Type
   28 FunctionType: FUNC '(' TypeList . ')' ReturnTypeList
   29             | FUNC '(' TypeList . ')'

    ')'  shift, and go to state 188
    ','  shift, and go to state 189


State 122

    3 TypeList: Type .

    $default  reduce using rule 3 (TypeList)


State 123

   24 ModuleType: IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 24 (ModuleType)


State 124

  155 unary_expression: INC unary_expression .

    $default  reduce using rule 155 (unary_expression)


State 125

  156 unary_expression: DEC unary_expression .

    $default  reduce using rule 156 (unary_expression)


State 126

   99 AnonymousFunctionDeclaration: FUNC '(' . ')' ReturnTypeList CodeBlock
  100                             | FUNC '(' . ')' CodeBlock
  101                             | FUNC '(' . ParameterList ')' ReturnTypeList CodeBlock
  102                             | FUNC '(' . ParameterList ')' CodeBlock

    IDENTIFIER  shift, and go to state 111
    ')'         shift, and go to state 190

    ParameterList  go to state 191


State 127

  132 primary_expression: '(' basic_expression . ')'

    ')'  shift, and go to state 192


State 128

   59 DimExpr: '[' basic_expression . ']'

    ']'  shift, and go to state 193


State 129

   56 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
   62 arrayinit: '{' ArrayInitializerList . '}'

    ','  shift, and go to state 135
    '}'  shift, and go to state 194


State 130

  157 unary_expression: '+' unary_expression .

    $default  reduce using rule 157 (unary_expression)


State 131

  158 unary_expression: '-' unary_expression .

    $default  reduce using rule 158 (unary_expression)


State 132

  159 unary_expression: '~' unary_expression .

    $default  reduce using rule 159 (unary_expression)


State 133

  160 unary_expression: '!' unary_expression .

    $default  reduce using rule 160 (unary_expression)


State 134

  134 complex_primary: PrimitiveType '(' . constant ')'

    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76

    constant  go to state 195


State 135

   56 ArrayInitializerList: ArrayInitializerList ',' . ArrayInitializer

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '{'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    ArrayInitializer              go to state 196
    arrayinit                     go to state 90
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 108


State 136

   51 VariableDeclaration: VAR VariableList '=' ArrayInitializerList ';' .

    $default  reduce using rule 51 (VariableDeclaration)


State 137

  137 ArrayExpression: DimExprs Type .
  138                | DimExprs Type . '{' ArrayInitializerList '}'
  139                | DimExprs Type . '{' '}'

    '{'  shift, and go to state 197

    $default  reduce using rule 137 (ArrayExpression)


State 138

   58 DimExprs: DimExprs DimExpr .

    $default  reduce using rule 58 (DimExprs)


State 139

  147 postfix_expression: postfix_expression INC .

    $default  reduce using rule 147 (postfix_expression)


State 140

  148 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 148 (postfix_expression)


State 141

  149 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 198


State 142

  151 postfix_expression: postfix_expression '(' . expression_list ')'
  152                   | postfix_expression '(' . ')'
  153                   | postfix_expression '(' . ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    ')'             shift, and go to state 199
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 200
    expression                    go to state 201
    expression_list               go to state 202


State 143

  150 postfix_expression: postfix_expression '[' . basic_expression ']'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 203


State 144

  162 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 204


State 145

  163 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 205


State 146

  164 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 206


State 147

  166 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 207


State 148

  167 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 208


State 149

  169 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 209


State 150

  170 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 210


State 151

  175 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 211


State 152

  174 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 212


State 153

  172 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 213


State 154

  173 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 214


State 155

  177 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 215


State 156

  178 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 216


State 157

  180 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 217


State 158

  182 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 218


State 159

  184 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 219


State 160

  186 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 220


State 161

  188 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 221


State 162

   52 VariableDeclaration: VAR VariableList Type '=' ArrayInitializerList . ';'
   56 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 135
    ';'  shift, and go to state 222


State 163

   87 ParameterList: IDENTIFIER Type .

    $default  reduce using rule 87 (ParameterList)


State 164

   31 ReturnTypeList: '(' . TypeList ')'

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    TypeList       go to state 223
    Type           go to state 122
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 165

   89 CodeBlock: '{' . local_variable_declaration_statements '}'
   90          | '{' . '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    IF              shift, and go to state 224
    WHILE           shift, and go to state 225
    DO              shift, and go to state 226
    FOR             shift, and go to state 227
    SWITCH          shift, and go to state 228
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 69
    RETURN          shift, and go to state 229
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '}'             shift, and go to state 230
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                          go to state 85
    VariableDeclaration                    go to state 231
    DimExprs                               go to state 87
    DimExpr                                go to state 88
    AnonymousFunctionDeclaration           go to state 91
    local_variable_declaration_statements  go to state 232
    local_variable_declaration_statement   go to state 233
    statement                              go to state 234
    selection_statement                    go to state 235
    if_statement                           go to state 236
    switch_statement                       go to state 237
    iteration_statemnet                    go to state 238
    jump_statement                         go to state 239
    primary_expression                     go to state 92
    complex_primary                        go to state 93
    ArrayExpression                        go to state 94
    constant                               go to state 95
    postfix_expression                     go to state 240
    unary_expression                       go to state 97
    multiplicative_expression              go to state 98
    additive_expression                    go to state 99
    shift_expression                       go to state 100
    relational_expression                  go to state 101
    equality_expression                    go to state 102
    and_expression                         go to state 103
    exclusive_or_expression                go to state 104
    inclusive_or_expression                go to state 105
    logical_and_expression                 go to state 106
    logical_or_expression                  go to state 107
    basic_expression                       go to state 241
    postfix_expression_list                go to state 242
    assignment_expression                  go to state 243
    expression_statement                   go to state 244


State 166

   30 ReturnTypeList: Type .

    $default  reduce using rule 30 (ReturnTypeList)


State 167

   95 FunctionDeclaration: FUNC IDENTIFIER '(' ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 165

    CodeBlock  go to state 245


State 168

   96 FunctionDeclaration: FUNC IDENTIFIER '(' ')' CodeBlock .

    $default  reduce using rule 96 (FunctionDeclaration)


State 169

   97 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' . ReturnTypeList CodeBlock
   98                    | FUNC IDENTIFIER '(' ParameterList ')' . CodeBlock

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164
    '{'          shift, and go to state 165

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 246
    CodeBlock       go to state 247


State 170

   88 ParameterList: ParameterList ',' . IDENTIFIER Type

    IDENTIFIER  shift, and go to state 248


State 171

   72 FieldDeclaration: VAR . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 249


State 172

   75 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')' ReturnTypeList
   76                         | FUNC . IDENTIFIER '(' ')'
   77                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList
   78                         | FUNC . IDENTIFIER '(' ParameterList ')'

    IDENTIFIER  shift, and go to state 250


State 173

   73 FieldDeclaration: IDENTIFIER . Type ';'
   79 MethodDeclarationHeader1: IDENTIFIER . '(' ')' ReturnTypeList
   80                         | IDENTIFIER . '(' ')'
   81                         | IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   82                         | IDENTIFIER . '(' ParameterList ')'

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 251

    Type           go to state 252
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 174

   65 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations . '}' SemiOrEmpty
   69 MemberDeclarations: MemberDeclarations . MemberDeclaration

    VAR         shift, and go to state 171
    FUNC        shift, and go to state 172
    IDENTIFIER  shift, and go to state 173
    '}'         shift, and go to state 253

    MemberDeclaration         go to state 254
    FieldDeclaration          go to state 176
    MethodDeclaration         go to state 177
    MethodDeclarationHeader1  go to state 178


State 175

   68 MemberDeclarations: MemberDeclaration .

    $default  reduce using rule 68 (MemberDeclarations)


State 176

   70 MemberDeclaration: FieldDeclaration .

    $default  reduce using rule 70 (MemberDeclaration)


State 177

   71 MemberDeclaration: MethodDeclaration .

    $default  reduce using rule 71 (MemberDeclaration)


State 178

   74 MethodDeclaration: MethodDeclarationHeader1 . CodeBlock

    '{'  shift, and go to state 165

    CodeBlock  go to state 255


State 179

   75 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')' ReturnTypeList
   76                         | FUNC . IDENTIFIER '(' ')'
   77                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList
   78                         | FUNC . IDENTIFIER '(' ParameterList ')'
   83 MethodDeclarationHeader2: FUNC . IDENTIFIER '(' TypeList ')' ReturnTypeList
   84                         | FUNC . IDENTIFIER '(' TypeList ')'

    IDENTIFIER  shift, and go to state 256


State 180

   79 MethodDeclarationHeader1: IDENTIFIER . '(' ')' ReturnTypeList
   80                         | IDENTIFIER . '(' ')'
   81                         | IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   82                         | IDENTIFIER . '(' ParameterList ')'
   85 MethodDeclarationHeader2: IDENTIFIER . '(' TypeList ')' ReturnTypeList
   86                         | IDENTIFIER . '(' TypeList ')'

    '('  shift, and go to state 257


State 181

   93 InterfaceFunctionDeclaration: MethodDeclarationHeader1 . ';'

    ';'  shift, and go to state 258


State 182

   94 InterfaceFunctionDeclaration: MethodDeclarationHeader2 . ';'

    ';'  shift, and go to state 259


State 183

   66 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations . '}' SemiOrEmpty
   92 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations . InterfaceFunctionDeclaration

    FUNC        shift, and go to state 179
    IDENTIFIER  shift, and go to state 180
    '}'         shift, and go to state 260

    MethodDeclarationHeader1      go to state 181
    MethodDeclarationHeader2      go to state 182
    InterfaceFunctionDeclaration  go to state 261


State 184

   91 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration .

    $default  reduce using rule 91 (InterfaceFunctionDeclarations)


State 185

   43 ImportDeclaration: IMPORT ModuleFilePathName AS IDENTIFIER SemiOrEmpty .

    $default  reduce using rule 43 (ImportDeclaration)


State 186

   44 ImportDeclaration: IMPORT ModuleFilePathName '.' '*' SemiOrEmpty .

    $default  reduce using rule 44 (ImportDeclaration)


State 187

   26 FunctionType: FUNC '(' ')' ReturnTypeList .

    $default  reduce using rule 26 (FunctionType)


State 188

   28 FunctionType: FUNC '(' TypeList ')' . ReturnTypeList
   29             | FUNC '(' TypeList ')' .

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164

    $default  reduce using rule 29 (FunctionType)

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 262


State 189

    4 TypeList: TypeList ',' . Type

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 263
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 190

   99 AnonymousFunctionDeclaration: FUNC '(' ')' . ReturnTypeList CodeBlock
  100                             | FUNC '(' ')' . CodeBlock

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164
    '{'          shift, and go to state 165

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 264
    CodeBlock       go to state 265


State 191

   88 ParameterList: ParameterList . ',' IDENTIFIER Type
  101 AnonymousFunctionDeclaration: FUNC '(' ParameterList . ')' ReturnTypeList CodeBlock
  102                             | FUNC '(' ParameterList . ')' CodeBlock

    ')'  shift, and go to state 266
    ','  shift, and go to state 170


State 192

  132 primary_expression: '(' basic_expression ')' .

    $default  reduce using rule 132 (primary_expression)


State 193

   59 DimExpr: '[' basic_expression ']' .

    $default  reduce using rule 59 (DimExpr)


State 194

   62 arrayinit: '{' ArrayInitializerList '}' .

    $default  reduce using rule 62 (arrayinit)


State 195

  134 complex_primary: PrimitiveType '(' constant . ')'

    ')'  shift, and go to state 267


State 196

   56 ArrayInitializerList: ArrayInitializerList ',' ArrayInitializer .

    $default  reduce using rule 56 (ArrayInitializerList)


State 197

  138 ArrayExpression: DimExprs Type '{' . ArrayInitializerList '}'
  139                | DimExprs Type '{' . '}'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '{'             shift, and go to state 80
    '}'             shift, and go to state 268
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    ArrayInitializerList          go to state 269
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    ArrayInitializer              go to state 89
    arrayinit                     go to state 90
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 108


State 198

  149 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 149 (postfix_expression)


State 199

  152 postfix_expression: postfix_expression '(' ')' .
  153                   | postfix_expression '(' ')' . CodeBlock

    '{'  shift, and go to state 165

    $default  reduce using rule 152 (postfix_expression)

    CodeBlock  go to state 270


State 200

  190 expression: basic_expression .

    $default  reduce using rule 190 (expression)


State 201

  191 expression_list: expression .

    $default  reduce using rule 191 (expression_list)


State 202

  151 postfix_expression: postfix_expression '(' expression_list . ')'
  192 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 271
    ','  shift, and go to state 272


State 203

  150 postfix_expression: postfix_expression '[' basic_expression . ']'

    ']'  shift, and go to state 273


State 204

  162 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 162 (multiplicative_expression)


State 205

  163 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 163 (multiplicative_expression)


State 206

  164 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 164 (multiplicative_expression)


State 207

  162 multiplicative_expression: multiplicative_expression . '*' unary_expression
  163                          | multiplicative_expression . '/' unary_expression
  164                          | multiplicative_expression . '%' unary_expression
  166 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 144
    '/'  shift, and go to state 145
    '%'  shift, and go to state 146

    $default  reduce using rule 166 (additive_expression)


State 208

  162 multiplicative_expression: multiplicative_expression . '*' unary_expression
  163                          | multiplicative_expression . '/' unary_expression
  164                          | multiplicative_expression . '%' unary_expression
  167 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 144
    '/'  shift, and go to state 145
    '%'  shift, and go to state 146

    $default  reduce using rule 167 (additive_expression)


State 209

  166 additive_expression: additive_expression . '+' multiplicative_expression
  167                    | additive_expression . '-' multiplicative_expression
  169 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 147
    '-'  shift, and go to state 148

    $default  reduce using rule 169 (shift_expression)


State 210

  166 additive_expression: additive_expression . '+' multiplicative_expression
  167                    | additive_expression . '-' multiplicative_expression
  170 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 147
    '-'  shift, and go to state 148

    $default  reduce using rule 170 (shift_expression)


State 211

  169 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  170                 | shift_expression . SHIFT_RIGHT additive_expression
  175 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 149
    SHIFT_RIGHT  shift, and go to state 150

    $default  reduce using rule 175 (relational_expression)


State 212

  169 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  170                 | shift_expression . SHIFT_RIGHT additive_expression
  174 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 149
    SHIFT_RIGHT  shift, and go to state 150

    $default  reduce using rule 174 (relational_expression)


State 213

  169 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  170                 | shift_expression . SHIFT_RIGHT additive_expression
  172 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 149
    SHIFT_RIGHT  shift, and go to state 150

    $default  reduce using rule 172 (relational_expression)


State 214

  169 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  170                 | shift_expression . SHIFT_RIGHT additive_expression
  173 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 149
    SHIFT_RIGHT  shift, and go to state 150

    $default  reduce using rule 173 (relational_expression)


State 215

  172 relational_expression: relational_expression . '<' shift_expression
  173                      | relational_expression . '>' shift_expression
  174                      | relational_expression . LE shift_expression
  175                      | relational_expression . GE shift_expression
  177 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 151
    LE   shift, and go to state 152
    '<'  shift, and go to state 153
    '>'  shift, and go to state 154

    $default  reduce using rule 177 (equality_expression)


State 216

  172 relational_expression: relational_expression . '<' shift_expression
  173                      | relational_expression . '>' shift_expression
  174                      | relational_expression . LE shift_expression
  175                      | relational_expression . GE shift_expression
  178 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 151
    LE   shift, and go to state 152
    '<'  shift, and go to state 153
    '>'  shift, and go to state 154

    $default  reduce using rule 178 (equality_expression)


State 217

  177 equality_expression: equality_expression . EQ relational_expression
  178                    | equality_expression . NE relational_expression
  180 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 155
    NE  shift, and go to state 156

    $default  reduce using rule 180 (and_expression)


State 218

  180 and_expression: and_expression . '&' equality_expression
  182 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 157

    $default  reduce using rule 182 (exclusive_or_expression)


State 219

  182 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  184 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 158

    $default  reduce using rule 184 (inclusive_or_expression)


State 220

  184 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  186 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 159

    $default  reduce using rule 186 (logical_and_expression)


State 221

  186 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  188 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 160

    $default  reduce using rule 188 (logical_or_expression)


State 222

   52 VariableDeclaration: VAR VariableList Type '=' ArrayInitializerList ';' .

    $default  reduce using rule 52 (VariableDeclaration)


State 223

    4 TypeList: TypeList . ',' Type
   31 ReturnTypeList: '(' TypeList . ')'

    ')'  shift, and go to state 274
    ','  shift, and go to state 189


State 224

  113 if_statement: IF . '(' basic_expression ')' CodeBlock
  114             | IF . '(' basic_expression ')' CodeBlock ELSE else_statemnet

    '('  shift, and go to state 275


State 225

  118 iteration_statemnet: WHILE . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 276


State 226

  119 iteration_statemnet: DO . CodeBlock WHILE '(' basic_expression ')' ';'

    '{'  shift, and go to state 165

    CodeBlock  go to state 277


State 227

  120 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' CodeBlock

    '('  shift, and go to state 278


State 228

  117 switch_statement: SWITCH . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 279


State 229

  127 jump_statement: RETURN . ';'
  128               | RETURN . expression_list ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    ';'             shift, and go to state 280
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 200
    expression                    go to state 201
    expression_list               go to state 281


State 230

   90 CodeBlock: '{' '}' .

    $default  reduce using rule 90 (CodeBlock)


State 231

  105 local_variable_declaration_statement: VariableDeclaration .

    $default  reduce using rule 105 (local_variable_declaration_statement)


State 232

   89 CodeBlock: '{' local_variable_declaration_statements . '}'
  104 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    IF              shift, and go to state 224
    WHILE           shift, and go to state 225
    DO              shift, and go to state 226
    FOR             shift, and go to state 227
    SWITCH          shift, and go to state 228
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 69
    RETURN          shift, and go to state 229
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '}'             shift, and go to state 282
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                         go to state 85
    VariableDeclaration                   go to state 231
    DimExprs                              go to state 87
    DimExpr                               go to state 88
    AnonymousFunctionDeclaration          go to state 91
    local_variable_declaration_statement  go to state 283
    statement                             go to state 234
    selection_statement                   go to state 235
    if_statement                          go to state 236
    switch_statement                      go to state 237
    iteration_statemnet                   go to state 238
    jump_statement                        go to state 239
    primary_expression                    go to state 92
    complex_primary                       go to state 93
    ArrayExpression                       go to state 94
    constant                              go to state 95
    postfix_expression                    go to state 240
    unary_expression                      go to state 97
    multiplicative_expression             go to state 98
    additive_expression                   go to state 99
    shift_expression                      go to state 100
    relational_expression                 go to state 101
    equality_expression                   go to state 102
    and_expression                        go to state 103
    exclusive_or_expression               go to state 104
    inclusive_or_expression               go to state 105
    logical_and_expression                go to state 106
    logical_or_expression                 go to state 107
    basic_expression                      go to state 241
    postfix_expression_list               go to state 242
    assignment_expression                 go to state 243
    expression_statement                  go to state 244


State 233

  103 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 103 (local_variable_declaration_statements)


State 234

  106 local_variable_declaration_statement: statement .

    $default  reduce using rule 106 (local_variable_declaration_statement)


State 235

  108 statement: selection_statement .

    $default  reduce using rule 108 (statement)


State 236

  111 selection_statement: if_statement .

    $default  reduce using rule 111 (selection_statement)


State 237

  112 selection_statement: switch_statement .

    $default  reduce using rule 112 (selection_statement)


State 238

  109 statement: iteration_statemnet .

    $default  reduce using rule 109 (statement)


State 239

  110 statement: jump_statement .

    $default  reduce using rule 110 (statement)


State 240

  147 postfix_expression: postfix_expression . INC
  148                   | postfix_expression . DEC
  149                   | postfix_expression . '.' IDENTIFIER
  150                   | postfix_expression . '[' basic_expression ']'
  151                   | postfix_expression . '(' expression_list ')'
  152                   | postfix_expression . '(' ')'
  153                   | postfix_expression . '(' ')' CodeBlock
  154 unary_expression: postfix_expression .
  193 postfix_expression_list: postfix_expression .
  196 assignment_expression: postfix_expression . compound_assignment_operator ArrayInitializer

    TYPELESS_ASSIGN  shift, and go to state 284
    ADD_ASSIGN       shift, and go to state 285
    SUB_ASSIGN       shift, and go to state 286
    MUL_ASSIGN       shift, and go to state 287
    DIV_ASSIGN       shift, and go to state 288
    MOD_ASSIGN       shift, and go to state 289
    AND_ASSIGN       shift, and go to state 290
    OR_ASSIGN        shift, and go to state 291
    XOR_ASSIGN       shift, and go to state 292
    RIGHT_ASSIGN     shift, and go to state 293
    LEFT_ASSIGN      shift, and go to state 294
    INC              shift, and go to state 139
    DEC              shift, and go to state 140
    '.'              shift, and go to state 141
    '('              shift, and go to state 142
    '['              shift, and go to state 143

    ','       reduce using rule 193 (postfix_expression_list)
    '='       reduce using rule 193 (postfix_expression_list)
    $default  reduce using rule 154 (unary_expression)

    compound_assignment_operator  go to state 295


State 241

  208 expression_statement: basic_expression .

    $default  reduce using rule 208 (expression_statement)


State 242

  194 postfix_expression_list: postfix_expression_list . ',' postfix_expression
  195 assignment_expression: postfix_expression_list . '=' ArrayInitializerList

    ','  shift, and go to state 296
    '='  shift, and go to state 297


State 243

  209 expression_statement: assignment_expression .

    $default  reduce using rule 209 (expression_statement)


State 244

  107 statement: expression_statement . ';'

    ';'  shift, and go to state 298


State 245

   95 FunctionDeclaration: FUNC IDENTIFIER '(' ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 95 (FunctionDeclaration)


State 246

   97 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 165

    CodeBlock  go to state 299


State 247

   98 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' CodeBlock .

    $default  reduce using rule 98 (FunctionDeclaration)


State 248

   88 ParameterList: ParameterList ',' IDENTIFIER . Type

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 300
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 249

   72 FieldDeclaration: VAR IDENTIFIER . Type ';'

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43

    Type           go to state 301
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 250

   75 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')' ReturnTypeList
   76                         | FUNC IDENTIFIER . '(' ')'
   77                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   78                         | FUNC IDENTIFIER . '(' ParameterList ')'

    '('  shift, and go to state 302


State 251

   79 MethodDeclarationHeader1: IDENTIFIER '(' . ')' ReturnTypeList
   80                         | IDENTIFIER '(' . ')'
   81                         | IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   82                         | IDENTIFIER '(' . ParameterList ')'

    IDENTIFIER  shift, and go to state 111
    ')'         shift, and go to state 303

    ParameterList  go to state 304


State 252

   73 FieldDeclaration: IDENTIFIER Type . ';'

    ';'  shift, and go to state 305


State 253

   65 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' . SemiOrEmpty

    ';'  shift, and go to state 55

    $default  reduce using rule 63 (SemiOrEmpty)

    SemiOrEmpty  go to state 306


State 254

   69 MemberDeclarations: MemberDeclarations MemberDeclaration .

    $default  reduce using rule 69 (MemberDeclarations)


State 255

   74 MethodDeclaration: MethodDeclarationHeader1 CodeBlock .

    $default  reduce using rule 74 (MethodDeclaration)


State 256

   75 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')' ReturnTypeList
   76                         | FUNC IDENTIFIER . '(' ')'
   77                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   78                         | FUNC IDENTIFIER . '(' ParameterList ')'
   83 MethodDeclarationHeader2: FUNC IDENTIFIER . '(' TypeList ')' ReturnTypeList
   84                         | FUNC IDENTIFIER . '(' TypeList ')'

    '('  shift, and go to state 307


State 257

   79 MethodDeclarationHeader1: IDENTIFIER '(' . ')' ReturnTypeList
   80                         | IDENTIFIER '(' . ')'
   81                         | IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   82                         | IDENTIFIER '(' . ParameterList ')'
   85 MethodDeclarationHeader2: IDENTIFIER '(' . TypeList ')' ReturnTypeList
   86                         | IDENTIFIER '(' . TypeList ')'

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 308
    ')'          shift, and go to state 303

    TypeList       go to state 309
    Type           go to state 122
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49
    ParameterList  go to state 304


State 258

   93 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';' .

    $default  reduce using rule 93 (InterfaceFunctionDeclaration)


State 259

   94 InterfaceFunctionDeclaration: MethodDeclarationHeader2 ';' .

    $default  reduce using rule 94 (InterfaceFunctionDeclaration)


State 260

   66 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' . SemiOrEmpty

    ';'  shift, and go to state 55

    $default  reduce using rule 63 (SemiOrEmpty)

    SemiOrEmpty  go to state 310


State 261

   92 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations InterfaceFunctionDeclaration .

    $default  reduce using rule 92 (InterfaceFunctionDeclarations)


State 262

   28 FunctionType: FUNC '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 28 (FunctionType)


State 263

    4 TypeList: TypeList ',' Type .

    $default  reduce using rule 4 (TypeList)


State 264

   99 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 165

    CodeBlock  go to state 311


State 265

  100 AnonymousFunctionDeclaration: FUNC '(' ')' CodeBlock .

    $default  reduce using rule 100 (AnonymousFunctionDeclaration)


State 266

  101 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' . ReturnTypeList CodeBlock
  102                             | FUNC '(' ParameterList ')' . CodeBlock

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164
    '{'          shift, and go to state 165

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 312
    CodeBlock       go to state 313


State 267

  134 complex_primary: PrimitiveType '(' constant ')' .

    $default  reduce using rule 134 (complex_primary)


State 268

  139 ArrayExpression: DimExprs Type '{' '}' .

    $default  reduce using rule 139 (ArrayExpression)


State 269

   56 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
  138 ArrayExpression: DimExprs Type '{' ArrayInitializerList . '}'

    ','  shift, and go to state 135
    '}'  shift, and go to state 314


State 270

  153 postfix_expression: postfix_expression '(' ')' CodeBlock .

    $default  reduce using rule 153 (postfix_expression)


State 271

  151 postfix_expression: postfix_expression '(' expression_list ')' .

    $default  reduce using rule 151 (postfix_expression)


State 272

  192 expression_list: expression_list ',' . expression

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 200
    expression                    go to state 315


State 273

  150 postfix_expression: postfix_expression '[' basic_expression ']' .

    $default  reduce using rule 150 (postfix_expression)


State 274

   31 ReturnTypeList: '(' TypeList ')' .

    $default  reduce using rule 31 (ReturnTypeList)


State 275

  113 if_statement: IF '(' . basic_expression ')' CodeBlock
  114             | IF '(' . basic_expression ')' CodeBlock ELSE else_statemnet

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 316


State 276

  118 iteration_statemnet: WHILE '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 317


State 277

  119 iteration_statemnet: DO CodeBlock . WHILE '(' basic_expression ')' ';'

    WHILE  shift, and go to state 318


State 278

  120 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    ';'             shift, and go to state 319
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    VariableDeclaration           go to state 320
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    for_init                      go to state 321
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 240
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 241
    postfix_expression_list       go to state 242
    assignment_expression         go to state 243
    expression_statement          go to state 322


State 279

  117 switch_statement: SWITCH '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 323


State 280

  127 jump_statement: RETURN ';' .

    $default  reduce using rule 127 (jump_statement)


State 281

  128 jump_statement: RETURN expression_list . ';'
  192 expression_list: expression_list . ',' expression

    ','  shift, and go to state 272
    ';'  shift, and go to state 324


State 282

   89 CodeBlock: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 89 (CodeBlock)


State 283

  104 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 104 (local_variable_declaration_statements)


State 284

  207 compound_assignment_operator: TYPELESS_ASSIGN .

    $default  reduce using rule 207 (compound_assignment_operator)


State 285

  197 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 197 (compound_assignment_operator)


State 286

  198 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 198 (compound_assignment_operator)


State 287

  199 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 199 (compound_assignment_operator)


State 288

  200 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 200 (compound_assignment_operator)


State 289

  201 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 201 (compound_assignment_operator)


State 290

  202 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 202 (compound_assignment_operator)


State 291

  203 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 203 (compound_assignment_operator)


State 292

  204 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 204 (compound_assignment_operator)


State 293

  205 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 205 (compound_assignment_operator)


State 294

  206 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 206 (compound_assignment_operator)


State 295

  196 assignment_expression: postfix_expression compound_assignment_operator . ArrayInitializer

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '{'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    ArrayInitializer              go to state 325
    arrayinit                     go to state 90
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 108


State 296

  194 postfix_expression_list: postfix_expression_list ',' . postfix_expression

    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 326


State 297

  195 assignment_expression: postfix_expression_list '=' . ArrayInitializerList

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '{'             shift, and go to state 80
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    ArrayInitializerList          go to state 327
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    ArrayInitializer              go to state 89
    arrayinit                     go to state 90
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 108


State 298

  107 statement: expression_statement ';' .

    $default  reduce using rule 107 (statement)


State 299

   97 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 97 (FunctionDeclaration)


State 300

   88 ParameterList: ParameterList ',' IDENTIFIER Type .

    $default  reduce using rule 88 (ParameterList)


State 301

   72 FieldDeclaration: VAR IDENTIFIER Type . ';'

    ';'  shift, and go to state 328


State 302

   75 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')' ReturnTypeList
   76                         | FUNC IDENTIFIER '(' . ')'
   77                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   78                         | FUNC IDENTIFIER '(' . ParameterList ')'

    IDENTIFIER  shift, and go to state 111
    ')'         shift, and go to state 329

    ParameterList  go to state 330


State 303

   79 MethodDeclarationHeader1: IDENTIFIER '(' ')' . ReturnTypeList
   80                         | IDENTIFIER '(' ')' .

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164

    $default  reduce using rule 80 (MethodDeclarationHeader1)

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 331


State 304

   81 MethodDeclarationHeader1: IDENTIFIER '(' ParameterList . ')' ReturnTypeList
   82                         | IDENTIFIER '(' ParameterList . ')'
   88 ParameterList: ParameterList . ',' IDENTIFIER Type

    ')'  shift, and go to state 332
    ','  shift, and go to state 170


State 305

   73 FieldDeclaration: IDENTIFIER Type ';' .

    $default  reduce using rule 73 (FieldDeclaration)


State 306

   65 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' SemiOrEmpty .

    $default  reduce using rule 65 (TypeDeclaration)


State 307

   75 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')' ReturnTypeList
   76                         | FUNC IDENTIFIER '(' . ')'
   77                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   78                         | FUNC IDENTIFIER '(' . ParameterList ')'
   83 MethodDeclarationHeader2: FUNC IDENTIFIER '(' . TypeList ')' ReturnTypeList
   84                         | FUNC IDENTIFIER '(' . TypeList ')'

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 308
    ')'          shift, and go to state 329

    TypeList       go to state 333
    Type           go to state 122
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49
    ParameterList  go to state 330


State 308

   24 ModuleType: IDENTIFIER . '.' IDENTIFIER
   25           | IDENTIFIER .
   87 ParameterList: IDENTIFIER . Type

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '.'          shift, and go to state 65

    $default  reduce using rule 25 (ModuleType)

    Type           go to state 163
    PrimitiveType  go to state 47
    ModuleType     go to state 48
    FunctionType   go to state 49


State 309

    4 TypeList: TypeList . ',' Type
   85 MethodDeclarationHeader2: IDENTIFIER '(' TypeList . ')' ReturnTypeList
   86                         | IDENTIFIER '(' TypeList . ')'

    ')'  shift, and go to state 334
    ','  shift, and go to state 189


State 310

   66 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty .

    $default  reduce using rule 66 (TypeDeclaration)


State 311

   99 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 99 (AnonymousFunctionDeclaration)


State 312

  101 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 165

    CodeBlock  go to state 335


State 313

  102 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' CodeBlock .

    $default  reduce using rule 102 (AnonymousFunctionDeclaration)


State 314

  138 ArrayExpression: DimExprs Type '{' ArrayInitializerList '}' .

    $default  reduce using rule 138 (ArrayExpression)


State 315

  192 expression_list: expression_list ',' expression .

    $default  reduce using rule 192 (expression_list)


State 316

  113 if_statement: IF '(' basic_expression . ')' CodeBlock
  114             | IF '(' basic_expression . ')' CodeBlock ELSE else_statemnet

    ')'  shift, and go to state 336


State 317

  118 iteration_statemnet: WHILE '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 337


State 318

  119 iteration_statemnet: DO CodeBlock WHILE . '(' basic_expression ')' ';'

    '('  shift, and go to state 338


State 319

  123 for_init: ';' .

    $default  reduce using rule 123 (for_init)


State 320

  122 for_init: VariableDeclaration .

    $default  reduce using rule 122 (for_init)


State 321

  120 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    ';'             shift, and go to state 339
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    for_expr                      go to state 340
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 341


State 322

  121 for_init: expression_statement . ';'

    ';'  shift, and go to state 342


State 323

  117 switch_statement: SWITCH '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 343


State 324

  128 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 128 (jump_statement)


State 325

  196 assignment_expression: postfix_expression compound_assignment_operator ArrayInitializer .

    $default  reduce using rule 196 (assignment_expression)


State 326

  147 postfix_expression: postfix_expression . INC
  148                   | postfix_expression . DEC
  149                   | postfix_expression . '.' IDENTIFIER
  150                   | postfix_expression . '[' basic_expression ']'
  151                   | postfix_expression . '(' expression_list ')'
  152                   | postfix_expression . '(' ')'
  153                   | postfix_expression . '(' ')' CodeBlock
  194 postfix_expression_list: postfix_expression_list ',' postfix_expression .

    INC  shift, and go to state 139
    DEC  shift, and go to state 140
    '.'  shift, and go to state 141
    '('  shift, and go to state 142
    '['  shift, and go to state 143

    $default  reduce using rule 194 (postfix_expression_list)


State 327

   56 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
  195 assignment_expression: postfix_expression_list '=' ArrayInitializerList .

    ','  shift, and go to state 135

    $default  reduce using rule 195 (assignment_expression)


State 328

   72 FieldDeclaration: VAR IDENTIFIER Type ';' .

    $default  reduce using rule 72 (FieldDeclaration)


State 329

   75 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' . ReturnTypeList
   76                         | FUNC IDENTIFIER '(' ')' .

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164

    $default  reduce using rule 76 (MethodDeclarationHeader1)

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 344


State 330

   77 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList . ')' ReturnTypeList
   78                         | FUNC IDENTIFIER '(' ParameterList . ')'
   88 ParameterList: ParameterList . ',' IDENTIFIER Type

    ')'  shift, and go to state 345
    ','  shift, and go to state 170


State 331

   79 MethodDeclarationHeader1: IDENTIFIER '(' ')' ReturnTypeList .

    $default  reduce using rule 79 (MethodDeclarationHeader1)


State 332

   81 MethodDeclarationHeader1: IDENTIFIER '(' ParameterList ')' . ReturnTypeList
   82                         | IDENTIFIER '(' ParameterList ')' .

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164

    $default  reduce using rule 82 (MethodDeclarationHeader1)

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 346


State 333

    4 TypeList: TypeList . ',' Type
   83 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList . ')' ReturnTypeList
   84                         | FUNC IDENTIFIER '(' TypeList . ')'

    ')'  shift, and go to state 347
    ','  shift, and go to state 189


State 334

   85 MethodDeclarationHeader2: IDENTIFIER '(' TypeList ')' . ReturnTypeList
   86                         | IDENTIFIER '(' TypeList ')' .

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164

    $default  reduce using rule 86 (MethodDeclarationHeader2)

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 348


State 335

  101 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 101 (AnonymousFunctionDeclaration)


State 336

  113 if_statement: IF '(' basic_expression ')' . CodeBlock
  114             | IF '(' basic_expression ')' . CodeBlock ELSE else_statemnet

    '{'  shift, and go to state 165

    CodeBlock  go to state 349


State 337

  118 iteration_statemnet: WHILE '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 165

    CodeBlock  go to state 350


State 338

  119 iteration_statemnet: DO CodeBlock WHILE '(' . basic_expression ')' ';'

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 96
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 351


State 339

  125 for_expr: ';' .

    $default  reduce using rule 125 (for_expr)


State 340

  120 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' CodeBlock

    INC             shift, and go to state 67
    DEC             shift, and go to state 68
    FUNC            shift, and go to state 69
    INT8            shift, and go to state 29
    INT16           shift, and go to state 30
    INT32           shift, and go to state 31
    INT64           shift, and go to state 32
    UINT8           shift, and go to state 33
    UINT16          shift, and go to state 34
    UINT32          shift, and go to state 35
    UINT64          shift, and go to state 36
    FLOAT32         shift, and go to state 37
    FLOAT64         shift, and go to state 38
    BOOL            shift, and go to state 39
    STRING          shift, and go to state 40
    ROOT_OBJECT     shift, and go to state 41
    SELF            shift, and go to state 70
    TOKEN_NIL       shift, and go to state 71
    TOKEN_TRUE      shift, and go to state 72
    TOKEN_FALSE     shift, and go to state 73
    INTEGER         shift, and go to state 74
    FLOAT           shift, and go to state 75
    STRING_LITERAL  shift, and go to state 76
    IDENTIFIER      shift, and go to state 77
    '('             shift, and go to state 78
    '['             shift, and go to state 79
    '+'             shift, and go to state 81
    '-'             shift, and go to state 82
    '~'             shift, and go to state 83
    '!'             shift, and go to state 84

    PrimitiveType                 go to state 85
    DimExprs                      go to state 87
    DimExpr                       go to state 88
    AnonymousFunctionDeclaration  go to state 91
    for_incr                      go to state 352
    primary_expression            go to state 92
    complex_primary               go to state 93
    ArrayExpression               go to state 94
    constant                      go to state 95
    postfix_expression            go to state 240
    unary_expression              go to state 97
    multiplicative_expression     go to state 98
    additive_expression           go to state 99
    shift_expression              go to state 100
    relational_expression         go to state 101
    equality_expression           go to state 102
    and_expression                go to state 103
    exclusive_or_expression       go to state 104
    inclusive_or_expression       go to state 105
    logical_and_expression        go to state 106
    logical_or_expression         go to state 107
    basic_expression              go to state 241
    postfix_expression_list       go to state 242
    assignment_expression         go to state 243
    expression_statement          go to state 353


State 341

  124 for_expr: basic_expression . ';'

    ';'  shift, and go to state 354


State 342

  121 for_init: expression_statement ';' .

    $default  reduce using rule 121 (for_init)


State 343

  117 switch_statement: SWITCH '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 165

    CodeBlock  go to state 355


State 344

   75 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' ReturnTypeList .

    $default  reduce using rule 75 (MethodDeclarationHeader1)


State 345

   77 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' . ReturnTypeList
   78                         | FUNC IDENTIFIER '(' ParameterList ')' .

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164

    $default  reduce using rule 78 (MethodDeclarationHeader1)

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 356


State 346

   81 MethodDeclarationHeader1: IDENTIFIER '(' ParameterList ')' ReturnTypeList .

    $default  reduce using rule 81 (MethodDeclarationHeader1)


State 347

   83 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' . ReturnTypeList
   84                         | FUNC IDENTIFIER '(' TypeList ')' .

    FUNC         shift, and go to state 28
    INT8         shift, and go to state 29
    INT16        shift, and go to state 30
    INT32        shift, and go to state 31
    INT64        shift, and go to state 32
    UINT8        shift, and go to state 33
    UINT16       shift, and go to state 34
    UINT32       shift, and go to state 35
    UINT64       shift, and go to state 36
    FLOAT32      shift, and go to state 37
    FLOAT64      shift, and go to state 38
    BOOL         shift, and go to state 39
    STRING       shift, and go to state 40
    ROOT_OBJECT  shift, and go to state 41
    DIMS         shift, and go to state 42
    IDENTIFIER   shift, and go to state 43
    '('          shift, and go to state 164

    $default  reduce using rule 84 (MethodDeclarationHeader2)

    Type            go to state 166
    PrimitiveType   go to state 47
    ModuleType      go to state 48
    FunctionType    go to state 49
    ReturnTypeList  go to state 357


State 348

   85 MethodDeclarationHeader2: IDENTIFIER '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 85 (MethodDeclarationHeader2)


State 349

  113 if_statement: IF '(' basic_expression ')' CodeBlock .
  114             | IF '(' basic_expression ')' CodeBlock . ELSE else_statemnet

    ELSE  shift, and go to state 358

    $default  reduce using rule 113 (if_statement)


State 350

  118 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 118 (iteration_statemnet)


State 351

  119 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression . ')' ';'

    ')'  shift, and go to state 359


State 352

  120 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' CodeBlock

    ')'  shift, and go to state 360


State 353

  126 for_incr: expression_statement .

    $default  reduce using rule 126 (for_incr)


State 354

  124 for_expr: basic_expression ';' .

    $default  reduce using rule 124 (for_expr)


State 355

  117 switch_statement: SWITCH '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 117 (switch_statement)


State 356

   77 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList .

    $default  reduce using rule 77 (MethodDeclarationHeader1)


State 357

   83 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 83 (MethodDeclarationHeader2)


State 358

  114 if_statement: IF '(' basic_expression ')' CodeBlock ELSE . else_statemnet

    IF   shift, and go to state 224
    '{'  shift, and go to state 165

    CodeBlock       go to state 361
    if_statement    go to state 362
    else_statemnet  go to state 363


State 359

  119 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' . ';'

    ';'  shift, and go to state 364


State 360

  120 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . CodeBlock

    '{'  shift, and go to state 165

    CodeBlock  go to state 365


State 361

  116 else_statemnet: CodeBlock .

    $default  reduce using rule 116 (else_statemnet)


State 362

  115 else_statemnet: if_statement .

    $default  reduce using rule 115 (else_statemnet)


State 363

  114 if_statement: IF '(' basic_expression ')' CodeBlock ELSE else_statemnet .

    $default  reduce using rule 114 (if_statement)


State 364

  119 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' ';' .

    $default  reduce using rule 119 (iteration_statemnet)


State 365

  120 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' CodeBlock .

    $default  reduce using rule 120 (iteration_statemnet)
