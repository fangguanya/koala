Terminals unused in grammar

   ELLIPSIS
   NOT
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   NEW
   FUNC_HEADER
   HEX
   OCT


Grammar

    0 $accept: Program $end

    1 ModuleFilePathName: IDENTIFIER
    2                   | ModuleFilePathName '.' IDENTIFIER

    3 TypeList: Type
    4         | TypeList ',' Type

    5 Type: PrimitiveType
    6     | ModuleType
    7     | FunctionType
    8     | DIMS PrimitiveType
    9     | DIMS ModuleType
   10     | DIMS FunctionType

   11 PrimitiveType: UINT8
   12              | UINT16
   13              | UINT32
   14              | UINT64
   15              | INT8
   16              | INT16
   17              | INT32
   18              | INT64
   19              | FLOAT32
   20              | FLOAT64
   21              | BOOL
   22              | STRING
   23              | ROOT_OBJECT

   24 ModuleType: IDENTIFIER '.' IDENTIFIER
   25           | IDENTIFIER

   26 FunctionType: FUNC '(' ')' ReturnTypeList
   27             | FUNC '(' ')'
   28             | FUNC '(' TypeList ')' ReturnTypeList
   29             | FUNC '(' TypeList ')'

   30 ReturnTypeList: Type
   31               | '(' TypeList ')'

   32 Program: PackageDeclaration ImportDeclarations Declarations
   33        | PackageDeclaration ImportDeclarations
   34        | PackageDeclaration Declarations
   35        | ImportDeclarations Declarations
   36        | PackageDeclaration
   37        | ImportDeclarations
   38        | Declarations

   39 PackageDeclaration: PACKAGE ModuleFilePathName SemiOrEmpty

   40 ImportDeclarations: ImportDeclaration
   41                   | ImportDeclarations ImportDeclaration

   42 ImportDeclaration: IMPORT ModuleFilePathName SemiOrEmpty
   43                  | IMPORT ModuleFilePathName AS IDENTIFIER SemiOrEmpty
   44                  | IMPORT ModuleFilePathName '.' '*' SemiOrEmpty

   45 Declarations: Declaration
   46             | Declarations Declaration

   47 Declaration: ConstDeclaration
   48            | VariableDeclaration
   49            | TypeDeclaration
   50            | FunctionDeclaration

   51 ConstDeclaration: CONST VariableList '=' ArrayInitializerList ';'
   52                 | CONST VariableList Type '=' ArrayInitializerList ';'

   53 VariableDeclaration: VAR VariableList Type ';'
   54                    | VAR VariableList '=' ArrayInitializerList ';'
   55                    | VAR VariableList Type '=' ArrayInitializerList ';'

   56 VariableList: IDENTIFIER
   57             | VariableList ',' IDENTIFIER

   58 ArrayInitializerList: ArrayInitializer
   59                     | ArrayInitializerList ',' ArrayInitializer

   60 DimExprs: DimExpr
   61         | DimExprs DimExpr

   62 DimExpr: '[' basic_expression ']'

   63 ArrayInitializer: basic_expression
   64                 | INTEGER ':' ArrayInitializer
   65                 | arrayinit

   66 arrayinit: '{' ArrayInitializerList '}'

   67 SemiOrEmpty: %empty
   68            | ';'

   69 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' SemiOrEmpty
   70                | TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty
   71                | TYPE IDENTIFIER Type ';'

   72 MemberDeclarations: MemberDeclaration
   73                   | MemberDeclarations MemberDeclaration

   74 MemberDeclaration: FieldDeclaration
   75                  | MethodDeclaration

   76 FieldDeclaration: VAR IDENTIFIER Type ';'
   77                 | IDENTIFIER Type ';'

   78 MethodDeclaration: MethodDeclarationHeader1 CodeBlock

   79 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' ReturnTypeList
   80                         | FUNC IDENTIFIER '(' ')'
   81                         | FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList
   82                         | FUNC IDENTIFIER '(' ParameterList ')'
   83                         | IDENTIFIER '(' ')' ReturnTypeList
   84                         | IDENTIFIER '(' ')'
   85                         | IDENTIFIER '(' ParameterList ')' ReturnTypeList
   86                         | IDENTIFIER '(' ParameterList ')'

   87 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList
   88                         | FUNC IDENTIFIER '(' TypeList ')'
   89                         | IDENTIFIER '(' TypeList ')' ReturnTypeList
   90                         | IDENTIFIER '(' TypeList ')'

   91 ParameterList: IDENTIFIER Type
   92              | ParameterList ',' IDENTIFIER Type

   93 CodeBlock: '{' local_variable_declaration_statements '}'
   94          | '{' '}'

   95 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration
   96                              | InterfaceFunctionDeclarations InterfaceFunctionDeclaration

   97 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';'
   98                             | MethodDeclarationHeader2 ';'

   99 FunctionDeclaration: FUNC IDENTIFIER '(' ')' ReturnTypeList CodeBlock
  100                    | FUNC IDENTIFIER '(' ')' CodeBlock
  101                    | FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock
  102                    | FUNC IDENTIFIER '(' ParameterList ')' CodeBlock

  103 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList CodeBlock
  104                             | FUNC '(' ')' CodeBlock
  105                             | FUNC '(' ParameterList ')' ReturnTypeList CodeBlock
  106                             | FUNC '(' ParameterList ')' CodeBlock

  107 local_variable_declaration_statements: local_variable_declaration_statement
  108                                      | local_variable_declaration_statements local_variable_declaration_statement

  109 local_variable_declaration_statement: VariableDeclaration
  110                                     | statement

  111 statement: expression_statement ';'
  112          | selection_statement
  113          | iteration_statemnet
  114          | jump_statement

  115 selection_statement: if_statement
  116                    | switch_statement

  117 if_statement: IF '(' basic_expression ')' CodeBlock
  118             | IF '(' basic_expression ')' CodeBlock ELSE else_statemnet

  119 else_statemnet: if_statement
  120               | CodeBlock

  121 switch_statement: SWITCH '(' basic_expression ')' CodeBlock

  122 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock
  123                    | DO CodeBlock WHILE '(' basic_expression ')' ';'
  124                    | FOR '(' for_init for_expr for_incr ')' CodeBlock

  125 for_init: expression_statement ';'
  126         | VariableDeclaration
  127         | ';'

  128 for_expr: basic_expression ';'
  129         | ';'

  130 for_incr: expression_statement

  131 jump_statement: RETURN ';'
  132               | RETURN ArrayInitializerList ';'

  133 primary_expression: IDENTIFIER
  134                   | constant
  135                   | SELF
  136                   | '(' basic_expression ')'
  137                   | complex_primary

  138 complex_primary: PrimitiveType '(' constant ')'
  139                | AnonymousFunctionDeclaration
  140                | ArrayExpression

  141 ArrayExpression: DimExprs Type
  142                | DimExprs Type '{' ArrayInitializerList '}'
  143                | DimExprs Type '{' '}'

  144 constant: INTEGER
  145         | FLOAT
  146         | STRING_LITERAL
  147         | TOKEN_NIL
  148         | TOKEN_TRUE
  149         | TOKEN_FALSE

  150 postfix_expression: primary_expression
  151                   | postfix_expression INC
  152                   | postfix_expression DEC
  153                   | postfix_expression '.' IDENTIFIER
  154                   | postfix_expression '[' basic_expression ']'
  155                   | postfix_expression '(' expression_list ')'
  156                   | postfix_expression '(' ')'
  157                   | postfix_expression '(' ')' CodeBlock

  158 unary_expression: postfix_expression
  159                 | INC unary_expression
  160                 | DEC unary_expression
  161                 | '+' unary_expression
  162                 | '-' unary_expression
  163                 | '~' unary_expression
  164                 | '!' unary_expression

  165 multiplicative_expression: unary_expression
  166                          | multiplicative_expression '*' unary_expression
  167                          | multiplicative_expression '/' unary_expression
  168                          | multiplicative_expression '%' unary_expression

  169 additive_expression: multiplicative_expression
  170                    | additive_expression '+' multiplicative_expression
  171                    | additive_expression '-' multiplicative_expression

  172 shift_expression: additive_expression
  173                 | shift_expression SHIFT_LEFT additive_expression
  174                 | shift_expression SHIFT_RIGHT additive_expression

  175 relational_expression: shift_expression
  176                      | relational_expression '<' shift_expression
  177                      | relational_expression '>' shift_expression
  178                      | relational_expression LE shift_expression
  179                      | relational_expression GE shift_expression

  180 equality_expression: relational_expression
  181                    | equality_expression EQ relational_expression
  182                    | equality_expression NE relational_expression

  183 and_expression: equality_expression
  184               | and_expression '&' equality_expression

  185 exclusive_or_expression: and_expression
  186                        | exclusive_or_expression '^' and_expression

  187 inclusive_or_expression: exclusive_or_expression
  188                        | inclusive_or_expression '|' exclusive_or_expression

  189 logical_and_expression: inclusive_or_expression
  190                       | logical_and_expression AND inclusive_or_expression

  191 logical_or_expression: logical_and_expression
  192                      | logical_or_expression OR logical_and_expression

  193 basic_expression: logical_or_expression

  194 expression: basic_expression

  195 expression_list: expression
  196                | expression_list ',' expression

  197 postfix_expression_list: postfix_expression
  198                        | postfix_expression_list ',' postfix_expression

  199 assignment_expression: postfix_expression_list '=' ArrayInitializerList
  200                      | postfix_expression compound_assignment_operator ArrayInitializer

  201 compound_assignment_operator: ADD_ASSIGN
  202                             | SUB_ASSIGN
  203                             | MUL_ASSIGN
  204                             | DIV_ASSIGN
  205                             | MOD_ASSIGN
  206                             | AND_ASSIGN
  207                             | OR_ASSIGN
  208                             | XOR_ASSIGN
  209                             | RIGHT_ASSIGN
  210                             | LEFT_ASSIGN
  211                             | TYPELESS_ASSIGN

  212 expression_statement: basic_expression
  213                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 164
'%' (37) 168
'&' (38) 184
'(' (40) 26 27 28 29 31 79 80 81 82 83 84 85 86 87 88 89 90 99 100
    101 102 103 104 105 106 117 118 121 122 123 124 136 138 155 156
    157
')' (41) 26 27 28 29 31 79 80 81 82 83 84 85 86 87 88 89 90 99 100
    101 102 103 104 105 106 117 118 121 122 123 124 136 138 155 156
    157
'*' (42) 44 166
'+' (43) 161 170
',' (44) 4 57 59 92 196 198
'-' (45) 162 171
'.' (46) 2 24 44 153
'/' (47) 167
':' (58) 64
';' (59) 51 52 53 54 55 68 71 76 77 97 98 111 123 125 127 128 129 131
    132
'<' (60) 176
'=' (61) 51 52 54 55 199
'>' (62) 177
'[' (91) 62 154
']' (93) 62 154
'^' (94) 186
'{' (123) 66 69 70 93 94 142 143
'|' (124) 188
'}' (125) 66 69 70 93 94 142 143
'~' (126) 163
error (256)
ELLIPSIS (258)
TYPELESS_ASSIGN (259) 211
ADD_ASSIGN (260) 201
SUB_ASSIGN (261) 202
MUL_ASSIGN (262) 203
DIV_ASSIGN (263) 204
MOD_ASSIGN (264) 205
AND_ASSIGN (265) 206
OR_ASSIGN (266) 207
XOR_ASSIGN (267) 208
RIGHT_ASSIGN (268) 209
LEFT_ASSIGN (269) 210
EQ (270) 181
NE (271) 182
GE (272) 179
LE (273) 178
AND (274) 190
OR (275) 192
NOT (276)
SHIFT_LEFT (277) 173
SHIFT_RIGHT (278) 174
INC (279) 151 159
DEC (280) 152 160
IF (281) 117 118
ELSE (282) 118
WHILE (283) 122 123
DO (284) 123
FOR (285) 124
IN (286)
SWITCH (287) 121
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 53 54 55 76
FUNC (293) 26 27 28 29 79 80 81 82 87 88 99 100 101 102 103 104 105
    106
RETURN (294) 131 132
STRUCT (295) 69
INTERFACE (296) 70
TYPE (297) 69 70 71
CONST (298) 51 52
PACKAGE (299) 39
IMPORT (300) 42 43 44
AS (301) 43
NEW (302)
FUNC_HEADER (303)
INT8 (304) 15
INT16 (305) 16
INT32 (306) 17
INT64 (307) 18
UINT8 (308) 11
UINT16 (309) 12
UINT32 (310) 13
UINT64 (311) 14
FLOAT32 (312) 19
FLOAT64 (313) 20
BOOL (314) 21
STRING (315) 22
ROOT_OBJECT (316) 23
DIMS (317) 8 9 10
SELF (318) 135
TOKEN_NIL (319) 147
TOKEN_TRUE (320) 148
TOKEN_FALSE (321) 149
INTEGER (322) 64 144
HEX (323)
OCT (324)
FLOAT (325) 145
STRING_LITERAL (326) 146
IDENTIFIER (327) 1 2 24 25 43 56 57 69 70 71 76 77 79 80 81 82 83 84
    85 86 87 88 89 90 91 92 99 100 101 102 133 153


Nonterminals, with rules where they appear

$accept (96)
    on left: 0
ModuleFilePathName (97)
    on left: 1 2, on right: 2 39 42 43 44
TypeList (98)
    on left: 3 4, on right: 4 28 29 31 87 88 89 90
Type (99)
    on left: 5 6 7 8 9 10, on right: 3 4 30 52 53 55 71 76 77 91 92
    141 142 143
PrimitiveType (100)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23, on right: 5 8
    138
ModuleType (101)
    on left: 24 25, on right: 6 9
FunctionType (102)
    on left: 26 27 28 29, on right: 7 10
ReturnTypeList (103)
    on left: 30 31, on right: 26 28 79 81 83 85 87 89 99 101 103 105
Program (104)
    on left: 32 33 34 35 36 37 38, on right: 0
PackageDeclaration (105)
    on left: 39, on right: 32 33 34 36
ImportDeclarations (106)
    on left: 40 41, on right: 32 33 35 37 41
ImportDeclaration (107)
    on left: 42 43 44, on right: 40 41
Declarations (108)
    on left: 45 46, on right: 32 34 35 38 46
Declaration (109)
    on left: 47 48 49 50, on right: 45 46
ConstDeclaration (110)
    on left: 51 52, on right: 47
VariableDeclaration (111)
    on left: 53 54 55, on right: 48 109 126
VariableList (112)
    on left: 56 57, on right: 51 52 53 54 55 57
ArrayInitializerList (113)
    on left: 58 59, on right: 51 52 54 55 59 66 132 142 199
DimExprs (114)
    on left: 60 61, on right: 61 141 142 143
DimExpr (115)
    on left: 62, on right: 60 61
ArrayInitializer (116)
    on left: 63 64 65, on right: 58 59 64 200
arrayinit (117)
    on left: 66, on right: 65
SemiOrEmpty (118)
    on left: 67 68, on right: 39 42 43 44 69 70
TypeDeclaration (119)
    on left: 69 70 71, on right: 49
MemberDeclarations (120)
    on left: 72 73, on right: 69 73
MemberDeclaration (121)
    on left: 74 75, on right: 72 73
FieldDeclaration (122)
    on left: 76 77, on right: 74
MethodDeclaration (123)
    on left: 78, on right: 75
MethodDeclarationHeader1 (124)
    on left: 79 80 81 82 83 84 85 86, on right: 78 97
MethodDeclarationHeader2 (125)
    on left: 87 88 89 90, on right: 98
ParameterList (126)
    on left: 91 92, on right: 81 82 85 86 92 101 102 105 106
CodeBlock (127)
    on left: 93 94, on right: 78 99 100 101 102 103 104 105 106 117
    118 120 121 122 123 124 157
InterfaceFunctionDeclarations (128)
    on left: 95 96, on right: 70 96
InterfaceFunctionDeclaration (129)
    on left: 97 98, on right: 95 96
FunctionDeclaration (130)
    on left: 99 100 101 102, on right: 50
AnonymousFunctionDeclaration (131)
    on left: 103 104 105 106, on right: 139
local_variable_declaration_statements (132)
    on left: 107 108, on right: 93 108
local_variable_declaration_statement (133)
    on left: 109 110, on right: 107 108
statement (134)
    on left: 111 112 113 114, on right: 110
selection_statement (135)
    on left: 115 116, on right: 112
if_statement (136)
    on left: 117 118, on right: 115 119
else_statemnet (137)
    on left: 119 120, on right: 118
switch_statement (138)
    on left: 121, on right: 116
iteration_statemnet (139)
    on left: 122 123 124, on right: 113
for_init (140)
    on left: 125 126 127, on right: 124
for_expr (141)
    on left: 128 129, on right: 124
for_incr (142)
    on left: 130, on right: 124
jump_statement (143)
    on left: 131 132, on right: 114
primary_expression (144)
    on left: 133 134 135 136 137, on right: 150
complex_primary (145)
    on left: 138 139 140, on right: 137
ArrayExpression (146)
    on left: 141 142 143, on right: 140
constant (147)
    on left: 144 145 146 147 148 149, on right: 134 138
postfix_expression (148)
    on left: 150 151 152 153 154 155 156 157, on right: 151 152 153
    154 155 156 157 158 197 198 200
unary_expression (149)
    on left: 158 159 160 161 162 163 164, on right: 159 160 161 162
    163 164 165 166 167 168
multiplicative_expression (150)
    on left: 165 166 167 168, on right: 166 167 168 169 170 171
additive_expression (151)
    on left: 169 170 171, on right: 170 171 172 173 174
shift_expression (152)
    on left: 172 173 174, on right: 173 174 175 176 177 178 179
relational_expression (153)
    on left: 175 176 177 178 179, on right: 176 177 178 179 180 181
    182
equality_expression (154)
    on left: 180 181 182, on right: 181 182 183 184
and_expression (155)
    on left: 183 184, on right: 184 185 186
exclusive_or_expression (156)
    on left: 185 186, on right: 186 187 188
inclusive_or_expression (157)
    on left: 187 188, on right: 188 189 190
logical_and_expression (158)
    on left: 189 190, on right: 190 191 192
logical_or_expression (159)
    on left: 191 192, on right: 192 193
basic_expression (160)
    on left: 193, on right: 62 63 117 118 121 122 123 128 136 154 194
    212
expression (161)
    on left: 194, on right: 195 196
expression_list (162)
    on left: 195 196, on right: 155 196
postfix_expression_list (163)
    on left: 197 198, on right: 198 199
assignment_expression (164)
    on left: 199 200, on right: 213
compound_assignment_operator (165)
    on left: 201 202 203 204 205 206 207 208 209 210 211, on right:
    200
expression_statement (166)
    on left: 212 213, on right: 111 125 130


State 0

    0 $accept: . Program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    CONST    shift, and go to state 4
    PACKAGE  shift, and go to state 5
    IMPORT   shift, and go to state 6

    Program              go to state 7
    PackageDeclaration   go to state 8
    ImportDeclarations   go to state 9
    ImportDeclaration    go to state 10
    Declarations         go to state 11
    Declaration          go to state 12
    ConstDeclaration     go to state 13
    VariableDeclaration  go to state 14
    TypeDeclaration      go to state 15
    FunctionDeclaration  go to state 16


State 1

   53 VariableDeclaration: VAR . VariableList Type ';'
   54                    | VAR . VariableList '=' ArrayInitializerList ';'
   55                    | VAR . VariableList Type '=' ArrayInitializerList ';'

    IDENTIFIER  shift, and go to state 17

    VariableList  go to state 18


State 2

   99 FunctionDeclaration: FUNC . IDENTIFIER '(' ')' ReturnTypeList CodeBlock
  100                    | FUNC . IDENTIFIER '(' ')' CodeBlock
  101                    | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock
  102                    | FUNC . IDENTIFIER '(' ParameterList ')' CodeBlock

    IDENTIFIER  shift, and go to state 19


State 3

   69 TypeDeclaration: TYPE . IDENTIFIER STRUCT '{' MemberDeclarations '}' SemiOrEmpty
   70                | TYPE . IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty
   71                | TYPE . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 20


State 4

   51 ConstDeclaration: CONST . VariableList '=' ArrayInitializerList ';'
   52                 | CONST . VariableList Type '=' ArrayInitializerList ';'

    IDENTIFIER  shift, and go to state 17

    VariableList  go to state 21


State 5

   39 PackageDeclaration: PACKAGE . ModuleFilePathName SemiOrEmpty

    IDENTIFIER  shift, and go to state 22

    ModuleFilePathName  go to state 23


State 6

   42 ImportDeclaration: IMPORT . ModuleFilePathName SemiOrEmpty
   43                  | IMPORT . ModuleFilePathName AS IDENTIFIER SemiOrEmpty
   44                  | IMPORT . ModuleFilePathName '.' '*' SemiOrEmpty

    IDENTIFIER  shift, and go to state 22

    ModuleFilePathName  go to state 24


State 7

    0 $accept: Program . $end

    $end  shift, and go to state 25


State 8

   32 Program: PackageDeclaration . ImportDeclarations Declarations
   33        | PackageDeclaration . ImportDeclarations
   34        | PackageDeclaration . Declarations
   36        | PackageDeclaration .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    CONST   shift, and go to state 4
    IMPORT  shift, and go to state 6

    $default  reduce using rule 36 (Program)

    ImportDeclarations   go to state 26
    ImportDeclaration    go to state 10
    Declarations         go to state 27
    Declaration          go to state 12
    ConstDeclaration     go to state 13
    VariableDeclaration  go to state 14
    TypeDeclaration      go to state 15
    FunctionDeclaration  go to state 16


State 9

   35 Program: ImportDeclarations . Declarations
   37        | ImportDeclarations .
   41 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    CONST   shift, and go to state 4
    IMPORT  shift, and go to state 6

    $default  reduce using rule 37 (Program)

    ImportDeclaration    go to state 28
    Declarations         go to state 29
    Declaration          go to state 12
    ConstDeclaration     go to state 13
    VariableDeclaration  go to state 14
    TypeDeclaration      go to state 15
    FunctionDeclaration  go to state 16


State 10

   40 ImportDeclarations: ImportDeclaration .

    $default  reduce using rule 40 (ImportDeclarations)


State 11

   38 Program: Declarations .
   46 Declarations: Declarations . Declaration

    VAR    shift, and go to state 1
    FUNC   shift, and go to state 2
    TYPE   shift, and go to state 3
    CONST  shift, and go to state 4

    $default  reduce using rule 38 (Program)

    Declaration          go to state 30
    ConstDeclaration     go to state 13
    VariableDeclaration  go to state 14
    TypeDeclaration      go to state 15
    FunctionDeclaration  go to state 16


State 12

   45 Declarations: Declaration .

    $default  reduce using rule 45 (Declarations)


State 13

   47 Declaration: ConstDeclaration .

    $default  reduce using rule 47 (Declaration)


State 14

   48 Declaration: VariableDeclaration .

    $default  reduce using rule 48 (Declaration)


State 15

   49 Declaration: TypeDeclaration .

    $default  reduce using rule 49 (Declaration)


State 16

   50 Declaration: FunctionDeclaration .

    $default  reduce using rule 50 (Declaration)


State 17

   56 VariableList: IDENTIFIER .

    $default  reduce using rule 56 (VariableList)


State 18

   53 VariableDeclaration: VAR VariableList . Type ';'
   54                    | VAR VariableList . '=' ArrayInitializerList ';'
   55                    | VAR VariableList . Type '=' ArrayInitializerList ';'
   57 VariableList: VariableList . ',' IDENTIFIER

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    ','          shift, and go to state 47
    '='          shift, and go to state 48

    Type           go to state 49
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 19

   99 FunctionDeclaration: FUNC IDENTIFIER . '(' ')' ReturnTypeList CodeBlock
  100                    | FUNC IDENTIFIER . '(' ')' CodeBlock
  101                    | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList CodeBlock
  102                    | FUNC IDENTIFIER . '(' ParameterList ')' CodeBlock

    '('  shift, and go to state 53


State 20

   69 TypeDeclaration: TYPE IDENTIFIER . STRUCT '{' MemberDeclarations '}' SemiOrEmpty
   70                | TYPE IDENTIFIER . INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty
   71                | TYPE IDENTIFIER . Type ';'

    FUNC         shift, and go to state 31
    STRUCT       shift, and go to state 54
    INTERFACE    shift, and go to state 55
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46

    Type           go to state 56
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 21

   51 ConstDeclaration: CONST VariableList . '=' ArrayInitializerList ';'
   52                 | CONST VariableList . Type '=' ArrayInitializerList ';'
   57 VariableList: VariableList . ',' IDENTIFIER

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    ','          shift, and go to state 47
    '='          shift, and go to state 57

    Type           go to state 58
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 22

    1 ModuleFilePathName: IDENTIFIER .

    $default  reduce using rule 1 (ModuleFilePathName)


State 23

    2 ModuleFilePathName: ModuleFilePathName . '.' IDENTIFIER
   39 PackageDeclaration: PACKAGE ModuleFilePathName . SemiOrEmpty

    '.'  shift, and go to state 59
    ';'  shift, and go to state 60

    $default  reduce using rule 67 (SemiOrEmpty)

    SemiOrEmpty  go to state 61


State 24

    2 ModuleFilePathName: ModuleFilePathName . '.' IDENTIFIER
   42 ImportDeclaration: IMPORT ModuleFilePathName . SemiOrEmpty
   43                  | IMPORT ModuleFilePathName . AS IDENTIFIER SemiOrEmpty
   44                  | IMPORT ModuleFilePathName . '.' '*' SemiOrEmpty

    AS   shift, and go to state 62
    '.'  shift, and go to state 63
    ';'  shift, and go to state 60

    $default  reduce using rule 67 (SemiOrEmpty)

    SemiOrEmpty  go to state 64


State 25

    0 $accept: Program $end .

    $default  accept


State 26

   32 Program: PackageDeclaration ImportDeclarations . Declarations
   33        | PackageDeclaration ImportDeclarations .
   41 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    CONST   shift, and go to state 4
    IMPORT  shift, and go to state 6

    $default  reduce using rule 33 (Program)

    ImportDeclaration    go to state 28
    Declarations         go to state 65
    Declaration          go to state 12
    ConstDeclaration     go to state 13
    VariableDeclaration  go to state 14
    TypeDeclaration      go to state 15
    FunctionDeclaration  go to state 16


State 27

   34 Program: PackageDeclaration Declarations .
   46 Declarations: Declarations . Declaration

    VAR    shift, and go to state 1
    FUNC   shift, and go to state 2
    TYPE   shift, and go to state 3
    CONST  shift, and go to state 4

    $default  reduce using rule 34 (Program)

    Declaration          go to state 30
    ConstDeclaration     go to state 13
    VariableDeclaration  go to state 14
    TypeDeclaration      go to state 15
    FunctionDeclaration  go to state 16


State 28

   41 ImportDeclarations: ImportDeclarations ImportDeclaration .

    $default  reduce using rule 41 (ImportDeclarations)


State 29

   35 Program: ImportDeclarations Declarations .
   46 Declarations: Declarations . Declaration

    VAR    shift, and go to state 1
    FUNC   shift, and go to state 2
    TYPE   shift, and go to state 3
    CONST  shift, and go to state 4

    $default  reduce using rule 35 (Program)

    Declaration          go to state 30
    ConstDeclaration     go to state 13
    VariableDeclaration  go to state 14
    TypeDeclaration      go to state 15
    FunctionDeclaration  go to state 16


State 30

   46 Declarations: Declarations Declaration .

    $default  reduce using rule 46 (Declarations)


State 31

   26 FunctionType: FUNC . '(' ')' ReturnTypeList
   27             | FUNC . '(' ')'
   28             | FUNC . '(' TypeList ')' ReturnTypeList
   29             | FUNC . '(' TypeList ')'

    '('  shift, and go to state 66


State 32

   15 PrimitiveType: INT8 .

    $default  reduce using rule 15 (PrimitiveType)


State 33

   16 PrimitiveType: INT16 .

    $default  reduce using rule 16 (PrimitiveType)


State 34

   17 PrimitiveType: INT32 .

    $default  reduce using rule 17 (PrimitiveType)


State 35

   18 PrimitiveType: INT64 .

    $default  reduce using rule 18 (PrimitiveType)


State 36

   11 PrimitiveType: UINT8 .

    $default  reduce using rule 11 (PrimitiveType)


State 37

   12 PrimitiveType: UINT16 .

    $default  reduce using rule 12 (PrimitiveType)


State 38

   13 PrimitiveType: UINT32 .

    $default  reduce using rule 13 (PrimitiveType)


State 39

   14 PrimitiveType: UINT64 .

    $default  reduce using rule 14 (PrimitiveType)


State 40

   19 PrimitiveType: FLOAT32 .

    $default  reduce using rule 19 (PrimitiveType)


State 41

   20 PrimitiveType: FLOAT64 .

    $default  reduce using rule 20 (PrimitiveType)


State 42

   21 PrimitiveType: BOOL .

    $default  reduce using rule 21 (PrimitiveType)


State 43

   22 PrimitiveType: STRING .

    $default  reduce using rule 22 (PrimitiveType)


State 44

   23 PrimitiveType: ROOT_OBJECT .

    $default  reduce using rule 23 (PrimitiveType)


State 45

    8 Type: DIMS . PrimitiveType
    9     | DIMS . ModuleType
   10     | DIMS . FunctionType

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    IDENTIFIER   shift, and go to state 46

    PrimitiveType  go to state 67
    ModuleType     go to state 68
    FunctionType   go to state 69


State 46

   24 ModuleType: IDENTIFIER . '.' IDENTIFIER
   25           | IDENTIFIER .

    '.'  shift, and go to state 70

    $default  reduce using rule 25 (ModuleType)


State 47

   57 VariableList: VariableList ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 71


State 48

   54 VariableDeclaration: VAR VariableList '=' . ArrayInitializerList ';'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    ArrayInitializerList          go to state 91
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 94
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 49

   53 VariableDeclaration: VAR VariableList Type . ';'
   55                    | VAR VariableList Type . '=' ArrayInitializerList ';'

    '='  shift, and go to state 114
    ';'  shift, and go to state 115


State 50

    5 Type: PrimitiveType .

    $default  reduce using rule 5 (Type)


State 51

    6 Type: ModuleType .

    $default  reduce using rule 6 (Type)


State 52

    7 Type: FunctionType .

    $default  reduce using rule 7 (Type)


State 53

   99 FunctionDeclaration: FUNC IDENTIFIER '(' . ')' ReturnTypeList CodeBlock
  100                    | FUNC IDENTIFIER '(' . ')' CodeBlock
  101                    | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList CodeBlock
  102                    | FUNC IDENTIFIER '(' . ParameterList ')' CodeBlock

    IDENTIFIER  shift, and go to state 116
    ')'         shift, and go to state 117

    ParameterList  go to state 118


State 54

   69 TypeDeclaration: TYPE IDENTIFIER STRUCT . '{' MemberDeclarations '}' SemiOrEmpty

    '{'  shift, and go to state 119


State 55

   70 TypeDeclaration: TYPE IDENTIFIER INTERFACE . '{' InterfaceFunctionDeclarations '}' SemiOrEmpty

    '{'  shift, and go to state 120


State 56

   71 TypeDeclaration: TYPE IDENTIFIER Type . ';'

    ';'  shift, and go to state 121


State 57

   51 ConstDeclaration: CONST VariableList '=' . ArrayInitializerList ';'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    ArrayInitializerList          go to state 122
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 94
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 58

   52 ConstDeclaration: CONST VariableList Type . '=' ArrayInitializerList ';'

    '='  shift, and go to state 123


State 59

    2 ModuleFilePathName: ModuleFilePathName '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 124


State 60

   68 SemiOrEmpty: ';' .

    $default  reduce using rule 68 (SemiOrEmpty)


State 61

   39 PackageDeclaration: PACKAGE ModuleFilePathName SemiOrEmpty .

    $default  reduce using rule 39 (PackageDeclaration)


State 62

   43 ImportDeclaration: IMPORT ModuleFilePathName AS . IDENTIFIER SemiOrEmpty

    IDENTIFIER  shift, and go to state 125


State 63

    2 ModuleFilePathName: ModuleFilePathName '.' . IDENTIFIER
   44 ImportDeclaration: IMPORT ModuleFilePathName '.' . '*' SemiOrEmpty

    IDENTIFIER  shift, and go to state 124
    '*'         shift, and go to state 126


State 64

   42 ImportDeclaration: IMPORT ModuleFilePathName SemiOrEmpty .

    $default  reduce using rule 42 (ImportDeclaration)


State 65

   32 Program: PackageDeclaration ImportDeclarations Declarations .
   46 Declarations: Declarations . Declaration

    VAR    shift, and go to state 1
    FUNC   shift, and go to state 2
    TYPE   shift, and go to state 3
    CONST  shift, and go to state 4

    $default  reduce using rule 32 (Program)

    Declaration          go to state 30
    ConstDeclaration     go to state 13
    VariableDeclaration  go to state 14
    TypeDeclaration      go to state 15
    FunctionDeclaration  go to state 16


State 66

   26 FunctionType: FUNC '(' . ')' ReturnTypeList
   27             | FUNC '(' . ')'
   28             | FUNC '(' . TypeList ')' ReturnTypeList
   29             | FUNC '(' . TypeList ')'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    ')'          shift, and go to state 127

    TypeList       go to state 128
    Type           go to state 129
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 67

    8 Type: DIMS PrimitiveType .

    $default  reduce using rule 8 (Type)


State 68

    9 Type: DIMS ModuleType .

    $default  reduce using rule 9 (Type)


State 69

   10 Type: DIMS FunctionType .

    $default  reduce using rule 10 (Type)


State 70

   24 ModuleType: IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 130


State 71

   57 VariableList: VariableList ',' IDENTIFIER .

    $default  reduce using rule 57 (VariableList)


State 72

  159 unary_expression: INC . unary_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 132


State 73

  160 unary_expression: DEC . unary_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 133


State 74

  103 AnonymousFunctionDeclaration: FUNC . '(' ')' ReturnTypeList CodeBlock
  104                             | FUNC . '(' ')' CodeBlock
  105                             | FUNC . '(' ParameterList ')' ReturnTypeList CodeBlock
  106                             | FUNC . '(' ParameterList ')' CodeBlock

    '('  shift, and go to state 134


State 75

  135 primary_expression: SELF .

    $default  reduce using rule 135 (primary_expression)


State 76

  147 constant: TOKEN_NIL .

    $default  reduce using rule 147 (constant)


State 77

  148 constant: TOKEN_TRUE .

    $default  reduce using rule 148 (constant)


State 78

  149 constant: TOKEN_FALSE .

    $default  reduce using rule 149 (constant)


State 79

   64 ArrayInitializer: INTEGER . ':' ArrayInitializer
  144 constant: INTEGER .

    ':'  shift, and go to state 135

    $default  reduce using rule 144 (constant)


State 80

  145 constant: FLOAT .

    $default  reduce using rule 145 (constant)


State 81

  146 constant: STRING_LITERAL .

    $default  reduce using rule 146 (constant)


State 82

  133 primary_expression: IDENTIFIER .

    $default  reduce using rule 133 (primary_expression)


State 83

  136 primary_expression: '(' . basic_expression ')'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 136


State 84

   62 DimExpr: '[' . basic_expression ']'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 137


State 85

   66 arrayinit: '{' . ArrayInitializerList '}'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    ArrayInitializerList          go to state 138
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 94
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 86

  161 unary_expression: '+' . unary_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 139


State 87

  162 unary_expression: '-' . unary_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 140


State 88

  163 unary_expression: '~' . unary_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 141


State 89

  164 unary_expression: '!' . unary_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 142


State 90

  138 complex_primary: PrimitiveType . '(' constant ')'

    '('  shift, and go to state 143


State 91

   54 VariableDeclaration: VAR VariableList '=' ArrayInitializerList . ';'
   59 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 144
    ';'  shift, and go to state 145


State 92

   61 DimExprs: DimExprs . DimExpr
  141 ArrayExpression: DimExprs . Type
  142                | DimExprs . Type '{' ArrayInitializerList '}'
  143                | DimExprs . Type '{' '}'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '['          shift, and go to state 84

    Type           go to state 146
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52
    DimExpr        go to state 147


State 93

   60 DimExprs: DimExpr .

    $default  reduce using rule 60 (DimExprs)


State 94

   58 ArrayInitializerList: ArrayInitializer .

    $default  reduce using rule 58 (ArrayInitializerList)


State 95

   65 ArrayInitializer: arrayinit .

    $default  reduce using rule 65 (ArrayInitializer)


State 96

  139 complex_primary: AnonymousFunctionDeclaration .

    $default  reduce using rule 139 (complex_primary)


State 97

  150 postfix_expression: primary_expression .

    $default  reduce using rule 150 (postfix_expression)


State 98

  137 primary_expression: complex_primary .

    $default  reduce using rule 137 (primary_expression)


State 99

  140 complex_primary: ArrayExpression .

    $default  reduce using rule 140 (complex_primary)


State 100

  134 primary_expression: constant .

    $default  reduce using rule 134 (primary_expression)


State 101

  151 postfix_expression: postfix_expression . INC
  152                   | postfix_expression . DEC
  153                   | postfix_expression . '.' IDENTIFIER
  154                   | postfix_expression . '[' basic_expression ']'
  155                   | postfix_expression . '(' expression_list ')'
  156                   | postfix_expression . '(' ')'
  157                   | postfix_expression . '(' ')' CodeBlock
  158 unary_expression: postfix_expression .

    INC  shift, and go to state 148
    DEC  shift, and go to state 149
    '.'  shift, and go to state 150
    '('  shift, and go to state 151
    '['  shift, and go to state 152

    $default  reduce using rule 158 (unary_expression)


State 102

  165 multiplicative_expression: unary_expression .

    $default  reduce using rule 165 (multiplicative_expression)


State 103

  166 multiplicative_expression: multiplicative_expression . '*' unary_expression
  167                          | multiplicative_expression . '/' unary_expression
  168                          | multiplicative_expression . '%' unary_expression
  169 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155

    $default  reduce using rule 169 (additive_expression)


State 104

  170 additive_expression: additive_expression . '+' multiplicative_expression
  171                    | additive_expression . '-' multiplicative_expression
  172 shift_expression: additive_expression .

    '+'  shift, and go to state 156
    '-'  shift, and go to state 157

    $default  reduce using rule 172 (shift_expression)


State 105

  173 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  174                 | shift_expression . SHIFT_RIGHT additive_expression
  175 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 158
    SHIFT_RIGHT  shift, and go to state 159

    $default  reduce using rule 175 (relational_expression)


State 106

  176 relational_expression: relational_expression . '<' shift_expression
  177                      | relational_expression . '>' shift_expression
  178                      | relational_expression . LE shift_expression
  179                      | relational_expression . GE shift_expression
  180 equality_expression: relational_expression .

    GE   shift, and go to state 160
    LE   shift, and go to state 161
    '<'  shift, and go to state 162
    '>'  shift, and go to state 163

    $default  reduce using rule 180 (equality_expression)


State 107

  181 equality_expression: equality_expression . EQ relational_expression
  182                    | equality_expression . NE relational_expression
  183 and_expression: equality_expression .

    EQ  shift, and go to state 164
    NE  shift, and go to state 165

    $default  reduce using rule 183 (and_expression)


State 108

  184 and_expression: and_expression . '&' equality_expression
  185 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 166

    $default  reduce using rule 185 (exclusive_or_expression)


State 109

  186 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  187 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 167

    $default  reduce using rule 187 (inclusive_or_expression)


State 110

  188 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  189 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 168

    $default  reduce using rule 189 (logical_and_expression)


State 111

  190 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  191 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 169

    $default  reduce using rule 191 (logical_or_expression)


State 112

  192 logical_or_expression: logical_or_expression . OR logical_and_expression
  193 basic_expression: logical_or_expression .

    OR  shift, and go to state 170

    $default  reduce using rule 193 (basic_expression)


State 113

   63 ArrayInitializer: basic_expression .

    $default  reduce using rule 63 (ArrayInitializer)


State 114

   55 VariableDeclaration: VAR VariableList Type '=' . ArrayInitializerList ';'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    ArrayInitializerList          go to state 171
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 94
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 115

   53 VariableDeclaration: VAR VariableList Type ';' .

    $default  reduce using rule 53 (VariableDeclaration)


State 116

   91 ParameterList: IDENTIFIER . Type

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46

    Type           go to state 172
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 117

   99 FunctionDeclaration: FUNC IDENTIFIER '(' ')' . ReturnTypeList CodeBlock
  100                    | FUNC IDENTIFIER '(' ')' . CodeBlock

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173
    '{'          shift, and go to state 174

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 176
    CodeBlock       go to state 177


State 118

   92 ParameterList: ParameterList . ',' IDENTIFIER Type
  101 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList . ')' ReturnTypeList CodeBlock
  102                    | FUNC IDENTIFIER '(' ParameterList . ')' CodeBlock

    ')'  shift, and go to state 178
    ','  shift, and go to state 179


State 119

   69 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' . MemberDeclarations '}' SemiOrEmpty

    VAR         shift, and go to state 180
    FUNC        shift, and go to state 181
    IDENTIFIER  shift, and go to state 182

    MemberDeclarations        go to state 183
    MemberDeclaration         go to state 184
    FieldDeclaration          go to state 185
    MethodDeclaration         go to state 186
    MethodDeclarationHeader1  go to state 187


State 120

   70 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' . InterfaceFunctionDeclarations '}' SemiOrEmpty

    FUNC        shift, and go to state 188
    IDENTIFIER  shift, and go to state 189

    MethodDeclarationHeader1       go to state 190
    MethodDeclarationHeader2       go to state 191
    InterfaceFunctionDeclarations  go to state 192
    InterfaceFunctionDeclaration   go to state 193


State 121

   71 TypeDeclaration: TYPE IDENTIFIER Type ';' .

    $default  reduce using rule 71 (TypeDeclaration)


State 122

   51 ConstDeclaration: CONST VariableList '=' ArrayInitializerList . ';'
   59 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 144
    ';'  shift, and go to state 194


State 123

   52 ConstDeclaration: CONST VariableList Type '=' . ArrayInitializerList ';'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    ArrayInitializerList          go to state 195
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 94
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 124

    2 ModuleFilePathName: ModuleFilePathName '.' IDENTIFIER .

    $default  reduce using rule 2 (ModuleFilePathName)


State 125

   43 ImportDeclaration: IMPORT ModuleFilePathName AS IDENTIFIER . SemiOrEmpty

    ';'  shift, and go to state 60

    $default  reduce using rule 67 (SemiOrEmpty)

    SemiOrEmpty  go to state 196


State 126

   44 ImportDeclaration: IMPORT ModuleFilePathName '.' '*' . SemiOrEmpty

    ';'  shift, and go to state 60

    $default  reduce using rule 67 (SemiOrEmpty)

    SemiOrEmpty  go to state 197


State 127

   26 FunctionType: FUNC '(' ')' . ReturnTypeList
   27             | FUNC '(' ')' .

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173

    $default  reduce using rule 27 (FunctionType)

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 198


State 128

    4 TypeList: TypeList . ',' Type
   28 FunctionType: FUNC '(' TypeList . ')' ReturnTypeList
   29             | FUNC '(' TypeList . ')'

    ')'  shift, and go to state 199
    ','  shift, and go to state 200


State 129

    3 TypeList: Type .

    $default  reduce using rule 3 (TypeList)


State 130

   24 ModuleType: IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 24 (ModuleType)


State 131

  144 constant: INTEGER .

    $default  reduce using rule 144 (constant)


State 132

  159 unary_expression: INC unary_expression .

    $default  reduce using rule 159 (unary_expression)


State 133

  160 unary_expression: DEC unary_expression .

    $default  reduce using rule 160 (unary_expression)


State 134

  103 AnonymousFunctionDeclaration: FUNC '(' . ')' ReturnTypeList CodeBlock
  104                             | FUNC '(' . ')' CodeBlock
  105                             | FUNC '(' . ParameterList ')' ReturnTypeList CodeBlock
  106                             | FUNC '(' . ParameterList ')' CodeBlock

    IDENTIFIER  shift, and go to state 116
    ')'         shift, and go to state 201

    ParameterList  go to state 202


State 135

   64 ArrayInitializer: INTEGER ':' . ArrayInitializer

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 203
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 136

  136 primary_expression: '(' basic_expression . ')'

    ')'  shift, and go to state 204


State 137

   62 DimExpr: '[' basic_expression . ']'

    ']'  shift, and go to state 205


State 138

   59 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
   66 arrayinit: '{' ArrayInitializerList . '}'

    ','  shift, and go to state 144
    '}'  shift, and go to state 206


State 139

  161 unary_expression: '+' unary_expression .

    $default  reduce using rule 161 (unary_expression)


State 140

  162 unary_expression: '-' unary_expression .

    $default  reduce using rule 162 (unary_expression)


State 141

  163 unary_expression: '~' unary_expression .

    $default  reduce using rule 163 (unary_expression)


State 142

  164 unary_expression: '!' unary_expression .

    $default  reduce using rule 164 (unary_expression)


State 143

  138 complex_primary: PrimitiveType '(' . constant ')'

    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81

    constant  go to state 207


State 144

   59 ArrayInitializerList: ArrayInitializerList ',' . ArrayInitializer

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 208
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 145

   54 VariableDeclaration: VAR VariableList '=' ArrayInitializerList ';' .

    $default  reduce using rule 54 (VariableDeclaration)


State 146

  141 ArrayExpression: DimExprs Type .
  142                | DimExprs Type . '{' ArrayInitializerList '}'
  143                | DimExprs Type . '{' '}'

    '{'  shift, and go to state 209

    $default  reduce using rule 141 (ArrayExpression)


State 147

   61 DimExprs: DimExprs DimExpr .

    $default  reduce using rule 61 (DimExprs)


State 148

  151 postfix_expression: postfix_expression INC .

    $default  reduce using rule 151 (postfix_expression)


State 149

  152 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 152 (postfix_expression)


State 150

  153 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 210


State 151

  155 postfix_expression: postfix_expression '(' . expression_list ')'
  156                   | postfix_expression '(' . ')'
  157                   | postfix_expression '(' . ')' CodeBlock

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    ')'             shift, and go to state 211
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 212
    expression                    go to state 213
    expression_list               go to state 214


State 152

  154 postfix_expression: postfix_expression '[' . basic_expression ']'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 215


State 153

  166 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 216


State 154

  167 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 217


State 155

  168 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 218


State 156

  170 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 219


State 157

  171 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 220


State 158

  173 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 221


State 159

  174 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 222


State 160

  179 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 223


State 161

  178 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 224


State 162

  176 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 225


State 163

  177 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 226


State 164

  181 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 227


State 165

  182 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 228


State 166

  184 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 229


State 167

  186 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 230


State 168

  188 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 231


State 169

  190 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 232


State 170

  192 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 233


State 171

   55 VariableDeclaration: VAR VariableList Type '=' ArrayInitializerList . ';'
   59 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 144
    ';'  shift, and go to state 234


State 172

   91 ParameterList: IDENTIFIER Type .

    $default  reduce using rule 91 (ParameterList)


State 173

   31 ReturnTypeList: '(' . TypeList ')'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46

    TypeList       go to state 235
    Type           go to state 129
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 174

   93 CodeBlock: '{' . local_variable_declaration_statements '}'
   94          | '{' . '}'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    IF              shift, and go to state 236
    WHILE           shift, and go to state 237
    DO              shift, and go to state 238
    FOR             shift, and go to state 239
    SWITCH          shift, and go to state 240
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 74
    RETURN          shift, and go to state 241
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '}'             shift, and go to state 242
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                          go to state 90
    VariableDeclaration                    go to state 243
    DimExprs                               go to state 92
    DimExpr                                go to state 93
    AnonymousFunctionDeclaration           go to state 96
    local_variable_declaration_statements  go to state 244
    local_variable_declaration_statement   go to state 245
    statement                              go to state 246
    selection_statement                    go to state 247
    if_statement                           go to state 248
    switch_statement                       go to state 249
    iteration_statemnet                    go to state 250
    jump_statement                         go to state 251
    primary_expression                     go to state 97
    complex_primary                        go to state 98
    ArrayExpression                        go to state 99
    constant                               go to state 100
    postfix_expression                     go to state 252
    unary_expression                       go to state 102
    multiplicative_expression              go to state 103
    additive_expression                    go to state 104
    shift_expression                       go to state 105
    relational_expression                  go to state 106
    equality_expression                    go to state 107
    and_expression                         go to state 108
    exclusive_or_expression                go to state 109
    inclusive_or_expression                go to state 110
    logical_and_expression                 go to state 111
    logical_or_expression                  go to state 112
    basic_expression                       go to state 253
    postfix_expression_list                go to state 254
    assignment_expression                  go to state 255
    expression_statement                   go to state 256


State 175

   30 ReturnTypeList: Type .

    $default  reduce using rule 30 (ReturnTypeList)


State 176

   99 FunctionDeclaration: FUNC IDENTIFIER '(' ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 174

    CodeBlock  go to state 257


State 177

  100 FunctionDeclaration: FUNC IDENTIFIER '(' ')' CodeBlock .

    $default  reduce using rule 100 (FunctionDeclaration)


State 178

  101 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' . ReturnTypeList CodeBlock
  102                    | FUNC IDENTIFIER '(' ParameterList ')' . CodeBlock

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173
    '{'          shift, and go to state 174

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 258
    CodeBlock       go to state 259


State 179

   92 ParameterList: ParameterList ',' . IDENTIFIER Type

    IDENTIFIER  shift, and go to state 260


State 180

   76 FieldDeclaration: VAR . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 261


State 181

   79 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')' ReturnTypeList
   80                         | FUNC . IDENTIFIER '(' ')'
   81                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList
   82                         | FUNC . IDENTIFIER '(' ParameterList ')'

    IDENTIFIER  shift, and go to state 262


State 182

   77 FieldDeclaration: IDENTIFIER . Type ';'
   83 MethodDeclarationHeader1: IDENTIFIER . '(' ')' ReturnTypeList
   84                         | IDENTIFIER . '(' ')'
   85                         | IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   86                         | IDENTIFIER . '(' ParameterList ')'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 263

    Type           go to state 264
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 183

   69 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations . '}' SemiOrEmpty
   73 MemberDeclarations: MemberDeclarations . MemberDeclaration

    VAR         shift, and go to state 180
    FUNC        shift, and go to state 181
    IDENTIFIER  shift, and go to state 182
    '}'         shift, and go to state 265

    MemberDeclaration         go to state 266
    FieldDeclaration          go to state 185
    MethodDeclaration         go to state 186
    MethodDeclarationHeader1  go to state 187


State 184

   72 MemberDeclarations: MemberDeclaration .

    $default  reduce using rule 72 (MemberDeclarations)


State 185

   74 MemberDeclaration: FieldDeclaration .

    $default  reduce using rule 74 (MemberDeclaration)


State 186

   75 MemberDeclaration: MethodDeclaration .

    $default  reduce using rule 75 (MemberDeclaration)


State 187

   78 MethodDeclaration: MethodDeclarationHeader1 . CodeBlock

    '{'  shift, and go to state 174

    CodeBlock  go to state 267


State 188

   79 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')' ReturnTypeList
   80                         | FUNC . IDENTIFIER '(' ')'
   81                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList
   82                         | FUNC . IDENTIFIER '(' ParameterList ')'
   87 MethodDeclarationHeader2: FUNC . IDENTIFIER '(' TypeList ')' ReturnTypeList
   88                         | FUNC . IDENTIFIER '(' TypeList ')'

    IDENTIFIER  shift, and go to state 268


State 189

   83 MethodDeclarationHeader1: IDENTIFIER . '(' ')' ReturnTypeList
   84                         | IDENTIFIER . '(' ')'
   85                         | IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   86                         | IDENTIFIER . '(' ParameterList ')'
   89 MethodDeclarationHeader2: IDENTIFIER . '(' TypeList ')' ReturnTypeList
   90                         | IDENTIFIER . '(' TypeList ')'

    '('  shift, and go to state 269


State 190

   97 InterfaceFunctionDeclaration: MethodDeclarationHeader1 . ';'

    ';'  shift, and go to state 270


State 191

   98 InterfaceFunctionDeclaration: MethodDeclarationHeader2 . ';'

    ';'  shift, and go to state 271


State 192

   70 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations . '}' SemiOrEmpty
   96 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations . InterfaceFunctionDeclaration

    FUNC        shift, and go to state 188
    IDENTIFIER  shift, and go to state 189
    '}'         shift, and go to state 272

    MethodDeclarationHeader1      go to state 190
    MethodDeclarationHeader2      go to state 191
    InterfaceFunctionDeclaration  go to state 273


State 193

   95 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration .

    $default  reduce using rule 95 (InterfaceFunctionDeclarations)


State 194

   51 ConstDeclaration: CONST VariableList '=' ArrayInitializerList ';' .

    $default  reduce using rule 51 (ConstDeclaration)


State 195

   52 ConstDeclaration: CONST VariableList Type '=' ArrayInitializerList . ';'
   59 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 144
    ';'  shift, and go to state 274


State 196

   43 ImportDeclaration: IMPORT ModuleFilePathName AS IDENTIFIER SemiOrEmpty .

    $default  reduce using rule 43 (ImportDeclaration)


State 197

   44 ImportDeclaration: IMPORT ModuleFilePathName '.' '*' SemiOrEmpty .

    $default  reduce using rule 44 (ImportDeclaration)


State 198

   26 FunctionType: FUNC '(' ')' ReturnTypeList .

    $default  reduce using rule 26 (FunctionType)


State 199

   28 FunctionType: FUNC '(' TypeList ')' . ReturnTypeList
   29             | FUNC '(' TypeList ')' .

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173

    $default  reduce using rule 29 (FunctionType)

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 275


State 200

    4 TypeList: TypeList ',' . Type

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46

    Type           go to state 276
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 201

  103 AnonymousFunctionDeclaration: FUNC '(' ')' . ReturnTypeList CodeBlock
  104                             | FUNC '(' ')' . CodeBlock

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173
    '{'          shift, and go to state 174

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 277
    CodeBlock       go to state 278


State 202

   92 ParameterList: ParameterList . ',' IDENTIFIER Type
  105 AnonymousFunctionDeclaration: FUNC '(' ParameterList . ')' ReturnTypeList CodeBlock
  106                             | FUNC '(' ParameterList . ')' CodeBlock

    ')'  shift, and go to state 279
    ','  shift, and go to state 179


State 203

   64 ArrayInitializer: INTEGER ':' ArrayInitializer .

    $default  reduce using rule 64 (ArrayInitializer)


State 204

  136 primary_expression: '(' basic_expression ')' .

    $default  reduce using rule 136 (primary_expression)


State 205

   62 DimExpr: '[' basic_expression ']' .

    $default  reduce using rule 62 (DimExpr)


State 206

   66 arrayinit: '{' ArrayInitializerList '}' .

    $default  reduce using rule 66 (arrayinit)


State 207

  138 complex_primary: PrimitiveType '(' constant . ')'

    ')'  shift, and go to state 280


State 208

   59 ArrayInitializerList: ArrayInitializerList ',' ArrayInitializer .

    $default  reduce using rule 59 (ArrayInitializerList)


State 209

  142 ArrayExpression: DimExprs Type '{' . ArrayInitializerList '}'
  143                | DimExprs Type '{' . '}'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '}'             shift, and go to state 281
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    ArrayInitializerList          go to state 282
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 94
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 210

  153 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 153 (postfix_expression)


State 211

  156 postfix_expression: postfix_expression '(' ')' .
  157                   | postfix_expression '(' ')' . CodeBlock

    '{'  shift, and go to state 174

    $default  reduce using rule 156 (postfix_expression)

    CodeBlock  go to state 283


State 212

  194 expression: basic_expression .

    $default  reduce using rule 194 (expression)


State 213

  195 expression_list: expression .

    $default  reduce using rule 195 (expression_list)


State 214

  155 postfix_expression: postfix_expression '(' expression_list . ')'
  196 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 284
    ','  shift, and go to state 285


State 215

  154 postfix_expression: postfix_expression '[' basic_expression . ']'

    ']'  shift, and go to state 286


State 216

  166 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 166 (multiplicative_expression)


State 217

  167 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 167 (multiplicative_expression)


State 218

  168 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 168 (multiplicative_expression)


State 219

  166 multiplicative_expression: multiplicative_expression . '*' unary_expression
  167                          | multiplicative_expression . '/' unary_expression
  168                          | multiplicative_expression . '%' unary_expression
  170 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155

    $default  reduce using rule 170 (additive_expression)


State 220

  166 multiplicative_expression: multiplicative_expression . '*' unary_expression
  167                          | multiplicative_expression . '/' unary_expression
  168                          | multiplicative_expression . '%' unary_expression
  171 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 153
    '/'  shift, and go to state 154
    '%'  shift, and go to state 155

    $default  reduce using rule 171 (additive_expression)


State 221

  170 additive_expression: additive_expression . '+' multiplicative_expression
  171                    | additive_expression . '-' multiplicative_expression
  173 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 156
    '-'  shift, and go to state 157

    $default  reduce using rule 173 (shift_expression)


State 222

  170 additive_expression: additive_expression . '+' multiplicative_expression
  171                    | additive_expression . '-' multiplicative_expression
  174 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 156
    '-'  shift, and go to state 157

    $default  reduce using rule 174 (shift_expression)


State 223

  173 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  174                 | shift_expression . SHIFT_RIGHT additive_expression
  179 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 158
    SHIFT_RIGHT  shift, and go to state 159

    $default  reduce using rule 179 (relational_expression)


State 224

  173 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  174                 | shift_expression . SHIFT_RIGHT additive_expression
  178 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 158
    SHIFT_RIGHT  shift, and go to state 159

    $default  reduce using rule 178 (relational_expression)


State 225

  173 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  174                 | shift_expression . SHIFT_RIGHT additive_expression
  176 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 158
    SHIFT_RIGHT  shift, and go to state 159

    $default  reduce using rule 176 (relational_expression)


State 226

  173 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  174                 | shift_expression . SHIFT_RIGHT additive_expression
  177 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 158
    SHIFT_RIGHT  shift, and go to state 159

    $default  reduce using rule 177 (relational_expression)


State 227

  176 relational_expression: relational_expression . '<' shift_expression
  177                      | relational_expression . '>' shift_expression
  178                      | relational_expression . LE shift_expression
  179                      | relational_expression . GE shift_expression
  181 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 160
    LE   shift, and go to state 161
    '<'  shift, and go to state 162
    '>'  shift, and go to state 163

    $default  reduce using rule 181 (equality_expression)


State 228

  176 relational_expression: relational_expression . '<' shift_expression
  177                      | relational_expression . '>' shift_expression
  178                      | relational_expression . LE shift_expression
  179                      | relational_expression . GE shift_expression
  182 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 160
    LE   shift, and go to state 161
    '<'  shift, and go to state 162
    '>'  shift, and go to state 163

    $default  reduce using rule 182 (equality_expression)


State 229

  181 equality_expression: equality_expression . EQ relational_expression
  182                    | equality_expression . NE relational_expression
  184 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 164
    NE  shift, and go to state 165

    $default  reduce using rule 184 (and_expression)


State 230

  184 and_expression: and_expression . '&' equality_expression
  186 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 166

    $default  reduce using rule 186 (exclusive_or_expression)


State 231

  186 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  188 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 167

    $default  reduce using rule 188 (inclusive_or_expression)


State 232

  188 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  190 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 168

    $default  reduce using rule 190 (logical_and_expression)


State 233

  190 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  192 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 169

    $default  reduce using rule 192 (logical_or_expression)


State 234

   55 VariableDeclaration: VAR VariableList Type '=' ArrayInitializerList ';' .

    $default  reduce using rule 55 (VariableDeclaration)


State 235

    4 TypeList: TypeList . ',' Type
   31 ReturnTypeList: '(' TypeList . ')'

    ')'  shift, and go to state 287
    ','  shift, and go to state 200


State 236

  117 if_statement: IF . '(' basic_expression ')' CodeBlock
  118             | IF . '(' basic_expression ')' CodeBlock ELSE else_statemnet

    '('  shift, and go to state 288


State 237

  122 iteration_statemnet: WHILE . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 289


State 238

  123 iteration_statemnet: DO . CodeBlock WHILE '(' basic_expression ')' ';'

    '{'  shift, and go to state 174

    CodeBlock  go to state 290


State 239

  124 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' CodeBlock

    '('  shift, and go to state 291


State 240

  121 switch_statement: SWITCH . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 292


State 241

  131 jump_statement: RETURN . ';'
  132               | RETURN . ArrayInitializerList ';'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    ';'             shift, and go to state 293
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    ArrayInitializerList          go to state 294
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 94
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 242

   94 CodeBlock: '{' '}' .

    $default  reduce using rule 94 (CodeBlock)


State 243

  109 local_variable_declaration_statement: VariableDeclaration .

    $default  reduce using rule 109 (local_variable_declaration_statement)


State 244

   93 CodeBlock: '{' local_variable_declaration_statements . '}'
  108 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    IF              shift, and go to state 236
    WHILE           shift, and go to state 237
    DO              shift, and go to state 238
    FOR             shift, and go to state 239
    SWITCH          shift, and go to state 240
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 74
    RETURN          shift, and go to state 241
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '}'             shift, and go to state 295
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                         go to state 90
    VariableDeclaration                   go to state 243
    DimExprs                              go to state 92
    DimExpr                               go to state 93
    AnonymousFunctionDeclaration          go to state 96
    local_variable_declaration_statement  go to state 296
    statement                             go to state 246
    selection_statement                   go to state 247
    if_statement                          go to state 248
    switch_statement                      go to state 249
    iteration_statemnet                   go to state 250
    jump_statement                        go to state 251
    primary_expression                    go to state 97
    complex_primary                       go to state 98
    ArrayExpression                       go to state 99
    constant                              go to state 100
    postfix_expression                    go to state 252
    unary_expression                      go to state 102
    multiplicative_expression             go to state 103
    additive_expression                   go to state 104
    shift_expression                      go to state 105
    relational_expression                 go to state 106
    equality_expression                   go to state 107
    and_expression                        go to state 108
    exclusive_or_expression               go to state 109
    inclusive_or_expression               go to state 110
    logical_and_expression                go to state 111
    logical_or_expression                 go to state 112
    basic_expression                      go to state 253
    postfix_expression_list               go to state 254
    assignment_expression                 go to state 255
    expression_statement                  go to state 256


State 245

  107 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 107 (local_variable_declaration_statements)


State 246

  110 local_variable_declaration_statement: statement .

    $default  reduce using rule 110 (local_variable_declaration_statement)


State 247

  112 statement: selection_statement .

    $default  reduce using rule 112 (statement)


State 248

  115 selection_statement: if_statement .

    $default  reduce using rule 115 (selection_statement)


State 249

  116 selection_statement: switch_statement .

    $default  reduce using rule 116 (selection_statement)


State 250

  113 statement: iteration_statemnet .

    $default  reduce using rule 113 (statement)


State 251

  114 statement: jump_statement .

    $default  reduce using rule 114 (statement)


State 252

  151 postfix_expression: postfix_expression . INC
  152                   | postfix_expression . DEC
  153                   | postfix_expression . '.' IDENTIFIER
  154                   | postfix_expression . '[' basic_expression ']'
  155                   | postfix_expression . '(' expression_list ')'
  156                   | postfix_expression . '(' ')'
  157                   | postfix_expression . '(' ')' CodeBlock
  158 unary_expression: postfix_expression .
  197 postfix_expression_list: postfix_expression .
  200 assignment_expression: postfix_expression . compound_assignment_operator ArrayInitializer

    TYPELESS_ASSIGN  shift, and go to state 297
    ADD_ASSIGN       shift, and go to state 298
    SUB_ASSIGN       shift, and go to state 299
    MUL_ASSIGN       shift, and go to state 300
    DIV_ASSIGN       shift, and go to state 301
    MOD_ASSIGN       shift, and go to state 302
    AND_ASSIGN       shift, and go to state 303
    OR_ASSIGN        shift, and go to state 304
    XOR_ASSIGN       shift, and go to state 305
    RIGHT_ASSIGN     shift, and go to state 306
    LEFT_ASSIGN      shift, and go to state 307
    INC              shift, and go to state 148
    DEC              shift, and go to state 149
    '.'              shift, and go to state 150
    '('              shift, and go to state 151
    '['              shift, and go to state 152

    ','       reduce using rule 197 (postfix_expression_list)
    '='       reduce using rule 197 (postfix_expression_list)
    $default  reduce using rule 158 (unary_expression)

    compound_assignment_operator  go to state 308


State 253

  212 expression_statement: basic_expression .

    $default  reduce using rule 212 (expression_statement)


State 254

  198 postfix_expression_list: postfix_expression_list . ',' postfix_expression
  199 assignment_expression: postfix_expression_list . '=' ArrayInitializerList

    ','  shift, and go to state 309
    '='  shift, and go to state 310


State 255

  213 expression_statement: assignment_expression .

    $default  reduce using rule 213 (expression_statement)


State 256

  111 statement: expression_statement . ';'

    ';'  shift, and go to state 311


State 257

   99 FunctionDeclaration: FUNC IDENTIFIER '(' ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 99 (FunctionDeclaration)


State 258

  101 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 174

    CodeBlock  go to state 312


State 259

  102 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' CodeBlock .

    $default  reduce using rule 102 (FunctionDeclaration)


State 260

   92 ParameterList: ParameterList ',' IDENTIFIER . Type

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46

    Type           go to state 313
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 261

   76 FieldDeclaration: VAR IDENTIFIER . Type ';'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46

    Type           go to state 314
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 262

   79 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')' ReturnTypeList
   80                         | FUNC IDENTIFIER . '(' ')'
   81                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   82                         | FUNC IDENTIFIER . '(' ParameterList ')'

    '('  shift, and go to state 315


State 263

   83 MethodDeclarationHeader1: IDENTIFIER '(' . ')' ReturnTypeList
   84                         | IDENTIFIER '(' . ')'
   85                         | IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   86                         | IDENTIFIER '(' . ParameterList ')'

    IDENTIFIER  shift, and go to state 116
    ')'         shift, and go to state 316

    ParameterList  go to state 317


State 264

   77 FieldDeclaration: IDENTIFIER Type . ';'

    ';'  shift, and go to state 318


State 265

   69 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' . SemiOrEmpty

    ';'  shift, and go to state 60

    $default  reduce using rule 67 (SemiOrEmpty)

    SemiOrEmpty  go to state 319


State 266

   73 MemberDeclarations: MemberDeclarations MemberDeclaration .

    $default  reduce using rule 73 (MemberDeclarations)


State 267

   78 MethodDeclaration: MethodDeclarationHeader1 CodeBlock .

    $default  reduce using rule 78 (MethodDeclaration)


State 268

   79 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')' ReturnTypeList
   80                         | FUNC IDENTIFIER . '(' ')'
   81                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   82                         | FUNC IDENTIFIER . '(' ParameterList ')'
   87 MethodDeclarationHeader2: FUNC IDENTIFIER . '(' TypeList ')' ReturnTypeList
   88                         | FUNC IDENTIFIER . '(' TypeList ')'

    '('  shift, and go to state 320


State 269

   83 MethodDeclarationHeader1: IDENTIFIER '(' . ')' ReturnTypeList
   84                         | IDENTIFIER '(' . ')'
   85                         | IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   86                         | IDENTIFIER '(' . ParameterList ')'
   89 MethodDeclarationHeader2: IDENTIFIER '(' . TypeList ')' ReturnTypeList
   90                         | IDENTIFIER '(' . TypeList ')'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 321
    ')'          shift, and go to state 316

    TypeList       go to state 322
    Type           go to state 129
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52
    ParameterList  go to state 317


State 270

   97 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';' .

    $default  reduce using rule 97 (InterfaceFunctionDeclaration)


State 271

   98 InterfaceFunctionDeclaration: MethodDeclarationHeader2 ';' .

    $default  reduce using rule 98 (InterfaceFunctionDeclaration)


State 272

   70 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' . SemiOrEmpty

    ';'  shift, and go to state 60

    $default  reduce using rule 67 (SemiOrEmpty)

    SemiOrEmpty  go to state 323


State 273

   96 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations InterfaceFunctionDeclaration .

    $default  reduce using rule 96 (InterfaceFunctionDeclarations)


State 274

   52 ConstDeclaration: CONST VariableList Type '=' ArrayInitializerList ';' .

    $default  reduce using rule 52 (ConstDeclaration)


State 275

   28 FunctionType: FUNC '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 28 (FunctionType)


State 276

    4 TypeList: TypeList ',' Type .

    $default  reduce using rule 4 (TypeList)


State 277

  103 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 174

    CodeBlock  go to state 324


State 278

  104 AnonymousFunctionDeclaration: FUNC '(' ')' CodeBlock .

    $default  reduce using rule 104 (AnonymousFunctionDeclaration)


State 279

  105 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' . ReturnTypeList CodeBlock
  106                             | FUNC '(' ParameterList ')' . CodeBlock

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173
    '{'          shift, and go to state 174

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 325
    CodeBlock       go to state 326


State 280

  138 complex_primary: PrimitiveType '(' constant ')' .

    $default  reduce using rule 138 (complex_primary)


State 281

  143 ArrayExpression: DimExprs Type '{' '}' .

    $default  reduce using rule 143 (ArrayExpression)


State 282

   59 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
  142 ArrayExpression: DimExprs Type '{' ArrayInitializerList . '}'

    ','  shift, and go to state 144
    '}'  shift, and go to state 327


State 283

  157 postfix_expression: postfix_expression '(' ')' CodeBlock .

    $default  reduce using rule 157 (postfix_expression)


State 284

  155 postfix_expression: postfix_expression '(' expression_list ')' .

    $default  reduce using rule 155 (postfix_expression)


State 285

  196 expression_list: expression_list ',' . expression

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 212
    expression                    go to state 328


State 286

  154 postfix_expression: postfix_expression '[' basic_expression ']' .

    $default  reduce using rule 154 (postfix_expression)


State 287

   31 ReturnTypeList: '(' TypeList ')' .

    $default  reduce using rule 31 (ReturnTypeList)


State 288

  117 if_statement: IF '(' . basic_expression ')' CodeBlock
  118             | IF '(' . basic_expression ')' CodeBlock ELSE else_statemnet

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 329


State 289

  122 iteration_statemnet: WHILE '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 330


State 290

  123 iteration_statemnet: DO CodeBlock . WHILE '(' basic_expression ')' ';'

    WHILE  shift, and go to state 331


State 291

  124 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    VAR             shift, and go to state 1
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    ';'             shift, and go to state 332
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    VariableDeclaration           go to state 333
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    for_init                      go to state 334
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 252
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 253
    postfix_expression_list       go to state 254
    assignment_expression         go to state 255
    expression_statement          go to state 335


State 292

  121 switch_statement: SWITCH '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 336


State 293

  131 jump_statement: RETURN ';' .

    $default  reduce using rule 131 (jump_statement)


State 294

   59 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
  132 jump_statement: RETURN ArrayInitializerList . ';'

    ','  shift, and go to state 144
    ';'  shift, and go to state 337


State 295

   93 CodeBlock: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 93 (CodeBlock)


State 296

  108 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 108 (local_variable_declaration_statements)


State 297

  211 compound_assignment_operator: TYPELESS_ASSIGN .

    $default  reduce using rule 211 (compound_assignment_operator)


State 298

  201 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 201 (compound_assignment_operator)


State 299

  202 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 202 (compound_assignment_operator)


State 300

  203 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 203 (compound_assignment_operator)


State 301

  204 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 204 (compound_assignment_operator)


State 302

  205 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 205 (compound_assignment_operator)


State 303

  206 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 206 (compound_assignment_operator)


State 304

  207 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 207 (compound_assignment_operator)


State 305

  208 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 208 (compound_assignment_operator)


State 306

  209 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 209 (compound_assignment_operator)


State 307

  210 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 210 (compound_assignment_operator)


State 308

  200 assignment_expression: postfix_expression compound_assignment_operator . ArrayInitializer

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 338
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 309

  198 postfix_expression_list: postfix_expression_list ',' . postfix_expression

    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 339


State 310

  199 assignment_expression: postfix_expression_list '=' . ArrayInitializerList

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 79
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '{'             shift, and go to state 85
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    ArrayInitializerList          go to state 340
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    ArrayInitializer              go to state 94
    arrayinit                     go to state 95
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 113


State 311

  111 statement: expression_statement ';' .

    $default  reduce using rule 111 (statement)


State 312

  101 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 101 (FunctionDeclaration)


State 313

   92 ParameterList: ParameterList ',' IDENTIFIER Type .

    $default  reduce using rule 92 (ParameterList)


State 314

   76 FieldDeclaration: VAR IDENTIFIER Type . ';'

    ';'  shift, and go to state 341


State 315

   79 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')' ReturnTypeList
   80                         | FUNC IDENTIFIER '(' . ')'
   81                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   82                         | FUNC IDENTIFIER '(' . ParameterList ')'

    IDENTIFIER  shift, and go to state 116
    ')'         shift, and go to state 342

    ParameterList  go to state 343


State 316

   83 MethodDeclarationHeader1: IDENTIFIER '(' ')' . ReturnTypeList
   84                         | IDENTIFIER '(' ')' .

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173

    $default  reduce using rule 84 (MethodDeclarationHeader1)

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 344


State 317

   85 MethodDeclarationHeader1: IDENTIFIER '(' ParameterList . ')' ReturnTypeList
   86                         | IDENTIFIER '(' ParameterList . ')'
   92 ParameterList: ParameterList . ',' IDENTIFIER Type

    ')'  shift, and go to state 345
    ','  shift, and go to state 179


State 318

   77 FieldDeclaration: IDENTIFIER Type ';' .

    $default  reduce using rule 77 (FieldDeclaration)


State 319

   69 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' SemiOrEmpty .

    $default  reduce using rule 69 (TypeDeclaration)


State 320

   79 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')' ReturnTypeList
   80                         | FUNC IDENTIFIER '(' . ')'
   81                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   82                         | FUNC IDENTIFIER '(' . ParameterList ')'
   87 MethodDeclarationHeader2: FUNC IDENTIFIER '(' . TypeList ')' ReturnTypeList
   88                         | FUNC IDENTIFIER '(' . TypeList ')'

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 321
    ')'          shift, and go to state 342

    TypeList       go to state 346
    Type           go to state 129
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52
    ParameterList  go to state 343


State 321

   24 ModuleType: IDENTIFIER . '.' IDENTIFIER
   25           | IDENTIFIER .
   91 ParameterList: IDENTIFIER . Type

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '.'          shift, and go to state 70

    $default  reduce using rule 25 (ModuleType)

    Type           go to state 172
    PrimitiveType  go to state 50
    ModuleType     go to state 51
    FunctionType   go to state 52


State 322

    4 TypeList: TypeList . ',' Type
   89 MethodDeclarationHeader2: IDENTIFIER '(' TypeList . ')' ReturnTypeList
   90                         | IDENTIFIER '(' TypeList . ')'

    ')'  shift, and go to state 347
    ','  shift, and go to state 200


State 323

   70 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' SemiOrEmpty .

    $default  reduce using rule 70 (TypeDeclaration)


State 324

  103 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 103 (AnonymousFunctionDeclaration)


State 325

  105 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 174

    CodeBlock  go to state 348


State 326

  106 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' CodeBlock .

    $default  reduce using rule 106 (AnonymousFunctionDeclaration)


State 327

  142 ArrayExpression: DimExprs Type '{' ArrayInitializerList '}' .

    $default  reduce using rule 142 (ArrayExpression)


State 328

  196 expression_list: expression_list ',' expression .

    $default  reduce using rule 196 (expression_list)


State 329

  117 if_statement: IF '(' basic_expression . ')' CodeBlock
  118             | IF '(' basic_expression . ')' CodeBlock ELSE else_statemnet

    ')'  shift, and go to state 349


State 330

  122 iteration_statemnet: WHILE '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 350


State 331

  123 iteration_statemnet: DO CodeBlock WHILE . '(' basic_expression ')' ';'

    '('  shift, and go to state 351


State 332

  127 for_init: ';' .

    $default  reduce using rule 127 (for_init)


State 333

  126 for_init: VariableDeclaration .

    $default  reduce using rule 126 (for_init)


State 334

  124 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    ';'             shift, and go to state 352
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    for_expr                      go to state 353
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 354


State 335

  125 for_init: expression_statement . ';'

    ';'  shift, and go to state 355


State 336

  121 switch_statement: SWITCH '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 356


State 337

  132 jump_statement: RETURN ArrayInitializerList ';' .

    $default  reduce using rule 132 (jump_statement)


State 338

  200 assignment_expression: postfix_expression compound_assignment_operator ArrayInitializer .

    $default  reduce using rule 200 (assignment_expression)


State 339

  151 postfix_expression: postfix_expression . INC
  152                   | postfix_expression . DEC
  153                   | postfix_expression . '.' IDENTIFIER
  154                   | postfix_expression . '[' basic_expression ']'
  155                   | postfix_expression . '(' expression_list ')'
  156                   | postfix_expression . '(' ')'
  157                   | postfix_expression . '(' ')' CodeBlock
  198 postfix_expression_list: postfix_expression_list ',' postfix_expression .

    INC  shift, and go to state 148
    DEC  shift, and go to state 149
    '.'  shift, and go to state 150
    '('  shift, and go to state 151
    '['  shift, and go to state 152

    $default  reduce using rule 198 (postfix_expression_list)


State 340

   59 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
  199 assignment_expression: postfix_expression_list '=' ArrayInitializerList .

    ','  shift, and go to state 144

    $default  reduce using rule 199 (assignment_expression)


State 341

   76 FieldDeclaration: VAR IDENTIFIER Type ';' .

    $default  reduce using rule 76 (FieldDeclaration)


State 342

   79 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' . ReturnTypeList
   80                         | FUNC IDENTIFIER '(' ')' .

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173

    $default  reduce using rule 80 (MethodDeclarationHeader1)

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 357


State 343

   81 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList . ')' ReturnTypeList
   82                         | FUNC IDENTIFIER '(' ParameterList . ')'
   92 ParameterList: ParameterList . ',' IDENTIFIER Type

    ')'  shift, and go to state 358
    ','  shift, and go to state 179


State 344

   83 MethodDeclarationHeader1: IDENTIFIER '(' ')' ReturnTypeList .

    $default  reduce using rule 83 (MethodDeclarationHeader1)


State 345

   85 MethodDeclarationHeader1: IDENTIFIER '(' ParameterList ')' . ReturnTypeList
   86                         | IDENTIFIER '(' ParameterList ')' .

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173

    $default  reduce using rule 86 (MethodDeclarationHeader1)

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 359


State 346

    4 TypeList: TypeList . ',' Type
   87 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList . ')' ReturnTypeList
   88                         | FUNC IDENTIFIER '(' TypeList . ')'

    ')'  shift, and go to state 360
    ','  shift, and go to state 200


State 347

   89 MethodDeclarationHeader2: IDENTIFIER '(' TypeList ')' . ReturnTypeList
   90                         | IDENTIFIER '(' TypeList ')' .

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173

    $default  reduce using rule 90 (MethodDeclarationHeader2)

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 361


State 348

  105 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 105 (AnonymousFunctionDeclaration)


State 349

  117 if_statement: IF '(' basic_expression ')' . CodeBlock
  118             | IF '(' basic_expression ')' . CodeBlock ELSE else_statemnet

    '{'  shift, and go to state 174

    CodeBlock  go to state 362


State 350

  122 iteration_statemnet: WHILE '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 174

    CodeBlock  go to state 363


State 351

  123 iteration_statemnet: DO CodeBlock WHILE '(' . basic_expression ')' ';'

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 101
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 364


State 352

  129 for_expr: ';' .

    $default  reduce using rule 129 (for_expr)


State 353

  124 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' CodeBlock

    INC             shift, and go to state 72
    DEC             shift, and go to state 73
    FUNC            shift, and go to state 74
    INT8            shift, and go to state 32
    INT16           shift, and go to state 33
    INT32           shift, and go to state 34
    INT64           shift, and go to state 35
    UINT8           shift, and go to state 36
    UINT16          shift, and go to state 37
    UINT32          shift, and go to state 38
    UINT64          shift, and go to state 39
    FLOAT32         shift, and go to state 40
    FLOAT64         shift, and go to state 41
    BOOL            shift, and go to state 42
    STRING          shift, and go to state 43
    ROOT_OBJECT     shift, and go to state 44
    SELF            shift, and go to state 75
    TOKEN_NIL       shift, and go to state 76
    TOKEN_TRUE      shift, and go to state 77
    TOKEN_FALSE     shift, and go to state 78
    INTEGER         shift, and go to state 131
    FLOAT           shift, and go to state 80
    STRING_LITERAL  shift, and go to state 81
    IDENTIFIER      shift, and go to state 82
    '('             shift, and go to state 83
    '['             shift, and go to state 84
    '+'             shift, and go to state 86
    '-'             shift, and go to state 87
    '~'             shift, and go to state 88
    '!'             shift, and go to state 89

    PrimitiveType                 go to state 90
    DimExprs                      go to state 92
    DimExpr                       go to state 93
    AnonymousFunctionDeclaration  go to state 96
    for_incr                      go to state 365
    primary_expression            go to state 97
    complex_primary               go to state 98
    ArrayExpression               go to state 99
    constant                      go to state 100
    postfix_expression            go to state 252
    unary_expression              go to state 102
    multiplicative_expression     go to state 103
    additive_expression           go to state 104
    shift_expression              go to state 105
    relational_expression         go to state 106
    equality_expression           go to state 107
    and_expression                go to state 108
    exclusive_or_expression       go to state 109
    inclusive_or_expression       go to state 110
    logical_and_expression        go to state 111
    logical_or_expression         go to state 112
    basic_expression              go to state 253
    postfix_expression_list       go to state 254
    assignment_expression         go to state 255
    expression_statement          go to state 366


State 354

  128 for_expr: basic_expression . ';'

    ';'  shift, and go to state 367


State 355

  125 for_init: expression_statement ';' .

    $default  reduce using rule 125 (for_init)


State 356

  121 switch_statement: SWITCH '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 174

    CodeBlock  go to state 368


State 357

   79 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' ReturnTypeList .

    $default  reduce using rule 79 (MethodDeclarationHeader1)


State 358

   81 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' . ReturnTypeList
   82                         | FUNC IDENTIFIER '(' ParameterList ')' .

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173

    $default  reduce using rule 82 (MethodDeclarationHeader1)

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 369


State 359

   85 MethodDeclarationHeader1: IDENTIFIER '(' ParameterList ')' ReturnTypeList .

    $default  reduce using rule 85 (MethodDeclarationHeader1)


State 360

   87 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' . ReturnTypeList
   88                         | FUNC IDENTIFIER '(' TypeList ')' .

    FUNC         shift, and go to state 31
    INT8         shift, and go to state 32
    INT16        shift, and go to state 33
    INT32        shift, and go to state 34
    INT64        shift, and go to state 35
    UINT8        shift, and go to state 36
    UINT16       shift, and go to state 37
    UINT32       shift, and go to state 38
    UINT64       shift, and go to state 39
    FLOAT32      shift, and go to state 40
    FLOAT64      shift, and go to state 41
    BOOL         shift, and go to state 42
    STRING       shift, and go to state 43
    ROOT_OBJECT  shift, and go to state 44
    DIMS         shift, and go to state 45
    IDENTIFIER   shift, and go to state 46
    '('          shift, and go to state 173

    $default  reduce using rule 88 (MethodDeclarationHeader2)

    Type            go to state 175
    PrimitiveType   go to state 50
    ModuleType      go to state 51
    FunctionType    go to state 52
    ReturnTypeList  go to state 370


State 361

   89 MethodDeclarationHeader2: IDENTIFIER '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 89 (MethodDeclarationHeader2)


State 362

  117 if_statement: IF '(' basic_expression ')' CodeBlock .
  118             | IF '(' basic_expression ')' CodeBlock . ELSE else_statemnet

    ELSE  shift, and go to state 371

    $default  reduce using rule 117 (if_statement)


State 363

  122 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 122 (iteration_statemnet)


State 364

  123 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression . ')' ';'

    ')'  shift, and go to state 372


State 365

  124 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' CodeBlock

    ')'  shift, and go to state 373


State 366

  130 for_incr: expression_statement .

    $default  reduce using rule 130 (for_incr)


State 367

  128 for_expr: basic_expression ';' .

    $default  reduce using rule 128 (for_expr)


State 368

  121 switch_statement: SWITCH '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 121 (switch_statement)


State 369

   81 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList .

    $default  reduce using rule 81 (MethodDeclarationHeader1)


State 370

   87 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 87 (MethodDeclarationHeader2)


State 371

  118 if_statement: IF '(' basic_expression ')' CodeBlock ELSE . else_statemnet

    IF   shift, and go to state 236
    '{'  shift, and go to state 174

    CodeBlock       go to state 374
    if_statement    go to state 375
    else_statemnet  go to state 376


State 372

  123 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' . ';'

    ';'  shift, and go to state 377


State 373

  124 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . CodeBlock

    '{'  shift, and go to state 174

    CodeBlock  go to state 378


State 374

  120 else_statemnet: CodeBlock .

    $default  reduce using rule 120 (else_statemnet)


State 375

  119 else_statemnet: if_statement .

    $default  reduce using rule 119 (else_statemnet)


State 376

  118 if_statement: IF '(' basic_expression ')' CodeBlock ELSE else_statemnet .

    $default  reduce using rule 118 (if_statement)


State 377

  123 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' ';' .

    $default  reduce using rule 123 (iteration_statemnet)


State 378

  124 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' CodeBlock .

    $default  reduce using rule 124 (iteration_statemnet)
