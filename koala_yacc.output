Terminals unused in grammar

   ELLIPSIS
   NOT
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   PACKAGE
   NEW
   HEX
   OCT


Grammar

    0 $accept: Program $end

    1 ModuleFilePathName: IDENTIFIER
    2                   | ModuleFilePathName '.' IDENTIFIER

    3 TypeList: Type
    4         | TypeList ',' Type

    5 Type: PrimitiveType
    6     | ComplexType
    7     | DIMS PrimitiveType
    8     | DIMS ComplexType

    9 PrimitiveType: UINT8
   10              | UINT16
   11              | UINT32
   12              | UINT64
   13              | INT8
   14              | INT16
   15              | INT32
   16              | INT64
   17              | FLOAT32
   18              | FLOAT64
   19              | BOOL
   20              | STRING
   21              | ROOT_OBJECT

   22 ComplexType: ModuleType
   23            | FunctionType

   24 ModuleType: IDENTIFIER
   25           | IDENTIFIER '.' IDENTIFIER

   26 FunctionType: FUNC '(' ')'
   27             | FUNC '(' ')' ReturnTypeList
   28             | FUNC '(' TypeList ')'
   29             | FUNC '(' TypeList ')' ReturnTypeList

   30 ReturnTypeList: Type
   31               | '(' Type ')'
   32               | '(' ReturnTypeList ',' Type ')'

   33 Program: ImportDeclarations Declarations
   34        | ImportDeclarations
   35        | Declarations

   36 ImportDeclarations: ImportDeclaration
   37                   | ImportDeclarations ImportDeclaration

   38 ImportDeclaration: IMPORT ModuleFilePathName ';'
   39                  | IMPORT ModuleFilePathName AS IDENTIFIER ';'
   40                  | IMPORT ModuleFilePathName '.' '*' ';'

   41 Declarations: Declaration
   42             | Declarations Declaration

   43 Declaration: VariableDeclaration
   44            | TypeDeclaration
   45            | FunctionDeclaration

   46 VariableDeclaration: VAR VariableList Type ';'
   47                    | VAR VariableList '=' VariableInitializerList ';'
   48                    | VAR VariableList Type '=' VariableInitializerList ';'

   49 VariableList: IDENTIFIER
   50             | VariableList ',' IDENTIFIER

   51 VariableInitializerList: ComplexVariableInitializer
   52                        | VariableInitializerList ',' ComplexVariableInitializer

   53 ComplexVariableInitializer: basic_expression
   54                           | PrimitiveType '(' basic_expression ')'
   55                           | AnonymousFunctionDeclaration
   56                           | '{' ArrayInitializerList '}'
   57                           | DimExprs Type
   58                           | DimExprs Type '{' ArrayInitializerList '}'
   59                           | DimExprs Type '{' '}'

   60 ArrayInitializerList: ArrayInitializer
   61                     | ArrayInitializerList ',' ArrayInitializer

   62 DimExprs: DimExpr
   63         | DimExprs DimExpr

   64 DimExpr: '[' basic_expression ']'

   65 ArrayInitializer: basic_expression
   66                 | PrimitiveType '(' basic_expression ')'
   67                 | AnonymousFunctionDeclaration
   68                 | ArrayPositionInitializer
   69                 | '{' ArrayInitializerList '}'

   70 ArrayPositionInitializer: INTEGER ':' ArrayInitializer

   71 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' ';'
   72                | TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' ';'
   73                | TYPE IDENTIFIER Type ';'

   74 MemberDeclarations: MemberDeclaration
   75                   | MemberDeclarations MemberDeclaration

   76 MemberDeclaration: FieldDeclaration
   77                  | MethodDeclaration

   78 FieldDeclaration: VAR IDENTIFIER Type ';'

   79 MethodDeclaration: MethodDeclarationHeader1 CodeBlock

   80 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')'
   81                         | FUNC IDENTIFIER '(' ')' ReturnTypeList
   82                         | FUNC IDENTIFIER '(' ParameterList ')'
   83                         | FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList

   84 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')'
   85                         | FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList

   86 ParameterList: IDENTIFIER Type
   87              | ParameterList ',' IDENTIFIER Type

   88 CodeBlock: '{' local_variable_declaration_statements '}'
   89          | '{' '}'

   90 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration
   91                              | InterfaceFunctionDeclarations InterfaceFunctionDeclaration

   92 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';'
   93                             | MethodDeclarationHeader2 ';'

   94 FunctionDeclaration: FUNC IDENTIFIER '(' ')' CodeBlock
   95                    | FUNC IDENTIFIER '(' ')' ReturnTypeList CodeBlock
   96                    | FUNC IDENTIFIER '(' ParameterList ')' CodeBlock
   97                    | FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock

   98 AnonymousFunctionDeclaration: FUNC '(' ')' CodeBlock
   99                             | FUNC '(' ')' ReturnTypeList CodeBlock
  100                             | FUNC '(' ParameterList ')' CodeBlock
  101                             | FUNC '(' ParameterList ')' ReturnTypeList CodeBlock

  102 local_variable_declaration_statements: local_variable_declaration_statement
  103                                      | local_variable_declaration_statements local_variable_declaration_statement

  104 local_variable_declaration_statement: VariableDeclaration
  105                                     | statement

  106 statement: expression_statement ';'
  107          | selection_statement
  108          | iteration_statemnet
  109          | jump_statement

  110 selection_statement: if_statement
  111                    | switch_statement

  112 if_statement: IF '(' basic_expression ')' CodeBlock
  113             | IF '(' basic_expression ')' CodeBlock ELSE else_statemnet

  114 else_statemnet: if_statement
  115               | CodeBlock

  116 switch_statement: SWITCH '(' basic_expression ')' CodeBlock

  117 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock
  118                    | DO CodeBlock WHILE '(' basic_expression ')' ';'
  119                    | FOR '(' for_init for_expr for_incr ')' CodeBlock

  120 for_init: expression_statement ';'
  121         | VariableDeclaration
  122         | ';'

  123 for_expr: basic_expression ';'
  124         | ';'

  125 for_incr: expression_statement

  126 jump_statement: RETURN ';'
  127               | RETURN expression_list ';'

  128 primary_expression: IDENTIFIER
  129                   | constant
  130                   | TOKEN_THIS
  131                   | '(' basic_expression ')'

  132 constant: INTEGER
  133         | FLOAT
  134         | STRING_LITERAL
  135         | TOKEN_NIL
  136         | TOKEN_TRUE
  137         | TOKEN_FALSE

  138 postfix_expression: primary_expression
  139                   | postfix_expression INC
  140                   | postfix_expression DEC
  141                   | postfix_expression '.' IDENTIFIER
  142                   | postfix_expression '[' basic_expression ']'
  143                   | postfix_expression '(' expression_list ')'
  144                   | postfix_expression '(' ')'
  145                   | postfix_expression '(' ')' CodeBlock

  146 unary_expression: postfix_expression
  147                 | INC unary_expression
  148                 | DEC unary_expression
  149                 | '+' unary_expression
  150                 | '-' unary_expression
  151                 | '~' unary_expression
  152                 | '!' unary_expression

  153 multiplicative_expression: unary_expression
  154                          | multiplicative_expression '*' unary_expression
  155                          | multiplicative_expression '/' unary_expression
  156                          | multiplicative_expression '%' unary_expression

  157 additive_expression: multiplicative_expression
  158                    | additive_expression '+' multiplicative_expression
  159                    | additive_expression '-' multiplicative_expression

  160 shift_expression: additive_expression
  161                 | shift_expression SHIFT_LEFT additive_expression
  162                 | shift_expression SHIFT_RIGHT additive_expression

  163 relational_expression: shift_expression
  164                      | relational_expression '<' shift_expression
  165                      | relational_expression '>' shift_expression
  166                      | relational_expression LE shift_expression
  167                      | relational_expression GE shift_expression

  168 equality_expression: relational_expression
  169                    | equality_expression EQ relational_expression
  170                    | equality_expression NE relational_expression

  171 and_expression: equality_expression
  172               | and_expression '&' equality_expression

  173 exclusive_or_expression: and_expression
  174                        | exclusive_or_expression '^' and_expression

  175 inclusive_or_expression: exclusive_or_expression
  176                        | inclusive_or_expression '|' exclusive_or_expression

  177 logical_and_expression: inclusive_or_expression
  178                       | logical_and_expression AND inclusive_or_expression

  179 logical_or_expression: logical_and_expression
  180                      | logical_or_expression OR logical_and_expression

  181 basic_expression: logical_or_expression

  182 expression: basic_expression

  183 expression_list: expression
  184                | expression_list ',' expression

  185 postfix_expression_list: postfix_expression
  186                        | postfix_expression_list ',' postfix_expression

  187 assignment_expression: postfix_expression_list '=' VariableInitializerList
  188                      | postfix_expression compound_assignment_operator ComplexVariableInitializer
  189                      | postfix_expression VAR_ASSIGN ComplexVariableInitializer

  190 compound_assignment_operator: ADD_ASSIGN
  191                             | SUB_ASSIGN
  192                             | MUL_ASSIGN
  193                             | DIV_ASSIGN
  194                             | MOD_ASSIGN
  195                             | AND_ASSIGN
  196                             | OR_ASSIGN
  197                             | XOR_ASSIGN
  198                             | RIGHT_ASSIGN
  199                             | LEFT_ASSIGN

  200 expression_statement: basic_expression
  201                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 152
'%' (37) 156
'&' (38) 172
'(' (40) 26 27 28 29 31 32 54 66 80 81 82 83 84 85 94 95 96 97 98 99
    100 101 112 113 116 117 118 119 131 143 144 145
')' (41) 26 27 28 29 31 32 54 66 80 81 82 83 84 85 94 95 96 97 98 99
    100 101 112 113 116 117 118 119 131 143 144 145
'*' (42) 40 154
'+' (43) 149 158
',' (44) 4 32 50 52 61 87 184 186
'-' (45) 150 159
'.' (46) 2 25 40 141
'/' (47) 155
':' (58) 70
';' (59) 38 39 40 46 47 48 71 72 73 78 92 93 106 118 120 122 123 124
    126 127
'<' (60) 164
'=' (61) 47 48 187
'>' (62) 165
'[' (91) 64 142
']' (93) 64 142
'^' (94) 174
'{' (123) 56 58 59 69 71 72 88 89
'|' (124) 176
'}' (125) 56 58 59 69 71 72 88 89
'~' (126) 151
error (256)
ELLIPSIS (258)
VAR_ASSIGN (259) 189
ADD_ASSIGN (260) 190
SUB_ASSIGN (261) 191
MUL_ASSIGN (262) 192
DIV_ASSIGN (263) 193
MOD_ASSIGN (264) 194
AND_ASSIGN (265) 195
OR_ASSIGN (266) 196
XOR_ASSIGN (267) 197
RIGHT_ASSIGN (268) 198
LEFT_ASSIGN (269) 199
EQ (270) 169
NE (271) 170
GE (272) 167
LE (273) 166
AND (274) 178
OR (275) 180
NOT (276)
SHIFT_LEFT (277) 161
SHIFT_RIGHT (278) 162
INC (279) 139 147
DEC (280) 140 148
IF (281) 112 113
ELSE (282) 113
WHILE (283) 117 118
DO (284) 118
FOR (285) 119
IN (286)
SWITCH (287) 116
CASE (288)
BREAK (289)
CONTINUE (290)
DEFAULT (291)
VAR (292) 46 47 48 78
FUNC (293) 26 27 28 29 80 81 82 83 84 85 94 95 96 97 98 99 100 101
RETURN (294) 126 127
STRUCT (295) 71
INTERFACE (296) 72
TYPE (297) 71 72 73
CONST (298)
PACKAGE (299)
IMPORT (300) 38 39 40
AS (301) 39
NEW (302)
INT8 (303) 13
INT16 (304) 14
INT32 (305) 15
INT64 (306) 16
UINT8 (307) 9
UINT16 (308) 10
UINT32 (309) 11
UINT64 (310) 12
FLOAT32 (311) 17
FLOAT64 (312) 18
BOOL (313) 19
STRING (314) 20
ROOT_OBJECT (315) 21
DIMS (316) 7 8
TOKEN_THIS (317) 130
TOKEN_NIL (318) 135
TOKEN_TRUE (319) 136
TOKEN_FALSE (320) 137
INTEGER (321) 70 132
HEX (322)
OCT (323)
FLOAT (324) 133
STRING_LITERAL (325) 134
IDENTIFIER (326) 1 2 24 25 39 49 50 71 72 73 78 80 81 82 83 84 85 86
    87 94 95 96 97 128 141


Nonterminals, with rules where they appear

$accept (95)
    on left: 0
ModuleFilePathName (96)
    on left: 1 2, on right: 2 38 39 40
TypeList (97)
    on left: 3 4, on right: 4 28 29 84 85
Type (98)
    on left: 5 6 7 8, on right: 3 4 30 31 32 46 48 57 58 59 73 78 86
    87
PrimitiveType (99)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21, on right: 5 7 54
    66
ComplexType (100)
    on left: 22 23, on right: 6 8
ModuleType (101)
    on left: 24 25, on right: 22
FunctionType (102)
    on left: 26 27 28 29, on right: 23
ReturnTypeList (103)
    on left: 30 31 32, on right: 27 29 32 81 83 85 95 97 99 101
Program (104)
    on left: 33 34 35, on right: 0
ImportDeclarations (105)
    on left: 36 37, on right: 33 34 37
ImportDeclaration (106)
    on left: 38 39 40, on right: 36 37
Declarations (107)
    on left: 41 42, on right: 33 35 42
Declaration (108)
    on left: 43 44 45, on right: 41 42
VariableDeclaration (109)
    on left: 46 47 48, on right: 43 104 121
VariableList (110)
    on left: 49 50, on right: 46 47 48 50
VariableInitializerList (111)
    on left: 51 52, on right: 47 48 52 187
ComplexVariableInitializer (112)
    on left: 53 54 55 56 57 58 59, on right: 51 52 188 189
ArrayInitializerList (113)
    on left: 60 61, on right: 56 58 61 69
DimExprs (114)
    on left: 62 63, on right: 57 58 59 63
DimExpr (115)
    on left: 64, on right: 62 63
ArrayInitializer (116)
    on left: 65 66 67 68 69, on right: 60 61 70
ArrayPositionInitializer (117)
    on left: 70, on right: 68
TypeDeclaration (118)
    on left: 71 72 73, on right: 44
MemberDeclarations (119)
    on left: 74 75, on right: 71 75
MemberDeclaration (120)
    on left: 76 77, on right: 74 75
FieldDeclaration (121)
    on left: 78, on right: 76
MethodDeclaration (122)
    on left: 79, on right: 77
MethodDeclarationHeader1 (123)
    on left: 80 81 82 83, on right: 79 92
MethodDeclarationHeader2 (124)
    on left: 84 85, on right: 93
ParameterList (125)
    on left: 86 87, on right: 82 83 87 96 97 100 101
CodeBlock (126)
    on left: 88 89, on right: 79 94 95 96 97 98 99 100 101 112 113
    115 116 117 118 119 145
InterfaceFunctionDeclarations (127)
    on left: 90 91, on right: 72 91
InterfaceFunctionDeclaration (128)
    on left: 92 93, on right: 90 91
FunctionDeclaration (129)
    on left: 94 95 96 97, on right: 45
AnonymousFunctionDeclaration (130)
    on left: 98 99 100 101, on right: 55 67
local_variable_declaration_statements (131)
    on left: 102 103, on right: 88 103
local_variable_declaration_statement (132)
    on left: 104 105, on right: 102 103
statement (133)
    on left: 106 107 108 109, on right: 105
selection_statement (134)
    on left: 110 111, on right: 107
if_statement (135)
    on left: 112 113, on right: 110 114
else_statemnet (136)
    on left: 114 115, on right: 113
switch_statement (137)
    on left: 116, on right: 111
iteration_statemnet (138)
    on left: 117 118 119, on right: 108
for_init (139)
    on left: 120 121 122, on right: 119
for_expr (140)
    on left: 123 124, on right: 119
for_incr (141)
    on left: 125, on right: 119
jump_statement (142)
    on left: 126 127, on right: 109
primary_expression (143)
    on left: 128 129 130 131, on right: 138
constant (144)
    on left: 132 133 134 135 136 137, on right: 129
postfix_expression (145)
    on left: 138 139 140 141 142 143 144 145, on right: 139 140 141
    142 143 144 145 146 185 186 188 189
unary_expression (146)
    on left: 146 147 148 149 150 151 152, on right: 147 148 149 150
    151 152 153 154 155 156
multiplicative_expression (147)
    on left: 153 154 155 156, on right: 154 155 156 157 158 159
additive_expression (148)
    on left: 157 158 159, on right: 158 159 160 161 162
shift_expression (149)
    on left: 160 161 162, on right: 161 162 163 164 165 166 167
relational_expression (150)
    on left: 163 164 165 166 167, on right: 164 165 166 167 168 169
    170
equality_expression (151)
    on left: 168 169 170, on right: 169 170 171 172
and_expression (152)
    on left: 171 172, on right: 172 173 174
exclusive_or_expression (153)
    on left: 173 174, on right: 174 175 176
inclusive_or_expression (154)
    on left: 175 176, on right: 176 177 178
logical_and_expression (155)
    on left: 177 178, on right: 178 179 180
logical_or_expression (156)
    on left: 179 180, on right: 180 181
basic_expression (157)
    on left: 181, on right: 53 54 64 65 66 112 113 116 117 118 123
    131 142 182 200
expression (158)
    on left: 182, on right: 183 184
expression_list (159)
    on left: 183 184, on right: 127 143 184
postfix_expression_list (160)
    on left: 185 186, on right: 186 187
assignment_expression (161)
    on left: 187 188 189, on right: 201
compound_assignment_operator (162)
    on left: 190 191 192 193 194 195 196 197 198 199, on right: 188
expression_statement (163)
    on left: 200 201, on right: 106 120 125


State 0

    0 $accept: . Program $end

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 4

    Program              go to state 5
    ImportDeclarations   go to state 6
    ImportDeclaration    go to state 7
    Declarations         go to state 8
    Declaration          go to state 9
    VariableDeclaration  go to state 10
    TypeDeclaration      go to state 11
    FunctionDeclaration  go to state 12


State 1

   46 VariableDeclaration: VAR . VariableList Type ';'
   47                    | VAR . VariableList '=' VariableInitializerList ';'
   48                    | VAR . VariableList Type '=' VariableInitializerList ';'

    IDENTIFIER  shift, and go to state 13

    VariableList  go to state 14


State 2

   94 FunctionDeclaration: FUNC . IDENTIFIER '(' ')' CodeBlock
   95                    | FUNC . IDENTIFIER '(' ')' ReturnTypeList CodeBlock
   96                    | FUNC . IDENTIFIER '(' ParameterList ')' CodeBlock
   97                    | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock

    IDENTIFIER  shift, and go to state 15


State 3

   71 TypeDeclaration: TYPE . IDENTIFIER STRUCT '{' MemberDeclarations '}' ';'
   72                | TYPE . IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' ';'
   73                | TYPE . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 16


State 4

   38 ImportDeclaration: IMPORT . ModuleFilePathName ';'
   39                  | IMPORT . ModuleFilePathName AS IDENTIFIER ';'
   40                  | IMPORT . ModuleFilePathName '.' '*' ';'

    IDENTIFIER  shift, and go to state 17

    ModuleFilePathName  go to state 18


State 5

    0 $accept: Program . $end

    $end  shift, and go to state 19


State 6

   33 Program: ImportDeclarations . Declarations
   34        | ImportDeclarations .
   37 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 4

    $default  reduce using rule 34 (Program)

    ImportDeclaration    go to state 20
    Declarations         go to state 21
    Declaration          go to state 9
    VariableDeclaration  go to state 10
    TypeDeclaration      go to state 11
    FunctionDeclaration  go to state 12


State 7

   36 ImportDeclarations: ImportDeclaration .

    $default  reduce using rule 36 (ImportDeclarations)


State 8

   35 Program: Declarations .
   42 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 35 (Program)

    Declaration          go to state 22
    VariableDeclaration  go to state 10
    TypeDeclaration      go to state 11
    FunctionDeclaration  go to state 12


State 9

   41 Declarations: Declaration .

    $default  reduce using rule 41 (Declarations)


State 10

   43 Declaration: VariableDeclaration .

    $default  reduce using rule 43 (Declaration)


State 11

   44 Declaration: TypeDeclaration .

    $default  reduce using rule 44 (Declaration)


State 12

   45 Declaration: FunctionDeclaration .

    $default  reduce using rule 45 (Declaration)


State 13

   49 VariableList: IDENTIFIER .

    $default  reduce using rule 49 (VariableList)


State 14

   46 VariableDeclaration: VAR VariableList . Type ';'
   47                    | VAR VariableList . '=' VariableInitializerList ';'
   48                    | VAR VariableList . Type '=' VariableInitializerList ';'
   50 VariableList: VariableList . ',' IDENTIFIER

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    ','          shift, and go to state 39
    '='          shift, and go to state 40

    Type           go to state 41
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45


State 15

   94 FunctionDeclaration: FUNC IDENTIFIER . '(' ')' CodeBlock
   95                    | FUNC IDENTIFIER . '(' ')' ReturnTypeList CodeBlock
   96                    | FUNC IDENTIFIER . '(' ParameterList ')' CodeBlock
   97                    | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList CodeBlock

    '('  shift, and go to state 46


State 16

   71 TypeDeclaration: TYPE IDENTIFIER . STRUCT '{' MemberDeclarations '}' ';'
   72                | TYPE IDENTIFIER . INTERFACE '{' InterfaceFunctionDeclarations '}' ';'
   73                | TYPE IDENTIFIER . Type ';'

    FUNC         shift, and go to state 23
    STRUCT       shift, and go to state 47
    INTERFACE    shift, and go to state 48
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38

    Type           go to state 49
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45


State 17

    1 ModuleFilePathName: IDENTIFIER .

    $default  reduce using rule 1 (ModuleFilePathName)


State 18

    2 ModuleFilePathName: ModuleFilePathName . '.' IDENTIFIER
   38 ImportDeclaration: IMPORT ModuleFilePathName . ';'
   39                  | IMPORT ModuleFilePathName . AS IDENTIFIER ';'
   40                  | IMPORT ModuleFilePathName . '.' '*' ';'

    AS   shift, and go to state 50
    '.'  shift, and go to state 51
    ';'  shift, and go to state 52


State 19

    0 $accept: Program $end .

    $default  accept


State 20

   37 ImportDeclarations: ImportDeclarations ImportDeclaration .

    $default  reduce using rule 37 (ImportDeclarations)


State 21

   33 Program: ImportDeclarations Declarations .
   42 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 33 (Program)

    Declaration          go to state 22
    VariableDeclaration  go to state 10
    TypeDeclaration      go to state 11
    FunctionDeclaration  go to state 12


State 22

   42 Declarations: Declarations Declaration .

    $default  reduce using rule 42 (Declarations)


State 23

   26 FunctionType: FUNC . '(' ')'
   27             | FUNC . '(' ')' ReturnTypeList
   28             | FUNC . '(' TypeList ')'
   29             | FUNC . '(' TypeList ')' ReturnTypeList

    '('  shift, and go to state 53


State 24

   13 PrimitiveType: INT8 .

    $default  reduce using rule 13 (PrimitiveType)


State 25

   14 PrimitiveType: INT16 .

    $default  reduce using rule 14 (PrimitiveType)


State 26

   15 PrimitiveType: INT32 .

    $default  reduce using rule 15 (PrimitiveType)


State 27

   16 PrimitiveType: INT64 .

    $default  reduce using rule 16 (PrimitiveType)


State 28

    9 PrimitiveType: UINT8 .

    $default  reduce using rule 9 (PrimitiveType)


State 29

   10 PrimitiveType: UINT16 .

    $default  reduce using rule 10 (PrimitiveType)


State 30

   11 PrimitiveType: UINT32 .

    $default  reduce using rule 11 (PrimitiveType)


State 31

   12 PrimitiveType: UINT64 .

    $default  reduce using rule 12 (PrimitiveType)


State 32

   17 PrimitiveType: FLOAT32 .

    $default  reduce using rule 17 (PrimitiveType)


State 33

   18 PrimitiveType: FLOAT64 .

    $default  reduce using rule 18 (PrimitiveType)


State 34

   19 PrimitiveType: BOOL .

    $default  reduce using rule 19 (PrimitiveType)


State 35

   20 PrimitiveType: STRING .

    $default  reduce using rule 20 (PrimitiveType)


State 36

   21 PrimitiveType: ROOT_OBJECT .

    $default  reduce using rule 21 (PrimitiveType)


State 37

    7 Type: DIMS . PrimitiveType
    8     | DIMS . ComplexType

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    IDENTIFIER   shift, and go to state 38

    PrimitiveType  go to state 54
    ComplexType    go to state 55
    ModuleType     go to state 44
    FunctionType   go to state 45


State 38

   24 ModuleType: IDENTIFIER .
   25           | IDENTIFIER . '.' IDENTIFIER

    '.'  shift, and go to state 56

    $default  reduce using rule 24 (ModuleType)


State 39

   50 VariableList: VariableList ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 40

   47 VariableDeclaration: VAR VariableList '=' . VariableInitializerList ';'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 70
    '['             shift, and go to state 71
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 76
    VariableInitializerList       go to state 77
    ComplexVariableInitializer    go to state 78
    DimExprs                      go to state 79
    DimExpr                       go to state 80
    AnonymousFunctionDeclaration  go to state 81
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 96


State 41

   46 VariableDeclaration: VAR VariableList Type . ';'
   48                    | VAR VariableList Type . '=' VariableInitializerList ';'

    ';'  shift, and go to state 97
    '='  shift, and go to state 98


State 42

    5 Type: PrimitiveType .

    $default  reduce using rule 5 (Type)


State 43

    6 Type: ComplexType .

    $default  reduce using rule 6 (Type)


State 44

   22 ComplexType: ModuleType .

    $default  reduce using rule 22 (ComplexType)


State 45

   23 ComplexType: FunctionType .

    $default  reduce using rule 23 (ComplexType)


State 46

   94 FunctionDeclaration: FUNC IDENTIFIER '(' . ')' CodeBlock
   95                    | FUNC IDENTIFIER '(' . ')' ReturnTypeList CodeBlock
   96                    | FUNC IDENTIFIER '(' . ParameterList ')' CodeBlock
   97                    | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList CodeBlock

    IDENTIFIER  shift, and go to state 99
    ')'         shift, and go to state 100

    ParameterList  go to state 101


State 47

   71 TypeDeclaration: TYPE IDENTIFIER STRUCT . '{' MemberDeclarations '}' ';'

    '{'  shift, and go to state 102


State 48

   72 TypeDeclaration: TYPE IDENTIFIER INTERFACE . '{' InterfaceFunctionDeclarations '}' ';'

    '{'  shift, and go to state 103


State 49

   73 TypeDeclaration: TYPE IDENTIFIER Type . ';'

    ';'  shift, and go to state 104


State 50

   39 ImportDeclaration: IMPORT ModuleFilePathName AS . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 105


State 51

    2 ModuleFilePathName: ModuleFilePathName '.' . IDENTIFIER
   40 ImportDeclaration: IMPORT ModuleFilePathName '.' . '*' ';'

    IDENTIFIER  shift, and go to state 106
    '*'         shift, and go to state 107


State 52

   38 ImportDeclaration: IMPORT ModuleFilePathName ';' .

    $default  reduce using rule 38 (ImportDeclaration)


State 53

   26 FunctionType: FUNC '(' . ')'
   27             | FUNC '(' . ')' ReturnTypeList
   28             | FUNC '(' . TypeList ')'
   29             | FUNC '(' . TypeList ')' ReturnTypeList

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    ')'          shift, and go to state 108

    TypeList       go to state 109
    Type           go to state 110
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45


State 54

    7 Type: DIMS PrimitiveType .

    $default  reduce using rule 7 (Type)


State 55

    8 Type: DIMS ComplexType .

    $default  reduce using rule 8 (Type)


State 56

   25 ModuleType: IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 111


State 57

   50 VariableList: VariableList ',' IDENTIFIER .

    $default  reduce using rule 50 (VariableList)


State 58

  147 unary_expression: INC . unary_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression  go to state 82
    constant            go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 112


State 59

  148 unary_expression: DEC . unary_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression  go to state 82
    constant            go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 113


State 60

   98 AnonymousFunctionDeclaration: FUNC . '(' ')' CodeBlock
   99                             | FUNC . '(' ')' ReturnTypeList CodeBlock
  100                             | FUNC . '(' ParameterList ')' CodeBlock
  101                             | FUNC . '(' ParameterList ')' ReturnTypeList CodeBlock

    '('  shift, and go to state 114


State 61

  130 primary_expression: TOKEN_THIS .

    $default  reduce using rule 130 (primary_expression)


State 62

  135 constant: TOKEN_NIL .

    $default  reduce using rule 135 (constant)


State 63

  136 constant: TOKEN_TRUE .

    $default  reduce using rule 136 (constant)


State 64

  137 constant: TOKEN_FALSE .

    $default  reduce using rule 137 (constant)


State 65

  132 constant: INTEGER .

    $default  reduce using rule 132 (constant)


State 66

  133 constant: FLOAT .

    $default  reduce using rule 133 (constant)


State 67

  134 constant: STRING_LITERAL .

    $default  reduce using rule 134 (constant)


State 68

  128 primary_expression: IDENTIFIER .

    $default  reduce using rule 128 (primary_expression)


State 69

  131 primary_expression: '(' . basic_expression ')'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 115


State 70

   56 ComplexVariableInitializer: '{' . ArrayInitializerList '}'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 116
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 117
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 118
    ArrayInitializerList          go to state 119
    ArrayInitializer              go to state 120
    ArrayPositionInitializer      go to state 121
    AnonymousFunctionDeclaration  go to state 122
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 123


State 71

   64 DimExpr: '[' . basic_expression ']'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 124


State 72

  149 unary_expression: '+' . unary_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression  go to state 82
    constant            go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 125


State 73

  150 unary_expression: '-' . unary_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression  go to state 82
    constant            go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 126


State 74

  151 unary_expression: '~' . unary_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression  go to state 82
    constant            go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 127


State 75

  152 unary_expression: '!' . unary_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression  go to state 82
    constant            go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 128


State 76

   54 ComplexVariableInitializer: PrimitiveType . '(' basic_expression ')'

    '('  shift, and go to state 129


State 77

   47 VariableDeclaration: VAR VariableList '=' VariableInitializerList . ';'
   52 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer

    ','  shift, and go to state 130
    ';'  shift, and go to state 131


State 78

   51 VariableInitializerList: ComplexVariableInitializer .

    $default  reduce using rule 51 (VariableInitializerList)


State 79

   57 ComplexVariableInitializer: DimExprs . Type
   58                           | DimExprs . Type '{' ArrayInitializerList '}'
   59                           | DimExprs . Type '{' '}'
   63 DimExprs: DimExprs . DimExpr

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '['          shift, and go to state 71

    Type           go to state 132
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45
    DimExpr        go to state 133


State 80

   62 DimExprs: DimExpr .

    $default  reduce using rule 62 (DimExprs)


State 81

   55 ComplexVariableInitializer: AnonymousFunctionDeclaration .

    $default  reduce using rule 55 (ComplexVariableInitializer)


State 82

  138 postfix_expression: primary_expression .

    $default  reduce using rule 138 (postfix_expression)


State 83

  129 primary_expression: constant .

    $default  reduce using rule 129 (primary_expression)


State 84

  139 postfix_expression: postfix_expression . INC
  140                   | postfix_expression . DEC
  141                   | postfix_expression . '.' IDENTIFIER
  142                   | postfix_expression . '[' basic_expression ']'
  143                   | postfix_expression . '(' expression_list ')'
  144                   | postfix_expression . '(' ')'
  145                   | postfix_expression . '(' ')' CodeBlock
  146 unary_expression: postfix_expression .

    INC  shift, and go to state 134
    DEC  shift, and go to state 135
    '.'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 146 (unary_expression)


State 85

  153 multiplicative_expression: unary_expression .

    $default  reduce using rule 153 (multiplicative_expression)


State 86

  154 multiplicative_expression: multiplicative_expression . '*' unary_expression
  155                          | multiplicative_expression . '/' unary_expression
  156                          | multiplicative_expression . '%' unary_expression
  157 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 139
    '/'  shift, and go to state 140
    '%'  shift, and go to state 141

    $default  reduce using rule 157 (additive_expression)


State 87

  158 additive_expression: additive_expression . '+' multiplicative_expression
  159                    | additive_expression . '-' multiplicative_expression
  160 shift_expression: additive_expression .

    '+'  shift, and go to state 142
    '-'  shift, and go to state 143

    $default  reduce using rule 160 (shift_expression)


State 88

  161 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  162                 | shift_expression . SHIFT_RIGHT additive_expression
  163 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 144
    SHIFT_RIGHT  shift, and go to state 145

    $default  reduce using rule 163 (relational_expression)


State 89

  164 relational_expression: relational_expression . '<' shift_expression
  165                      | relational_expression . '>' shift_expression
  166                      | relational_expression . LE shift_expression
  167                      | relational_expression . GE shift_expression
  168 equality_expression: relational_expression .

    GE   shift, and go to state 146
    LE   shift, and go to state 147
    '<'  shift, and go to state 148
    '>'  shift, and go to state 149

    $default  reduce using rule 168 (equality_expression)


State 90

  169 equality_expression: equality_expression . EQ relational_expression
  170                    | equality_expression . NE relational_expression
  171 and_expression: equality_expression .

    EQ  shift, and go to state 150
    NE  shift, and go to state 151

    $default  reduce using rule 171 (and_expression)


State 91

  172 and_expression: and_expression . '&' equality_expression
  173 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 152

    $default  reduce using rule 173 (exclusive_or_expression)


State 92

  174 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  175 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 153

    $default  reduce using rule 175 (inclusive_or_expression)


State 93

  176 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  177 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 154

    $default  reduce using rule 177 (logical_and_expression)


State 94

  178 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  179 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 155

    $default  reduce using rule 179 (logical_or_expression)


State 95

  180 logical_or_expression: logical_or_expression . OR logical_and_expression
  181 basic_expression: logical_or_expression .

    OR  shift, and go to state 156

    $default  reduce using rule 181 (basic_expression)


State 96

   53 ComplexVariableInitializer: basic_expression .

    $default  reduce using rule 53 (ComplexVariableInitializer)


State 97

   46 VariableDeclaration: VAR VariableList Type ';' .

    $default  reduce using rule 46 (VariableDeclaration)


State 98

   48 VariableDeclaration: VAR VariableList Type '=' . VariableInitializerList ';'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 70
    '['             shift, and go to state 71
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 76
    VariableInitializerList       go to state 157
    ComplexVariableInitializer    go to state 78
    DimExprs                      go to state 79
    DimExpr                       go to state 80
    AnonymousFunctionDeclaration  go to state 81
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 96


State 99

   86 ParameterList: IDENTIFIER . Type

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38

    Type           go to state 158
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45


State 100

   94 FunctionDeclaration: FUNC IDENTIFIER '(' ')' . CodeBlock
   95                    | FUNC IDENTIFIER '(' ')' . ReturnTypeList CodeBlock

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '('          shift, and go to state 159
    '{'          shift, and go to state 160

    Type            go to state 161
    PrimitiveType   go to state 42
    ComplexType     go to state 43
    ModuleType      go to state 44
    FunctionType    go to state 45
    ReturnTypeList  go to state 162
    CodeBlock       go to state 163


State 101

   87 ParameterList: ParameterList . ',' IDENTIFIER Type
   96 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList . ')' CodeBlock
   97                    | FUNC IDENTIFIER '(' ParameterList . ')' ReturnTypeList CodeBlock

    ','  shift, and go to state 164
    ')'  shift, and go to state 165


State 102

   71 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' . MemberDeclarations '}' ';'

    VAR   shift, and go to state 166
    FUNC  shift, and go to state 167

    MemberDeclarations        go to state 168
    MemberDeclaration         go to state 169
    FieldDeclaration          go to state 170
    MethodDeclaration         go to state 171
    MethodDeclarationHeader1  go to state 172


State 103

   72 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' . InterfaceFunctionDeclarations '}' ';'

    FUNC  shift, and go to state 173

    MethodDeclarationHeader1       go to state 174
    MethodDeclarationHeader2       go to state 175
    InterfaceFunctionDeclarations  go to state 176
    InterfaceFunctionDeclaration   go to state 177


State 104

   73 TypeDeclaration: TYPE IDENTIFIER Type ';' .

    $default  reduce using rule 73 (TypeDeclaration)


State 105

   39 ImportDeclaration: IMPORT ModuleFilePathName AS IDENTIFIER . ';'

    ';'  shift, and go to state 178


State 106

    2 ModuleFilePathName: ModuleFilePathName '.' IDENTIFIER .

    $default  reduce using rule 2 (ModuleFilePathName)


State 107

   40 ImportDeclaration: IMPORT ModuleFilePathName '.' '*' . ';'

    ';'  shift, and go to state 179


State 108

   26 FunctionType: FUNC '(' ')' .
   27             | FUNC '(' ')' . ReturnTypeList

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '('          shift, and go to state 159

    $default  reduce using rule 26 (FunctionType)

    Type            go to state 161
    PrimitiveType   go to state 42
    ComplexType     go to state 43
    ModuleType      go to state 44
    FunctionType    go to state 45
    ReturnTypeList  go to state 180


State 109

    4 TypeList: TypeList . ',' Type
   28 FunctionType: FUNC '(' TypeList . ')'
   29             | FUNC '(' TypeList . ')' ReturnTypeList

    ','  shift, and go to state 181
    ')'  shift, and go to state 182


State 110

    3 TypeList: Type .

    $default  reduce using rule 3 (TypeList)


State 111

   25 ModuleType: IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 25 (ModuleType)


State 112

  147 unary_expression: INC unary_expression .

    $default  reduce using rule 147 (unary_expression)


State 113

  148 unary_expression: DEC unary_expression .

    $default  reduce using rule 148 (unary_expression)


State 114

   98 AnonymousFunctionDeclaration: FUNC '(' . ')' CodeBlock
   99                             | FUNC '(' . ')' ReturnTypeList CodeBlock
  100                             | FUNC '(' . ParameterList ')' CodeBlock
  101                             | FUNC '(' . ParameterList ')' ReturnTypeList CodeBlock

    IDENTIFIER  shift, and go to state 99
    ')'         shift, and go to state 183

    ParameterList  go to state 184


State 115

  131 primary_expression: '(' basic_expression . ')'

    ')'  shift, and go to state 185


State 116

   70 ArrayPositionInitializer: INTEGER . ':' ArrayInitializer
  132 constant: INTEGER .

    ':'  shift, and go to state 186

    $default  reduce using rule 132 (constant)


State 117

   69 ArrayInitializer: '{' . ArrayInitializerList '}'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 116
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 117
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 118
    ArrayInitializerList          go to state 187
    ArrayInitializer              go to state 120
    ArrayPositionInitializer      go to state 121
    AnonymousFunctionDeclaration  go to state 122
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 123


State 118

   66 ArrayInitializer: PrimitiveType . '(' basic_expression ')'

    '('  shift, and go to state 188


State 119

   56 ComplexVariableInitializer: '{' ArrayInitializerList . '}'
   61 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 189
    '}'  shift, and go to state 190


State 120

   60 ArrayInitializerList: ArrayInitializer .

    $default  reduce using rule 60 (ArrayInitializerList)


State 121

   68 ArrayInitializer: ArrayPositionInitializer .

    $default  reduce using rule 68 (ArrayInitializer)


State 122

   67 ArrayInitializer: AnonymousFunctionDeclaration .

    $default  reduce using rule 67 (ArrayInitializer)


State 123

   65 ArrayInitializer: basic_expression .

    $default  reduce using rule 65 (ArrayInitializer)


State 124

   64 DimExpr: '[' basic_expression . ']'

    ']'  shift, and go to state 191


State 125

  149 unary_expression: '+' unary_expression .

    $default  reduce using rule 149 (unary_expression)


State 126

  150 unary_expression: '-' unary_expression .

    $default  reduce using rule 150 (unary_expression)


State 127

  151 unary_expression: '~' unary_expression .

    $default  reduce using rule 151 (unary_expression)


State 128

  152 unary_expression: '!' unary_expression .

    $default  reduce using rule 152 (unary_expression)


State 129

   54 ComplexVariableInitializer: PrimitiveType '(' . basic_expression ')'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 192


State 130

   52 VariableInitializerList: VariableInitializerList ',' . ComplexVariableInitializer

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 70
    '['             shift, and go to state 71
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 76
    ComplexVariableInitializer    go to state 193
    DimExprs                      go to state 79
    DimExpr                       go to state 80
    AnonymousFunctionDeclaration  go to state 81
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 96


State 131

   47 VariableDeclaration: VAR VariableList '=' VariableInitializerList ';' .

    $default  reduce using rule 47 (VariableDeclaration)


State 132

   57 ComplexVariableInitializer: DimExprs Type .
   58                           | DimExprs Type . '{' ArrayInitializerList '}'
   59                           | DimExprs Type . '{' '}'

    '{'  shift, and go to state 194

    $default  reduce using rule 57 (ComplexVariableInitializer)


State 133

   63 DimExprs: DimExprs DimExpr .

    $default  reduce using rule 63 (DimExprs)


State 134

  139 postfix_expression: postfix_expression INC .

    $default  reduce using rule 139 (postfix_expression)


State 135

  140 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 140 (postfix_expression)


State 136

  141 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 195


State 137

  143 postfix_expression: postfix_expression '(' . expression_list ')'
  144                   | postfix_expression '(' . ')'
  145                   | postfix_expression '(' . ')' CodeBlock

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    ')'             shift, and go to state 196
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 197
    expression                 go to state 198
    expression_list            go to state 199


State 138

  142 postfix_expression: postfix_expression '[' . basic_expression ']'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 200


State 139

  154 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression  go to state 82
    constant            go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 201


State 140

  155 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression  go to state 82
    constant            go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 202


State 141

  156 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression  go to state 82
    constant            go to state 83
    postfix_expression  go to state 84
    unary_expression    go to state 203


State 142

  158 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 204


State 143

  159 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 205


State 144

  161 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 206


State 145

  162 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 207


State 146

  167 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 208


State 147

  166 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 209


State 148

  164 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 210


State 149

  165 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 211


State 150

  169 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 212


State 151

  170 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 213


State 152

  172 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 214


State 153

  174 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 215


State 154

  176 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 216


State 155

  178 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 217


State 156

  180 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 218


State 157

   48 VariableDeclaration: VAR VariableList Type '=' VariableInitializerList . ';'
   52 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer

    ','  shift, and go to state 130
    ';'  shift, and go to state 219


State 158

   86 ParameterList: IDENTIFIER Type .

    $default  reduce using rule 86 (ParameterList)


State 159

   31 ReturnTypeList: '(' . Type ')'
   32               | '(' . ReturnTypeList ',' Type ')'

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '('          shift, and go to state 159

    Type            go to state 220
    PrimitiveType   go to state 42
    ComplexType     go to state 43
    ModuleType      go to state 44
    FunctionType    go to state 45
    ReturnTypeList  go to state 221


State 160

   88 CodeBlock: '{' . local_variable_declaration_statements '}'
   89          | '{' . '}'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    IF              shift, and go to state 222
    WHILE           shift, and go to state 223
    DO              shift, and go to state 224
    FOR             shift, and go to state 225
    SWITCH          shift, and go to state 226
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 227
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '}'             shift, and go to state 228
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    VariableDeclaration                    go to state 229
    local_variable_declaration_statements  go to state 230
    local_variable_declaration_statement   go to state 231
    statement                              go to state 232
    selection_statement                    go to state 233
    if_statement                           go to state 234
    switch_statement                       go to state 235
    iteration_statemnet                    go to state 236
    jump_statement                         go to state 237
    primary_expression                     go to state 82
    constant                               go to state 83
    postfix_expression                     go to state 238
    unary_expression                       go to state 85
    multiplicative_expression              go to state 86
    additive_expression                    go to state 87
    shift_expression                       go to state 88
    relational_expression                  go to state 89
    equality_expression                    go to state 90
    and_expression                         go to state 91
    exclusive_or_expression                go to state 92
    inclusive_or_expression                go to state 93
    logical_and_expression                 go to state 94
    logical_or_expression                  go to state 95
    basic_expression                       go to state 239
    postfix_expression_list                go to state 240
    assignment_expression                  go to state 241
    expression_statement                   go to state 242


State 161

   30 ReturnTypeList: Type .

    $default  reduce using rule 30 (ReturnTypeList)


State 162

   95 FunctionDeclaration: FUNC IDENTIFIER '(' ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 160

    CodeBlock  go to state 243


State 163

   94 FunctionDeclaration: FUNC IDENTIFIER '(' ')' CodeBlock .

    $default  reduce using rule 94 (FunctionDeclaration)


State 164

   87 ParameterList: ParameterList ',' . IDENTIFIER Type

    IDENTIFIER  shift, and go to state 244


State 165

   96 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' . CodeBlock
   97                    | FUNC IDENTIFIER '(' ParameterList ')' . ReturnTypeList CodeBlock

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '('          shift, and go to state 159
    '{'          shift, and go to state 160

    Type            go to state 161
    PrimitiveType   go to state 42
    ComplexType     go to state 43
    ModuleType      go to state 44
    FunctionType    go to state 45
    ReturnTypeList  go to state 245
    CodeBlock       go to state 246


State 166

   78 FieldDeclaration: VAR . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 247


State 167

   80 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')'
   81                         | FUNC . IDENTIFIER '(' ')' ReturnTypeList
   82                         | FUNC . IDENTIFIER '(' ParameterList ')'
   83                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 248


State 168

   71 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations . '}' ';'
   75 MemberDeclarations: MemberDeclarations . MemberDeclaration

    VAR   shift, and go to state 166
    FUNC  shift, and go to state 167
    '}'   shift, and go to state 249

    MemberDeclaration         go to state 250
    FieldDeclaration          go to state 170
    MethodDeclaration         go to state 171
    MethodDeclarationHeader1  go to state 172


State 169

   74 MemberDeclarations: MemberDeclaration .

    $default  reduce using rule 74 (MemberDeclarations)


State 170

   76 MemberDeclaration: FieldDeclaration .

    $default  reduce using rule 76 (MemberDeclaration)


State 171

   77 MemberDeclaration: MethodDeclaration .

    $default  reduce using rule 77 (MemberDeclaration)


State 172

   79 MethodDeclaration: MethodDeclarationHeader1 . CodeBlock

    '{'  shift, and go to state 160

    CodeBlock  go to state 251


State 173

   80 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')'
   81                         | FUNC . IDENTIFIER '(' ')' ReturnTypeList
   82                         | FUNC . IDENTIFIER '(' ParameterList ')'
   83                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList
   84 MethodDeclarationHeader2: FUNC . IDENTIFIER '(' TypeList ')'
   85                         | FUNC . IDENTIFIER '(' TypeList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 252


State 174

   92 InterfaceFunctionDeclaration: MethodDeclarationHeader1 . ';'

    ';'  shift, and go to state 253


State 175

   93 InterfaceFunctionDeclaration: MethodDeclarationHeader2 . ';'

    ';'  shift, and go to state 254


State 176

   72 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations . '}' ';'
   91 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations . InterfaceFunctionDeclaration

    FUNC  shift, and go to state 173
    '}'   shift, and go to state 255

    MethodDeclarationHeader1      go to state 174
    MethodDeclarationHeader2      go to state 175
    InterfaceFunctionDeclaration  go to state 256


State 177

   90 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration .

    $default  reduce using rule 90 (InterfaceFunctionDeclarations)


State 178

   39 ImportDeclaration: IMPORT ModuleFilePathName AS IDENTIFIER ';' .

    $default  reduce using rule 39 (ImportDeclaration)


State 179

   40 ImportDeclaration: IMPORT ModuleFilePathName '.' '*' ';' .

    $default  reduce using rule 40 (ImportDeclaration)


State 180

   27 FunctionType: FUNC '(' ')' ReturnTypeList .

    $default  reduce using rule 27 (FunctionType)


State 181

    4 TypeList: TypeList ',' . Type

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38

    Type           go to state 257
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45


State 182

   28 FunctionType: FUNC '(' TypeList ')' .
   29             | FUNC '(' TypeList ')' . ReturnTypeList

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '('          shift, and go to state 159

    $default  reduce using rule 28 (FunctionType)

    Type            go to state 161
    PrimitiveType   go to state 42
    ComplexType     go to state 43
    ModuleType      go to state 44
    FunctionType    go to state 45
    ReturnTypeList  go to state 258


State 183

   98 AnonymousFunctionDeclaration: FUNC '(' ')' . CodeBlock
   99                             | FUNC '(' ')' . ReturnTypeList CodeBlock

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '('          shift, and go to state 159
    '{'          shift, and go to state 160

    Type            go to state 161
    PrimitiveType   go to state 42
    ComplexType     go to state 43
    ModuleType      go to state 44
    FunctionType    go to state 45
    ReturnTypeList  go to state 259
    CodeBlock       go to state 260


State 184

   87 ParameterList: ParameterList . ',' IDENTIFIER Type
  100 AnonymousFunctionDeclaration: FUNC '(' ParameterList . ')' CodeBlock
  101                             | FUNC '(' ParameterList . ')' ReturnTypeList CodeBlock

    ','  shift, and go to state 164
    ')'  shift, and go to state 261


State 185

  131 primary_expression: '(' basic_expression ')' .

    $default  reduce using rule 131 (primary_expression)


State 186

   70 ArrayPositionInitializer: INTEGER ':' . ArrayInitializer

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 116
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 117
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 118
    ArrayInitializer              go to state 262
    ArrayPositionInitializer      go to state 121
    AnonymousFunctionDeclaration  go to state 122
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 123


State 187

   61 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
   69 ArrayInitializer: '{' ArrayInitializerList . '}'

    ','  shift, and go to state 189
    '}'  shift, and go to state 263


State 188

   66 ArrayInitializer: PrimitiveType '(' . basic_expression ')'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 264


State 189

   61 ArrayInitializerList: ArrayInitializerList ',' . ArrayInitializer

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 116
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 117
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 118
    ArrayInitializer              go to state 265
    ArrayPositionInitializer      go to state 121
    AnonymousFunctionDeclaration  go to state 122
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 123


State 190

   56 ComplexVariableInitializer: '{' ArrayInitializerList '}' .

    $default  reduce using rule 56 (ComplexVariableInitializer)


State 191

   64 DimExpr: '[' basic_expression ']' .

    $default  reduce using rule 64 (DimExpr)


State 192

   54 ComplexVariableInitializer: PrimitiveType '(' basic_expression . ')'

    ')'  shift, and go to state 266


State 193

   52 VariableInitializerList: VariableInitializerList ',' ComplexVariableInitializer .

    $default  reduce using rule 52 (VariableInitializerList)


State 194

   58 ComplexVariableInitializer: DimExprs Type '{' . ArrayInitializerList '}'
   59                           | DimExprs Type '{' . '}'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 116
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 117
    '}'             shift, and go to state 267
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 118
    ArrayInitializerList          go to state 268
    ArrayInitializer              go to state 120
    ArrayPositionInitializer      go to state 121
    AnonymousFunctionDeclaration  go to state 122
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 123


State 195

  141 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 141 (postfix_expression)


State 196

  144 postfix_expression: postfix_expression '(' ')' .
  145                   | postfix_expression '(' ')' . CodeBlock

    '{'  shift, and go to state 160

    $default  reduce using rule 144 (postfix_expression)

    CodeBlock  go to state 269


State 197

  182 expression: basic_expression .

    $default  reduce using rule 182 (expression)


State 198

  183 expression_list: expression .

    $default  reduce using rule 183 (expression_list)


State 199

  143 postfix_expression: postfix_expression '(' expression_list . ')'
  184 expression_list: expression_list . ',' expression

    ','  shift, and go to state 270
    ')'  shift, and go to state 271


State 200

  142 postfix_expression: postfix_expression '[' basic_expression . ']'

    ']'  shift, and go to state 272


State 201

  154 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 154 (multiplicative_expression)


State 202

  155 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 155 (multiplicative_expression)


State 203

  156 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 156 (multiplicative_expression)


State 204

  154 multiplicative_expression: multiplicative_expression . '*' unary_expression
  155                          | multiplicative_expression . '/' unary_expression
  156                          | multiplicative_expression . '%' unary_expression
  158 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 139
    '/'  shift, and go to state 140
    '%'  shift, and go to state 141

    $default  reduce using rule 158 (additive_expression)


State 205

  154 multiplicative_expression: multiplicative_expression . '*' unary_expression
  155                          | multiplicative_expression . '/' unary_expression
  156                          | multiplicative_expression . '%' unary_expression
  159 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 139
    '/'  shift, and go to state 140
    '%'  shift, and go to state 141

    $default  reduce using rule 159 (additive_expression)


State 206

  158 additive_expression: additive_expression . '+' multiplicative_expression
  159                    | additive_expression . '-' multiplicative_expression
  161 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 142
    '-'  shift, and go to state 143

    $default  reduce using rule 161 (shift_expression)


State 207

  158 additive_expression: additive_expression . '+' multiplicative_expression
  159                    | additive_expression . '-' multiplicative_expression
  162 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 142
    '-'  shift, and go to state 143

    $default  reduce using rule 162 (shift_expression)


State 208

  161 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  162                 | shift_expression . SHIFT_RIGHT additive_expression
  167 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 144
    SHIFT_RIGHT  shift, and go to state 145

    $default  reduce using rule 167 (relational_expression)


State 209

  161 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  162                 | shift_expression . SHIFT_RIGHT additive_expression
  166 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 144
    SHIFT_RIGHT  shift, and go to state 145

    $default  reduce using rule 166 (relational_expression)


State 210

  161 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  162                 | shift_expression . SHIFT_RIGHT additive_expression
  164 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 144
    SHIFT_RIGHT  shift, and go to state 145

    $default  reduce using rule 164 (relational_expression)


State 211

  161 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  162                 | shift_expression . SHIFT_RIGHT additive_expression
  165 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 144
    SHIFT_RIGHT  shift, and go to state 145

    $default  reduce using rule 165 (relational_expression)


State 212

  164 relational_expression: relational_expression . '<' shift_expression
  165                      | relational_expression . '>' shift_expression
  166                      | relational_expression . LE shift_expression
  167                      | relational_expression . GE shift_expression
  169 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 146
    LE   shift, and go to state 147
    '<'  shift, and go to state 148
    '>'  shift, and go to state 149

    $default  reduce using rule 169 (equality_expression)


State 213

  164 relational_expression: relational_expression . '<' shift_expression
  165                      | relational_expression . '>' shift_expression
  166                      | relational_expression . LE shift_expression
  167                      | relational_expression . GE shift_expression
  170 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 146
    LE   shift, and go to state 147
    '<'  shift, and go to state 148
    '>'  shift, and go to state 149

    $default  reduce using rule 170 (equality_expression)


State 214

  169 equality_expression: equality_expression . EQ relational_expression
  170                    | equality_expression . NE relational_expression
  172 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 150
    NE  shift, and go to state 151

    $default  reduce using rule 172 (and_expression)


State 215

  172 and_expression: and_expression . '&' equality_expression
  174 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 152

    $default  reduce using rule 174 (exclusive_or_expression)


State 216

  174 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  176 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 153

    $default  reduce using rule 176 (inclusive_or_expression)


State 217

  176 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  178 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 154

    $default  reduce using rule 178 (logical_and_expression)


State 218

  178 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  180 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 155

    $default  reduce using rule 180 (logical_or_expression)


State 219

   48 VariableDeclaration: VAR VariableList Type '=' VariableInitializerList ';' .

    $default  reduce using rule 48 (VariableDeclaration)


State 220

   30 ReturnTypeList: Type .
   31               | '(' Type . ')'

    ')'  shift, and go to state 273

    $default  reduce using rule 30 (ReturnTypeList)


State 221

   32 ReturnTypeList: '(' ReturnTypeList . ',' Type ')'

    ','  shift, and go to state 274


State 222

  112 if_statement: IF . '(' basic_expression ')' CodeBlock
  113             | IF . '(' basic_expression ')' CodeBlock ELSE else_statemnet

    '('  shift, and go to state 275


State 223

  117 iteration_statemnet: WHILE . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 276


State 224

  118 iteration_statemnet: DO . CodeBlock WHILE '(' basic_expression ')' ';'

    '{'  shift, and go to state 160

    CodeBlock  go to state 277


State 225

  119 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' CodeBlock

    '('  shift, and go to state 278


State 226

  116 switch_statement: SWITCH . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 279


State 227

  126 jump_statement: RETURN . ';'
  127               | RETURN . expression_list ';'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    ';'             shift, and go to state 280
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 197
    expression                 go to state 198
    expression_list            go to state 281


State 228

   89 CodeBlock: '{' '}' .

    $default  reduce using rule 89 (CodeBlock)


State 229

  104 local_variable_declaration_statement: VariableDeclaration .

    $default  reduce using rule 104 (local_variable_declaration_statement)


State 230

   88 CodeBlock: '{' local_variable_declaration_statements . '}'
  103 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    IF              shift, and go to state 222
    WHILE           shift, and go to state 223
    DO              shift, and go to state 224
    FOR             shift, and go to state 225
    SWITCH          shift, and go to state 226
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 227
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '}'             shift, and go to state 282
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    VariableDeclaration                   go to state 229
    local_variable_declaration_statement  go to state 283
    statement                             go to state 232
    selection_statement                   go to state 233
    if_statement                          go to state 234
    switch_statement                      go to state 235
    iteration_statemnet                   go to state 236
    jump_statement                        go to state 237
    primary_expression                    go to state 82
    constant                              go to state 83
    postfix_expression                    go to state 238
    unary_expression                      go to state 85
    multiplicative_expression             go to state 86
    additive_expression                   go to state 87
    shift_expression                      go to state 88
    relational_expression                 go to state 89
    equality_expression                   go to state 90
    and_expression                        go to state 91
    exclusive_or_expression               go to state 92
    inclusive_or_expression               go to state 93
    logical_and_expression                go to state 94
    logical_or_expression                 go to state 95
    basic_expression                      go to state 239
    postfix_expression_list               go to state 240
    assignment_expression                 go to state 241
    expression_statement                  go to state 242


State 231

  102 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 102 (local_variable_declaration_statements)


State 232

  105 local_variable_declaration_statement: statement .

    $default  reduce using rule 105 (local_variable_declaration_statement)


State 233

  107 statement: selection_statement .

    $default  reduce using rule 107 (statement)


State 234

  110 selection_statement: if_statement .

    $default  reduce using rule 110 (selection_statement)


State 235

  111 selection_statement: switch_statement .

    $default  reduce using rule 111 (selection_statement)


State 236

  108 statement: iteration_statemnet .

    $default  reduce using rule 108 (statement)


State 237

  109 statement: jump_statement .

    $default  reduce using rule 109 (statement)


State 238

  139 postfix_expression: postfix_expression . INC
  140                   | postfix_expression . DEC
  141                   | postfix_expression . '.' IDENTIFIER
  142                   | postfix_expression . '[' basic_expression ']'
  143                   | postfix_expression . '(' expression_list ')'
  144                   | postfix_expression . '(' ')'
  145                   | postfix_expression . '(' ')' CodeBlock
  146 unary_expression: postfix_expression .
  185 postfix_expression_list: postfix_expression .
  188 assignment_expression: postfix_expression . compound_assignment_operator ComplexVariableInitializer
  189                      | postfix_expression . VAR_ASSIGN ComplexVariableInitializer

    VAR_ASSIGN    shift, and go to state 284
    ADD_ASSIGN    shift, and go to state 285
    SUB_ASSIGN    shift, and go to state 286
    MUL_ASSIGN    shift, and go to state 287
    DIV_ASSIGN    shift, and go to state 288
    MOD_ASSIGN    shift, and go to state 289
    AND_ASSIGN    shift, and go to state 290
    OR_ASSIGN     shift, and go to state 291
    XOR_ASSIGN    shift, and go to state 292
    RIGHT_ASSIGN  shift, and go to state 293
    LEFT_ASSIGN   shift, and go to state 294
    INC           shift, and go to state 134
    DEC           shift, and go to state 135
    '.'           shift, and go to state 136
    '('           shift, and go to state 137
    '['           shift, and go to state 138

    ','       reduce using rule 185 (postfix_expression_list)
    '='       reduce using rule 185 (postfix_expression_list)
    $default  reduce using rule 146 (unary_expression)

    compound_assignment_operator  go to state 295


State 239

  200 expression_statement: basic_expression .

    $default  reduce using rule 200 (expression_statement)


State 240

  186 postfix_expression_list: postfix_expression_list . ',' postfix_expression
  187 assignment_expression: postfix_expression_list . '=' VariableInitializerList

    ','  shift, and go to state 296
    '='  shift, and go to state 297


State 241

  201 expression_statement: assignment_expression .

    $default  reduce using rule 201 (expression_statement)


State 242

  106 statement: expression_statement . ';'

    ';'  shift, and go to state 298


State 243

   95 FunctionDeclaration: FUNC IDENTIFIER '(' ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 95 (FunctionDeclaration)


State 244

   87 ParameterList: ParameterList ',' IDENTIFIER . Type

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38

    Type           go to state 299
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45


State 245

   97 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 160

    CodeBlock  go to state 300


State 246

   96 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' CodeBlock .

    $default  reduce using rule 96 (FunctionDeclaration)


State 247

   78 FieldDeclaration: VAR IDENTIFIER . Type ';'

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38

    Type           go to state 301
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45


State 248

   80 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')'
   81                         | FUNC IDENTIFIER . '(' ')' ReturnTypeList
   82                         | FUNC IDENTIFIER . '(' ParameterList ')'
   83                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList

    '('  shift, and go to state 302


State 249

   71 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' . ';'

    ';'  shift, and go to state 303


State 250

   75 MemberDeclarations: MemberDeclarations MemberDeclaration .

    $default  reduce using rule 75 (MemberDeclarations)


State 251

   79 MethodDeclaration: MethodDeclarationHeader1 CodeBlock .

    $default  reduce using rule 79 (MethodDeclaration)


State 252

   80 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')'
   81                         | FUNC IDENTIFIER . '(' ')' ReturnTypeList
   82                         | FUNC IDENTIFIER . '(' ParameterList ')'
   83                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   84 MethodDeclarationHeader2: FUNC IDENTIFIER . '(' TypeList ')'
   85                         | FUNC IDENTIFIER . '(' TypeList ')' ReturnTypeList

    '('  shift, and go to state 304


State 253

   92 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';' .

    $default  reduce using rule 92 (InterfaceFunctionDeclaration)


State 254

   93 InterfaceFunctionDeclaration: MethodDeclarationHeader2 ';' .

    $default  reduce using rule 93 (InterfaceFunctionDeclaration)


State 255

   72 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' . ';'

    ';'  shift, and go to state 305


State 256

   91 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations InterfaceFunctionDeclaration .

    $default  reduce using rule 91 (InterfaceFunctionDeclarations)


State 257

    4 TypeList: TypeList ',' Type .

    $default  reduce using rule 4 (TypeList)


State 258

   29 FunctionType: FUNC '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 29 (FunctionType)


State 259

   99 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 160

    CodeBlock  go to state 306


State 260

   98 AnonymousFunctionDeclaration: FUNC '(' ')' CodeBlock .

    $default  reduce using rule 98 (AnonymousFunctionDeclaration)


State 261

  100 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' . CodeBlock
  101                             | FUNC '(' ParameterList ')' . ReturnTypeList CodeBlock

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '('          shift, and go to state 159
    '{'          shift, and go to state 160

    Type            go to state 161
    PrimitiveType   go to state 42
    ComplexType     go to state 43
    ModuleType      go to state 44
    FunctionType    go to state 45
    ReturnTypeList  go to state 307
    CodeBlock       go to state 308


State 262

   70 ArrayPositionInitializer: INTEGER ':' ArrayInitializer .

    $default  reduce using rule 70 (ArrayPositionInitializer)


State 263

   69 ArrayInitializer: '{' ArrayInitializerList '}' .

    $default  reduce using rule 69 (ArrayInitializer)


State 264

   66 ArrayInitializer: PrimitiveType '(' basic_expression . ')'

    ')'  shift, and go to state 309


State 265

   61 ArrayInitializerList: ArrayInitializerList ',' ArrayInitializer .

    $default  reduce using rule 61 (ArrayInitializerList)


State 266

   54 ComplexVariableInitializer: PrimitiveType '(' basic_expression ')' .

    $default  reduce using rule 54 (ComplexVariableInitializer)


State 267

   59 ComplexVariableInitializer: DimExprs Type '{' '}' .

    $default  reduce using rule 59 (ComplexVariableInitializer)


State 268

   58 ComplexVariableInitializer: DimExprs Type '{' ArrayInitializerList . '}'
   61 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 189
    '}'  shift, and go to state 310


State 269

  145 postfix_expression: postfix_expression '(' ')' CodeBlock .

    $default  reduce using rule 145 (postfix_expression)


State 270

  184 expression_list: expression_list ',' . expression

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 197
    expression                 go to state 311


State 271

  143 postfix_expression: postfix_expression '(' expression_list ')' .

    $default  reduce using rule 143 (postfix_expression)


State 272

  142 postfix_expression: postfix_expression '[' basic_expression ']' .

    $default  reduce using rule 142 (postfix_expression)


State 273

   31 ReturnTypeList: '(' Type ')' .

    $default  reduce using rule 31 (ReturnTypeList)


State 274

   32 ReturnTypeList: '(' ReturnTypeList ',' . Type ')'

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38

    Type           go to state 312
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45


State 275

  112 if_statement: IF '(' . basic_expression ')' CodeBlock
  113             | IF '(' . basic_expression ')' CodeBlock ELSE else_statemnet

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 313


State 276

  117 iteration_statemnet: WHILE '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 314


State 277

  118 iteration_statemnet: DO CodeBlock . WHILE '(' basic_expression ')' ';'

    WHILE  shift, and go to state 315


State 278

  119 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    VAR             shift, and go to state 1
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    ';'             shift, and go to state 316
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    VariableDeclaration        go to state 317
    for_init                   go to state 318
    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 238
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 239
    postfix_expression_list    go to state 240
    assignment_expression      go to state 241
    expression_statement       go to state 319


State 279

  116 switch_statement: SWITCH '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 320


State 280

  126 jump_statement: RETURN ';' .

    $default  reduce using rule 126 (jump_statement)


State 281

  127 jump_statement: RETURN expression_list . ';'
  184 expression_list: expression_list . ',' expression

    ','  shift, and go to state 270
    ';'  shift, and go to state 321


State 282

   88 CodeBlock: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 88 (CodeBlock)


State 283

  103 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 103 (local_variable_declaration_statements)


State 284

  189 assignment_expression: postfix_expression VAR_ASSIGN . ComplexVariableInitializer

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 70
    '['             shift, and go to state 71
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 76
    ComplexVariableInitializer    go to state 322
    DimExprs                      go to state 79
    DimExpr                       go to state 80
    AnonymousFunctionDeclaration  go to state 81
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 96


State 285

  190 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 190 (compound_assignment_operator)


State 286

  191 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 191 (compound_assignment_operator)


State 287

  192 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 192 (compound_assignment_operator)


State 288

  193 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 193 (compound_assignment_operator)


State 289

  194 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 194 (compound_assignment_operator)


State 290

  195 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 195 (compound_assignment_operator)


State 291

  196 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 196 (compound_assignment_operator)


State 292

  197 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 197 (compound_assignment_operator)


State 293

  198 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 198 (compound_assignment_operator)


State 294

  199 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 199 (compound_assignment_operator)


State 295

  188 assignment_expression: postfix_expression compound_assignment_operator . ComplexVariableInitializer

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 70
    '['             shift, and go to state 71
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 76
    ComplexVariableInitializer    go to state 323
    DimExprs                      go to state 79
    DimExpr                       go to state 80
    AnonymousFunctionDeclaration  go to state 81
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 96


State 296

  186 postfix_expression_list: postfix_expression_list ',' . postfix_expression

    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69

    primary_expression  go to state 82
    constant            go to state 83
    postfix_expression  go to state 324


State 297

  187 assignment_expression: postfix_expression_list '=' . VariableInitializerList

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    FUNC            shift, and go to state 60
    INT8            shift, and go to state 24
    INT16           shift, and go to state 25
    INT32           shift, and go to state 26
    INT64           shift, and go to state 27
    UINT8           shift, and go to state 28
    UINT16          shift, and go to state 29
    UINT32          shift, and go to state 30
    UINT64          shift, and go to state 31
    FLOAT32         shift, and go to state 32
    FLOAT64         shift, and go to state 33
    BOOL            shift, and go to state 34
    STRING          shift, and go to state 35
    ROOT_OBJECT     shift, and go to state 36
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '{'             shift, and go to state 70
    '['             shift, and go to state 71
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    PrimitiveType                 go to state 76
    VariableInitializerList       go to state 325
    ComplexVariableInitializer    go to state 78
    DimExprs                      go to state 79
    DimExpr                       go to state 80
    AnonymousFunctionDeclaration  go to state 81
    primary_expression            go to state 82
    constant                      go to state 83
    postfix_expression            go to state 84
    unary_expression              go to state 85
    multiplicative_expression     go to state 86
    additive_expression           go to state 87
    shift_expression              go to state 88
    relational_expression         go to state 89
    equality_expression           go to state 90
    and_expression                go to state 91
    exclusive_or_expression       go to state 92
    inclusive_or_expression       go to state 93
    logical_and_expression        go to state 94
    logical_or_expression         go to state 95
    basic_expression              go to state 96


State 298

  106 statement: expression_statement ';' .

    $default  reduce using rule 106 (statement)


State 299

   87 ParameterList: ParameterList ',' IDENTIFIER Type .

    $default  reduce using rule 87 (ParameterList)


State 300

   97 FunctionDeclaration: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 97 (FunctionDeclaration)


State 301

   78 FieldDeclaration: VAR IDENTIFIER Type . ';'

    ';'  shift, and go to state 326


State 302

   80 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')'
   81                         | FUNC IDENTIFIER '(' . ')' ReturnTypeList
   82                         | FUNC IDENTIFIER '(' . ParameterList ')'
   83                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 99
    ')'         shift, and go to state 327

    ParameterList  go to state 328


State 303

   71 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' ';' .

    $default  reduce using rule 71 (TypeDeclaration)


State 304

   80 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')'
   81                         | FUNC IDENTIFIER '(' . ')' ReturnTypeList
   82                         | FUNC IDENTIFIER '(' . ParameterList ')'
   83                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   84 MethodDeclarationHeader2: FUNC IDENTIFIER '(' . TypeList ')'
   85                         | FUNC IDENTIFIER '(' . TypeList ')' ReturnTypeList

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 329
    ')'          shift, and go to state 327

    TypeList       go to state 330
    Type           go to state 110
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45
    ParameterList  go to state 328


State 305

   72 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' ';' .

    $default  reduce using rule 72 (TypeDeclaration)


State 306

   99 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 99 (AnonymousFunctionDeclaration)


State 307

  101 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 160

    CodeBlock  go to state 331


State 308

  100 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' CodeBlock .

    $default  reduce using rule 100 (AnonymousFunctionDeclaration)


State 309

   66 ArrayInitializer: PrimitiveType '(' basic_expression ')' .

    $default  reduce using rule 66 (ArrayInitializer)


State 310

   58 ComplexVariableInitializer: DimExprs Type '{' ArrayInitializerList '}' .

    $default  reduce using rule 58 (ComplexVariableInitializer)


State 311

  184 expression_list: expression_list ',' expression .

    $default  reduce using rule 184 (expression_list)


State 312

   32 ReturnTypeList: '(' ReturnTypeList ',' Type . ')'

    ')'  shift, and go to state 332


State 313

  112 if_statement: IF '(' basic_expression . ')' CodeBlock
  113             | IF '(' basic_expression . ')' CodeBlock ELSE else_statemnet

    ')'  shift, and go to state 333


State 314

  117 iteration_statemnet: WHILE '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 334


State 315

  118 iteration_statemnet: DO CodeBlock WHILE . '(' basic_expression ')' ';'

    '('  shift, and go to state 335


State 316

  122 for_init: ';' .

    $default  reduce using rule 122 (for_init)


State 317

  121 for_init: VariableDeclaration .

    $default  reduce using rule 121 (for_init)


State 318

  119 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    ';'             shift, and go to state 336
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    for_expr                   go to state 337
    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 338


State 319

  120 for_init: expression_statement . ';'

    ';'  shift, and go to state 339


State 320

  116 switch_statement: SWITCH '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 340


State 321

  127 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 127 (jump_statement)


State 322

  189 assignment_expression: postfix_expression VAR_ASSIGN ComplexVariableInitializer .

    $default  reduce using rule 189 (assignment_expression)


State 323

  188 assignment_expression: postfix_expression compound_assignment_operator ComplexVariableInitializer .

    $default  reduce using rule 188 (assignment_expression)


State 324

  139 postfix_expression: postfix_expression . INC
  140                   | postfix_expression . DEC
  141                   | postfix_expression . '.' IDENTIFIER
  142                   | postfix_expression . '[' basic_expression ']'
  143                   | postfix_expression . '(' expression_list ')'
  144                   | postfix_expression . '(' ')'
  145                   | postfix_expression . '(' ')' CodeBlock
  186 postfix_expression_list: postfix_expression_list ',' postfix_expression .

    INC  shift, and go to state 134
    DEC  shift, and go to state 135
    '.'  shift, and go to state 136
    '('  shift, and go to state 137
    '['  shift, and go to state 138

    $default  reduce using rule 186 (postfix_expression_list)


State 325

   52 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer
  187 assignment_expression: postfix_expression_list '=' VariableInitializerList .

    ','  shift, and go to state 130

    $default  reduce using rule 187 (assignment_expression)


State 326

   78 FieldDeclaration: VAR IDENTIFIER Type ';' .

    $default  reduce using rule 78 (FieldDeclaration)


State 327

   80 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' .
   81                         | FUNC IDENTIFIER '(' ')' . ReturnTypeList

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '('          shift, and go to state 159

    $default  reduce using rule 80 (MethodDeclarationHeader1)

    Type            go to state 161
    PrimitiveType   go to state 42
    ComplexType     go to state 43
    ModuleType      go to state 44
    FunctionType    go to state 45
    ReturnTypeList  go to state 341


State 328

   82 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList . ')'
   83                         | FUNC IDENTIFIER '(' ParameterList . ')' ReturnTypeList
   87 ParameterList: ParameterList . ',' IDENTIFIER Type

    ','  shift, and go to state 164
    ')'  shift, and go to state 342


State 329

   24 ModuleType: IDENTIFIER .
   25           | IDENTIFIER . '.' IDENTIFIER
   86 ParameterList: IDENTIFIER . Type

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '.'          shift, and go to state 56

    $default  reduce using rule 24 (ModuleType)

    Type           go to state 158
    PrimitiveType  go to state 42
    ComplexType    go to state 43
    ModuleType     go to state 44
    FunctionType   go to state 45


State 330

    4 TypeList: TypeList . ',' Type
   84 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList . ')'
   85                         | FUNC IDENTIFIER '(' TypeList . ')' ReturnTypeList

    ','  shift, and go to state 181
    ')'  shift, and go to state 343


State 331

  101 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 101 (AnonymousFunctionDeclaration)


State 332

   32 ReturnTypeList: '(' ReturnTypeList ',' Type ')' .

    $default  reduce using rule 32 (ReturnTypeList)


State 333

  112 if_statement: IF '(' basic_expression ')' . CodeBlock
  113             | IF '(' basic_expression ')' . CodeBlock ELSE else_statemnet

    '{'  shift, and go to state 160

    CodeBlock  go to state 344


State 334

  117 iteration_statemnet: WHILE '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 160

    CodeBlock  go to state 345


State 335

  118 iteration_statemnet: DO CodeBlock WHILE '(' . basic_expression ')' ';'

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 84
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 346


State 336

  124 for_expr: ';' .

    $default  reduce using rule 124 (for_expr)


State 337

  119 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' CodeBlock

    INC             shift, and go to state 58
    DEC             shift, and go to state 59
    TOKEN_THIS      shift, and go to state 61
    TOKEN_NIL       shift, and go to state 62
    TOKEN_TRUE      shift, and go to state 63
    TOKEN_FALSE     shift, and go to state 64
    INTEGER         shift, and go to state 65
    FLOAT           shift, and go to state 66
    STRING_LITERAL  shift, and go to state 67
    IDENTIFIER      shift, and go to state 68
    '('             shift, and go to state 69
    '+'             shift, and go to state 72
    '-'             shift, and go to state 73
    '~'             shift, and go to state 74
    '!'             shift, and go to state 75

    for_incr                   go to state 347
    primary_expression         go to state 82
    constant                   go to state 83
    postfix_expression         go to state 238
    unary_expression           go to state 85
    multiplicative_expression  go to state 86
    additive_expression        go to state 87
    shift_expression           go to state 88
    relational_expression      go to state 89
    equality_expression        go to state 90
    and_expression             go to state 91
    exclusive_or_expression    go to state 92
    inclusive_or_expression    go to state 93
    logical_and_expression     go to state 94
    logical_or_expression      go to state 95
    basic_expression           go to state 239
    postfix_expression_list    go to state 240
    assignment_expression      go to state 241
    expression_statement       go to state 348


State 338

  123 for_expr: basic_expression . ';'

    ';'  shift, and go to state 349


State 339

  120 for_init: expression_statement ';' .

    $default  reduce using rule 120 (for_init)


State 340

  116 switch_statement: SWITCH '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 160

    CodeBlock  go to state 350


State 341

   81 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' ReturnTypeList .

    $default  reduce using rule 81 (MethodDeclarationHeader1)


State 342

   82 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' .
   83                         | FUNC IDENTIFIER '(' ParameterList ')' . ReturnTypeList

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '('          shift, and go to state 159

    $default  reduce using rule 82 (MethodDeclarationHeader1)

    Type            go to state 161
    PrimitiveType   go to state 42
    ComplexType     go to state 43
    ModuleType      go to state 44
    FunctionType    go to state 45
    ReturnTypeList  go to state 351


State 343

   84 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' .
   85                         | FUNC IDENTIFIER '(' TypeList ')' . ReturnTypeList

    FUNC         shift, and go to state 23
    INT8         shift, and go to state 24
    INT16        shift, and go to state 25
    INT32        shift, and go to state 26
    INT64        shift, and go to state 27
    UINT8        shift, and go to state 28
    UINT16       shift, and go to state 29
    UINT32       shift, and go to state 30
    UINT64       shift, and go to state 31
    FLOAT32      shift, and go to state 32
    FLOAT64      shift, and go to state 33
    BOOL         shift, and go to state 34
    STRING       shift, and go to state 35
    ROOT_OBJECT  shift, and go to state 36
    DIMS         shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    '('          shift, and go to state 159

    $default  reduce using rule 84 (MethodDeclarationHeader2)

    Type            go to state 161
    PrimitiveType   go to state 42
    ComplexType     go to state 43
    ModuleType      go to state 44
    FunctionType    go to state 45
    ReturnTypeList  go to state 352


State 344

  112 if_statement: IF '(' basic_expression ')' CodeBlock .
  113             | IF '(' basic_expression ')' CodeBlock . ELSE else_statemnet

    ELSE  shift, and go to state 353

    $default  reduce using rule 112 (if_statement)


State 345

  117 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 117 (iteration_statemnet)


State 346

  118 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression . ')' ';'

    ')'  shift, and go to state 354


State 347

  119 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' CodeBlock

    ')'  shift, and go to state 355


State 348

  125 for_incr: expression_statement .

    $default  reduce using rule 125 (for_incr)


State 349

  123 for_expr: basic_expression ';' .

    $default  reduce using rule 123 (for_expr)


State 350

  116 switch_statement: SWITCH '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 116 (switch_statement)


State 351

   83 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList .

    $default  reduce using rule 83 (MethodDeclarationHeader1)


State 352

   85 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 85 (MethodDeclarationHeader2)


State 353

  113 if_statement: IF '(' basic_expression ')' CodeBlock ELSE . else_statemnet

    IF   shift, and go to state 222
    '{'  shift, and go to state 160

    CodeBlock       go to state 356
    if_statement    go to state 357
    else_statemnet  go to state 358


State 354

  118 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' . ';'

    ';'  shift, and go to state 359


State 355

  119 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . CodeBlock

    '{'  shift, and go to state 160

    CodeBlock  go to state 360


State 356

  115 else_statemnet: CodeBlock .

    $default  reduce using rule 115 (else_statemnet)


State 357

  114 else_statemnet: if_statement .

    $default  reduce using rule 114 (else_statemnet)


State 358

  113 if_statement: IF '(' basic_expression ')' CodeBlock ELSE else_statemnet .

    $default  reduce using rule 113 (if_statement)


State 359

  118 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' ';' .

    $default  reduce using rule 118 (iteration_statemnet)


State 360

  119 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' CodeBlock .

    $default  reduce using rule 119 (iteration_statemnet)
