Terminals unused in grammar

   ELLIPSIS
   NOT
   IN
   CASE
   BREAK
   CONTINUE
   DEFAULT
   CONST
   NEW
   HEX
   OCT


Grammar

    0 $accept: Program $end

    1 PackageOrTypeName: IDENTIFIER
    2                  | PackageOrTypeName '.' IDENTIFIER

    3 TypeList: Type
    4         | TypeList ',' Type

    5 Type: PrimitiveType
    6     | ReferenceType
    7     | Dims PrimitiveType
    8     | Dims ReferenceType

    9 PrimitiveType: UINT8
   10              | UINT16
   11              | UINT32
   12              | UINT64
   13              | INT8
   14              | INT16
   15              | INT32
   16              | INT64
   17              | FLOAT32
   18              | FLOAT64
   19              | BOOL
   20              | STRING

   21 ReferenceType: PackageOrTypeName
   22              | FunctionType
   23              | InterfaceType

   24 Dims: '[' ']'
   25     | Dims '[' ']'

   26 FunctionType: FUNC '(' ')'
   27             | FUNC '(' ')' ReturnTypeList
   28             | FUNC '(' TypeList ')'
   29             | FUNC '(' TypeList ')' ReturnTypeList

   30 ReturnTypeList: Type
   31               | '(' Type ')'
   32               | '(' ReturnTypeList ',' Type ')'

   33 InterfaceType: INTERFACE '{' '}'

   34 Program: PackageDeclaration ImportDeclarations Declarations
   35        | PackageDeclaration ImportDeclarations
   36        | PackageDeclaration Declarations
   37        | ImportDeclarations Declarations
   38        | PackageDeclaration
   39        | ImportDeclarations
   40        | Declarations

   41 PackageDeclaration: PACKAGE PackageOrTypeName ';'

   42 ImportDeclarations: ImportDeclaration
   43                   | ImportDeclarations ImportDeclaration

   44 ImportDeclaration: IMPORT PackageOrTypeName ';'
   45                  | IMPORT PackageOrTypeName '.' '*' ';'

   46 Declarations: Declaration
   47             | Declarations Declaration

   48 Declaration: VariableDeclaration
   49            | TypeDeclaration
   50            | FunctionDeclaration

   51 VariableDeclaration: VAR VariableList Type ';'
   52                    | VAR VariableList '=' VariableInitializerList ';'
   53                    | VAR VariableList Type '=' VariableInitializerList ';'

   54 VariableList: IDENTIFIER
   55             | VariableList ',' IDENTIFIER

   56 VariableInitializerList: ComplexVariableInitializer
   57                        | VariableInitializerList ',' ComplexVariableInitializer

   58 ComplexVariableInitializer: basic_expression
   59                           | PrimitiveType '(' basic_expression ')'
   60                           | AnonymousFunctionDeclaration
   61                           | '{' ArrayInitializerList '}'
   62                           | DimExprs Type
   63                           | DimExprs Type '{' ArrayInitializerList '}'
   64                           | DimExprs Type '{' '}'

   65 ArrayInitializerList: ArrayInitializer
   66                     | ArrayInitializerList ',' ArrayInitializer

   67 DimExprs: DimExpr
   68         | DimExprs DimExpr

   69 DimExpr: '[' basic_expression ']'

   70 ArrayInitializer: basic_expression
   71                 | PrimitiveType '(' basic_expression ')'
   72                 | AnonymousFunctionDeclaration
   73                 | ArrayPositionInitializer
   74                 | '{' ArrayInitializerList '}'

   75 ArrayPositionInitializer: INTEGER ':' ArrayInitializer

   76 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' ';'
   77                | TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' ';'
   78                | TYPE IDENTIFIER Type ';'

   79 MemberDeclarations: MemberDeclaration
   80                   | MemberDeclarations MemberDeclaration

   81 MemberDeclaration: FieldDeclaration
   82                  | MethodDeclaration

   83 FieldDeclaration: VAR IDENTIFIER Type ';'

   84 MethodDeclaration: MethodDeclarationHeader1 CodeBlock

   85 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')'
   86                         | FUNC IDENTIFIER '(' ')' ReturnTypeList
   87                         | FUNC IDENTIFIER '(' ParameterList ')'
   88                         | FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList

   89 ParameterList: IDENTIFIER Type
   90              | ParameterList ',' IDENTIFIER Type

   91 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')'
   92                         | FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList

   93 CodeBlock: '{' local_variable_declaration_statements '}'
   94          | '{' '}'

   95 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration
   96                              | InterfaceFunctionDeclarations InterfaceFunctionDeclaration

   97 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';'
   98                             | MethodDeclarationHeader2 ';'

   99 FunctionDeclaration: MethodDeclarationHeader1 CodeBlock

  100 AnonymousFunctionDeclaration: FUNC '(' ')' CodeBlock
  101                             | FUNC '(' ')' ReturnTypeList CodeBlock
  102                             | FUNC '(' ParameterList ')' CodeBlock
  103                             | FUNC '(' ParameterList ')' ReturnTypeList CodeBlock

  104 local_variable_declaration_statements: local_variable_declaration_statement
  105                                      | local_variable_declaration_statements local_variable_declaration_statement

  106 local_variable_declaration_statement: VariableDeclaration
  107                                     | statement

  108 statement: expression_statement ';'
  109          | selection_statement
  110          | iteration_statemnet
  111          | jump_statement

  112 selection_statement: if_statement
  113                    | switch_statement

  114 if_statement: IF '(' basic_expression ')' CodeBlock
  115             | IF '(' basic_expression ')' CodeBlock ELSE else_statemnet

  116 else_statemnet: if_statement
  117               | CodeBlock

  118 switch_statement: SWITCH '(' basic_expression ')' CodeBlock

  119 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock
  120                    | DO CodeBlock WHILE '(' basic_expression ')' ';'
  121                    | FOR '(' for_init for_expr for_incr ')' CodeBlock

  122 for_init: expression_statement ';'
  123         | VariableDeclaration
  124         | ';'

  125 for_expr: basic_expression ';'
  126         | ';'

  127 for_incr: expression_statement

  128 jump_statement: RETURN ';'
  129               | RETURN expression_list ';'

  130 primary_expression: IDENTIFIER
  131                   | constant
  132                   | TOKEN_THIS
  133                   | '(' basic_expression ')'

  134 constant: INTEGER
  135         | FLOAT
  136         | STRING_LITERAL
  137         | TOKEN_NIL
  138         | TOKEN_TRUE
  139         | TOKEN_FALSE

  140 postfix_expression: primary_expression
  141                   | postfix_expression INC
  142                   | postfix_expression DEC
  143                   | postfix_expression '.' IDENTIFIER
  144                   | postfix_expression '[' basic_expression ']'
  145                   | postfix_expression '(' expression_list ')'
  146                   | postfix_expression '(' ')'
  147                   | postfix_expression '(' ')' CodeBlock

  148 unary_expression: postfix_expression
  149                 | INC unary_expression
  150                 | DEC unary_expression
  151                 | '+' unary_expression
  152                 | '-' unary_expression
  153                 | '~' unary_expression
  154                 | '!' unary_expression

  155 multiplicative_expression: unary_expression
  156                          | multiplicative_expression '*' unary_expression
  157                          | multiplicative_expression '/' unary_expression
  158                          | multiplicative_expression '%' unary_expression

  159 additive_expression: multiplicative_expression
  160                    | additive_expression '+' multiplicative_expression
  161                    | additive_expression '-' multiplicative_expression

  162 shift_expression: additive_expression
  163                 | shift_expression SHIFT_LEFT additive_expression
  164                 | shift_expression SHIFT_RIGHT additive_expression

  165 relational_expression: shift_expression
  166                      | relational_expression '<' shift_expression
  167                      | relational_expression '>' shift_expression
  168                      | relational_expression LE shift_expression
  169                      | relational_expression GE shift_expression

  170 equality_expression: relational_expression
  171                    | equality_expression EQ relational_expression
  172                    | equality_expression NE relational_expression

  173 and_expression: equality_expression
  174               | and_expression '&' equality_expression

  175 exclusive_or_expression: and_expression
  176                        | exclusive_or_expression '^' and_expression

  177 inclusive_or_expression: exclusive_or_expression
  178                        | inclusive_or_expression '|' exclusive_or_expression

  179 logical_and_expression: inclusive_or_expression
  180                       | logical_and_expression AND inclusive_or_expression

  181 logical_or_expression: logical_and_expression
  182                      | logical_or_expression OR logical_and_expression

  183 basic_expression: logical_or_expression

  184 expression: basic_expression

  185 expression_list: expression
  186                | expression_list ',' expression

  187 postfix_expression_list: postfix_expression
  188                        | postfix_expression_list ',' postfix_expression

  189 assignment_expression: postfix_expression_list '=' VariableInitializerList
  190                      | postfix_expression compound_assignment_operator ComplexVariableInitializer
  191                      | postfix_expression VAR_ASSIGN ComplexVariableInitializer

  192 compound_assignment_operator: ADD_ASSIGN
  193                             | SUB_ASSIGN
  194                             | MUL_ASSIGN
  195                             | DIV_ASSIGN
  196                             | MOD_ASSIGN
  197                             | AND_ASSIGN
  198                             | OR_ASSIGN
  199                             | XOR_ASSIGN
  200                             | RIGHT_ASSIGN
  201                             | LEFT_ASSIGN

  202 expression_statement: basic_expression
  203                     | assignment_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 154
'%' (37) 158
'&' (38) 174
'(' (40) 26 27 28 29 31 32 59 71 85 86 87 88 91 92 100 101 102 103
    114 115 118 119 120 121 133 145 146 147
')' (41) 26 27 28 29 31 32 59 71 85 86 87 88 91 92 100 101 102 103
    114 115 118 119 120 121 133 145 146 147
'*' (42) 45 156
'+' (43) 151 160
',' (44) 4 32 55 57 66 90 186 188
'-' (45) 152 161
'.' (46) 2 45 143
'/' (47) 157
':' (58) 75
';' (59) 41 44 45 51 52 53 76 77 78 83 97 98 108 120 122 124 125 126
    128 129
'<' (60) 166
'=' (61) 52 53 189
'>' (62) 167
'[' (91) 24 25 69 144
']' (93) 24 25 69 144
'^' (94) 176
'{' (123) 33 61 63 64 74 76 77 93 94
'|' (124) 178
'}' (125) 33 61 63 64 74 76 77 93 94
'~' (126) 153
error (256)
ELLIPSIS (258)
VAR_ASSIGN (259) 191
ADD_ASSIGN (260) 192
SUB_ASSIGN (261) 193
MUL_ASSIGN (262) 194
DIV_ASSIGN (263) 195
MOD_ASSIGN (264) 196
AND_ASSIGN (265) 197
OR_ASSIGN (266) 198
XOR_ASSIGN (267) 199
RIGHT_ASSIGN (268) 200
LEFT_ASSIGN (269) 201
EQ (270) 171
NE (271) 172
GE (272) 169
LE (273) 168
AND (274) 180
OR (275) 182
NOT (276)
SHIFT_LEFT (277) 163
SHIFT_RIGHT (278) 164
INC (279) 141 149
DEC (280) 142 150
TOKEN_THIS (281) 132
IF (282) 114 115
ELSE (283) 115
WHILE (284) 119 120
DO (285) 120
FOR (286) 121
IN (287)
SWITCH (288) 118
CASE (289)
BREAK (290)
CONTINUE (291)
DEFAULT (292)
VAR (293) 51 52 53 83
FUNC (294) 26 27 28 29 85 86 87 88 91 92 100 101 102 103
RETURN (295) 128 129
STRUCT (296) 76
INTERFACE (297) 33 77
TYPE (298) 76 77 78
CONST (299)
PACKAGE (300) 41
IMPORT (301) 44 45
NEW (302)
INT8 (303) 13
INT16 (304) 14
INT32 (305) 15
INT64 (306) 16
UINT8 (307) 9
UINT16 (308) 10
UINT32 (309) 11
UINT64 (310) 12
FLOAT32 (311) 17
FLOAT64 (312) 18
BOOL (313) 19
STRING (314) 20
TOKEN_NIL (315) 137
TOKEN_TRUE (316) 138
TOKEN_FALSE (317) 139
INTEGER (318) 75 134
HEX (319)
OCT (320)
FLOAT (321) 135
STRING_LITERAL (322) 136
IDENTIFIER (323) 1 2 54 55 76 77 78 83 85 86 87 88 89 90 91 92 130
    143


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
PackageOrTypeName (93)
    on left: 1 2, on right: 2 21 41 44 45
TypeList (94)
    on left: 3 4, on right: 4 28 29 91 92
Type (95)
    on left: 5 6 7 8, on right: 3 4 30 31 32 51 53 62 63 64 78 83 89
    90
PrimitiveType (96)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20, on right: 5 7 59 71
ReferenceType (97)
    on left: 21 22 23, on right: 6 8
Dims (98)
    on left: 24 25, on right: 7 8 25
FunctionType (99)
    on left: 26 27 28 29, on right: 22
ReturnTypeList (100)
    on left: 30 31 32, on right: 27 29 32 86 88 92 101 103
InterfaceType (101)
    on left: 33, on right: 23
Program (102)
    on left: 34 35 36 37 38 39 40, on right: 0
PackageDeclaration (103)
    on left: 41, on right: 34 35 36 38
ImportDeclarations (104)
    on left: 42 43, on right: 34 35 37 39 43
ImportDeclaration (105)
    on left: 44 45, on right: 42 43
Declarations (106)
    on left: 46 47, on right: 34 36 37 40 47
Declaration (107)
    on left: 48 49 50, on right: 46 47
VariableDeclaration (108)
    on left: 51 52 53, on right: 48 106 123
VariableList (109)
    on left: 54 55, on right: 51 52 53 55
VariableInitializerList (110)
    on left: 56 57, on right: 52 53 57 189
ComplexVariableInitializer (111)
    on left: 58 59 60 61 62 63 64, on right: 56 57 190 191
ArrayInitializerList (112)
    on left: 65 66, on right: 61 63 66 74
DimExprs (113)
    on left: 67 68, on right: 62 63 64 68
DimExpr (114)
    on left: 69, on right: 67 68
ArrayInitializer (115)
    on left: 70 71 72 73 74, on right: 65 66 75
ArrayPositionInitializer (116)
    on left: 75, on right: 73
TypeDeclaration (117)
    on left: 76 77 78, on right: 49
MemberDeclarations (118)
    on left: 79 80, on right: 76 80
MemberDeclaration (119)
    on left: 81 82, on right: 79 80
FieldDeclaration (120)
    on left: 83, on right: 81
MethodDeclaration (121)
    on left: 84, on right: 82
MethodDeclarationHeader1 (122)
    on left: 85 86 87 88, on right: 84 97 99
ParameterList (123)
    on left: 89 90, on right: 87 88 90 102 103
MethodDeclarationHeader2 (124)
    on left: 91 92, on right: 98
CodeBlock (125)
    on left: 93 94, on right: 84 99 100 101 102 103 114 115 117 118
    119 120 121 147
InterfaceFunctionDeclarations (126)
    on left: 95 96, on right: 77 96
InterfaceFunctionDeclaration (127)
    on left: 97 98, on right: 95 96
FunctionDeclaration (128)
    on left: 99, on right: 50
AnonymousFunctionDeclaration (129)
    on left: 100 101 102 103, on right: 60 72
local_variable_declaration_statements (130)
    on left: 104 105, on right: 93 105
local_variable_declaration_statement (131)
    on left: 106 107, on right: 104 105
statement (132)
    on left: 108 109 110 111, on right: 107
selection_statement (133)
    on left: 112 113, on right: 109
if_statement (134)
    on left: 114 115, on right: 112 116
else_statemnet (135)
    on left: 116 117, on right: 115
switch_statement (136)
    on left: 118, on right: 113
iteration_statemnet (137)
    on left: 119 120 121, on right: 110
for_init (138)
    on left: 122 123 124, on right: 121
for_expr (139)
    on left: 125 126, on right: 121
for_incr (140)
    on left: 127, on right: 121
jump_statement (141)
    on left: 128 129, on right: 111
primary_expression (142)
    on left: 130 131 132 133, on right: 140
constant (143)
    on left: 134 135 136 137 138 139, on right: 131
postfix_expression (144)
    on left: 140 141 142 143 144 145 146 147, on right: 141 142 143
    144 145 146 147 148 187 188 190 191
unary_expression (145)
    on left: 148 149 150 151 152 153 154, on right: 149 150 151 152
    153 154 155 156 157 158
multiplicative_expression (146)
    on left: 155 156 157 158, on right: 156 157 158 159 160 161
additive_expression (147)
    on left: 159 160 161, on right: 160 161 162 163 164
shift_expression (148)
    on left: 162 163 164, on right: 163 164 165 166 167 168 169
relational_expression (149)
    on left: 165 166 167 168 169, on right: 166 167 168 169 170 171
    172
equality_expression (150)
    on left: 170 171 172, on right: 171 172 173 174
and_expression (151)
    on left: 173 174, on right: 174 175 176
exclusive_or_expression (152)
    on left: 175 176, on right: 176 177 178
inclusive_or_expression (153)
    on left: 177 178, on right: 178 179 180
logical_and_expression (154)
    on left: 179 180, on right: 180 181 182
logical_or_expression (155)
    on left: 181 182, on right: 182 183
basic_expression (156)
    on left: 183, on right: 58 59 69 70 71 114 115 118 119 120 125
    133 144 184 202
expression (157)
    on left: 184, on right: 185 186
expression_list (158)
    on left: 185 186, on right: 129 145 186
postfix_expression_list (159)
    on left: 187 188, on right: 188 189
assignment_expression (160)
    on left: 189 190 191, on right: 203
compound_assignment_operator (161)
    on left: 192 193 194 195 196 197 198 199 200 201, on right: 190
expression_statement (162)
    on left: 202 203, on right: 108 122 127


State 0

    0 $accept: . Program $end

    VAR      shift, and go to state 1
    FUNC     shift, and go to state 2
    TYPE     shift, and go to state 3
    PACKAGE  shift, and go to state 4
    IMPORT   shift, and go to state 5

    Program                   go to state 6
    PackageDeclaration        go to state 7
    ImportDeclarations        go to state 8
    ImportDeclaration         go to state 9
    Declarations              go to state 10
    Declaration               go to state 11
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 1

   51 VariableDeclaration: VAR . VariableList Type ';'
   52                    | VAR . VariableList '=' VariableInitializerList ';'
   53                    | VAR . VariableList Type '=' VariableInitializerList ';'

    IDENTIFIER  shift, and go to state 16

    VariableList  go to state 17


State 2

   85 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')'
   86                         | FUNC . IDENTIFIER '(' ')' ReturnTypeList
   87                         | FUNC . IDENTIFIER '(' ParameterList ')'
   88                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 18


State 3

   76 TypeDeclaration: TYPE . IDENTIFIER STRUCT '{' MemberDeclarations '}' ';'
   77                | TYPE . IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' ';'
   78                | TYPE . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 19


State 4

   41 PackageDeclaration: PACKAGE . PackageOrTypeName ';'

    IDENTIFIER  shift, and go to state 20

    PackageOrTypeName  go to state 21


State 5

   44 ImportDeclaration: IMPORT . PackageOrTypeName ';'
   45                  | IMPORT . PackageOrTypeName '.' '*' ';'

    IDENTIFIER  shift, and go to state 20

    PackageOrTypeName  go to state 22


State 6

    0 $accept: Program . $end

    $end  shift, and go to state 23


State 7

   34 Program: PackageDeclaration . ImportDeclarations Declarations
   35        | PackageDeclaration . ImportDeclarations
   36        | PackageDeclaration . Declarations
   38        | PackageDeclaration .

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 38 (Program)

    ImportDeclarations        go to state 24
    ImportDeclaration         go to state 9
    Declarations              go to state 25
    Declaration               go to state 11
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 8

   37 Program: ImportDeclarations . Declarations
   39        | ImportDeclarations .
   43 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 39 (Program)

    ImportDeclaration         go to state 26
    Declarations              go to state 27
    Declaration               go to state 11
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 9

   42 ImportDeclarations: ImportDeclaration .

    $default  reduce using rule 42 (ImportDeclarations)


State 10

   40 Program: Declarations .
   47 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 40 (Program)

    Declaration               go to state 28
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 11

   46 Declarations: Declaration .

    $default  reduce using rule 46 (Declarations)


State 12

   48 Declaration: VariableDeclaration .

    $default  reduce using rule 48 (Declaration)


State 13

   49 Declaration: TypeDeclaration .

    $default  reduce using rule 49 (Declaration)


State 14

   99 FunctionDeclaration: MethodDeclarationHeader1 . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 30


State 15

   50 Declaration: FunctionDeclaration .

    $default  reduce using rule 50 (Declaration)


State 16

   54 VariableList: IDENTIFIER .

    $default  reduce using rule 54 (VariableList)


State 17

   51 VariableDeclaration: VAR VariableList . Type ';'
   52                    | VAR VariableList . '=' VariableInitializerList ';'
   53                    | VAR VariableList . Type '=' VariableInitializerList ';'
   55 VariableList: VariableList . ',' IDENTIFIER

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    ','         shift, and go to state 45
    '['         shift, and go to state 46
    '='         shift, and go to state 47

    PackageOrTypeName  go to state 48
    Type               go to state 49
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54


State 18

   85 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')'
   86                         | FUNC IDENTIFIER . '(' ')' ReturnTypeList
   87                         | FUNC IDENTIFIER . '(' ParameterList ')'
   88                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList

    '('  shift, and go to state 55


State 19

   76 TypeDeclaration: TYPE IDENTIFIER . STRUCT '{' MemberDeclarations '}' ';'
   77                | TYPE IDENTIFIER . INTERFACE '{' InterfaceFunctionDeclarations '}' ';'
   78                | TYPE IDENTIFIER . Type ';'

    FUNC        shift, and go to state 31
    STRUCT      shift, and go to state 56
    INTERFACE   shift, and go to state 57
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 58
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54


State 20

    1 PackageOrTypeName: IDENTIFIER .

    $default  reduce using rule 1 (PackageOrTypeName)


State 21

    2 PackageOrTypeName: PackageOrTypeName . '.' IDENTIFIER
   41 PackageDeclaration: PACKAGE PackageOrTypeName . ';'

    '.'  shift, and go to state 59
    ';'  shift, and go to state 60


State 22

    2 PackageOrTypeName: PackageOrTypeName . '.' IDENTIFIER
   44 ImportDeclaration: IMPORT PackageOrTypeName . ';'
   45                  | IMPORT PackageOrTypeName . '.' '*' ';'

    '.'  shift, and go to state 61
    ';'  shift, and go to state 62


State 23

    0 $accept: Program $end .

    $default  accept


State 24

   34 Program: PackageDeclaration ImportDeclarations . Declarations
   35        | PackageDeclaration ImportDeclarations .
   43 ImportDeclarations: ImportDeclarations . ImportDeclaration

    VAR     shift, and go to state 1
    FUNC    shift, and go to state 2
    TYPE    shift, and go to state 3
    IMPORT  shift, and go to state 5

    $default  reduce using rule 35 (Program)

    ImportDeclaration         go to state 26
    Declarations              go to state 63
    Declaration               go to state 11
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 25

   36 Program: PackageDeclaration Declarations .
   47 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 36 (Program)

    Declaration               go to state 28
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 26

   43 ImportDeclarations: ImportDeclarations ImportDeclaration .

    $default  reduce using rule 43 (ImportDeclarations)


State 27

   37 Program: ImportDeclarations Declarations .
   47 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 37 (Program)

    Declaration               go to state 28
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 28

   47 Declarations: Declarations Declaration .

    $default  reduce using rule 47 (Declarations)


State 29

   93 CodeBlock: '{' . local_variable_declaration_statements '}'
   94          | '{' . '}'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    IF              shift, and go to state 67
    WHILE           shift, and go to state 68
    DO              shift, and go to state 69
    FOR             shift, and go to state 70
    SWITCH          shift, and go to state 71
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 72
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '}'             shift, and go to state 81
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    VariableDeclaration                    go to state 86
    local_variable_declaration_statements  go to state 87
    local_variable_declaration_statement   go to state 88
    statement                              go to state 89
    selection_statement                    go to state 90
    if_statement                           go to state 91
    switch_statement                       go to state 92
    iteration_statemnet                    go to state 93
    jump_statement                         go to state 94
    primary_expression                     go to state 95
    constant                               go to state 96
    postfix_expression                     go to state 97
    unary_expression                       go to state 98
    multiplicative_expression              go to state 99
    additive_expression                    go to state 100
    shift_expression                       go to state 101
    relational_expression                  go to state 102
    equality_expression                    go to state 103
    and_expression                         go to state 104
    exclusive_or_expression                go to state 105
    inclusive_or_expression                go to state 106
    logical_and_expression                 go to state 107
    logical_or_expression                  go to state 108
    basic_expression                       go to state 109
    postfix_expression_list                go to state 110
    assignment_expression                  go to state 111
    expression_statement                   go to state 112


State 30

   99 FunctionDeclaration: MethodDeclarationHeader1 CodeBlock .

    $default  reduce using rule 99 (FunctionDeclaration)


State 31

   26 FunctionType: FUNC . '(' ')'
   27             | FUNC . '(' ')' ReturnTypeList
   28             | FUNC . '(' TypeList ')'
   29             | FUNC . '(' TypeList ')' ReturnTypeList

    '('  shift, and go to state 113


State 32

   33 InterfaceType: INTERFACE . '{' '}'

    '{'  shift, and go to state 114


State 33

   13 PrimitiveType: INT8 .

    $default  reduce using rule 13 (PrimitiveType)


State 34

   14 PrimitiveType: INT16 .

    $default  reduce using rule 14 (PrimitiveType)


State 35

   15 PrimitiveType: INT32 .

    $default  reduce using rule 15 (PrimitiveType)


State 36

   16 PrimitiveType: INT64 .

    $default  reduce using rule 16 (PrimitiveType)


State 37

    9 PrimitiveType: UINT8 .

    $default  reduce using rule 9 (PrimitiveType)


State 38

   10 PrimitiveType: UINT16 .

    $default  reduce using rule 10 (PrimitiveType)


State 39

   11 PrimitiveType: UINT32 .

    $default  reduce using rule 11 (PrimitiveType)


State 40

   12 PrimitiveType: UINT64 .

    $default  reduce using rule 12 (PrimitiveType)


State 41

   17 PrimitiveType: FLOAT32 .

    $default  reduce using rule 17 (PrimitiveType)


State 42

   18 PrimitiveType: FLOAT64 .

    $default  reduce using rule 18 (PrimitiveType)


State 43

   19 PrimitiveType: BOOL .

    $default  reduce using rule 19 (PrimitiveType)


State 44

   20 PrimitiveType: STRING .

    $default  reduce using rule 20 (PrimitiveType)


State 45

   55 VariableList: VariableList ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 115


State 46

   24 Dims: '[' . ']'

    ']'  shift, and go to state 116


State 47

   52 VariableDeclaration: VAR VariableList '=' . VariableInitializerList ';'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '['             shift, and go to state 118
    '('             shift, and go to state 80
    '{'             shift, and go to state 119
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 120
    VariableInitializerList       go to state 121
    ComplexVariableInitializer    go to state 122
    DimExprs                      go to state 123
    DimExpr                       go to state 124
    AnonymousFunctionDeclaration  go to state 125
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 127


State 48

    2 PackageOrTypeName: PackageOrTypeName . '.' IDENTIFIER
   21 ReferenceType: PackageOrTypeName .

    '.'  shift, and go to state 59

    $default  reduce using rule 21 (ReferenceType)


State 49

   51 VariableDeclaration: VAR VariableList Type . ';'
   53                    | VAR VariableList Type . '=' VariableInitializerList ';'

    ';'  shift, and go to state 128
    '='  shift, and go to state 129


State 50

    5 Type: PrimitiveType .

    $default  reduce using rule 5 (Type)


State 51

    6 Type: ReferenceType .

    $default  reduce using rule 6 (Type)


State 52

    7 Type: Dims . PrimitiveType
    8     | Dims . ReferenceType
   25 Dims: Dims . '[' ']'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 130

    PackageOrTypeName  go to state 48
    PrimitiveType      go to state 131
    ReferenceType      go to state 132
    FunctionType       go to state 53
    InterfaceType      go to state 54


State 53

   22 ReferenceType: FunctionType .

    $default  reduce using rule 22 (ReferenceType)


State 54

   23 ReferenceType: InterfaceType .

    $default  reduce using rule 23 (ReferenceType)


State 55

   85 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')'
   86                         | FUNC IDENTIFIER '(' . ')' ReturnTypeList
   87                         | FUNC IDENTIFIER '(' . ParameterList ')'
   88                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 133
    ')'         shift, and go to state 134

    ParameterList  go to state 135


State 56

   76 TypeDeclaration: TYPE IDENTIFIER STRUCT . '{' MemberDeclarations '}' ';'

    '{'  shift, and go to state 136


State 57

   33 InterfaceType: INTERFACE . '{' '}'
   77 TypeDeclaration: TYPE IDENTIFIER INTERFACE . '{' InterfaceFunctionDeclarations '}' ';'

    '{'  shift, and go to state 137


State 58

   78 TypeDeclaration: TYPE IDENTIFIER Type . ';'

    ';'  shift, and go to state 138


State 59

    2 PackageOrTypeName: PackageOrTypeName '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 139


State 60

   41 PackageDeclaration: PACKAGE PackageOrTypeName ';' .

    $default  reduce using rule 41 (PackageDeclaration)


State 61

    2 PackageOrTypeName: PackageOrTypeName '.' . IDENTIFIER
   45 ImportDeclaration: IMPORT PackageOrTypeName '.' . '*' ';'

    IDENTIFIER  shift, and go to state 139
    '*'         shift, and go to state 140


State 62

   44 ImportDeclaration: IMPORT PackageOrTypeName ';' .

    $default  reduce using rule 44 (ImportDeclaration)


State 63

   34 Program: PackageDeclaration ImportDeclarations Declarations .
   47 Declarations: Declarations . Declaration

    VAR   shift, and go to state 1
    FUNC  shift, and go to state 2
    TYPE  shift, and go to state 3

    $default  reduce using rule 34 (Program)

    Declaration               go to state 28
    VariableDeclaration       go to state 12
    TypeDeclaration           go to state 13
    MethodDeclarationHeader1  go to state 14
    FunctionDeclaration       go to state 15


State 64

  149 unary_expression: INC . unary_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression  go to state 95
    constant            go to state 96
    postfix_expression  go to state 126
    unary_expression    go to state 141


State 65

  150 unary_expression: DEC . unary_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression  go to state 95
    constant            go to state 96
    postfix_expression  go to state 126
    unary_expression    go to state 142


State 66

  132 primary_expression: TOKEN_THIS .

    $default  reduce using rule 132 (primary_expression)


State 67

  114 if_statement: IF . '(' basic_expression ')' CodeBlock
  115             | IF . '(' basic_expression ')' CodeBlock ELSE else_statemnet

    '('  shift, and go to state 143


State 68

  119 iteration_statemnet: WHILE . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 144


State 69

  120 iteration_statemnet: DO . CodeBlock WHILE '(' basic_expression ')' ';'

    '{'  shift, and go to state 29

    CodeBlock  go to state 145


State 70

  121 iteration_statemnet: FOR . '(' for_init for_expr for_incr ')' CodeBlock

    '('  shift, and go to state 146


State 71

  118 switch_statement: SWITCH . '(' basic_expression ')' CodeBlock

    '('  shift, and go to state 147


State 72

  128 jump_statement: RETURN . ';'
  129               | RETURN . expression_list ';'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    ';'             shift, and go to state 148
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 149
    expression                 go to state 150
    expression_list            go to state 151


State 73

  137 constant: TOKEN_NIL .

    $default  reduce using rule 137 (constant)


State 74

  138 constant: TOKEN_TRUE .

    $default  reduce using rule 138 (constant)


State 75

  139 constant: TOKEN_FALSE .

    $default  reduce using rule 139 (constant)


State 76

  134 constant: INTEGER .

    $default  reduce using rule 134 (constant)


State 77

  135 constant: FLOAT .

    $default  reduce using rule 135 (constant)


State 78

  136 constant: STRING_LITERAL .

    $default  reduce using rule 136 (constant)


State 79

  130 primary_expression: IDENTIFIER .

    $default  reduce using rule 130 (primary_expression)


State 80

  133 primary_expression: '(' . basic_expression ')'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 152


State 81

   94 CodeBlock: '{' '}' .

    $default  reduce using rule 94 (CodeBlock)


State 82

  151 unary_expression: '+' . unary_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression  go to state 95
    constant            go to state 96
    postfix_expression  go to state 126
    unary_expression    go to state 153


State 83

  152 unary_expression: '-' . unary_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression  go to state 95
    constant            go to state 96
    postfix_expression  go to state 126
    unary_expression    go to state 154


State 84

  153 unary_expression: '~' . unary_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression  go to state 95
    constant            go to state 96
    postfix_expression  go to state 126
    unary_expression    go to state 155


State 85

  154 unary_expression: '!' . unary_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression  go to state 95
    constant            go to state 96
    postfix_expression  go to state 126
    unary_expression    go to state 156


State 86

  106 local_variable_declaration_statement: VariableDeclaration .

    $default  reduce using rule 106 (local_variable_declaration_statement)


State 87

   93 CodeBlock: '{' local_variable_declaration_statements . '}'
  105 local_variable_declaration_statements: local_variable_declaration_statements . local_variable_declaration_statement

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    IF              shift, and go to state 67
    WHILE           shift, and go to state 68
    DO              shift, and go to state 69
    FOR             shift, and go to state 70
    SWITCH          shift, and go to state 71
    VAR             shift, and go to state 1
    RETURN          shift, and go to state 72
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '}'             shift, and go to state 157
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    VariableDeclaration                   go to state 86
    local_variable_declaration_statement  go to state 158
    statement                             go to state 89
    selection_statement                   go to state 90
    if_statement                          go to state 91
    switch_statement                      go to state 92
    iteration_statemnet                   go to state 93
    jump_statement                        go to state 94
    primary_expression                    go to state 95
    constant                              go to state 96
    postfix_expression                    go to state 97
    unary_expression                      go to state 98
    multiplicative_expression             go to state 99
    additive_expression                   go to state 100
    shift_expression                      go to state 101
    relational_expression                 go to state 102
    equality_expression                   go to state 103
    and_expression                        go to state 104
    exclusive_or_expression               go to state 105
    inclusive_or_expression               go to state 106
    logical_and_expression                go to state 107
    logical_or_expression                 go to state 108
    basic_expression                      go to state 109
    postfix_expression_list               go to state 110
    assignment_expression                 go to state 111
    expression_statement                  go to state 112


State 88

  104 local_variable_declaration_statements: local_variable_declaration_statement .

    $default  reduce using rule 104 (local_variable_declaration_statements)


State 89

  107 local_variable_declaration_statement: statement .

    $default  reduce using rule 107 (local_variable_declaration_statement)


State 90

  109 statement: selection_statement .

    $default  reduce using rule 109 (statement)


State 91

  112 selection_statement: if_statement .

    $default  reduce using rule 112 (selection_statement)


State 92

  113 selection_statement: switch_statement .

    $default  reduce using rule 113 (selection_statement)


State 93

  110 statement: iteration_statemnet .

    $default  reduce using rule 110 (statement)


State 94

  111 statement: jump_statement .

    $default  reduce using rule 111 (statement)


State 95

  140 postfix_expression: primary_expression .

    $default  reduce using rule 140 (postfix_expression)


State 96

  131 primary_expression: constant .

    $default  reduce using rule 131 (primary_expression)


State 97

  141 postfix_expression: postfix_expression . INC
  142                   | postfix_expression . DEC
  143                   | postfix_expression . '.' IDENTIFIER
  144                   | postfix_expression . '[' basic_expression ']'
  145                   | postfix_expression . '(' expression_list ')'
  146                   | postfix_expression . '(' ')'
  147                   | postfix_expression . '(' ')' CodeBlock
  148 unary_expression: postfix_expression .
  187 postfix_expression_list: postfix_expression .
  190 assignment_expression: postfix_expression . compound_assignment_operator ComplexVariableInitializer
  191                      | postfix_expression . VAR_ASSIGN ComplexVariableInitializer

    VAR_ASSIGN    shift, and go to state 159
    ADD_ASSIGN    shift, and go to state 160
    SUB_ASSIGN    shift, and go to state 161
    MUL_ASSIGN    shift, and go to state 162
    DIV_ASSIGN    shift, and go to state 163
    MOD_ASSIGN    shift, and go to state 164
    AND_ASSIGN    shift, and go to state 165
    OR_ASSIGN     shift, and go to state 166
    XOR_ASSIGN    shift, and go to state 167
    RIGHT_ASSIGN  shift, and go to state 168
    LEFT_ASSIGN   shift, and go to state 169
    INC           shift, and go to state 170
    DEC           shift, and go to state 171
    '.'           shift, and go to state 172
    '['           shift, and go to state 173
    '('           shift, and go to state 174

    ','       reduce using rule 187 (postfix_expression_list)
    '='       reduce using rule 187 (postfix_expression_list)
    $default  reduce using rule 148 (unary_expression)

    compound_assignment_operator  go to state 175


State 98

  155 multiplicative_expression: unary_expression .

    $default  reduce using rule 155 (multiplicative_expression)


State 99

  156 multiplicative_expression: multiplicative_expression . '*' unary_expression
  157                          | multiplicative_expression . '/' unary_expression
  158                          | multiplicative_expression . '%' unary_expression
  159 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 176
    '/'  shift, and go to state 177
    '%'  shift, and go to state 178

    $default  reduce using rule 159 (additive_expression)


State 100

  160 additive_expression: additive_expression . '+' multiplicative_expression
  161                    | additive_expression . '-' multiplicative_expression
  162 shift_expression: additive_expression .

    '+'  shift, and go to state 179
    '-'  shift, and go to state 180

    $default  reduce using rule 162 (shift_expression)


State 101

  163 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  164                 | shift_expression . SHIFT_RIGHT additive_expression
  165 relational_expression: shift_expression .

    SHIFT_LEFT   shift, and go to state 181
    SHIFT_RIGHT  shift, and go to state 182

    $default  reduce using rule 165 (relational_expression)


State 102

  166 relational_expression: relational_expression . '<' shift_expression
  167                      | relational_expression . '>' shift_expression
  168                      | relational_expression . LE shift_expression
  169                      | relational_expression . GE shift_expression
  170 equality_expression: relational_expression .

    GE   shift, and go to state 183
    LE   shift, and go to state 184
    '<'  shift, and go to state 185
    '>'  shift, and go to state 186

    $default  reduce using rule 170 (equality_expression)


State 103

  171 equality_expression: equality_expression . EQ relational_expression
  172                    | equality_expression . NE relational_expression
  173 and_expression: equality_expression .

    EQ  shift, and go to state 187
    NE  shift, and go to state 188

    $default  reduce using rule 173 (and_expression)


State 104

  174 and_expression: and_expression . '&' equality_expression
  175 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 189

    $default  reduce using rule 175 (exclusive_or_expression)


State 105

  176 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  177 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 190

    $default  reduce using rule 177 (inclusive_or_expression)


State 106

  178 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  179 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 191

    $default  reduce using rule 179 (logical_and_expression)


State 107

  180 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  181 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 192

    $default  reduce using rule 181 (logical_or_expression)


State 108

  182 logical_or_expression: logical_or_expression . OR logical_and_expression
  183 basic_expression: logical_or_expression .

    OR  shift, and go to state 193

    $default  reduce using rule 183 (basic_expression)


State 109

  202 expression_statement: basic_expression .

    $default  reduce using rule 202 (expression_statement)


State 110

  188 postfix_expression_list: postfix_expression_list . ',' postfix_expression
  189 assignment_expression: postfix_expression_list . '=' VariableInitializerList

    ','  shift, and go to state 194
    '='  shift, and go to state 195


State 111

  203 expression_statement: assignment_expression .

    $default  reduce using rule 203 (expression_statement)


State 112

  108 statement: expression_statement . ';'

    ';'  shift, and go to state 196


State 113

   26 FunctionType: FUNC '(' . ')'
   27             | FUNC '(' . ')' ReturnTypeList
   28             | FUNC '(' . TypeList ')'
   29             | FUNC '(' . TypeList ')' ReturnTypeList

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46
    ')'         shift, and go to state 197

    PackageOrTypeName  go to state 48
    TypeList           go to state 198
    Type               go to state 199
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54


State 114

   33 InterfaceType: INTERFACE '{' . '}'

    '}'  shift, and go to state 200


State 115

   55 VariableList: VariableList ',' IDENTIFIER .

    $default  reduce using rule 55 (VariableList)


State 116

   24 Dims: '[' ']' .

    $default  reduce using rule 24 (Dims)


State 117

  100 AnonymousFunctionDeclaration: FUNC . '(' ')' CodeBlock
  101                             | FUNC . '(' ')' ReturnTypeList CodeBlock
  102                             | FUNC . '(' ParameterList ')' CodeBlock
  103                             | FUNC . '(' ParameterList ')' ReturnTypeList CodeBlock

    '('  shift, and go to state 201


State 118

   69 DimExpr: '[' . basic_expression ']'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 202


State 119

   61 ComplexVariableInitializer: '{' . ArrayInitializerList '}'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 203
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '{'             shift, and go to state 204
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 205
    ArrayInitializerList          go to state 206
    ArrayInitializer              go to state 207
    ArrayPositionInitializer      go to state 208
    AnonymousFunctionDeclaration  go to state 209
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 210


State 120

   59 ComplexVariableInitializer: PrimitiveType . '(' basic_expression ')'

    '('  shift, and go to state 211


State 121

   52 VariableDeclaration: VAR VariableList '=' VariableInitializerList . ';'
   57 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer

    ','  shift, and go to state 212
    ';'  shift, and go to state 213


State 122

   56 VariableInitializerList: ComplexVariableInitializer .

    $default  reduce using rule 56 (VariableInitializerList)


State 123

   62 ComplexVariableInitializer: DimExprs . Type
   63                           | DimExprs . Type '{' ArrayInitializerList '}'
   64                           | DimExprs . Type '{' '}'
   68 DimExprs: DimExprs . DimExpr

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 214

    PackageOrTypeName  go to state 48
    Type               go to state 215
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54
    DimExpr            go to state 216


State 124

   67 DimExprs: DimExpr .

    $default  reduce using rule 67 (DimExprs)


State 125

   60 ComplexVariableInitializer: AnonymousFunctionDeclaration .

    $default  reduce using rule 60 (ComplexVariableInitializer)


State 126

  141 postfix_expression: postfix_expression . INC
  142                   | postfix_expression . DEC
  143                   | postfix_expression . '.' IDENTIFIER
  144                   | postfix_expression . '[' basic_expression ']'
  145                   | postfix_expression . '(' expression_list ')'
  146                   | postfix_expression . '(' ')'
  147                   | postfix_expression . '(' ')' CodeBlock
  148 unary_expression: postfix_expression .

    INC  shift, and go to state 170
    DEC  shift, and go to state 171
    '.'  shift, and go to state 172
    '['  shift, and go to state 173
    '('  shift, and go to state 174

    $default  reduce using rule 148 (unary_expression)


State 127

   58 ComplexVariableInitializer: basic_expression .

    $default  reduce using rule 58 (ComplexVariableInitializer)


State 128

   51 VariableDeclaration: VAR VariableList Type ';' .

    $default  reduce using rule 51 (VariableDeclaration)


State 129

   53 VariableDeclaration: VAR VariableList Type '=' . VariableInitializerList ';'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '['             shift, and go to state 118
    '('             shift, and go to state 80
    '{'             shift, and go to state 119
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 120
    VariableInitializerList       go to state 217
    ComplexVariableInitializer    go to state 122
    DimExprs                      go to state 123
    DimExpr                       go to state 124
    AnonymousFunctionDeclaration  go to state 125
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 127


State 130

   25 Dims: Dims '[' . ']'

    ']'  shift, and go to state 218


State 131

    7 Type: Dims PrimitiveType .

    $default  reduce using rule 7 (Type)


State 132

    8 Type: Dims ReferenceType .

    $default  reduce using rule 8 (Type)


State 133

   89 ParameterList: IDENTIFIER . Type

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 219
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54


State 134

   85 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' .
   86                         | FUNC IDENTIFIER '(' ')' . ReturnTypeList

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46
    '('         shift, and go to state 220

    $default  reduce using rule 85 (MethodDeclarationHeader1)

    PackageOrTypeName  go to state 48
    Type               go to state 221
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 222
    InterfaceType      go to state 54


State 135

   87 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList . ')'
   88                         | FUNC IDENTIFIER '(' ParameterList . ')' ReturnTypeList
   90 ParameterList: ParameterList . ',' IDENTIFIER Type

    ','  shift, and go to state 223
    ')'  shift, and go to state 224


State 136

   76 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' . MemberDeclarations '}' ';'

    VAR   shift, and go to state 225
    FUNC  shift, and go to state 2

    MemberDeclarations        go to state 226
    MemberDeclaration         go to state 227
    FieldDeclaration          go to state 228
    MethodDeclaration         go to state 229
    MethodDeclarationHeader1  go to state 230


State 137

   33 InterfaceType: INTERFACE '{' . '}'
   77 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' . InterfaceFunctionDeclarations '}' ';'

    FUNC  shift, and go to state 231
    '}'   shift, and go to state 200

    MethodDeclarationHeader1       go to state 232
    MethodDeclarationHeader2       go to state 233
    InterfaceFunctionDeclarations  go to state 234
    InterfaceFunctionDeclaration   go to state 235


State 138

   78 TypeDeclaration: TYPE IDENTIFIER Type ';' .

    $default  reduce using rule 78 (TypeDeclaration)


State 139

    2 PackageOrTypeName: PackageOrTypeName '.' IDENTIFIER .

    $default  reduce using rule 2 (PackageOrTypeName)


State 140

   45 ImportDeclaration: IMPORT PackageOrTypeName '.' '*' . ';'

    ';'  shift, and go to state 236


State 141

  149 unary_expression: INC unary_expression .

    $default  reduce using rule 149 (unary_expression)


State 142

  150 unary_expression: DEC unary_expression .

    $default  reduce using rule 150 (unary_expression)


State 143

  114 if_statement: IF '(' . basic_expression ')' CodeBlock
  115             | IF '(' . basic_expression ')' CodeBlock ELSE else_statemnet

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 237


State 144

  119 iteration_statemnet: WHILE '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 238


State 145

  120 iteration_statemnet: DO CodeBlock . WHILE '(' basic_expression ')' ';'

    WHILE  shift, and go to state 239


State 146

  121 iteration_statemnet: FOR '(' . for_init for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    VAR             shift, and go to state 1
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    ';'             shift, and go to state 240
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    VariableDeclaration        go to state 241
    for_init                   go to state 242
    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 109
    postfix_expression_list    go to state 110
    assignment_expression      go to state 111
    expression_statement       go to state 243


State 147

  118 switch_statement: SWITCH '(' . basic_expression ')' CodeBlock

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 244


State 148

  128 jump_statement: RETURN ';' .

    $default  reduce using rule 128 (jump_statement)


State 149

  184 expression: basic_expression .

    $default  reduce using rule 184 (expression)


State 150

  185 expression_list: expression .

    $default  reduce using rule 185 (expression_list)


State 151

  129 jump_statement: RETURN expression_list . ';'
  186 expression_list: expression_list . ',' expression

    ','  shift, and go to state 245
    ';'  shift, and go to state 246


State 152

  133 primary_expression: '(' basic_expression . ')'

    ')'  shift, and go to state 247


State 153

  151 unary_expression: '+' unary_expression .

    $default  reduce using rule 151 (unary_expression)


State 154

  152 unary_expression: '-' unary_expression .

    $default  reduce using rule 152 (unary_expression)


State 155

  153 unary_expression: '~' unary_expression .

    $default  reduce using rule 153 (unary_expression)


State 156

  154 unary_expression: '!' unary_expression .

    $default  reduce using rule 154 (unary_expression)


State 157

   93 CodeBlock: '{' local_variable_declaration_statements '}' .

    $default  reduce using rule 93 (CodeBlock)


State 158

  105 local_variable_declaration_statements: local_variable_declaration_statements local_variable_declaration_statement .

    $default  reduce using rule 105 (local_variable_declaration_statements)


State 159

  191 assignment_expression: postfix_expression VAR_ASSIGN . ComplexVariableInitializer

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '['             shift, and go to state 118
    '('             shift, and go to state 80
    '{'             shift, and go to state 119
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 120
    ComplexVariableInitializer    go to state 248
    DimExprs                      go to state 123
    DimExpr                       go to state 124
    AnonymousFunctionDeclaration  go to state 125
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 127


State 160

  192 compound_assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 192 (compound_assignment_operator)


State 161

  193 compound_assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 193 (compound_assignment_operator)


State 162

  194 compound_assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 194 (compound_assignment_operator)


State 163

  195 compound_assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 195 (compound_assignment_operator)


State 164

  196 compound_assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 196 (compound_assignment_operator)


State 165

  197 compound_assignment_operator: AND_ASSIGN .

    $default  reduce using rule 197 (compound_assignment_operator)


State 166

  198 compound_assignment_operator: OR_ASSIGN .

    $default  reduce using rule 198 (compound_assignment_operator)


State 167

  199 compound_assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 199 (compound_assignment_operator)


State 168

  200 compound_assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 200 (compound_assignment_operator)


State 169

  201 compound_assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 201 (compound_assignment_operator)


State 170

  141 postfix_expression: postfix_expression INC .

    $default  reduce using rule 141 (postfix_expression)


State 171

  142 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 142 (postfix_expression)


State 172

  143 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 249


State 173

  144 postfix_expression: postfix_expression '[' . basic_expression ']'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 250


State 174

  145 postfix_expression: postfix_expression '(' . expression_list ')'
  146                   | postfix_expression '(' . ')'
  147                   | postfix_expression '(' . ')' CodeBlock

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    ')'             shift, and go to state 251
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 149
    expression                 go to state 150
    expression_list            go to state 252


State 175

  190 assignment_expression: postfix_expression compound_assignment_operator . ComplexVariableInitializer

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '['             shift, and go to state 118
    '('             shift, and go to state 80
    '{'             shift, and go to state 119
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 120
    ComplexVariableInitializer    go to state 253
    DimExprs                      go to state 123
    DimExpr                       go to state 124
    AnonymousFunctionDeclaration  go to state 125
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 127


State 176

  156 multiplicative_expression: multiplicative_expression '*' . unary_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression  go to state 95
    constant            go to state 96
    postfix_expression  go to state 126
    unary_expression    go to state 254


State 177

  157 multiplicative_expression: multiplicative_expression '/' . unary_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression  go to state 95
    constant            go to state 96
    postfix_expression  go to state 126
    unary_expression    go to state 255


State 178

  158 multiplicative_expression: multiplicative_expression '%' . unary_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression  go to state 95
    constant            go to state 96
    postfix_expression  go to state 126
    unary_expression    go to state 256


State 179

  160 additive_expression: additive_expression '+' . multiplicative_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 257


State 180

  161 additive_expression: additive_expression '-' . multiplicative_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 258


State 181

  163 shift_expression: shift_expression SHIFT_LEFT . additive_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 259


State 182

  164 shift_expression: shift_expression SHIFT_RIGHT . additive_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 260


State 183

  169 relational_expression: relational_expression GE . shift_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 261


State 184

  168 relational_expression: relational_expression LE . shift_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 262


State 185

  166 relational_expression: relational_expression '<' . shift_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 263


State 186

  167 relational_expression: relational_expression '>' . shift_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 264


State 187

  171 equality_expression: equality_expression EQ . relational_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 265


State 188

  172 equality_expression: equality_expression NE . relational_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 266


State 189

  174 and_expression: and_expression '&' . equality_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 267


State 190

  176 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 268


State 191

  178 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 269


State 192

  180 logical_and_expression: logical_and_expression AND . inclusive_or_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 270


State 193

  182 logical_or_expression: logical_or_expression OR . logical_and_expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 271


State 194

  188 postfix_expression_list: postfix_expression_list ',' . postfix_expression

    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80

    primary_expression  go to state 95
    constant            go to state 96
    postfix_expression  go to state 272


State 195

  189 assignment_expression: postfix_expression_list '=' . VariableInitializerList

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '['             shift, and go to state 118
    '('             shift, and go to state 80
    '{'             shift, and go to state 119
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 120
    VariableInitializerList       go to state 273
    ComplexVariableInitializer    go to state 122
    DimExprs                      go to state 123
    DimExpr                       go to state 124
    AnonymousFunctionDeclaration  go to state 125
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 127


State 196

  108 statement: expression_statement ';' .

    $default  reduce using rule 108 (statement)


State 197

   26 FunctionType: FUNC '(' ')' .
   27             | FUNC '(' ')' . ReturnTypeList

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46
    '('         shift, and go to state 220

    $default  reduce using rule 26 (FunctionType)

    PackageOrTypeName  go to state 48
    Type               go to state 221
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 274
    InterfaceType      go to state 54


State 198

    4 TypeList: TypeList . ',' Type
   28 FunctionType: FUNC '(' TypeList . ')'
   29             | FUNC '(' TypeList . ')' ReturnTypeList

    ','  shift, and go to state 275
    ')'  shift, and go to state 276


State 199

    3 TypeList: Type .

    $default  reduce using rule 3 (TypeList)


State 200

   33 InterfaceType: INTERFACE '{' '}' .

    $default  reduce using rule 33 (InterfaceType)


State 201

  100 AnonymousFunctionDeclaration: FUNC '(' . ')' CodeBlock
  101                             | FUNC '(' . ')' ReturnTypeList CodeBlock
  102                             | FUNC '(' . ParameterList ')' CodeBlock
  103                             | FUNC '(' . ParameterList ')' ReturnTypeList CodeBlock

    IDENTIFIER  shift, and go to state 133
    ')'         shift, and go to state 277

    ParameterList  go to state 278


State 202

   69 DimExpr: '[' basic_expression . ']'

    ']'  shift, and go to state 279


State 203

   75 ArrayPositionInitializer: INTEGER . ':' ArrayInitializer
  134 constant: INTEGER .

    ':'  shift, and go to state 280

    $default  reduce using rule 134 (constant)


State 204

   74 ArrayInitializer: '{' . ArrayInitializerList '}'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 203
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '{'             shift, and go to state 204
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 205
    ArrayInitializerList          go to state 281
    ArrayInitializer              go to state 207
    ArrayPositionInitializer      go to state 208
    AnonymousFunctionDeclaration  go to state 209
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 210


State 205

   71 ArrayInitializer: PrimitiveType . '(' basic_expression ')'

    '('  shift, and go to state 282


State 206

   61 ComplexVariableInitializer: '{' ArrayInitializerList . '}'
   66 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 283
    '}'  shift, and go to state 284


State 207

   65 ArrayInitializerList: ArrayInitializer .

    $default  reduce using rule 65 (ArrayInitializerList)


State 208

   73 ArrayInitializer: ArrayPositionInitializer .

    $default  reduce using rule 73 (ArrayInitializer)


State 209

   72 ArrayInitializer: AnonymousFunctionDeclaration .

    $default  reduce using rule 72 (ArrayInitializer)


State 210

   70 ArrayInitializer: basic_expression .

    $default  reduce using rule 70 (ArrayInitializer)


State 211

   59 ComplexVariableInitializer: PrimitiveType '(' . basic_expression ')'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 285


State 212

   57 VariableInitializerList: VariableInitializerList ',' . ComplexVariableInitializer

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '['             shift, and go to state 118
    '('             shift, and go to state 80
    '{'             shift, and go to state 119
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 120
    ComplexVariableInitializer    go to state 286
    DimExprs                      go to state 123
    DimExpr                       go to state 124
    AnonymousFunctionDeclaration  go to state 125
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 127


State 213

   52 VariableDeclaration: VAR VariableList '=' VariableInitializerList ';' .

    $default  reduce using rule 52 (VariableDeclaration)


State 214

   24 Dims: '[' . ']'
   69 DimExpr: '[' . basic_expression ']'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    ']'             shift, and go to state 116
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 202


State 215

   62 ComplexVariableInitializer: DimExprs Type .
   63                           | DimExprs Type . '{' ArrayInitializerList '}'
   64                           | DimExprs Type . '{' '}'

    '{'  shift, and go to state 287

    $default  reduce using rule 62 (ComplexVariableInitializer)


State 216

   68 DimExprs: DimExprs DimExpr .

    $default  reduce using rule 68 (DimExprs)


State 217

   53 VariableDeclaration: VAR VariableList Type '=' VariableInitializerList . ';'
   57 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer

    ','  shift, and go to state 212
    ';'  shift, and go to state 288


State 218

   25 Dims: Dims '[' ']' .

    $default  reduce using rule 25 (Dims)


State 219

   89 ParameterList: IDENTIFIER Type .

    $default  reduce using rule 89 (ParameterList)


State 220

   31 ReturnTypeList: '(' . Type ')'
   32               | '(' . ReturnTypeList ',' Type ')'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46
    '('         shift, and go to state 220

    PackageOrTypeName  go to state 48
    Type               go to state 289
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 290
    InterfaceType      go to state 54


State 221

   30 ReturnTypeList: Type .

    $default  reduce using rule 30 (ReturnTypeList)


State 222

   86 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ')' ReturnTypeList .

    $default  reduce using rule 86 (MethodDeclarationHeader1)


State 223

   90 ParameterList: ParameterList ',' . IDENTIFIER Type

    IDENTIFIER  shift, and go to state 291


State 224

   87 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' .
   88                         | FUNC IDENTIFIER '(' ParameterList ')' . ReturnTypeList

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46
    '('         shift, and go to state 220

    $default  reduce using rule 87 (MethodDeclarationHeader1)

    PackageOrTypeName  go to state 48
    Type               go to state 221
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 292
    InterfaceType      go to state 54


State 225

   83 FieldDeclaration: VAR . IDENTIFIER Type ';'

    IDENTIFIER  shift, and go to state 293


State 226

   76 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations . '}' ';'
   80 MemberDeclarations: MemberDeclarations . MemberDeclaration

    VAR   shift, and go to state 225
    FUNC  shift, and go to state 2
    '}'   shift, and go to state 294

    MemberDeclaration         go to state 295
    FieldDeclaration          go to state 228
    MethodDeclaration         go to state 229
    MethodDeclarationHeader1  go to state 230


State 227

   79 MemberDeclarations: MemberDeclaration .

    $default  reduce using rule 79 (MemberDeclarations)


State 228

   81 MemberDeclaration: FieldDeclaration .

    $default  reduce using rule 81 (MemberDeclaration)


State 229

   82 MemberDeclaration: MethodDeclaration .

    $default  reduce using rule 82 (MemberDeclaration)


State 230

   84 MethodDeclaration: MethodDeclarationHeader1 . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 296


State 231

   85 MethodDeclarationHeader1: FUNC . IDENTIFIER '(' ')'
   86                         | FUNC . IDENTIFIER '(' ')' ReturnTypeList
   87                         | FUNC . IDENTIFIER '(' ParameterList ')'
   88                         | FUNC . IDENTIFIER '(' ParameterList ')' ReturnTypeList
   91 MethodDeclarationHeader2: FUNC . IDENTIFIER '(' TypeList ')'
   92                         | FUNC . IDENTIFIER '(' TypeList ')' ReturnTypeList

    IDENTIFIER  shift, and go to state 297


State 232

   97 InterfaceFunctionDeclaration: MethodDeclarationHeader1 . ';'

    ';'  shift, and go to state 298


State 233

   98 InterfaceFunctionDeclaration: MethodDeclarationHeader2 . ';'

    ';'  shift, and go to state 299


State 234

   77 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations . '}' ';'
   96 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations . InterfaceFunctionDeclaration

    FUNC  shift, and go to state 231
    '}'   shift, and go to state 300

    MethodDeclarationHeader1      go to state 232
    MethodDeclarationHeader2      go to state 233
    InterfaceFunctionDeclaration  go to state 301


State 235

   95 InterfaceFunctionDeclarations: InterfaceFunctionDeclaration .

    $default  reduce using rule 95 (InterfaceFunctionDeclarations)


State 236

   45 ImportDeclaration: IMPORT PackageOrTypeName '.' '*' ';' .

    $default  reduce using rule 45 (ImportDeclaration)


State 237

  114 if_statement: IF '(' basic_expression . ')' CodeBlock
  115             | IF '(' basic_expression . ')' CodeBlock ELSE else_statemnet

    ')'  shift, and go to state 302


State 238

  119 iteration_statemnet: WHILE '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 303


State 239

  120 iteration_statemnet: DO CodeBlock WHILE . '(' basic_expression ')' ';'

    '('  shift, and go to state 304


State 240

  124 for_init: ';' .

    $default  reduce using rule 124 (for_init)


State 241

  123 for_init: VariableDeclaration .

    $default  reduce using rule 123 (for_init)


State 242

  121 iteration_statemnet: FOR '(' for_init . for_expr for_incr ')' CodeBlock

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    ';'             shift, and go to state 305
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    for_expr                   go to state 306
    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 307


State 243

  122 for_init: expression_statement . ';'

    ';'  shift, and go to state 308


State 244

  118 switch_statement: SWITCH '(' basic_expression . ')' CodeBlock

    ')'  shift, and go to state 309


State 245

  186 expression_list: expression_list ',' . expression

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 149
    expression                 go to state 310


State 246

  129 jump_statement: RETURN expression_list ';' .

    $default  reduce using rule 129 (jump_statement)


State 247

  133 primary_expression: '(' basic_expression ')' .

    $default  reduce using rule 133 (primary_expression)


State 248

  191 assignment_expression: postfix_expression VAR_ASSIGN ComplexVariableInitializer .

    $default  reduce using rule 191 (assignment_expression)


State 249

  143 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 143 (postfix_expression)


State 250

  144 postfix_expression: postfix_expression '[' basic_expression . ']'

    ']'  shift, and go to state 311


State 251

  146 postfix_expression: postfix_expression '(' ')' .
  147                   | postfix_expression '(' ')' . CodeBlock

    '{'  shift, and go to state 29

    $default  reduce using rule 146 (postfix_expression)

    CodeBlock  go to state 312


State 252

  145 postfix_expression: postfix_expression '(' expression_list . ')'
  186 expression_list: expression_list . ',' expression

    ','  shift, and go to state 245
    ')'  shift, and go to state 313


State 253

  190 assignment_expression: postfix_expression compound_assignment_operator ComplexVariableInitializer .

    $default  reduce using rule 190 (assignment_expression)


State 254

  156 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 156 (multiplicative_expression)


State 255

  157 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 157 (multiplicative_expression)


State 256

  158 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 158 (multiplicative_expression)


State 257

  156 multiplicative_expression: multiplicative_expression . '*' unary_expression
  157                          | multiplicative_expression . '/' unary_expression
  158                          | multiplicative_expression . '%' unary_expression
  160 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 176
    '/'  shift, and go to state 177
    '%'  shift, and go to state 178

    $default  reduce using rule 160 (additive_expression)


State 258

  156 multiplicative_expression: multiplicative_expression . '*' unary_expression
  157                          | multiplicative_expression . '/' unary_expression
  158                          | multiplicative_expression . '%' unary_expression
  161 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 176
    '/'  shift, and go to state 177
    '%'  shift, and go to state 178

    $default  reduce using rule 161 (additive_expression)


State 259

  160 additive_expression: additive_expression . '+' multiplicative_expression
  161                    | additive_expression . '-' multiplicative_expression
  163 shift_expression: shift_expression SHIFT_LEFT additive_expression .

    '+'  shift, and go to state 179
    '-'  shift, and go to state 180

    $default  reduce using rule 163 (shift_expression)


State 260

  160 additive_expression: additive_expression . '+' multiplicative_expression
  161                    | additive_expression . '-' multiplicative_expression
  164 shift_expression: shift_expression SHIFT_RIGHT additive_expression .

    '+'  shift, and go to state 179
    '-'  shift, and go to state 180

    $default  reduce using rule 164 (shift_expression)


State 261

  163 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  164                 | shift_expression . SHIFT_RIGHT additive_expression
  169 relational_expression: relational_expression GE shift_expression .

    SHIFT_LEFT   shift, and go to state 181
    SHIFT_RIGHT  shift, and go to state 182

    $default  reduce using rule 169 (relational_expression)


State 262

  163 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  164                 | shift_expression . SHIFT_RIGHT additive_expression
  168 relational_expression: relational_expression LE shift_expression .

    SHIFT_LEFT   shift, and go to state 181
    SHIFT_RIGHT  shift, and go to state 182

    $default  reduce using rule 168 (relational_expression)


State 263

  163 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  164                 | shift_expression . SHIFT_RIGHT additive_expression
  166 relational_expression: relational_expression '<' shift_expression .

    SHIFT_LEFT   shift, and go to state 181
    SHIFT_RIGHT  shift, and go to state 182

    $default  reduce using rule 166 (relational_expression)


State 264

  163 shift_expression: shift_expression . SHIFT_LEFT additive_expression
  164                 | shift_expression . SHIFT_RIGHT additive_expression
  167 relational_expression: relational_expression '>' shift_expression .

    SHIFT_LEFT   shift, and go to state 181
    SHIFT_RIGHT  shift, and go to state 182

    $default  reduce using rule 167 (relational_expression)


State 265

  166 relational_expression: relational_expression . '<' shift_expression
  167                      | relational_expression . '>' shift_expression
  168                      | relational_expression . LE shift_expression
  169                      | relational_expression . GE shift_expression
  171 equality_expression: equality_expression EQ relational_expression .

    GE   shift, and go to state 183
    LE   shift, and go to state 184
    '<'  shift, and go to state 185
    '>'  shift, and go to state 186

    $default  reduce using rule 171 (equality_expression)


State 266

  166 relational_expression: relational_expression . '<' shift_expression
  167                      | relational_expression . '>' shift_expression
  168                      | relational_expression . LE shift_expression
  169                      | relational_expression . GE shift_expression
  172 equality_expression: equality_expression NE relational_expression .

    GE   shift, and go to state 183
    LE   shift, and go to state 184
    '<'  shift, and go to state 185
    '>'  shift, and go to state 186

    $default  reduce using rule 172 (equality_expression)


State 267

  171 equality_expression: equality_expression . EQ relational_expression
  172                    | equality_expression . NE relational_expression
  174 and_expression: and_expression '&' equality_expression .

    EQ  shift, and go to state 187
    NE  shift, and go to state 188

    $default  reduce using rule 174 (and_expression)


State 268

  174 and_expression: and_expression . '&' equality_expression
  176 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 189

    $default  reduce using rule 176 (exclusive_or_expression)


State 269

  176 exclusive_or_expression: exclusive_or_expression . '^' and_expression
  178 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 190

    $default  reduce using rule 178 (inclusive_or_expression)


State 270

  178 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
  180 logical_and_expression: logical_and_expression AND inclusive_or_expression .

    '|'  shift, and go to state 191

    $default  reduce using rule 180 (logical_and_expression)


State 271

  180 logical_and_expression: logical_and_expression . AND inclusive_or_expression
  182 logical_or_expression: logical_or_expression OR logical_and_expression .

    AND  shift, and go to state 192

    $default  reduce using rule 182 (logical_or_expression)


State 272

  141 postfix_expression: postfix_expression . INC
  142                   | postfix_expression . DEC
  143                   | postfix_expression . '.' IDENTIFIER
  144                   | postfix_expression . '[' basic_expression ']'
  145                   | postfix_expression . '(' expression_list ')'
  146                   | postfix_expression . '(' ')'
  147                   | postfix_expression . '(' ')' CodeBlock
  188 postfix_expression_list: postfix_expression_list ',' postfix_expression .

    INC  shift, and go to state 170
    DEC  shift, and go to state 171
    '.'  shift, and go to state 172
    '['  shift, and go to state 173
    '('  shift, and go to state 174

    $default  reduce using rule 188 (postfix_expression_list)


State 273

   57 VariableInitializerList: VariableInitializerList . ',' ComplexVariableInitializer
  189 assignment_expression: postfix_expression_list '=' VariableInitializerList .

    ','  shift, and go to state 212

    $default  reduce using rule 189 (assignment_expression)


State 274

   27 FunctionType: FUNC '(' ')' ReturnTypeList .

    $default  reduce using rule 27 (FunctionType)


State 275

    4 TypeList: TypeList ',' . Type

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 314
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54


State 276

   28 FunctionType: FUNC '(' TypeList ')' .
   29             | FUNC '(' TypeList ')' . ReturnTypeList

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46
    '('         shift, and go to state 220

    $default  reduce using rule 28 (FunctionType)

    PackageOrTypeName  go to state 48
    Type               go to state 221
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 315
    InterfaceType      go to state 54


State 277

  100 AnonymousFunctionDeclaration: FUNC '(' ')' . CodeBlock
  101                             | FUNC '(' ')' . ReturnTypeList CodeBlock

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46
    '('         shift, and go to state 220
    '{'         shift, and go to state 29

    PackageOrTypeName  go to state 48
    Type               go to state 221
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 316
    InterfaceType      go to state 54
    CodeBlock          go to state 317


State 278

   90 ParameterList: ParameterList . ',' IDENTIFIER Type
  102 AnonymousFunctionDeclaration: FUNC '(' ParameterList . ')' CodeBlock
  103                             | FUNC '(' ParameterList . ')' ReturnTypeList CodeBlock

    ','  shift, and go to state 223
    ')'  shift, and go to state 318


State 279

   69 DimExpr: '[' basic_expression ']' .

    $default  reduce using rule 69 (DimExpr)


State 280

   75 ArrayPositionInitializer: INTEGER ':' . ArrayInitializer

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 203
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '{'             shift, and go to state 204
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 205
    ArrayInitializer              go to state 319
    ArrayPositionInitializer      go to state 208
    AnonymousFunctionDeclaration  go to state 209
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 210


State 281

   66 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer
   74 ArrayInitializer: '{' ArrayInitializerList . '}'

    ','  shift, and go to state 283
    '}'  shift, and go to state 320


State 282

   71 ArrayInitializer: PrimitiveType '(' . basic_expression ')'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 321


State 283

   66 ArrayInitializerList: ArrayInitializerList ',' . ArrayInitializer

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 203
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '{'             shift, and go to state 204
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 205
    ArrayInitializer              go to state 322
    ArrayPositionInitializer      go to state 208
    AnonymousFunctionDeclaration  go to state 209
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 210


State 284

   61 ComplexVariableInitializer: '{' ArrayInitializerList '}' .

    $default  reduce using rule 61 (ComplexVariableInitializer)


State 285

   59 ComplexVariableInitializer: PrimitiveType '(' basic_expression . ')'

    ')'  shift, and go to state 323


State 286

   57 VariableInitializerList: VariableInitializerList ',' ComplexVariableInitializer .

    $default  reduce using rule 57 (VariableInitializerList)


State 287

   63 ComplexVariableInitializer: DimExprs Type '{' . ArrayInitializerList '}'
   64                           | DimExprs Type '{' . '}'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    FUNC            shift, and go to state 117
    INT8            shift, and go to state 33
    INT16           shift, and go to state 34
    INT32           shift, and go to state 35
    INT64           shift, and go to state 36
    UINT8           shift, and go to state 37
    UINT16          shift, and go to state 38
    UINT32          shift, and go to state 39
    UINT64          shift, and go to state 40
    FLOAT32         shift, and go to state 41
    FLOAT64         shift, and go to state 42
    BOOL            shift, and go to state 43
    STRING          shift, and go to state 44
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 203
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '{'             shift, and go to state 204
    '}'             shift, and go to state 324
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    PrimitiveType                 go to state 205
    ArrayInitializerList          go to state 325
    ArrayInitializer              go to state 207
    ArrayPositionInitializer      go to state 208
    AnonymousFunctionDeclaration  go to state 209
    primary_expression            go to state 95
    constant                      go to state 96
    postfix_expression            go to state 126
    unary_expression              go to state 98
    multiplicative_expression     go to state 99
    additive_expression           go to state 100
    shift_expression              go to state 101
    relational_expression         go to state 102
    equality_expression           go to state 103
    and_expression                go to state 104
    exclusive_or_expression       go to state 105
    inclusive_or_expression       go to state 106
    logical_and_expression        go to state 107
    logical_or_expression         go to state 108
    basic_expression              go to state 210


State 288

   53 VariableDeclaration: VAR VariableList Type '=' VariableInitializerList ';' .

    $default  reduce using rule 53 (VariableDeclaration)


State 289

   30 ReturnTypeList: Type .
   31               | '(' Type . ')'

    ')'  shift, and go to state 326

    $default  reduce using rule 30 (ReturnTypeList)


State 290

   32 ReturnTypeList: '(' ReturnTypeList . ',' Type ')'

    ','  shift, and go to state 327


State 291

   90 ParameterList: ParameterList ',' IDENTIFIER . Type

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 328
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54


State 292

   88 MethodDeclarationHeader1: FUNC IDENTIFIER '(' ParameterList ')' ReturnTypeList .

    $default  reduce using rule 88 (MethodDeclarationHeader1)


State 293

   83 FieldDeclaration: VAR IDENTIFIER . Type ';'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 329
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54


State 294

   76 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' . ';'

    ';'  shift, and go to state 330


State 295

   80 MemberDeclarations: MemberDeclarations MemberDeclaration .

    $default  reduce using rule 80 (MemberDeclarations)


State 296

   84 MethodDeclaration: MethodDeclarationHeader1 CodeBlock .

    $default  reduce using rule 84 (MethodDeclaration)


State 297

   85 MethodDeclarationHeader1: FUNC IDENTIFIER . '(' ')'
   86                         | FUNC IDENTIFIER . '(' ')' ReturnTypeList
   87                         | FUNC IDENTIFIER . '(' ParameterList ')'
   88                         | FUNC IDENTIFIER . '(' ParameterList ')' ReturnTypeList
   91 MethodDeclarationHeader2: FUNC IDENTIFIER . '(' TypeList ')'
   92                         | FUNC IDENTIFIER . '(' TypeList ')' ReturnTypeList

    '('  shift, and go to state 331


State 298

   97 InterfaceFunctionDeclaration: MethodDeclarationHeader1 ';' .

    $default  reduce using rule 97 (InterfaceFunctionDeclaration)


State 299

   98 InterfaceFunctionDeclaration: MethodDeclarationHeader2 ';' .

    $default  reduce using rule 98 (InterfaceFunctionDeclaration)


State 300

   77 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' . ';'

    ';'  shift, and go to state 332


State 301

   96 InterfaceFunctionDeclarations: InterfaceFunctionDeclarations InterfaceFunctionDeclaration .

    $default  reduce using rule 96 (InterfaceFunctionDeclarations)


State 302

  114 if_statement: IF '(' basic_expression ')' . CodeBlock
  115             | IF '(' basic_expression ')' . CodeBlock ELSE else_statemnet

    '{'  shift, and go to state 29

    CodeBlock  go to state 333


State 303

  119 iteration_statemnet: WHILE '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 334


State 304

  120 iteration_statemnet: DO CodeBlock WHILE '(' . basic_expression ')' ';'

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 126
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 335


State 305

  126 for_expr: ';' .

    $default  reduce using rule 126 (for_expr)


State 306

  121 iteration_statemnet: FOR '(' for_init for_expr . for_incr ')' CodeBlock

    INC             shift, and go to state 64
    DEC             shift, and go to state 65
    TOKEN_THIS      shift, and go to state 66
    TOKEN_NIL       shift, and go to state 73
    TOKEN_TRUE      shift, and go to state 74
    TOKEN_FALSE     shift, and go to state 75
    INTEGER         shift, and go to state 76
    FLOAT           shift, and go to state 77
    STRING_LITERAL  shift, and go to state 78
    IDENTIFIER      shift, and go to state 79
    '('             shift, and go to state 80
    '+'             shift, and go to state 82
    '-'             shift, and go to state 83
    '~'             shift, and go to state 84
    '!'             shift, and go to state 85

    for_incr                   go to state 336
    primary_expression         go to state 95
    constant                   go to state 96
    postfix_expression         go to state 97
    unary_expression           go to state 98
    multiplicative_expression  go to state 99
    additive_expression        go to state 100
    shift_expression           go to state 101
    relational_expression      go to state 102
    equality_expression        go to state 103
    and_expression             go to state 104
    exclusive_or_expression    go to state 105
    inclusive_or_expression    go to state 106
    logical_and_expression     go to state 107
    logical_or_expression      go to state 108
    basic_expression           go to state 109
    postfix_expression_list    go to state 110
    assignment_expression      go to state 111
    expression_statement       go to state 337


State 307

  125 for_expr: basic_expression . ';'

    ';'  shift, and go to state 338


State 308

  122 for_init: expression_statement ';' .

    $default  reduce using rule 122 (for_init)


State 309

  118 switch_statement: SWITCH '(' basic_expression ')' . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 339


State 310

  186 expression_list: expression_list ',' expression .

    $default  reduce using rule 186 (expression_list)


State 311

  144 postfix_expression: postfix_expression '[' basic_expression ']' .

    $default  reduce using rule 144 (postfix_expression)


State 312

  147 postfix_expression: postfix_expression '(' ')' CodeBlock .

    $default  reduce using rule 147 (postfix_expression)


State 313

  145 postfix_expression: postfix_expression '(' expression_list ')' .

    $default  reduce using rule 145 (postfix_expression)


State 314

    4 TypeList: TypeList ',' Type .

    $default  reduce using rule 4 (TypeList)


State 315

   29 FunctionType: FUNC '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 29 (FunctionType)


State 316

  101 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 340


State 317

  100 AnonymousFunctionDeclaration: FUNC '(' ')' CodeBlock .

    $default  reduce using rule 100 (AnonymousFunctionDeclaration)


State 318

  102 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' . CodeBlock
  103                             | FUNC '(' ParameterList ')' . ReturnTypeList CodeBlock

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46
    '('         shift, and go to state 220
    '{'         shift, and go to state 29

    PackageOrTypeName  go to state 48
    Type               go to state 221
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 341
    InterfaceType      go to state 54
    CodeBlock          go to state 342


State 319

   75 ArrayPositionInitializer: INTEGER ':' ArrayInitializer .

    $default  reduce using rule 75 (ArrayPositionInitializer)


State 320

   74 ArrayInitializer: '{' ArrayInitializerList '}' .

    $default  reduce using rule 74 (ArrayInitializer)


State 321

   71 ArrayInitializer: PrimitiveType '(' basic_expression . ')'

    ')'  shift, and go to state 343


State 322

   66 ArrayInitializerList: ArrayInitializerList ',' ArrayInitializer .

    $default  reduce using rule 66 (ArrayInitializerList)


State 323

   59 ComplexVariableInitializer: PrimitiveType '(' basic_expression ')' .

    $default  reduce using rule 59 (ComplexVariableInitializer)


State 324

   64 ComplexVariableInitializer: DimExprs Type '{' '}' .

    $default  reduce using rule 64 (ComplexVariableInitializer)


State 325

   63 ComplexVariableInitializer: DimExprs Type '{' ArrayInitializerList . '}'
   66 ArrayInitializerList: ArrayInitializerList . ',' ArrayInitializer

    ','  shift, and go to state 283
    '}'  shift, and go to state 344


State 326

   31 ReturnTypeList: '(' Type ')' .

    $default  reduce using rule 31 (ReturnTypeList)


State 327

   32 ReturnTypeList: '(' ReturnTypeList ',' . Type ')'

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46

    PackageOrTypeName  go to state 48
    Type               go to state 345
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54


State 328

   90 ParameterList: ParameterList ',' IDENTIFIER Type .

    $default  reduce using rule 90 (ParameterList)


State 329

   83 FieldDeclaration: VAR IDENTIFIER Type . ';'

    ';'  shift, and go to state 346


State 330

   76 TypeDeclaration: TYPE IDENTIFIER STRUCT '{' MemberDeclarations '}' ';' .

    $default  reduce using rule 76 (TypeDeclaration)


State 331

   85 MethodDeclarationHeader1: FUNC IDENTIFIER '(' . ')'
   86                         | FUNC IDENTIFIER '(' . ')' ReturnTypeList
   87                         | FUNC IDENTIFIER '(' . ParameterList ')'
   88                         | FUNC IDENTIFIER '(' . ParameterList ')' ReturnTypeList
   91 MethodDeclarationHeader2: FUNC IDENTIFIER '(' . TypeList ')'
   92                         | FUNC IDENTIFIER '(' . TypeList ')' ReturnTypeList

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 347
    '['         shift, and go to state 46
    ')'         shift, and go to state 134

    PackageOrTypeName  go to state 48
    TypeList           go to state 348
    Type               go to state 199
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54
    ParameterList      go to state 135


State 332

   77 TypeDeclaration: TYPE IDENTIFIER INTERFACE '{' InterfaceFunctionDeclarations '}' ';' .

    $default  reduce using rule 77 (TypeDeclaration)


State 333

  114 if_statement: IF '(' basic_expression ')' CodeBlock .
  115             | IF '(' basic_expression ')' CodeBlock . ELSE else_statemnet

    ELSE  shift, and go to state 349

    $default  reduce using rule 114 (if_statement)


State 334

  119 iteration_statemnet: WHILE '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 119 (iteration_statemnet)


State 335

  120 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression . ')' ';'

    ')'  shift, and go to state 350


State 336

  121 iteration_statemnet: FOR '(' for_init for_expr for_incr . ')' CodeBlock

    ')'  shift, and go to state 351


State 337

  127 for_incr: expression_statement .

    $default  reduce using rule 127 (for_incr)


State 338

  125 for_expr: basic_expression ';' .

    $default  reduce using rule 125 (for_expr)


State 339

  118 switch_statement: SWITCH '(' basic_expression ')' CodeBlock .

    $default  reduce using rule 118 (switch_statement)


State 340

  101 AnonymousFunctionDeclaration: FUNC '(' ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 101 (AnonymousFunctionDeclaration)


State 341

  103 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 352


State 342

  102 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' CodeBlock .

    $default  reduce using rule 102 (AnonymousFunctionDeclaration)


State 343

   71 ArrayInitializer: PrimitiveType '(' basic_expression ')' .

    $default  reduce using rule 71 (ArrayInitializer)


State 344

   63 ComplexVariableInitializer: DimExprs Type '{' ArrayInitializerList '}' .

    $default  reduce using rule 63 (ComplexVariableInitializer)


State 345

   32 ReturnTypeList: '(' ReturnTypeList ',' Type . ')'

    ')'  shift, and go to state 353


State 346

   83 FieldDeclaration: VAR IDENTIFIER Type ';' .

    $default  reduce using rule 83 (FieldDeclaration)


State 347

    1 PackageOrTypeName: IDENTIFIER .
   89 ParameterList: IDENTIFIER . Type

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46

    $default  reduce using rule 1 (PackageOrTypeName)

    PackageOrTypeName  go to state 48
    Type               go to state 219
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    InterfaceType      go to state 54


State 348

    4 TypeList: TypeList . ',' Type
   91 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList . ')'
   92                         | FUNC IDENTIFIER '(' TypeList . ')' ReturnTypeList

    ','  shift, and go to state 275
    ')'  shift, and go to state 354


State 349

  115 if_statement: IF '(' basic_expression ')' CodeBlock ELSE . else_statemnet

    IF   shift, and go to state 67
    '{'  shift, and go to state 29

    CodeBlock       go to state 355
    if_statement    go to state 356
    else_statemnet  go to state 357


State 350

  120 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' . ';'

    ';'  shift, and go to state 358


State 351

  121 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' . CodeBlock

    '{'  shift, and go to state 29

    CodeBlock  go to state 359


State 352

  103 AnonymousFunctionDeclaration: FUNC '(' ParameterList ')' ReturnTypeList CodeBlock .

    $default  reduce using rule 103 (AnonymousFunctionDeclaration)


State 353

   32 ReturnTypeList: '(' ReturnTypeList ',' Type ')' .

    $default  reduce using rule 32 (ReturnTypeList)


State 354

   91 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' .
   92                         | FUNC IDENTIFIER '(' TypeList ')' . ReturnTypeList

    FUNC        shift, and go to state 31
    INTERFACE   shift, and go to state 32
    INT8        shift, and go to state 33
    INT16       shift, and go to state 34
    INT32       shift, and go to state 35
    INT64       shift, and go to state 36
    UINT8       shift, and go to state 37
    UINT16      shift, and go to state 38
    UINT32      shift, and go to state 39
    UINT64      shift, and go to state 40
    FLOAT32     shift, and go to state 41
    FLOAT64     shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IDENTIFIER  shift, and go to state 20
    '['         shift, and go to state 46
    '('         shift, and go to state 220

    $default  reduce using rule 91 (MethodDeclarationHeader2)

    PackageOrTypeName  go to state 48
    Type               go to state 221
    PrimitiveType      go to state 50
    ReferenceType      go to state 51
    Dims               go to state 52
    FunctionType       go to state 53
    ReturnTypeList     go to state 360
    InterfaceType      go to state 54


State 355

  117 else_statemnet: CodeBlock .

    $default  reduce using rule 117 (else_statemnet)


State 356

  116 else_statemnet: if_statement .

    $default  reduce using rule 116 (else_statemnet)


State 357

  115 if_statement: IF '(' basic_expression ')' CodeBlock ELSE else_statemnet .

    $default  reduce using rule 115 (if_statement)


State 358

  120 iteration_statemnet: DO CodeBlock WHILE '(' basic_expression ')' ';' .

    $default  reduce using rule 120 (iteration_statemnet)


State 359

  121 iteration_statemnet: FOR '(' for_init for_expr for_incr ')' CodeBlock .

    $default  reduce using rule 121 (iteration_statemnet)


State 360

   92 MethodDeclarationHeader2: FUNC IDENTIFIER '(' TypeList ')' ReturnTypeList .

    $default  reduce using rule 92 (MethodDeclarationHeader2)
