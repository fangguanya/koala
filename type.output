Terminals unused in grammar

   NEWLINE


Grammar

    0 $accept: program $end

    1 program: package_declaration
    2        | package_declaration import_list
    3        | program type_declaration
    4        | program var_declaration
    5        | program func_declaration
    6        | program expr ';'
    7        | program assign_statement
    8        | program while_stmt
    9        | program method_declaration
   10        | program func_declaration2
   11        | program do_while_stmt

   12 import_list: import
   13            | import_list import

   14 import: IMPORT ID ';'

   15 package_declaration: PACKAGE ID ';'

   16 var_declaration: VAR id_list var_type ';'
   17                | VAR id_list '=' expr_list ';'
   18                | VAR id_list var_type '=' expr_list ';'

   19 id_list: ID
   20        | id_list ',' ID

   21 var_type: array_type

   22 array_type: '[' NUMBER ']' array_type
   23           | base_type

   24 base_type: UINT32
   25          | INT32
   26          | UINT
   27          | STRING

   28 func_declaration2: FUNC ID '.' ID '(' para_list ')' return_list2 ';'
   29                  | FUNC ID '(' para_list ')' return_list2 ';'

   30 func_declaration: FUNC ID '(' para_list ')' return_list2 code_block

   31 interface_func_declaration: FUNC ID '(' para_list ')' return_list2

   32 method_declaration: FUNC '(' ID ')' ID '(' para_list ')' return_list2 code_block

   33 para_list: %empty
   34          | para_list2

   35 para_list2: base_type
   36           | para_list2 ',' base_type

   37 return_list2: %empty
   38             | return_list

   39 return_list: base_type
   40            | '(' base_type ')'
   41            | '(' return_list ',' base_type ')'

   42 code_block: '{' statement_list '}'
   43           | '{' '}'

   44 statement_list: statement
   45               | statement_list statement

   46 statement: assign_statement
   47          | if_statement
   48          | expr ';'
   49          | ';'
   50          | while_stmt
   51          | var_declaration

   52 while_stmt: WHILE '(' logic_expr ')' code_block
   53           | WHILE logic_expr code_block

   54 do_while_stmt: DO code_block WHILE logic_expr
   55              | DO code_block WHILE '(' logic_expr ')'

   56 assign_statement: id_list '=' expr_list2 ';'

   57 expr_list2: expr
   58           | expr_list2 ',' expr

   59 if_statement: IF code_block
   60             | IF '(' ')' code_block
   61             | IF '(' if_condition ')' code_block
   62             | IF if_condition code_block

   63 if_condition: logic_expr

   64 logic_expr: TRUE
   65           | FALSE
   66           | expr '>' expr
   67           | expr '<' expr
   68           | expr EQ expr

   69 expr: term
   70     | expr '+' term
   71     | expr '-' term

   72 term: factor
   73     | term '*' factor
   74     | term '/' factor

   75 factor: ID '(' argument_list ')'
   76       | ID

   77 argument_list: %empty
   78              | expr
   79              | argument_list ',' expr

   80 type_declaration: TYPE ID type_specifier ';'

   81 type_specifier: STRUCT '{' struct_declaration_list '}'
   82               | INTERFACE '{' interface_declaration_list '}'
   83               | ID
   84               | FUNC '(' para_list ')' return_list2

   85 struct_declaration_list: struct_declaration ';'
   86                        | struct_declaration_list struct_declaration ';'

   87 struct_declaration: ID base_type

   88 interface_declaration_list: interface_func_declaration ';'
   89                           | interface_declaration_list interface_func_declaration ';'

   90 expr_list: ID
   91          | expr_list ',' ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 28 29 30 31 32 40 41 52 55 60 61 75 84
')' (41) 28 29 30 31 32 40 41 52 55 60 61 75 84
'*' (42) 73
'+' (43) 70
',' (44) 20 36 41 58 79 91
'-' (45) 71
'.' (46) 28
'/' (47) 74
';' (59) 6 14 15 16 17 18 28 29 48 49 56 80 85 86 88 89
'<' (60) 67
'=' (61) 17 18 56
'>' (62) 66
'[' (91) 22
']' (93) 22
'{' (123) 42 43 81 82
'}' (125) 42 43 81 82
error (256)
NEWLINE (258)
STRING (259) 27
UINT (260) 26
INT32 (261) 25
UINT32 (262) 24
DO (263) 54 55
IF (264) 59 60 61 62
NUMBER (265) 22
FUNC (266) 28 29 30 31 32 84
VAR (267) 16 17 18
PACKAGE (268) 15
IMPORT (269) 14
TYPE (270) 80
STRUCT (271) 81
INTERFACE (272) 82
ID (273) 14 15 19 20 28 29 30 31 32 75 76 80 83 87 90 91
EQ (274) 68
TRUE (275) 64
FALSE (276) 65
WHILE (277) 52 53 54 55


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1 2 3 4 5 6 7 8 9 10 11, on right: 0 3 4 5 6 7 8 9 10
    11
import_list (41)
    on left: 12 13, on right: 2 13
import (42)
    on left: 14, on right: 12 13
package_declaration (43)
    on left: 15, on right: 1 2
var_declaration (44)
    on left: 16 17 18, on right: 4 51
id_list (45)
    on left: 19 20, on right: 16 17 18 20 56
var_type (46)
    on left: 21, on right: 16 18
array_type (47)
    on left: 22 23, on right: 21 22
base_type (48)
    on left: 24 25 26 27, on right: 23 35 36 39 40 41 87
func_declaration2 (49)
    on left: 28 29, on right: 10
func_declaration (50)
    on left: 30, on right: 5
interface_func_declaration (51)
    on left: 31, on right: 88 89
method_declaration (52)
    on left: 32, on right: 9
para_list (53)
    on left: 33 34, on right: 28 29 30 31 32 84
para_list2 (54)
    on left: 35 36, on right: 34 36
return_list2 (55)
    on left: 37 38, on right: 28 29 30 31 32 84
return_list (56)
    on left: 39 40 41, on right: 38 41
code_block (57)
    on left: 42 43, on right: 30 32 52 53 54 55 59 60 61 62
statement_list (58)
    on left: 44 45, on right: 42 45
statement (59)
    on left: 46 47 48 49 50 51, on right: 44 45
while_stmt (60)
    on left: 52 53, on right: 8 50
do_while_stmt (61)
    on left: 54 55, on right: 11
assign_statement (62)
    on left: 56, on right: 7 46
expr_list2 (63)
    on left: 57 58, on right: 56 58
if_statement (64)
    on left: 59 60 61 62, on right: 47
if_condition (65)
    on left: 63, on right: 61 62
logic_expr (66)
    on left: 64 65 66 67 68, on right: 52 53 54 55 63
expr (67)
    on left: 69 70 71, on right: 6 48 57 58 66 67 68 70 71 78 79
term (68)
    on left: 72 73 74, on right: 69 70 71 73 74
factor (69)
    on left: 75 76, on right: 72 73 74
argument_list (70)
    on left: 77 78 79, on right: 75 79
type_declaration (71)
    on left: 80, on right: 3
type_specifier (72)
    on left: 81 82 83 84, on right: 80
struct_declaration_list (73)
    on left: 85 86, on right: 81 86
struct_declaration (74)
    on left: 87, on right: 85 86
interface_declaration_list (75)
    on left: 88 89, on right: 82 89
expr_list (76)
    on left: 90 91, on right: 17 18 91


State 0

    0 $accept: . program $end

    PACKAGE  shift, and go to state 1

    program              go to state 2
    package_declaration  go to state 3


State 1

   15 package_declaration: PACKAGE . ID ';'

    ID  shift, and go to state 4


State 2

    0 $accept: program . $end
    3 program: program . type_declaration
    4        | program . var_declaration
    5        | program . func_declaration
    6        | program . expr ';'
    7        | program . assign_statement
    8        | program . while_stmt
    9        | program . method_declaration
   10        | program . func_declaration2
   11        | program . do_while_stmt

    $end   shift, and go to state 5
    DO     shift, and go to state 6
    FUNC   shift, and go to state 7
    VAR    shift, and go to state 8
    TYPE   shift, and go to state 9
    ID     shift, and go to state 10
    WHILE  shift, and go to state 11

    var_declaration     go to state 12
    id_list             go to state 13
    func_declaration2   go to state 14
    func_declaration    go to state 15
    method_declaration  go to state 16
    while_stmt          go to state 17
    do_while_stmt       go to state 18
    assign_statement    go to state 19
    expr                go to state 20
    term                go to state 21
    factor              go to state 22
    type_declaration    go to state 23


State 3

    1 program: package_declaration .
    2        | package_declaration . import_list

    IMPORT  shift, and go to state 24

    $default  reduce using rule 1 (program)

    import_list  go to state 25
    import       go to state 26


State 4

   15 package_declaration: PACKAGE ID . ';'

    ';'  shift, and go to state 27


State 5

    0 $accept: program $end .

    $default  accept


State 6

   54 do_while_stmt: DO . code_block WHILE logic_expr
   55              | DO . code_block WHILE '(' logic_expr ')'

    '{'  shift, and go to state 28

    code_block  go to state 29


State 7

   28 func_declaration2: FUNC . ID '.' ID '(' para_list ')' return_list2 ';'
   29                  | FUNC . ID '(' para_list ')' return_list2 ';'
   30 func_declaration: FUNC . ID '(' para_list ')' return_list2 code_block
   32 method_declaration: FUNC . '(' ID ')' ID '(' para_list ')' return_list2 code_block

    ID   shift, and go to state 30
    '('  shift, and go to state 31


State 8

   16 var_declaration: VAR . id_list var_type ';'
   17                | VAR . id_list '=' expr_list ';'
   18                | VAR . id_list var_type '=' expr_list ';'

    ID  shift, and go to state 32

    id_list  go to state 33


State 9

   80 type_declaration: TYPE . ID type_specifier ';'

    ID  shift, and go to state 34


State 10

   19 id_list: ID .
   75 factor: ID . '(' argument_list ')'
   76       | ID .

    '('  shift, and go to state 35

    '='       reduce using rule 19 (id_list)
    ','       reduce using rule 19 (id_list)
    $default  reduce using rule 76 (factor)


State 11

   52 while_stmt: WHILE . '(' logic_expr ')' code_block
   53           | WHILE . logic_expr code_block

    ID     shift, and go to state 36
    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    '('    shift, and go to state 39

    logic_expr  go to state 40
    expr        go to state 41
    term        go to state 21
    factor      go to state 22


State 12

    4 program: program var_declaration .

    $default  reduce using rule 4 (program)


State 13

   20 id_list: id_list . ',' ID
   56 assign_statement: id_list . '=' expr_list2 ';'

    '='  shift, and go to state 42
    ','  shift, and go to state 43


State 14

   10 program: program func_declaration2 .

    $default  reduce using rule 10 (program)


State 15

    5 program: program func_declaration .

    $default  reduce using rule 5 (program)


State 16

    9 program: program method_declaration .

    $default  reduce using rule 9 (program)


State 17

    8 program: program while_stmt .

    $default  reduce using rule 8 (program)


State 18

   11 program: program do_while_stmt .

    $default  reduce using rule 11 (program)


State 19

    7 program: program assign_statement .

    $default  reduce using rule 7 (program)


State 20

    6 program: program expr . ';'
   70 expr: expr . '+' term
   71     | expr . '-' term

    ';'  shift, and go to state 44
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46


State 21

   69 expr: term .
   73 term: term . '*' factor
   74     | term . '/' factor

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 69 (expr)


State 22

   72 term: factor .

    $default  reduce using rule 72 (term)


State 23

    3 program: program type_declaration .

    $default  reduce using rule 3 (program)


State 24

   14 import: IMPORT . ID ';'

    ID  shift, and go to state 49


State 25

    2 program: package_declaration import_list .
   13 import_list: import_list . import

    IMPORT  shift, and go to state 24

    $default  reduce using rule 2 (program)

    import  go to state 50


State 26

   12 import_list: import .

    $default  reduce using rule 12 (import_list)


State 27

   15 package_declaration: PACKAGE ID ';' .

    $default  reduce using rule 15 (package_declaration)


State 28

   42 code_block: '{' . statement_list '}'
   43           | '{' . '}'

    IF     shift, and go to state 51
    VAR    shift, and go to state 8
    ID     shift, and go to state 10
    WHILE  shift, and go to state 11
    ';'    shift, and go to state 52
    '}'    shift, and go to state 53

    var_declaration   go to state 54
    id_list           go to state 13
    statement_list    go to state 55
    statement         go to state 56
    while_stmt        go to state 57
    assign_statement  go to state 58
    if_statement      go to state 59
    expr              go to state 60
    term              go to state 21
    factor            go to state 22


State 29

   54 do_while_stmt: DO code_block . WHILE logic_expr
   55              | DO code_block . WHILE '(' logic_expr ')'

    WHILE  shift, and go to state 61


State 30

   28 func_declaration2: FUNC ID . '.' ID '(' para_list ')' return_list2 ';'
   29                  | FUNC ID . '(' para_list ')' return_list2 ';'
   30 func_declaration: FUNC ID . '(' para_list ')' return_list2 code_block

    '.'  shift, and go to state 62
    '('  shift, and go to state 63


State 31

   32 method_declaration: FUNC '(' . ID ')' ID '(' para_list ')' return_list2 code_block

    ID  shift, and go to state 64


State 32

   19 id_list: ID .

    $default  reduce using rule 19 (id_list)


State 33

   16 var_declaration: VAR id_list . var_type ';'
   17                | VAR id_list . '=' expr_list ';'
   18                | VAR id_list . var_type '=' expr_list ';'
   20 id_list: id_list . ',' ID

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68
    '='     shift, and go to state 69
    ','     shift, and go to state 43
    '['     shift, and go to state 70

    var_type    go to state 71
    array_type  go to state 72
    base_type   go to state 73


State 34

   80 type_declaration: TYPE ID . type_specifier ';'

    FUNC       shift, and go to state 74
    STRUCT     shift, and go to state 75
    INTERFACE  shift, and go to state 76
    ID         shift, and go to state 77

    type_specifier  go to state 78


State 35

   75 factor: ID '(' . argument_list ')'

    ID  shift, and go to state 36

    $default  reduce using rule 77 (argument_list)

    expr           go to state 79
    term           go to state 21
    factor         go to state 22
    argument_list  go to state 80


State 36

   75 factor: ID . '(' argument_list ')'
   76       | ID .

    '('  shift, and go to state 35

    $default  reduce using rule 76 (factor)


State 37

   64 logic_expr: TRUE .

    $default  reduce using rule 64 (logic_expr)


State 38

   65 logic_expr: FALSE .

    $default  reduce using rule 65 (logic_expr)


State 39

   52 while_stmt: WHILE '(' . logic_expr ')' code_block

    ID     shift, and go to state 36
    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38

    logic_expr  go to state 81
    expr        go to state 41
    term        go to state 21
    factor      go to state 22


State 40

   53 while_stmt: WHILE logic_expr . code_block

    '{'  shift, and go to state 28

    code_block  go to state 82


State 41

   66 logic_expr: expr . '>' expr
   67           | expr . '<' expr
   68           | expr . EQ expr
   70 expr: expr . '+' term
   71     | expr . '-' term

    EQ   shift, and go to state 83
    '>'  shift, and go to state 84
    '<'  shift, and go to state 85
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46


State 42

   56 assign_statement: id_list '=' . expr_list2 ';'

    ID  shift, and go to state 36

    expr_list2  go to state 86
    expr        go to state 87
    term        go to state 21
    factor      go to state 22


State 43

   20 id_list: id_list ',' . ID

    ID  shift, and go to state 88


State 44

    6 program: program expr ';' .

    $default  reduce using rule 6 (program)


State 45

   70 expr: expr '+' . term

    ID  shift, and go to state 36

    term    go to state 89
    factor  go to state 22


State 46

   71 expr: expr '-' . term

    ID  shift, and go to state 36

    term    go to state 90
    factor  go to state 22


State 47

   73 term: term '*' . factor

    ID  shift, and go to state 36

    factor  go to state 91


State 48

   74 term: term '/' . factor

    ID  shift, and go to state 36

    factor  go to state 92


State 49

   14 import: IMPORT ID . ';'

    ';'  shift, and go to state 93


State 50

   13 import_list: import_list import .

    $default  reduce using rule 13 (import_list)


State 51

   59 if_statement: IF . code_block
   60             | IF . '(' ')' code_block
   61             | IF . '(' if_condition ')' code_block
   62             | IF . if_condition code_block

    ID     shift, and go to state 36
    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    '('    shift, and go to state 94
    '{'    shift, and go to state 28

    code_block    go to state 95
    if_condition  go to state 96
    logic_expr    go to state 97
    expr          go to state 41
    term          go to state 21
    factor        go to state 22


State 52

   49 statement: ';' .

    $default  reduce using rule 49 (statement)


State 53

   43 code_block: '{' '}' .

    $default  reduce using rule 43 (code_block)


State 54

   51 statement: var_declaration .

    $default  reduce using rule 51 (statement)


State 55

   42 code_block: '{' statement_list . '}'
   45 statement_list: statement_list . statement

    IF     shift, and go to state 51
    VAR    shift, and go to state 8
    ID     shift, and go to state 10
    WHILE  shift, and go to state 11
    ';'    shift, and go to state 52
    '}'    shift, and go to state 98

    var_declaration   go to state 54
    id_list           go to state 13
    statement         go to state 99
    while_stmt        go to state 57
    assign_statement  go to state 58
    if_statement      go to state 59
    expr              go to state 60
    term              go to state 21
    factor            go to state 22


State 56

   44 statement_list: statement .

    $default  reduce using rule 44 (statement_list)


State 57

   50 statement: while_stmt .

    $default  reduce using rule 50 (statement)


State 58

   46 statement: assign_statement .

    $default  reduce using rule 46 (statement)


State 59

   47 statement: if_statement .

    $default  reduce using rule 47 (statement)


State 60

   48 statement: expr . ';'
   70 expr: expr . '+' term
   71     | expr . '-' term

    ';'  shift, and go to state 100
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46


State 61

   54 do_while_stmt: DO code_block WHILE . logic_expr
   55              | DO code_block WHILE . '(' logic_expr ')'

    ID     shift, and go to state 36
    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    '('    shift, and go to state 101

    logic_expr  go to state 102
    expr        go to state 41
    term        go to state 21
    factor      go to state 22


State 62

   28 func_declaration2: FUNC ID '.' . ID '(' para_list ')' return_list2 ';'

    ID  shift, and go to state 103


State 63

   29 func_declaration2: FUNC ID '(' . para_list ')' return_list2 ';'
   30 func_declaration: FUNC ID '(' . para_list ')' return_list2 code_block

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68

    $default  reduce using rule 33 (para_list)

    base_type   go to state 104
    para_list   go to state 105
    para_list2  go to state 106


State 64

   32 method_declaration: FUNC '(' ID . ')' ID '(' para_list ')' return_list2 code_block

    ')'  shift, and go to state 107


State 65

   27 base_type: STRING .

    $default  reduce using rule 27 (base_type)


State 66

   26 base_type: UINT .

    $default  reduce using rule 26 (base_type)


State 67

   25 base_type: INT32 .

    $default  reduce using rule 25 (base_type)


State 68

   24 base_type: UINT32 .

    $default  reduce using rule 24 (base_type)


State 69

   17 var_declaration: VAR id_list '=' . expr_list ';'

    ID  shift, and go to state 108

    expr_list  go to state 109


State 70

   22 array_type: '[' . NUMBER ']' array_type

    NUMBER  shift, and go to state 110


State 71

   16 var_declaration: VAR id_list var_type . ';'
   18                | VAR id_list var_type . '=' expr_list ';'

    ';'  shift, and go to state 111
    '='  shift, and go to state 112


State 72

   21 var_type: array_type .

    $default  reduce using rule 21 (var_type)


State 73

   23 array_type: base_type .

    $default  reduce using rule 23 (array_type)


State 74

   84 type_specifier: FUNC . '(' para_list ')' return_list2

    '('  shift, and go to state 113


State 75

   81 type_specifier: STRUCT . '{' struct_declaration_list '}'

    '{'  shift, and go to state 114


State 76

   82 type_specifier: INTERFACE . '{' interface_declaration_list '}'

    '{'  shift, and go to state 115


State 77

   83 type_specifier: ID .

    $default  reduce using rule 83 (type_specifier)


State 78

   80 type_declaration: TYPE ID type_specifier . ';'

    ';'  shift, and go to state 116


State 79

   70 expr: expr . '+' term
   71     | expr . '-' term
   78 argument_list: expr .

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 78 (argument_list)


State 80

   75 factor: ID '(' argument_list . ')'
   79 argument_list: argument_list . ',' expr

    ','  shift, and go to state 117
    ')'  shift, and go to state 118


State 81

   52 while_stmt: WHILE '(' logic_expr . ')' code_block

    ')'  shift, and go to state 119


State 82

   53 while_stmt: WHILE logic_expr code_block .

    $default  reduce using rule 53 (while_stmt)


State 83

   68 logic_expr: expr EQ . expr

    ID  shift, and go to state 36

    expr    go to state 120
    term    go to state 21
    factor  go to state 22


State 84

   66 logic_expr: expr '>' . expr

    ID  shift, and go to state 36

    expr    go to state 121
    term    go to state 21
    factor  go to state 22


State 85

   67 logic_expr: expr '<' . expr

    ID  shift, and go to state 36

    expr    go to state 122
    term    go to state 21
    factor  go to state 22


State 86

   56 assign_statement: id_list '=' expr_list2 . ';'
   58 expr_list2: expr_list2 . ',' expr

    ';'  shift, and go to state 123
    ','  shift, and go to state 124


State 87

   57 expr_list2: expr .
   70 expr: expr . '+' term
   71     | expr . '-' term

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 57 (expr_list2)


State 88

   20 id_list: id_list ',' ID .

    $default  reduce using rule 20 (id_list)


State 89

   70 expr: expr '+' term .
   73 term: term . '*' factor
   74     | term . '/' factor

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 70 (expr)


State 90

   71 expr: expr '-' term .
   73 term: term . '*' factor
   74     | term . '/' factor

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48

    $default  reduce using rule 71 (expr)


State 91

   73 term: term '*' factor .

    $default  reduce using rule 73 (term)


State 92

   74 term: term '/' factor .

    $default  reduce using rule 74 (term)


State 93

   14 import: IMPORT ID ';' .

    $default  reduce using rule 14 (import)


State 94

   60 if_statement: IF '(' . ')' code_block
   61             | IF '(' . if_condition ')' code_block

    ID     shift, and go to state 36
    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38
    ')'    shift, and go to state 125

    if_condition  go to state 126
    logic_expr    go to state 97
    expr          go to state 41
    term          go to state 21
    factor        go to state 22


State 95

   59 if_statement: IF code_block .

    $default  reduce using rule 59 (if_statement)


State 96

   62 if_statement: IF if_condition . code_block

    '{'  shift, and go to state 28

    code_block  go to state 127


State 97

   63 if_condition: logic_expr .

    $default  reduce using rule 63 (if_condition)


State 98

   42 code_block: '{' statement_list '}' .

    $default  reduce using rule 42 (code_block)


State 99

   45 statement_list: statement_list statement .

    $default  reduce using rule 45 (statement_list)


State 100

   48 statement: expr ';' .

    $default  reduce using rule 48 (statement)


State 101

   55 do_while_stmt: DO code_block WHILE '(' . logic_expr ')'

    ID     shift, and go to state 36
    TRUE   shift, and go to state 37
    FALSE  shift, and go to state 38

    logic_expr  go to state 128
    expr        go to state 41
    term        go to state 21
    factor      go to state 22


State 102

   54 do_while_stmt: DO code_block WHILE logic_expr .

    $default  reduce using rule 54 (do_while_stmt)


State 103

   28 func_declaration2: FUNC ID '.' ID . '(' para_list ')' return_list2 ';'

    '('  shift, and go to state 129


State 104

   35 para_list2: base_type .

    $default  reduce using rule 35 (para_list2)


State 105

   29 func_declaration2: FUNC ID '(' para_list . ')' return_list2 ';'
   30 func_declaration: FUNC ID '(' para_list . ')' return_list2 code_block

    ')'  shift, and go to state 130


State 106

   34 para_list: para_list2 .
   36 para_list2: para_list2 . ',' base_type

    ','  shift, and go to state 131

    $default  reduce using rule 34 (para_list)


State 107

   32 method_declaration: FUNC '(' ID ')' . ID '(' para_list ')' return_list2 code_block

    ID  shift, and go to state 132


State 108

   90 expr_list: ID .

    $default  reduce using rule 90 (expr_list)


State 109

   17 var_declaration: VAR id_list '=' expr_list . ';'
   91 expr_list: expr_list . ',' ID

    ';'  shift, and go to state 133
    ','  shift, and go to state 134


State 110

   22 array_type: '[' NUMBER . ']' array_type

    ']'  shift, and go to state 135


State 111

   16 var_declaration: VAR id_list var_type ';' .

    $default  reduce using rule 16 (var_declaration)


State 112

   18 var_declaration: VAR id_list var_type '=' . expr_list ';'

    ID  shift, and go to state 108

    expr_list  go to state 136


State 113

   84 type_specifier: FUNC '(' . para_list ')' return_list2

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68

    $default  reduce using rule 33 (para_list)

    base_type   go to state 104
    para_list   go to state 137
    para_list2  go to state 106


State 114

   81 type_specifier: STRUCT '{' . struct_declaration_list '}'

    ID  shift, and go to state 138

    struct_declaration_list  go to state 139
    struct_declaration       go to state 140


State 115

   82 type_specifier: INTERFACE '{' . interface_declaration_list '}'

    FUNC  shift, and go to state 141

    interface_func_declaration  go to state 142
    interface_declaration_list  go to state 143


State 116

   80 type_declaration: TYPE ID type_specifier ';' .

    $default  reduce using rule 80 (type_declaration)


State 117

   79 argument_list: argument_list ',' . expr

    ID  shift, and go to state 36

    expr    go to state 144
    term    go to state 21
    factor  go to state 22


State 118

   75 factor: ID '(' argument_list ')' .

    $default  reduce using rule 75 (factor)


State 119

   52 while_stmt: WHILE '(' logic_expr ')' . code_block

    '{'  shift, and go to state 28

    code_block  go to state 145


State 120

   68 logic_expr: expr EQ expr .
   70 expr: expr . '+' term
   71     | expr . '-' term

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 68 (logic_expr)


State 121

   66 logic_expr: expr '>' expr .
   70 expr: expr . '+' term
   71     | expr . '-' term

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 66 (logic_expr)


State 122

   67 logic_expr: expr '<' expr .
   70 expr: expr . '+' term
   71     | expr . '-' term

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 67 (logic_expr)


State 123

   56 assign_statement: id_list '=' expr_list2 ';' .

    $default  reduce using rule 56 (assign_statement)


State 124

   58 expr_list2: expr_list2 ',' . expr

    ID  shift, and go to state 36

    expr    go to state 146
    term    go to state 21
    factor  go to state 22


State 125

   60 if_statement: IF '(' ')' . code_block

    '{'  shift, and go to state 28

    code_block  go to state 147


State 126

   61 if_statement: IF '(' if_condition . ')' code_block

    ')'  shift, and go to state 148


State 127

   62 if_statement: IF if_condition code_block .

    $default  reduce using rule 62 (if_statement)


State 128

   55 do_while_stmt: DO code_block WHILE '(' logic_expr . ')'

    ')'  shift, and go to state 149


State 129

   28 func_declaration2: FUNC ID '.' ID '(' . para_list ')' return_list2 ';'

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68

    $default  reduce using rule 33 (para_list)

    base_type   go to state 104
    para_list   go to state 150
    para_list2  go to state 106


State 130

   29 func_declaration2: FUNC ID '(' para_list ')' . return_list2 ';'
   30 func_declaration: FUNC ID '(' para_list ')' . return_list2 code_block

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68
    '('     shift, and go to state 151

    $default  reduce using rule 37 (return_list2)

    base_type     go to state 152
    return_list2  go to state 153
    return_list   go to state 154


State 131

   36 para_list2: para_list2 ',' . base_type

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68

    base_type  go to state 155


State 132

   32 method_declaration: FUNC '(' ID ')' ID . '(' para_list ')' return_list2 code_block

    '('  shift, and go to state 156


State 133

   17 var_declaration: VAR id_list '=' expr_list ';' .

    $default  reduce using rule 17 (var_declaration)


State 134

   91 expr_list: expr_list ',' . ID

    ID  shift, and go to state 157


State 135

   22 array_type: '[' NUMBER ']' . array_type

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68
    '['     shift, and go to state 70

    array_type  go to state 158
    base_type   go to state 73


State 136

   18 var_declaration: VAR id_list var_type '=' expr_list . ';'
   91 expr_list: expr_list . ',' ID

    ';'  shift, and go to state 159
    ','  shift, and go to state 134


State 137

   84 type_specifier: FUNC '(' para_list . ')' return_list2

    ')'  shift, and go to state 160


State 138

   87 struct_declaration: ID . base_type

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68

    base_type  go to state 161


State 139

   81 type_specifier: STRUCT '{' struct_declaration_list . '}'
   86 struct_declaration_list: struct_declaration_list . struct_declaration ';'

    ID   shift, and go to state 138
    '}'  shift, and go to state 162

    struct_declaration  go to state 163


State 140

   85 struct_declaration_list: struct_declaration . ';'

    ';'  shift, and go to state 164


State 141

   31 interface_func_declaration: FUNC . ID '(' para_list ')' return_list2

    ID  shift, and go to state 165


State 142

   88 interface_declaration_list: interface_func_declaration . ';'

    ';'  shift, and go to state 166


State 143

   82 type_specifier: INTERFACE '{' interface_declaration_list . '}'
   89 interface_declaration_list: interface_declaration_list . interface_func_declaration ';'

    FUNC  shift, and go to state 141
    '}'   shift, and go to state 167

    interface_func_declaration  go to state 168


State 144

   70 expr: expr . '+' term
   71     | expr . '-' term
   79 argument_list: argument_list ',' expr .

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 79 (argument_list)


State 145

   52 while_stmt: WHILE '(' logic_expr ')' code_block .

    $default  reduce using rule 52 (while_stmt)


State 146

   58 expr_list2: expr_list2 ',' expr .
   70 expr: expr . '+' term
   71     | expr . '-' term

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 58 (expr_list2)


State 147

   60 if_statement: IF '(' ')' code_block .

    $default  reduce using rule 60 (if_statement)


State 148

   61 if_statement: IF '(' if_condition ')' . code_block

    '{'  shift, and go to state 28

    code_block  go to state 169


State 149

   55 do_while_stmt: DO code_block WHILE '(' logic_expr ')' .

    $default  reduce using rule 55 (do_while_stmt)


State 150

   28 func_declaration2: FUNC ID '.' ID '(' para_list . ')' return_list2 ';'

    ')'  shift, and go to state 170


State 151

   40 return_list: '(' . base_type ')'
   41            | '(' . return_list ',' base_type ')'

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68
    '('     shift, and go to state 151

    base_type    go to state 171
    return_list  go to state 172


State 152

   39 return_list: base_type .

    $default  reduce using rule 39 (return_list)


State 153

   29 func_declaration2: FUNC ID '(' para_list ')' return_list2 . ';'
   30 func_declaration: FUNC ID '(' para_list ')' return_list2 . code_block

    ';'  shift, and go to state 173
    '{'  shift, and go to state 28

    code_block  go to state 174


State 154

   38 return_list2: return_list .

    $default  reduce using rule 38 (return_list2)


State 155

   36 para_list2: para_list2 ',' base_type .

    $default  reduce using rule 36 (para_list2)


State 156

   32 method_declaration: FUNC '(' ID ')' ID '(' . para_list ')' return_list2 code_block

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68

    $default  reduce using rule 33 (para_list)

    base_type   go to state 104
    para_list   go to state 175
    para_list2  go to state 106


State 157

   91 expr_list: expr_list ',' ID .

    $default  reduce using rule 91 (expr_list)


State 158

   22 array_type: '[' NUMBER ']' array_type .

    $default  reduce using rule 22 (array_type)


State 159

   18 var_declaration: VAR id_list var_type '=' expr_list ';' .

    $default  reduce using rule 18 (var_declaration)


State 160

   84 type_specifier: FUNC '(' para_list ')' . return_list2

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68
    '('     shift, and go to state 151

    $default  reduce using rule 37 (return_list2)

    base_type     go to state 152
    return_list2  go to state 176
    return_list   go to state 154


State 161

   87 struct_declaration: ID base_type .

    $default  reduce using rule 87 (struct_declaration)


State 162

   81 type_specifier: STRUCT '{' struct_declaration_list '}' .

    $default  reduce using rule 81 (type_specifier)


State 163

   86 struct_declaration_list: struct_declaration_list struct_declaration . ';'

    ';'  shift, and go to state 177


State 164

   85 struct_declaration_list: struct_declaration ';' .

    $default  reduce using rule 85 (struct_declaration_list)


State 165

   31 interface_func_declaration: FUNC ID . '(' para_list ')' return_list2

    '('  shift, and go to state 178


State 166

   88 interface_declaration_list: interface_func_declaration ';' .

    $default  reduce using rule 88 (interface_declaration_list)


State 167

   82 type_specifier: INTERFACE '{' interface_declaration_list '}' .

    $default  reduce using rule 82 (type_specifier)


State 168

   89 interface_declaration_list: interface_declaration_list interface_func_declaration . ';'

    ';'  shift, and go to state 179


State 169

   61 if_statement: IF '(' if_condition ')' code_block .

    $default  reduce using rule 61 (if_statement)


State 170

   28 func_declaration2: FUNC ID '.' ID '(' para_list ')' . return_list2 ';'

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68
    '('     shift, and go to state 151

    $default  reduce using rule 37 (return_list2)

    base_type     go to state 152
    return_list2  go to state 180
    return_list   go to state 154


State 171

   39 return_list: base_type .
   40            | '(' base_type . ')'

    ')'  shift, and go to state 181

    $default  reduce using rule 39 (return_list)


State 172

   41 return_list: '(' return_list . ',' base_type ')'

    ','  shift, and go to state 182


State 173

   29 func_declaration2: FUNC ID '(' para_list ')' return_list2 ';' .

    $default  reduce using rule 29 (func_declaration2)


State 174

   30 func_declaration: FUNC ID '(' para_list ')' return_list2 code_block .

    $default  reduce using rule 30 (func_declaration)


State 175

   32 method_declaration: FUNC '(' ID ')' ID '(' para_list . ')' return_list2 code_block

    ')'  shift, and go to state 183


State 176

   84 type_specifier: FUNC '(' para_list ')' return_list2 .

    $default  reduce using rule 84 (type_specifier)


State 177

   86 struct_declaration_list: struct_declaration_list struct_declaration ';' .

    $default  reduce using rule 86 (struct_declaration_list)


State 178

   31 interface_func_declaration: FUNC ID '(' . para_list ')' return_list2

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68

    $default  reduce using rule 33 (para_list)

    base_type   go to state 104
    para_list   go to state 184
    para_list2  go to state 106


State 179

   89 interface_declaration_list: interface_declaration_list interface_func_declaration ';' .

    $default  reduce using rule 89 (interface_declaration_list)


State 180

   28 func_declaration2: FUNC ID '.' ID '(' para_list ')' return_list2 . ';'

    ';'  shift, and go to state 185


State 181

   40 return_list: '(' base_type ')' .

    $default  reduce using rule 40 (return_list)


State 182

   41 return_list: '(' return_list ',' . base_type ')'

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68

    base_type  go to state 186


State 183

   32 method_declaration: FUNC '(' ID ')' ID '(' para_list ')' . return_list2 code_block

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68
    '('     shift, and go to state 151

    $default  reduce using rule 37 (return_list2)

    base_type     go to state 152
    return_list2  go to state 187
    return_list   go to state 154


State 184

   31 interface_func_declaration: FUNC ID '(' para_list . ')' return_list2

    ')'  shift, and go to state 188


State 185

   28 func_declaration2: FUNC ID '.' ID '(' para_list ')' return_list2 ';' .

    $default  reduce using rule 28 (func_declaration2)


State 186

   41 return_list: '(' return_list ',' base_type . ')'

    ')'  shift, and go to state 189


State 187

   32 method_declaration: FUNC '(' ID ')' ID '(' para_list ')' return_list2 . code_block

    '{'  shift, and go to state 28

    code_block  go to state 190


State 188

   31 interface_func_declaration: FUNC ID '(' para_list ')' . return_list2

    STRING  shift, and go to state 65
    UINT    shift, and go to state 66
    INT32   shift, and go to state 67
    UINT32  shift, and go to state 68
    '('     shift, and go to state 151

    $default  reduce using rule 37 (return_list2)

    base_type     go to state 152
    return_list2  go to state 191
    return_list   go to state 154


State 189

   41 return_list: '(' return_list ',' base_type ')' .

    $default  reduce using rule 41 (return_list)


State 190

   32 method_declaration: FUNC '(' ID ')' ID '(' para_list ')' return_list2 code_block .

    $default  reduce using rule 32 (method_declaration)


State 191

   31 interface_func_declaration: FUNC ID '(' para_list ')' return_list2 .

    $default  reduce using rule 31 (interface_func_declaration)
