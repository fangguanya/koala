#!/Users/zgx/Projects/koala/koala
//package作用在编译的时候，将输出二进制文件放到对应的目录中
package com.huawei.koala;
//模块名即文件名
//后续访问外模块只能是：模块名.符号，符号(已星号导入)
//全路径访问不允许
//导入模块下的所有public符号
import com.huawei.tools.io.file.*;
//导入模块，并重命名模块名
import com.huawei.base.io.file as file;
//导入模块，模块名即文件名
import com.huawei.base.ip.socket;

var a int32;
var b []int64;
var c [][]Person;
var d [][]socket.Socket;
var e socket.Socket;
var f Socket;
var g interface{};
var h func(string, int32) Socket = func(name string, age int32) {
    fmt.Println(file.GetName());
    Println(file.GetName());
    return Socket("1.1.2.3", 22);
  };

var h0 [][]func(string, int32) Socket = {
  {foo, bar},
  {
    func(name string, age int32) {
      fmt.Println(file.GetName());
      Println(file.GetName());
      return Socket("1.1.2.3", 22);
    },
    func(name string, age int32) {
      fmt.Println(file.GetName());
      Println(file.GetName());
      return Socket("1.1.2.3", 22);
    }
  }
};

const PI = 3.14;

type Person struct {
  Name string;
  Age int32;
  __init__() (string) {
    Name = "huaweizte";
    Age = 26;
  }

}

type Person struct {
  var Name string;
  var Age int32;

  func __init__()
  {
    Name = null;
    Age = 0;
  }

  func __init__(name string, age int32)
  {
    this.Name = name;
    this.Age  = age;
  }

  func SetName(name string)
  {
    this.Name = name + 1;
    age := 1;
    age := "zhuguangxiang";
  }

};

type int int32;

type Stringer interface {
  func String() string;
};

type myStringer Stringer;

func main() {
  var stringer = Stringer() {
    /*
    func String() string
    {
      return "hello, world";
    }
    */
  }.String();

  Person().SetName("zhuguangxiang");

  200.String();
  upname := "zhuguangxiang".UpperCase();

  2+3;
  2+3*4-5;
  "zgx" + 20;
  name + age;
  (2+3)*4-5;
  2*(3+4);
  2 << 3 + 4;
  2 << 3 > 4;
  2 == 3 << 4;
  2 == 3 > 4;
  2 & 3 != 4;
  2 | 3 == 4;
  2 ^ 3 != 4;

  2 && 3 & 4;
  2 || 3 & 4;

  (2 || 3) & 4;
  3.1415926535 + 3;

  person.SetName("zhuguangxiang")[a+b-2][a*b/3];
  array[20][2][3];
  person.Name + person.Age;
  person.Name[100];
  array[a+2-3*b];
  aa.bb.cc.dd.ee.ff.gg;
  array[foo(20,40,a+b)+a-b*3].SetAge(10).IntVal.SetName("zgx");
  person.SetName("zhuguangxiang");
  array[boo[3]+4];
  foo()(a,b)[0][2].Name.bar()().Age = 1;
}
